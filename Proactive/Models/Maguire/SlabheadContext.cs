using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace Proactive.Models.Maguire
{
    public partial class SlabheadContext : DbContext
    {
        public SlabheadContext()
        {
        }

        public SlabheadContext(DbContextOptions<SlabheadContext> options)
            : base(options)
        {
        }

        public virtual DbSet<AcBit> AcBits { get; set; }
        public virtual DbSet<AcDate> AcDates { get; set; }
        public virtual DbSet<AcMuid> AcMuids { get; set; }
        public virtual DbSet<AcMuidLink> AcMuidLinks { get; set; }
        public virtual DbSet<AcNum> AcNums { get; set; }
        public virtual DbSet<AcTxt> AcTxts { get; set; }
        public virtual DbSet<AcUid> AcUids { get; set; }
        public virtual DbSet<AcaBit> AcaBits { get; set; }
        public virtual DbSet<AcaDate> AcaDates { get; set; }
        public virtual DbSet<AcaMuid> AcaMuids { get; set; }
        public virtual DbSet<AcaMuidLink> AcaMuidLinks { get; set; }
        public virtual DbSet<AcaNum> AcaNums { get; set; }
        public virtual DbSet<AcaTxt> AcaTxts { get; set; }
        public virtual DbSet<AcaUid> AcaUids { get; set; }
        public virtual DbSet<AccBit> AccBits { get; set; }
        public virtual DbSet<AccDate> AccDates { get; set; }
        public virtual DbSet<AccMuid> AccMuids { get; set; }
        public virtual DbSet<AccMuidLink> AccMuidLinks { get; set; }
        public virtual DbSet<AccNum> AccNums { get; set; }
        public virtual DbSet<AccTxt> AccTxts { get; set; }
        public virtual DbSet<AccUid> AccUids { get; set; }
        public virtual DbSet<AccaBit> AccaBits { get; set; }
        public virtual DbSet<AccaDate> AccaDates { get; set; }
        public virtual DbSet<AccaMuid> AccaMuids { get; set; }
        public virtual DbSet<AccaMuidLink> AccaMuidLinks { get; set; }
        public virtual DbSet<AccaNum> AccaNums { get; set; }
        public virtual DbSet<AccaTxt> AccaTxts { get; set; }
        public virtual DbSet<AccaUid> AccaUids { get; set; }
        public virtual DbSet<AccessOption> AccessOptions { get; set; }
        public virtual DbSet<AccessOption1> AccessOptions1 { get; set; }
        public virtual DbSet<Account> Accounts { get; set; }
        public virtual DbSet<AccountDiscount> AccountDiscounts { get; set; }
        public virtual DbSet<AccountsContact> AccountsContacts { get; set; }
        public virtual DbSet<AccountsContactsValue> AccountsContactsValues { get; set; }
        public virtual DbSet<AccountsCurrency> AccountsCurrencies { get; set; }
        public virtual DbSet<AccountsFinancialEntity> AccountsFinancialEntities { get; set; }
        public virtual DbSet<AccountsGroup> AccountsGroups { get; set; }
        public virtual DbSet<AccountsProfile> AccountsProfiles { get; set; }
        public virtual DbSet<AccountsValue> AccountsValues { get; set; }
        public virtual DbSet<AcpBit> AcpBits { get; set; }
        public virtual DbSet<AcpDate> AcpDates { get; set; }
        public virtual DbSet<AcpMuid> AcpMuids { get; set; }
        public virtual DbSet<AcpMuidLink> AcpMuidLinks { get; set; }
        public virtual DbSet<AcpNum> AcpNums { get; set; }
        public virtual DbSet<AcpTxt> AcpTxts { get; set; }
        public virtual DbSet<AcpUid> AcpUids { get; set; }
        public virtual DbSet<Activity> Activities { get; set; }
        public virtual DbSet<AdditionalField> AdditionalFields { get; set; }
        public virtual DbSet<AdditionalFieldsConfiguration> AdditionalFieldsConfigurations { get; set; }
        public virtual DbSet<AddressGroup> AddressGroups { get; set; }
        public virtual DbSet<AddressLine> AddressLines { get; set; }
        public virtual DbSet<Agreement> Agreements { get; set; }
        public virtual DbSet<Alert> Alerts { get; set; }
        public virtual DbSet<AlertLabel> AlertLabels { get; set; }
        public virtual DbSet<AlertTrace> AlertTraces { get; set; }
        public virtual DbSet<AppliedXmlPoke> AppliedXmlPokes { get; set; }
        public virtual DbSet<Area> Areas { get; set; }
        public virtual DbSet<AreaCreateRole> AreaCreateRoles { get; set; }
        public virtual DbSet<AreaEditRole> AreaEditRoles { get; set; }
        public virtual DbSet<AreaRole> AreaRoles { get; set; }
        public virtual DbSet<AreaType> AreaTypes { get; set; }
        public virtual DbSet<AreaVersion> AreaVersions { get; set; }
        public virtual DbSet<AvailableComponent> AvailableComponents { get; set; }
        public virtual DbSet<AvailableComponent1> AvailableComponents1 { get; set; }
        public virtual DbSet<BulkChangeJob> BulkChangeJobs { get; set; }
        public virtual DbSet<CalPermission> CalPermissions { get; set; }
        public virtual DbSet<CallLog> CallLogs { get; set; }
        public virtual DbSet<CampaignTypeUnsubscribe> CampaignTypeUnsubscribes { get; set; }
        public virtual DbSet<Canary> Canaries { get; set; }
        public virtual DbSet<Code> Codes { get; set; }
        public virtual DbSet<Component> Components { get; set; }
        public virtual DbSet<ComponentCreateRole> ComponentCreateRoles { get; set; }
        public virtual DbSet<ComponentEditRole> ComponentEditRoles { get; set; }
        public virtual DbSet<ComponentProperty> ComponentProperties { get; set; }
        public virtual DbSet<ComponentRole> ComponentRoles { get; set; }
        public virtual DbSet<ComponentVersion> ComponentVersions { get; set; }
        public virtual DbSet<ContactRoleGroupCollection> ContactRoleGroupCollections { get; set; }
        public virtual DbSet<ContactSyncContact> ContactSyncContacts { get; set; }
        public virtual DbSet<ContactSyncDate> ContactSyncDates { get; set; }
        public virtual DbSet<Content> Contents { get; set; }
        public virtual DbSet<Correspondence> Correspondences { get; set; }
        public virtual DbSet<CorrespondenceAttachment> CorrespondenceAttachments { get; set; }
        public virtual DbSet<CorrespondenceRecipient> CorrespondenceRecipients { get; set; }
        public virtual DbSet<CorrespondenceRecipientsTeam> CorrespondenceRecipientsTeams { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<Currency> Currencies { get; set; }
        public virtual DbSet<CustomItemRequest> CustomItemRequests { get; set; }
        public virtual DbSet<CustomJavascript> CustomJavascripts { get; set; }
        public virtual DbSet<Dashboard> Dashboards { get; set; }
        public virtual DbSet<DashboardGaugeChartThreshold> DashboardGaugeChartThresholds { get; set; }
        public virtual DbSet<DashboardHomepage> DashboardHomepages { get; set; }
        public virtual DbSet<DashboardHomepageLabel> DashboardHomepageLabels { get; set; }
        public virtual DbSet<DashboardHomepagesCopy> DashboardHomepagesCopies { get; set; }
        public virtual DbSet<DashboardUserWidget> DashboardUserWidgets { get; set; }
        public virtual DbSet<DashboardUserWidgetLabel> DashboardUserWidgetLabels { get; set; }
        public virtual DbSet<DashboardWidget> DashboardWidgets { get; set; }
        public virtual DbSet<DashboardWidgetLabel> DashboardWidgetLabels { get; set; }
        public virtual DbSet<DataImportApiEndpointParameter> DataImportApiEndpointParameters { get; set; }
        public virtual DbSet<DataImportJob> DataImportJobs { get; set; }
        public virtual DbSet<DataImportJobSource> DataImportJobSources { get; set; }
        public virtual DbSet<DataImportJobSourceApi> DataImportJobSourceApis { get; set; }
        public virtual DbSet<DataImportJobSourceApiEndpoint> DataImportJobSourceApiEndpoints { get; set; }
        public virtual DbSet<DataImportMessage> DataImportMessages { get; set; }
        public virtual DbSet<DataImportSourceMapping> DataImportSourceMappings { get; set; }
        public virtual DbSet<DataImportStep> DataImportSteps { get; set; }
        public virtual DbSet<DataImportStepFilter> DataImportStepFilters { get; set; }
        public virtual DbSet<DataImportStepMapping> DataImportStepMappings { get; set; }
        public virtual DbSet<DataServicesSetting> DataServicesSettings { get; set; }
        public virtual DbSet<DefaultHousekeepingProcess> DefaultHousekeepingProcesses { get; set; }
        public virtual DbSet<Delv1> Delv1s { get; set; }
        public virtual DbSet<Delv2> Delv2s { get; set; }
        public virtual DbSet<Delv2nn> Delv2nns { get; set; }
        public virtual DbSet<DeploymentMetadatum> DeploymentMetadata { get; set; }
        public virtual DbSet<DesignDef> DesignDefs { get; set; }
        public virtual DbSet<DesignEntity> DesignEntities { get; set; }
        public virtual DbSet<DesignField> DesignFields { get; set; }
        public virtual DbSet<DesignFieldGroupFieldLink> DesignFieldGroupFieldLinks { get; set; }
        public virtual DbSet<DesignFieldValidation> DesignFieldValidations { get; set; }
        public virtual DbSet<DesignLabel> DesignLabels { get; set; }
        public virtual DbSet<DesignLegacyAction> DesignLegacyActions { get; set; }
        public virtual DbSet<DesignLegacyChild> DesignLegacyChildren { get; set; }
        public virtual DbSet<DesignLegacyChildField> DesignLegacyChildFields { get; set; }
        public virtual DbSet<DesignLegacyField> DesignLegacyFields { get; set; }
        public virtual DbSet<DesignLegacyFieldAssociation> DesignLegacyFieldAssociations { get; set; }
        public virtual DbSet<DesignLegacyFieldDefault> DesignLegacyFieldDefaults { get; set; }
        public virtual DbSet<DesignLegacyFieldLabelPropagationMapping> DesignLegacyFieldLabelPropagationMappings { get; set; }
        public virtual DbSet<DesignLegacyFieldLink> DesignLegacyFieldLinks { get; set; }
        public virtual DbSet<DesignLegacyFieldMixedListLink> DesignLegacyFieldMixedListLinks { get; set; }
        public virtual DbSet<DesignLegacyFieldSearchModifier> DesignLegacyFieldSearchModifiers { get; set; }
        public virtual DbSet<DesignLegacyFile> DesignLegacyFiles { get; set; }
        public virtual DbSet<DesignLegacyListOption> DesignLegacyListOptions { get; set; }
        public virtual DbSet<DesignLegacyListView> DesignLegacyListViews { get; set; }
        public virtual DbSet<DesignLegacyPickerFilterField> DesignLegacyPickerFilterFields { get; set; }
        public virtual DbSet<DesignLegacySubList> DesignLegacySubLists { get; set; }
        public virtual DbSet<DesignList> DesignLists { get; set; }
        public virtual DbSet<DesignListColumn> DesignListColumns { get; set; }
        public virtual DbSet<DesignListField> DesignListFields { get; set; }
        public virtual DbSet<DesignListViewMenuOrder> DesignListViewMenuOrders { get; set; }
        public virtual DbSet<DesignMenuGroup> DesignMenuGroups { get; set; }
        public virtual DbSet<DesignMenuGroupItemOrder> DesignMenuGroupItemOrders { get; set; }
        public virtual DbSet<DesignScreen> DesignScreens { get; set; }
        public virtual DbSet<DesignScreenDedupeOverrideUser> DesignScreenDedupeOverrideUsers { get; set; }
        public virtual DbSet<DesignScreenFieldGroup> DesignScreenFieldGroups { get; set; }
        public virtual DbSet<DesignScreenPage> DesignScreenPages { get; set; }
        public virtual DbSet<DesignScreenPageSection> DesignScreenPageSections { get; set; }
        public virtual DbSet<DesignScreenTeamEditability> DesignScreenTeamEditabilities { get; set; }
        public virtual DbSet<DesignScreenTeamVisibility> DesignScreenTeamVisibilities { get; set; }
        public virtual DbSet<DesignScreenVisibilityRule> DesignScreenVisibilityRules { get; set; }
        public virtual DbSet<DesignSet> DesignSets { get; set; }
        public virtual DbSet<DesignSubList> DesignSubLists { get; set; }
        public virtual DbSet<DesignTheme> DesignThemes { get; set; }
        public virtual DbSet<Document> Documents { get; set; }
        public virtual DbSet<DocumentGenerationJob> DocumentGenerationJobs { get; set; }
        public virtual DbSet<DocumentGenerationJobItem> DocumentGenerationJobItems { get; set; }
        public virtual DbSet<DocumentsFolder> DocumentsFolders { get; set; }
        public virtual DbSet<Drop> Drops { get; set; }
        public virtual DbSet<Drop1> Drops1 { get; set; }
        public virtual DbSet<DropsOption> DropsOptions { get; set; }
        public virtual DbSet<DropsOption1> DropsOptions1 { get; set; }
        public virtual DbSet<DropsOptionsParent> DropsOptionsParents { get; set; }
        public virtual DbSet<EmailJob> EmailJobs { get; set; }
        public virtual DbSet<EmailJobsRecipient> EmailJobsRecipients { get; set; }
        public virtual DbSet<Event> Events { get; set; }
        public virtual DbSet<EventImage> EventImages { get; set; }
        public virtual DbSet<EventInfoAssetItem> EventInfoAssetItems { get; set; }
        public virtual DbSet<EventInformation> EventInformations { get; set; }
        public virtual DbSet<EventInformationAsset> EventInformationAssets { get; set; }
        public virtual DbSet<EventInformationField> EventInformationFields { get; set; }
        public virtual DbSet<EventMessage> EventMessages { get; set; }
        public virtual DbSet<EventMessageSetting> EventMessageSettings { get; set; }
        public virtual DbSet<EventMessageSource> EventMessageSources { get; set; }
        public virtual DbSet<EventbriteContactStaging> EventbriteContactStagings { get; set; }
        public virtual DbSet<EventbriteImport> EventbriteImports { get; set; }
        public virtual DbSet<ExtensionsDatum> ExtensionsData { get; set; }
        public virtual DbSet<ExtensionsIgnoreList> ExtensionsIgnoreLists { get; set; }
        public virtual DbSet<ExternalItem> ExternalItems { get; set; }
        public virtual DbSet<FeatureFlag> FeatureFlags { get; set; }
        public virtual DbSet<FinancialEntity> FinancialEntities { get; set; }
        public virtual DbSet<Footer> Footers { get; set; }
        public virtual DbSet<FormsDatum> FormsData { get; set; }
        public virtual DbSet<FormsScanned> FormsScanneds { get; set; }
        public virtual DbSet<Gadget> Gadgets { get; set; }
        public virtual DbSet<GeoCode> GeoCodes { get; set; }
        public virtual DbSet<GlobalSearchField> GlobalSearchFields { get; set; }
        public virtual DbSet<Group> Groups { get; set; }
        public virtual DbSet<GvvBookingsForEvent> GvvBookingsForEvents { get; set; }
        public virtual DbSet<GvvDeletedAccountActivity> GvvDeletedAccountActivities { get; set; }
        public virtual DbSet<GvvDeletedContactActivity> GvvDeletedContactActivities { get; set; }
        public virtual DbSet<GvvDeletedOpportunityActivity> GvvDeletedOpportunityActivities { get; set; }
        public virtual DbSet<GvvDeletedProjectActivity> GvvDeletedProjectActivities { get; set; }
        public virtual DbSet<GvvDropDown> GvvDropDowns { get; set; }
        public virtual DbSet<GvvGetAllHighlightRule> GvvGetAllHighlightRules { get; set; }
        public virtual DbSet<GvvGetTimeObjectsByParentId> GvvGetTimeObjectsByParentIds { get; set; }
        public virtual DbSet<GvvLegacyField> GvvLegacyFields { get; set; }
        public virtual DbSet<GvvLegacyInfoForDesign> GvvLegacyInfoForDesigns { get; set; }
        public virtual DbSet<GvvProductTarget> GvvProductTargets { get; set; }
        public virtual DbSet<GvvTag> GvvTags { get; set; }
        public virtual DbSet<GvvToDoListSecurity> GvvToDoListSecurities { get; set; }
        public virtual DbSet<GvvUserAccessOption> GvvUserAccessOptions { get; set; }
        public virtual DbSet<GvvUserAccessOptionsLabelExport> GvvUserAccessOptionsLabelExports { get; set; }
        public virtual DbSet<GvvUserSelect> GvvUserSelects { get; set; }
        public virtual DbSet<GvvUserTargetDefinition> GvvUserTargetDefinitions { get; set; }
        public virtual DbSet<GvvUsersListLicenceExceeded> GvvUsersListLicenceExceededs { get; set; }
        public virtual DbSet<Header> Headers { get; set; }
        public virtual DbSet<HiddenDataAttribute> HiddenDataAttributes { get; set; }
        public virtual DbSet<HiddenFieldDataAttribute> HiddenFieldDataAttributes { get; set; }
        public virtual DbSet<Hotfix> Hotfixes { get; set; }
        public virtual DbSet<Import> Imports { get; set; }
        public virtual DbSet<ImportContactJob> ImportContactJobs { get; set; }
        public virtual DbSet<ImportQueue> ImportQueues { get; set; }
        public virtual DbSet<IntAccountingTransactionHistory> IntAccountingTransactionHistories { get; set; }
        public virtual DbSet<IntAccountingTransactionHistoryLine> IntAccountingTransactionHistoryLines { get; set; }
        public virtual DbSet<IntAnagramDespatch> IntAnagramDespatches { get; set; }
        public virtual DbSet<IntAnagramTransaction> IntAnagramTransactions { get; set; }
        public virtual DbSet<IntNavisionTransactionHistory> IntNavisionTransactionHistories { get; set; }
        public virtual DbSet<IntNavisionTransactionHistoryLine> IntNavisionTransactionHistoryLines { get; set; }
        public virtual DbSet<IntWinManTransactionHistory> IntWinManTransactionHistories { get; set; }
        public virtual DbSet<IntWinmanTransactionHistoryLine> IntWinmanTransactionHistoryLines { get; set; }
        public virtual DbSet<IntXeroTransactionHistory> IntXeroTransactionHistories { get; set; }
        public virtual DbSet<IntXeroTransactionHistoryLine> IntXeroTransactionHistoryLines { get; set; }
        public virtual DbSet<Integration> Integrations { get; set; }
        public virtual DbSet<IntegrationDefinition> IntegrationDefinitions { get; set; }
        public virtual DbSet<IntegrationId> IntegrationIds { get; set; }
        public virtual DbSet<IntegrationObjectMapping> IntegrationObjectMappings { get; set; }
        public virtual DbSet<IntegrationObjectMapping1> IntegrationObjectMappings1 { get; set; }
        public virtual DbSet<IntegrationThirdPartyCompanyId> IntegrationThirdPartyCompanyIds { get; set; }
        public virtual DbSet<IntegrationsMapping> IntegrationsMappings { get; set; }
        public virtual DbSet<IntegrationsModule> IntegrationsModules { get; set; }
        public virtual DbSet<IntegrationsProfile> IntegrationsProfiles { get; set; }
        public virtual DbSet<IntegrationsProfilesSetting> IntegrationsProfilesSettings { get; set; }
        public virtual DbSet<IntegrationsProfilesUser> IntegrationsProfilesUsers { get; set; }
        public virtual DbSet<IntegrationsProfilesUsersSetting> IntegrationsProfilesUsersSettings { get; set; }
        public virtual DbSet<IntegrationsSetting> IntegrationsSettings { get; set; }
        public virtual DbSet<InternalDomain> InternalDomains { get; set; }
        public virtual DbSet<ItMaguireImport> ItMaguireImports { get; set; }
        public virtual DbSet<ItemAvatar> ItemAvatars { get; set; }
        public virtual DbSet<ItemHighlightRule> ItemHighlightRules { get; set; }
        public virtual DbSet<IvCorrespondenceSecurity> IvCorrespondenceSecurities { get; set; }
        public virtual DbSet<IvSec> IvSecs { get; set; }
        public virtual DbSet<Job> Jobs { get; set; }
        public virtual DbSet<JobsType> JobsTypes { get; set; }
        public virtual DbSet<JobsType1> JobsTypes1 { get; set; }
        public virtual DbSet<LabelImport> LabelImports { get; set; }
        public virtual DbSet<Language> Languages { get; set; }
        public virtual DbSet<Licence> Licences { get; set; }
        public virtual DbSet<Link> Links { get; set; }
        public virtual DbSet<ListField> ListFields { get; set; }
        public virtual DbSet<LmCallLog> LmCallLogs { get; set; }
        public virtual DbSet<LmContactSpine> LmContactSpines { get; set; }
        public virtual DbSet<LmDeduplicationItem> LmDeduplicationItems { get; set; }
        public virtual DbSet<LmDeduplicationQueue> LmDeduplicationQueues { get; set; }
        public virtual DbSet<LmDuplicateEntity> LmDuplicateEntities { get; set; }
        public virtual DbSet<LmGuid> LmGuids { get; set; }
        public virtual DbSet<LmImport> LmImports { get; set; }
        public virtual DbSet<LmImportMapping> LmImportMappings { get; set; }
        public virtual DbSet<LmLink> LmLinks { get; set; }
        public virtual DbSet<LmListcontrol> LmListcontrols { get; set; }
        public virtual DbSet<LmMailRun> LmMailRuns { get; set; }
        public virtual DbSet<LmMailRunClickdatum> LmMailRunClickdata { get; set; }
        public virtual DbSet<LmMailRunRecipient> LmMailRunRecipients { get; set; }
        public virtual DbSet<LmNote> LmNotes { get; set; }
        public virtual DbSet<LmUpdateImportMapping> LmUpdateImportMappings { get; set; }
        public virtual DbSet<LogicalOperator> LogicalOperators { get; set; }
        public virtual DbSet<MailCampaign> MailCampaigns { get; set; }
        public virtual DbSet<MailCampaignsAccount> MailCampaignsAccounts { get; set; }
        public virtual DbSet<MailCampaignsAttachment> MailCampaignsAttachments { get; set; }
        public virtual DbSet<MailCampaignsContactsSent> MailCampaignsContactsSents { get; set; }
        public virtual DbSet<MailCampaignsContactsSentClick> MailCampaignsContactsSentClicks { get; set; }
        public virtual DbSet<MailCampaignsContactsSentDatum> MailCampaignsContactsSentData { get; set; }
        public virtual DbSet<MailCampaignsContactsUnsent> MailCampaignsContactsUnsents { get; set; }
        public virtual DbSet<MailCampaignsRun> MailCampaignsRuns { get; set; }
        public virtual DbSet<MailCampaignsSource> MailCampaignsSources { get; set; }
        public virtual DbSet<MarketingCampaign> MarketingCampaigns { get; set; }
        public virtual DbSet<MarketingCampaignStage> MarketingCampaignStages { get; set; }
        public virtual DbSet<MarketingCampaignStageMessage> MarketingCampaignStageMessages { get; set; }
        public virtual DbSet<MarketingCampaignStageMessageSender> MarketingCampaignStageMessageSenders { get; set; }
        public virtual DbSet<MarketingCampaignStageRecipient> MarketingCampaignStageRecipients { get; set; }
        public virtual DbSet<MarketingCampaignStageRule> MarketingCampaignStageRules { get; set; }
        public virtual DbSet<MarketingCampaignStageRun> MarketingCampaignStageRuns { get; set; }
        public virtual DbSet<MarketingCampaignStageRunClick> MarketingCampaignStageRunClicks { get; set; }
        public virtual DbSet<MarketingCampaignStageRunResult> MarketingCampaignStageRunResults { get; set; }
        public virtual DbSet<MarketingControlJob> MarketingControlJobs { get; set; }
        public virtual DbSet<MarketingRecipientCount> MarketingRecipientCounts { get; set; }
        public virtual DbSet<MarketingSource> MarketingSources { get; set; }
        public virtual DbSet<MarketingSourceQuery> MarketingSourceQueries { get; set; }
        public virtual DbSet<MarketingSourceRecipient> MarketingSourceRecipients { get; set; }
        public virtual DbSet<MarketingSourceRule> MarketingSourceRules { get; set; }
        public virtual DbSet<MarketingStageSource> MarketingStageSources { get; set; }
        public virtual DbSet<McMuid> McMuids { get; set; }
        public virtual DbSet<McMuidLink> McMuidLinks { get; set; }
        public virtual DbSet<McaBit> McaBits { get; set; }
        public virtual DbSet<McaDate> McaDates { get; set; }
        public virtual DbSet<McaNum> McaNums { get; set; }
        public virtual DbSet<McaTxt> McaTxts { get; set; }
        public virtual DbSet<McaUid> McaUids { get; set; }
        public virtual DbSet<McsMuid> McsMuids { get; set; }
        public virtual DbSet<McsMuidLink> McsMuidLinks { get; set; }
        public virtual DbSet<Menu> Menus { get; set; }
        public virtual DbSet<MenuGroup> MenuGroups { get; set; }
        public virtual DbSet<MenuGroupsSetting> MenuGroupsSettings { get; set; }
        public virtual DbSet<MenuItem> MenuItems { get; set; }
        public virtual DbSet<MenuItemsSetting> MenuItemsSettings { get; set; }
        public virtual DbSet<MenuOverlay> MenuOverlays { get; set; }
        public virtual DbSet<Migration> Migrations { get; set; }
        public virtual DbSet<MigrationsState> MigrationsStates { get; set; }
        public virtual DbSet<Module> Modules { get; set; }
        public virtual DbSet<MsMuid> MsMuids { get; set; }
        public virtual DbSet<MsMuidLink> MsMuidLinks { get; set; }
        public virtual DbSet<Note> Notes { get; set; }
        public virtual DbSet<Number> Numbers { get; set; }
        public virtual DbSet<ObjectsMember> ObjectsMembers { get; set; }
        public virtual DbSet<OpBit> OpBits { get; set; }
        public virtual DbSet<OpDate> OpDates { get; set; }
        public virtual DbSet<OpMuid> OpMuids { get; set; }
        public virtual DbSet<OpMuidLink> OpMuidLinks { get; set; }
        public virtual DbSet<OpNum> OpNums { get; set; }
        public virtual DbSet<OpTxt> OpTxts { get; set; }
        public virtual DbSet<OpUid> OpUids { get; set; }
        public virtual DbSet<OpaBit> OpaBits { get; set; }
        public virtual DbSet<OpaDate> OpaDates { get; set; }
        public virtual DbSet<OpaMuid> OpaMuids { get; set; }
        public virtual DbSet<OpaMuidLink> OpaMuidLinks { get; set; }
        public virtual DbSet<OpaNum> OpaNums { get; set; }
        public virtual DbSet<OpaTxt> OpaTxts { get; set; }
        public virtual DbSet<OpaUid> OpaUids { get; set; }
        public virtual DbSet<OpportunitiesQuote> OpportunitiesQuotes { get; set; }
        public virtual DbSet<OpportunitiesQuotesDetail> OpportunitiesQuotesDetails { get; set; }
        public virtual DbSet<OpportunitiesQuotesDetailsSchedule> OpportunitiesQuotesDetailsSchedules { get; set; }
        public virtual DbSet<Opportunity> Opportunities { get; set; }
        public virtual DbSet<OpportunityProbability> OpportunityProbabilities { get; set; }
        public virtual DbSet<OpqBit> OpqBits { get; set; }
        public virtual DbSet<OpqDate> OpqDates { get; set; }
        public virtual DbSet<OpqMuid> OpqMuids { get; set; }
        public virtual DbSet<OpqMuidLink> OpqMuidLinks { get; set; }
        public virtual DbSet<OpqNum> OpqNums { get; set; }
        public virtual DbSet<OpqTxt> OpqTxts { get; set; }
        public virtual DbSet<OpqUid> OpqUids { get; set; }
        public virtual DbSet<Overviewitemoption> Overviewitemoptions { get; set; }
        public virtual DbSet<Page> Pages { get; set; }
        public virtual DbSet<PageRole> PageRoles { get; set; }
        public virtual DbSet<PageType> PageTypes { get; set; }
        public virtual DbSet<PageVersion> PageVersions { get; set; }
        public virtual DbSet<Paragraph> Paragraphs { get; set; }
        public virtual DbSet<PjBit> PjBits { get; set; }
        public virtual DbSet<PjDate> PjDates { get; set; }
        public virtual DbSet<PjMuid> PjMuids { get; set; }
        public virtual DbSet<PjMuidLink> PjMuidLinks { get; set; }
        public virtual DbSet<PjNum> PjNums { get; set; }
        public virtual DbSet<PjTxt> PjTxts { get; set; }
        public virtual DbSet<PjUid> PjUids { get; set; }
        public virtual DbSet<PjaBit> PjaBits { get; set; }
        public virtual DbSet<PjaDate> PjaDates { get; set; }
        public virtual DbSet<PjaMuid> PjaMuids { get; set; }
        public virtual DbSet<PjaMuidLink> PjaMuidLinks { get; set; }
        public virtual DbSet<PjaNum> PjaNums { get; set; }
        public virtual DbSet<PjaTxt> PjaTxts { get; set; }
        public virtual DbSet<PjaUid> PjaUids { get; set; }
        public virtual DbSet<PluginSetting> PluginSettings { get; set; }
        public virtual DbSet<PortalPageTemplateType> PortalPageTemplateTypes { get; set; }
        public virtual DbSet<PortalVersion> PortalVersions { get; set; }
        public virtual DbSet<PortalVersion1> PortalVersions1 { get; set; }
        public virtual DbSet<PrivacyLog> PrivacyLogs { get; set; }
        public virtual DbSet<PrivacyRule> PrivacyRules { get; set; }
        public virtual DbSet<PrivacyRulesDropsOption> PrivacyRulesDropsOptions { get; set; }
        public virtual DbSet<PrivacyRulesOption> PrivacyRulesOptions { get; set; }
        public virtual DbSet<Process> Processes { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<ProductsCurrency> ProductsCurrencies { get; set; }
        public virtual DbSet<ProductsGroup> ProductsGroups { get; set; }
        public virtual DbSet<ProductsSchedule> ProductsSchedules { get; set; }
        public virtual DbSet<Project> Projects { get; set; }
        public virtual DbSet<Purpose> Purposes { get; set; }
        public virtual DbSet<Report> Reports { get; set; }
        public virtual DbSet<ReportType> ReportTypes { get; set; }
        public virtual DbSet<Request> Requests { get; set; }
        public virtual DbSet<RequestsDisplayId> RequestsDisplayIds { get; set; }
        public virtual DbSet<RequiredVersion> RequiredVersions { get; set; }
        public virtual DbSet<Response> Responses { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<RoleGroup> RoleGroups { get; set; }
        public virtual DbSet<RoleGroupCollection> RoleGroupCollections { get; set; }
        public virtual DbSet<RoleGroupCollectionsRole> RoleGroupCollectionsRoles { get; set; }
        public virtual DbSet<ScanningExclusion> ScanningExclusions { get; set; }
        public virtual DbSet<Schedule> Schedules { get; set; }
        public virtual DbSet<ScheduleQuoteItemJob> ScheduleQuoteItemJobs { get; set; }
        public virtual DbSet<ScheduledQuote> ScheduledQuotes { get; set; }
        public virtual DbSet<ScheduledQuotesChangeHistory> ScheduledQuotesChangeHistories { get; set; }
        public virtual DbSet<SecureFieldValue> SecureFieldValues { get; set; }
        public virtual DbSet<SecureNotesDetail> SecureNotesDetails { get; set; }
        public virtual DbSet<SecureNotesPermission> SecureNotesPermissions { get; set; }
        public virtual DbSet<SemBit> SemBits { get; set; }
        public virtual DbSet<SemDate> SemDates { get; set; }
        public virtual DbSet<SemMuid> SemMuids { get; set; }
        public virtual DbSet<SemMuidLink> SemMuidLinks { get; set; }
        public virtual DbSet<SemNum> SemNums { get; set; }
        public virtual DbSet<SemTxt> SemTxts { get; set; }
        public virtual DbSet<SemUid> SemUids { get; set; }
        public virtual DbSet<SembBit> SembBits { get; set; }
        public virtual DbSet<SembDate> SembDates { get; set; }
        public virtual DbSet<SembMuid> SembMuids { get; set; }
        public virtual DbSet<SembMuidLink> SembMuidLinks { get; set; }
        public virtual DbSet<SembNum> SembNums { get; set; }
        public virtual DbSet<SembTxt> SembTxts { get; set; }
        public virtual DbSet<SembUid> SembUids { get; set; }
        public virtual DbSet<SembaBit> SembaBits { get; set; }
        public virtual DbSet<SembaDate> SembaDates { get; set; }
        public virtual DbSet<SembaMuid> SembaMuids { get; set; }
        public virtual DbSet<SembaMuidLink> SembaMuidLinks { get; set; }
        public virtual DbSet<SembaNum> SembaNums { get; set; }
        public virtual DbSet<SembaTxt> SembaTxts { get; set; }
        public virtual DbSet<SembaUid> SembaUids { get; set; }
        public virtual DbSet<Seminar> Seminars { get; set; }
        public virtual DbSet<SeminarsBooking> SeminarsBookings { get; set; }
        public virtual DbSet<SeminarsBookingsAttendee> SeminarsBookingsAttendees { get; set; }
        public virtual DbSet<SeminarsBookingsAttendeesAnswer> SeminarsBookingsAttendeesAnswers { get; set; }
        public virtual DbSet<SeminarsBookingsAttendeesSeminarsLink> SeminarsBookingsAttendeesSeminarsLinks { get; set; }
        public virtual DbSet<SeminarsBookingsProduct> SeminarsBookingsProducts { get; set; }
        public virtual DbSet<SeminarsProduct> SeminarsProducts { get; set; }
        public virtual DbSet<SeminarsQuestion> SeminarsQuestions { get; set; }
        public virtual DbSet<SeminarsSession> SeminarsSessions { get; set; }
        public virtual DbSet<SeminarsSessionsAttendee> SeminarsSessionsAttendees { get; set; }
        public virtual DbSet<SeminarsSessionsProduct> SeminarsSessionsProducts { get; set; }
        public virtual DbSet<ServicesSchedule> ServicesSchedules { get; set; }
        public virtual DbSet<Session> Sessions { get; set; }
        public virtual DbSet<SessionItem> SessionItems { get; set; }
        public virtual DbSet<Setting> Settings { get; set; }
        public virtual DbSet<Setting1> Settings1 { get; set; }
        public virtual DbSet<SitBit> SitBits { get; set; }
        public virtual DbSet<SitDate> SitDates { get; set; }
        public virtual DbSet<SitMuid> SitMuids { get; set; }
        public virtual DbSet<SitMuidLink> SitMuidLinks { get; set; }
        public virtual DbSet<SitNum> SitNums { get; set; }
        public virtual DbSet<SitTxt> SitTxts { get; set; }
        public virtual DbSet<SitUid> SitUids { get; set; }
        public virtual DbSet<Site> Sites { get; set; }
        public virtual DbSet<Social> Socials { get; set; }
        public virtual DbSet<SocialAuth> SocialAuths { get; set; }
        public virtual DbSet<SocialAuthIntegration> SocialAuthIntegrations { get; set; }
        public virtual DbSet<Space> Spaces { get; set; }
        public virtual DbSet<SpaceRole> SpaceRoles { get; set; }
        public virtual DbSet<SpaceVersion> SpaceVersions { get; set; }
        public virtual DbSet<SrcBit> SrcBits { get; set; }
        public virtual DbSet<SrcDate> SrcDates { get; set; }
        public virtual DbSet<SrcNum> SrcNums { get; set; }
        public virtual DbSet<SrcTxt> SrcTxts { get; set; }
        public virtual DbSet<SrcUid> SrcUids { get; set; }
        public virtual DbSet<StageHistory> StageHistories { get; set; }
        public virtual DbSet<StandardIntegration> StandardIntegrations { get; set; }
        public virtual DbSet<StandardIntegrationsBatchfeed> StandardIntegrationsBatchfeeds { get; set; }
        public virtual DbSet<StandardIntegrationsBatchfeedsMapping> StandardIntegrationsBatchfeedsMappings { get; set; }
        public virtual DbSet<StandardIntegrationsLivefeed> StandardIntegrationsLivefeeds { get; set; }
        public virtual DbSet<StandardIntegrationsType> StandardIntegrationsTypes { get; set; }
        public virtual DbSet<StgBit> StgBits { get; set; }
        public virtual DbSet<StgDate> StgDates { get; set; }
        public virtual DbSet<StgNum> StgNums { get; set; }
        public virtual DbSet<StgTxt> StgTxts { get; set; }
        public virtual DbSet<StgUid> StgUids { get; set; }
        public virtual DbSet<SubKey> SubKeys { get; set; }
        public virtual DbSet<SystemLabel> SystemLabels { get; set; }
        public virtual DbSet<SystemLabelDescription> SystemLabelDescriptions { get; set; }
        public virtual DbSet<SystemXmlFile> SystemXmlFiles { get; set; }
        public virtual DbSet<SystemXmlFilesBackup> SystemXmlFilesBackups { get; set; }
        public virtual DbSet<Tag> Tags { get; set; }
        public virtual DbSet<TagsLink> TagsLinks { get; set; }
        public virtual DbSet<TagsSearch> TagsSearches { get; set; }
        public virtual DbSet<Target> Targets { get; set; }
        public virtual DbSet<TargetDef> TargetDefs { get; set; }
        public virtual DbSet<TaxCode> TaxCodes { get; set; }
        public virtual DbSet<Template> Templates { get; set; }
        public virtual DbSet<TemplateProperty> TemplateProperties { get; set; }
        public virtual DbSet<TextOptionsDrop> TextOptionsDrops { get; set; }
        public virtual DbSet<TextOptionsDropsOption> TextOptionsDropsOptions { get; set; }
        public virtual DbSet<Theme> Themes { get; set; }
        public virtual DbSet<ThemeVersion> ThemeVersions { get; set; }
        public virtual DbSet<TimePeriod> TimePeriods { get; set; }
        public virtual DbSet<TimeUnit> TimeUnits { get; set; }
        public virtual DbSet<TimeUnitsRecord> TimeUnitsRecords { get; set; }
        public virtual DbSet<Touchpoint> Touchpoints { get; set; }
        public virtual DbSet<TouchpointCategory> TouchpointCategories { get; set; }
        public virtual DbSet<TouchpointConfiguration> TouchpointConfigurations { get; set; }
        public virtual DbSet<TouchpointConfigurationsDatum> TouchpointConfigurationsData { get; set; }
        public virtual DbSet<TouchpointCredential> TouchpointCredentials { get; set; }
        public virtual DbSet<TouchpointFilter> TouchpointFilters { get; set; }
        public virtual DbSet<TouchpointHistory> TouchpointHistories { get; set; }
        public virtual DbSet<TouchpointLink> TouchpointLinks { get; set; }
        public virtual DbSet<TouchpointScore> TouchpointScores { get; set; }
        public virtual DbSet<TouchpointSocialAuth> TouchpointSocialAuths { get; set; }
        public virtual DbSet<TouchpointTest> TouchpointTests { get; set; }
        public virtual DbSet<Tp> Tps { get; set; }
        public virtual DbSet<Trace> Traces { get; set; }
        public virtual DbSet<UsaBit> UsaBits { get; set; }
        public virtual DbSet<UsaDate> UsaDates { get; set; }
        public virtual DbSet<UsaMuid> UsaMuids { get; set; }
        public virtual DbSet<UsaMuidLink> UsaMuidLinks { get; set; }
        public virtual DbSet<UsaNum> UsaNums { get; set; }
        public virtual DbSet<UsaTxt> UsaTxts { get; set; }
        public virtual DbSet<UsaUid> UsaUids { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UserCulture> UserCultures { get; set; }
        public virtual DbSet<UserRoleGroup> UserRoleGroups { get; set; }
        public virtual DbSet<UsersAppointment> UsersAppointments { get; set; }
        public virtual DbSet<UsersAppointmentsAttendee> UsersAppointmentsAttendees { get; set; }
        public virtual DbSet<UsersFavorite> UsersFavorites { get; set; }
        public virtual DbSet<UsersGadget> UsersGadgets { get; set; }
        public virtual DbSet<UsersGroup> UsersGroups { get; set; }
        public virtual DbSet<UsersGroupsBanner> UsersGroupsBanners { get; set; }
        public virtual DbSet<UsersGroupsMember> UsersGroupsMembers { get; set; }
        public virtual DbSet<UsersGroupsOption> UsersGroupsOptions { get; set; }
        public virtual DbSet<UsersNavigationHistory> UsersNavigationHistories { get; set; }
        public virtual DbSet<UsersRecent> UsersRecents { get; set; }
        public virtual DbSet<UsersReport> UsersReports { get; set; }
        public virtual DbSet<UsersRight> UsersRights { get; set; }
        public virtual DbSet<UsersTask> UsersTasks { get; set; }
        public virtual DbSet<UvIntegrationId> UvIntegrationIds { get; set; }
        public virtual DbSet<VAccountActivitiesAll> VAccountActivitiesAlls { get; set; }
        public virtual DbSet<VAccountActivityNote> VAccountActivityNotes { get; set; }
        public virtual DbSet<VAccountActivitySecurity> VAccountActivitySecurities { get; set; }
        public virtual DbSet<VAccountCurrency> VAccountCurrencies { get; set; }
        public virtual DbSet<VAccountFinancialEntitiesList> VAccountFinancialEntitiesLists { get; set; }
        public virtual DbSet<VAccountFinancialEntity> VAccountFinancialEntities { get; set; }
        public virtual DbSet<VAccountMailCampaign> VAccountMailCampaigns { get; set; }
        public virtual DbSet<VAccountPriceList> VAccountPriceLists { get; set; }
        public virtual DbSet<VAccountProfileType> VAccountProfileTypes { get; set; }
        public virtual DbSet<VAccountSecurity> VAccountSecurities { get; set; }
        public virtual DbSet<VAccountsLinksContact> VAccountsLinksContacts { get; set; }
        public virtual DbSet<VAccountsList> VAccountsLists { get; set; }
        public virtual DbSet<VAccountsProfile> VAccountsProfiles { get; set; }
        public virtual DbSet<VActivitiesListContactAndContactsAccount> VActivitiesListContactAndContactsAccounts { get; set; }
        public virtual DbSet<VActivity> VActivities { get; set; }
        public virtual DbSet<VActivityAlert> VActivityAlerts { get; set; }
        public virtual DbSet<VAlert> VAlerts { get; set; }
        public virtual DbSet<VAlertJob> VAlertJobs { get; set; }
        public virtual DbSet<VAlertTrace> VAlertTraces { get; set; }
        public virtual DbSet<VAppointmentAlert> VAppointmentAlerts { get; set; }
        public virtual DbSet<VAppointmentAlertsUtc> VAppointmentAlertsUtcs { get; set; }
        public virtual DbSet<VAppointmentSyncList> VAppointmentSyncLists { get; set; }
        public virtual DbSet<VAppointmentUser> VAppointmentUsers { get; set; }
        public virtual DbSet<VAppointmentsAttendee> VAppointmentsAttendees { get; set; }
        public virtual DbSet<VAttachmentCount> VAttachmentCounts { get; set; }
        public virtual DbSet<VBasePrivacyLogEntriesForInsert> VBasePrivacyLogEntriesForInserts { get; set; }
        public virtual DbSet<VCall> VCalls { get; set; }
        public virtual DbSet<VCampaignAllRecipient> VCampaignAllRecipients { get; set; }
        public virtual DbSet<VCampaignRunRecipientsAll> VCampaignRunRecipientsAlls { get; set; }
        public virtual DbSet<VCode> VCodes { get; set; }
        public virtual DbSet<VContact> VContacts { get; set; }
        public virtual DbSet<VContactSyncList> VContactSyncLists { get; set; }
        public virtual DbSet<VContactUnsubscribe> VContactUnsubscribes { get; set; }
        public virtual DbSet<VContactsLinked> VContactsLinkeds { get; set; }
        public virtual DbSet<VContactsSeminarBooking> VContactsSeminarBookings { get; set; }
        public virtual DbSet<VContactsSmall> VContactsSmalls { get; set; }
        public virtual DbSet<VCorrespondence> VCorrespondences { get; set; }
        public virtual DbSet<VCorrespondenceAttachment> VCorrespondenceAttachments { get; set; }
        public virtual DbSet<VCurrenciesPriceList> VCurrenciesPriceLists { get; set; }
        public virtual DbSet<VCurrency> VCurrencies { get; set; }
        public virtual DbSet<VDataAccessRequest> VDataAccessRequests { get; set; }
        public virtual DbSet<VDataRemovalRequest> VDataRemovalRequests { get; set; }
        public virtual DbSet<VDate> VDates { get; set; }
        public virtual DbSet<VDeletedCorrespondence> VDeletedCorrespondences { get; set; }
        public virtual DbSet<VDeletedProduct> VDeletedProducts { get; set; }
        public virtual DbSet<VDeletedProductGroup> VDeletedProductGroups { get; set; }
        public virtual DbSet<VDesignDefaultAccountView> VDesignDefaultAccountViews { get; set; }
        public virtual DbSet<VDesignDefaultContactView> VDesignDefaultContactViews { get; set; }
        public virtual DbSet<VDocument> VDocuments { get; set; }
        public virtual DbSet<VDocumentsAccount> VDocumentsAccounts { get; set; }
        public virtual DbSet<VDocumentsGenerated> VDocumentsGenerateds { get; set; }
        public virtual DbSet<VDropsList> VDropsLists { get; set; }
        public virtual DbSet<VDropsOptionsActive> VDropsOptionsActives { get; set; }
        public virtual DbSet<VDropsOptionsInActive> VDropsOptionsInActives { get; set; }
        public virtual DbSet<VEmailSecurityUser> VEmailSecurityUsers { get; set; }
        public virtual DbSet<VEsignDocument> VEsignDocuments { get; set; }
        public virtual DbSet<VEvent> VEvents { get; set; }
        public virtual DbSet<VEventbriteImport> VEventbriteImports { get; set; }
        public virtual DbSet<VEventbriteIntegratedEvent> VEventbriteIntegratedEvents { get; set; }
        public virtual DbSet<VEventsAndNote> VEventsAndNotes { get; set; }
        public virtual DbSet<VFinancialEntity> VFinancialEntities { get; set; }
        public virtual DbSet<VFolder> VFolders { get; set; }
        public virtual DbSet<VFormsDataIncDeleted> VFormsDataIncDeleteds { get; set; }
        public virtual DbSet<VFormsDatum> VFormsData { get; set; }
        public virtual DbSet<VGeoValid> VGeoValids { get; set; }
        public virtual DbSet<VGeocodesCodedToday> VGeocodesCodedTodays { get; set; }
        public virtual DbSet<VGeocodesExpirationByDay> VGeocodesExpirationByDays { get; set; }
        public virtual DbSet<VGeocodesForCoding> VGeocodesForCodings { get; set; }
        public virtual DbSet<VGeocodingFlag> VGeocodingFlags { get; set; }
        public virtual DbSet<VGeocodingStatistic> VGeocodingStatistics { get; set; }
        public virtual DbSet<VGetAgreement> VGetAgreements { get; set; }
        public virtual DbSet<VGetAllAgreement> VGetAllAgreements { get; set; }
        public virtual DbSet<VGetConnectPendingLmupload> VGetConnectPendingLmuploads { get; set; }
        public virtual DbSet<VGetConnectPendingUpload> VGetConnectPendingUploads { get; set; }
        public virtual DbSet<VGetUserEmailInfo> VGetUserEmailInfos { get; set; }
        public virtual DbSet<VGetUserScanInfo> VGetUserScanInfos { get; set; }
        public virtual DbSet<VHybridUser> VHybridUsers { get; set; }
        public virtual DbSet<VIntegrationLink> VIntegrationLinks { get; set; }
        public virtual DbSet<VIntegrationsList> VIntegrationsLists { get; set; }
        public virtual DbSet<VItemAction> VItemActions { get; set; }
        public virtual DbSet<VItemReport> VItemReports { get; set; }
        public virtual DbSet<VJob> VJobs { get; set; }
        public virtual DbSet<VLeadConnectMailshotRecipient> VLeadConnectMailshotRecipients { get; set; }
        public virtual DbSet<VLeadControlList> VLeadControlLists { get; set; }
        public virtual DbSet<VLeadsConnectSummary> VLeadsConnectSummaries { get; set; }
        public virtual DbSet<VLeadsLink> VLeadsLinks { get; set; }
        public virtual DbSet<VLeadsSpine> VLeadsSpines { get; set; }
        public virtual DbSet<VLink> VLinks { get; set; }
        public virtual DbSet<VLinksDocsNote> VLinksDocsNotes { get; set; }
        public virtual DbSet<VLinksNonAuto> VLinksNonAutos { get; set; }
        public virtual DbSet<VLmcall> VLmcalls { get; set; }
        public virtual DbSet<VMacDrop1> VMacDrop1s { get; set; }
        public virtual DbSet<VMacDrop2> VMacDrop2s { get; set; }
        public virtual DbSet<VMailCampaign> VMailCampaigns { get; set; }
        public virtual DbSet<VMailCampaignActivity> VMailCampaignActivities { get; set; }
        public virtual DbSet<VMailCampaignAttachment> VMailCampaignAttachments { get; set; }
        public virtual DbSet<VMailCampaignContact> VMailCampaignContacts { get; set; }
        public virtual DbSet<VMailCampaignsContactsSentClick> VMailCampaignsContactsSentClicks { get; set; }
        public virtual DbSet<VMailCampaignsSource> VMailCampaignsSources { get; set; }
        public virtual DbSet<VMarketingCampaign> VMarketingCampaigns { get; set; }
        public virtual DbSet<VMarketingCampaignStage> VMarketingCampaignStages { get; set; }
        public virtual DbSet<VMarketingCampaignStageRun> VMarketingCampaignStageRuns { get; set; }
        public virtual DbSet<VMarketingCampaignStageRunStat> VMarketingCampaignStageRunStats { get; set; }
        public virtual DbSet<VMarketingCampaignStageStat> VMarketingCampaignStageStats { get; set; }
        public virtual DbSet<VMarketingCampaignStageTotalSent> VMarketingCampaignStageTotalSents { get; set; }
        public virtual DbSet<VMarketingCampaignUnsubscribe> VMarketingCampaignUnsubscribes { get; set; }
        public virtual DbSet<VMarketingClicksForAccountContact> VMarketingClicksForAccountContacts { get; set; }
        public virtual DbSet<VMarketingSource> VMarketingSources { get; set; }
        public virtual DbSet<VMarketingSourceManualRule> VMarketingSourceManualRules { get; set; }
        public virtual DbSet<VMarketingSourceRecipientsExcluded> VMarketingSourceRecipientsExcludeds { get; set; }
        public virtual DbSet<VMarketingSourceRecipientsIncluded> VMarketingSourceRecipientsIncludeds { get; set; }
        public virtual DbSet<VMarketingSourceRule> VMarketingSourceRules { get; set; }
        public virtual DbSet<VMarketingStagesForAccountsContact> VMarketingStagesForAccountsContacts { get; set; }
        public virtual DbSet<VMembership> VMemberships { get; set; }
        public virtual DbSet<VNote> VNotes { get; set; }
        public virtual DbSet<VNotesForScanner> VNotesForScanners { get; set; }
        public virtual DbSet<VOpportunitiesQuote> VOpportunitiesQuotes { get; set; }
        public virtual DbSet<VOpportunitiesQuotesDetail> VOpportunitiesQuotesDetails { get; set; }
        public virtual DbSet<VOpportunitiesSchedule> VOpportunitiesSchedules { get; set; }
        public virtual DbSet<VOpportunity> VOpportunities { get; set; }
        public virtual DbSet<VOpportunityActivitySecurity> VOpportunityActivitySecurities { get; set; }
        public virtual DbSet<VOpportunityContact> VOpportunityContacts { get; set; }
        public virtual DbSet<VOpportunitySecurity> VOpportunitySecurities { get; set; }
        public virtual DbSet<VOpportunityTimeUnitsRecord> VOpportunityTimeUnitsRecords { get; set; }
        public virtual DbSet<VParagraph> VParagraphs { get; set; }
        public virtual DbSet<VPhoneSystem> VPhoneSystems { get; set; }
        public virtual DbSet<VPriceList> VPriceLists { get; set; }
        public virtual DbSet<VPriceListsSelect> VPriceListsSelects { get; set; }
        public virtual DbSet<VPrivacyLogList> VPrivacyLogLists { get; set; }
        public virtual DbSet<VProductGroupProduct> VProductGroupProducts { get; set; }
        public virtual DbSet<VProductMonth> VProductMonths { get; set; }
        public virtual DbSet<VProductSalesAll> VProductSalesAlls { get; set; }
        public virtual DbSet<VProductSchedule> VProductSchedules { get; set; }
        public virtual DbSet<VProductTarget> VProductTargets { get; set; }
        public virtual DbSet<VProductTargetDef> VProductTargetDefs { get; set; }
        public virtual DbSet<VProductsCurrency> VProductsCurrencies { get; set; }
        public virtual DbSet<VProductsGroup> VProductsGroups { get; set; }
        public virtual DbSet<VProject> VProjects { get; set; }
        public virtual DbSet<VProjectActivitySecurity> VProjectActivitySecurities { get; set; }
        public virtual DbSet<VProjectContact> VProjectContacts { get; set; }
        public virtual DbSet<VProjectSecurity> VProjectSecurities { get; set; }
        public virtual DbSet<VProjectsTimeUnitsRecord> VProjectsTimeUnitsRecords { get; set; }
        public virtual DbSet<VRawDropOption> VRawDropOptions { get; set; }
        public virtual DbSet<VReadyEventbriteJob> VReadyEventbriteJobs { get; set; }
        public virtual DbSet<VReport> VReports { get; set; }
        public virtual DbSet<VReportProductsForecast> VReportProductsForecasts { get; set; }
        public virtual DbSet<VSalesAll> VSalesAlls { get; set; }
        public virtual DbSet<VSchedule> VSchedules { get; set; }
        public virtual DbSet<VScheduledQuote> VScheduledQuotes { get; set; }
        public virtual DbSet<VSeminar> VSeminars { get; set; }
        public virtual DbSet<VSeminarBooking> VSeminarBookings { get; set; }
        public virtual DbSet<VSeminarBookingAttendee> VSeminarBookingAttendees { get; set; }
        public virtual DbSet<VSeminarBookingAttendeesNotClosedLost> VSeminarBookingAttendeesNotClosedLosts { get; set; }
        public virtual DbSet<VSeminarBookingProduct> VSeminarBookingProducts { get; set; }
        public virtual DbSet<VSeminarSession> VSeminarSessions { get; set; }
        public virtual DbSet<VSeminarSessionAttendee> VSeminarSessionAttendees { get; set; }
        public virtual DbSet<VSeminarSessionAttendeesClash> VSeminarSessionAttendeesClashes { get; set; }
        public virtual DbSet<VSeminarSessionsOpen> VSeminarSessionsOpens { get; set; }
        public virtual DbSet<VSeminarsAttendeesAnswer> VSeminarsAttendeesAnswers { get; set; }
        public virtual DbSet<VSeminarsQuestion> VSeminarsQuestions { get; set; }
        public virtual DbSet<VSite> VSites { get; set; }
        public virtual DbSet<VSocialAuth> VSocialAuths { get; set; }
        public virtual DbSet<VStageFollowUpRecipientInformationAccountContact> VStageFollowUpRecipientInformationAccountContacts { get; set; }
        public virtual DbSet<VStageFollowUpRecipientInformationLead> VStageFollowUpRecipientInformationLeads { get; set; }
        public virtual DbSet<VStageHistory> VStageHistories { get; set; }
        public virtual DbSet<VSubAccessDropOption> VSubAccessDropOptions { get; set; }
        public virtual DbSet<VTag> VTags { get; set; }
        public virtual DbSet<VTagLink> VTagLinks { get; set; }
        public virtual DbSet<VTagsSearch> VTagsSearches { get; set; }
        public virtual DbSet<VTagsSearchAccount> VTagsSearchAccounts { get; set; }
        public virtual DbSet<VTask> VTasks { get; set; }
        public virtual DbSet<VTaskSyncList> VTaskSyncLists { get; set; }
        public virtual DbSet<VTaxCode> VTaxCodes { get; set; }
        public virtual DbSet<VTimePeriod> VTimePeriods { get; set; }
        public virtual DbSet<VTimeUnitsRecord> VTimeUnitsRecords { get; set; }
        public virtual DbSet<VTouchPoint> VTouchPoints { get; set; }
        public virtual DbSet<VTouchPointChild> VTouchPointChildren { get; set; }
        public virtual DbSet<VTouchPointHistory> VTouchPointHistories { get; set; }
        public virtual DbSet<VTouchPointHistoryLead> VTouchPointHistoryLeads { get; set; }
        public virtual DbSet<VTouchPointScore> VTouchPointScores { get; set; }
        public virtual DbSet<VTouchPointScoresAccount> VTouchPointScoresAccounts { get; set; }
        public virtual DbSet<VTouchPointScoresLead> VTouchPointScoresLeads { get; set; }
        public virtual DbSet<VTouchPointsCategory> VTouchPointsCategories { get; set; }
        public virtual DbSet<VUnsubscribe> VUnsubscribes { get; set; }
        public virtual DbSet<VUser> VUsers { get; set; }
        public virtual DbSet<VUserGroupType> VUserGroupTypes { get; set; }
        public virtual DbSet<VUserLicenceCount> VUserLicenceCounts { get; set; }
        public virtual DbSet<VUserTarget> VUserTargets { get; set; }
        public virtual DbSet<VUserTargetDef> VUserTargetDefs { get; set; }
        public virtual DbSet<VUsersAdmin> VUsersAdmins { get; set; }
        public virtual DbSet<VUsersAdmin1> VUsersAdmins1 { get; set; }
        public virtual DbSet<VUsersAppointment> VUsersAppointments { get; set; }
        public virtual DbSet<VUsersAppointmentsAccountOverview> VUsersAppointmentsAccountOverviews { get; set; }
        public virtual DbSet<VUsersDeleted> VUsersDeleteds { get; set; }
        public virtual DbSet<VUsersGroup> VUsersGroups { get; set; }
        public virtual DbSet<VUsersGroupsAdmin> VUsersGroupsAdmins { get; set; }
        public virtual DbSet<VUsersGroupsMember> VUsersGroupsMembers { get; set; }
        public virtual DbSet<VUsersGroupsOption> VUsersGroupsOptions { get; set; }
        public virtual DbSet<VUsersGroupsOptionsGdpr> VUsersGroupsOptionsGdprs { get; set; }
        public virtual DbSet<VUsersGroupsWithLeadsAccess> VUsersGroupsWithLeadsAccesses { get; set; }
        public virtual DbSet<VUsersHome> VUsersHomes { get; set; }
        public virtual DbSet<VUsersInvite> VUsersInvites { get; set; }
        public virtual DbSet<VUsersSupport> VUsersSupports { get; set; }
        public virtual DbSet<VUsersTask> VUsersTasks { get; set; }
        public virtual DbSet<VUsersWithDeleted> VUsersWithDeleteds { get; set; }
        public virtual DbSet<Vpurposelist> Vpurposelists { get; set; }
        public virtual DbSet<VwActivitiesNotesList> VwActivitiesNotesLists { get; set; }
        public virtual DbSet<VwDataErasureObject> VwDataErasureObjects { get; set; }
        public virtual DbSet<VwIntAccountingTransactionHistory> VwIntAccountingTransactionHistories { get; set; }
        public virtual DbSet<VwIntAccountingTransactionHistoryLine> VwIntAccountingTransactionHistoryLines { get; set; }
        public virtual DbSet<VwIntAnagramDespatch> VwIntAnagramDespatches { get; set; }
        public virtual DbSet<VwIntAnagramTransaction> VwIntAnagramTransactions { get; set; }
        public virtual DbSet<VwIntNavisionTransactionHistory> VwIntNavisionTransactionHistories { get; set; }
        public virtual DbSet<VwIntNavisionTransactionHistoryLine> VwIntNavisionTransactionHistoryLines { get; set; }
        public virtual DbSet<VwIntWinmanTransactionHistory> VwIntWinmanTransactionHistories { get; set; }
        public virtual DbSet<VwIntWinmanTransactionHistoryLine> VwIntWinmanTransactionHistoryLines { get; set; }
        public virtual DbSet<VwIntXeroTransactionHistory> VwIntXeroTransactionHistories { get; set; }
        public virtual DbSet<VwIntXeroTransactionHistoryLine> VwIntXeroTransactionHistoryLines { get; set; }
        public virtual DbSet<VwOpportunityNotesList> VwOpportunityNotesLists { get; set; }
        public virtual DbSet<VwexTimeSheet> VwexTimeSheets { get; set; }
        public virtual DbSet<Widget> Widgets { get; set; }
        public virtual DbSet<WidgetsOnDashboard> WidgetsOnDashboards { get; set; }
        public virtual DbSet<XmlPoke> XmlPokes { get; set; }
        public virtual DbSet<Xmlfile> Xmlfiles { get; set; }
        public virtual DbSet<ZlmConferenceusingaccount131012121113143713> ZlmConferenceusingaccount131012121113143713s { get; set; }
        public virtual DbSet<ZlmTestconferenceleads131012121113141704> ZlmTestconferenceleads131012121113141704s { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=(localdb)\\SlabheadImport;Initial Catalog=Slabhead;Integrated Security=True");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<AcBit>(entity =>
            {
                entity.ToTable("AC_BIT");

                entity.Property(e => e.AcBitId)
                    .ValueGeneratedNever()
                    .HasColumnName("AC_BIT_ID");

                entity.HasOne(d => d.AcBitNavigation)
                    .WithOne(p => p.AcBit)
                    .HasForeignKey<AcBit>(d => d.AcBitId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__AC_BIT__AC_BIT_I__19A2444E");
            });

            modelBuilder.Entity<AcDate>(entity =>
            {
                entity.ToTable("AC_DATE");

                entity.Property(e => e.AcDateId)
                    .ValueGeneratedNever()
                    .HasColumnName("AC_DATE_ID");

                entity.HasOne(d => d.AcDateNavigation)
                    .WithOne(p => p.AcDate)
                    .HasForeignKey<AcDate>(d => d.AcDateId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__AC_DATE__AC_DATE__1C7EB0F9");
            });

            modelBuilder.Entity<AcMuid>(entity =>
            {
                entity.HasKey(e => e.AcMuidId)
                    .IsClustered(false);

                entity.ToTable("AC_MUID");

                entity.Property(e => e.AcMuidId)
                    .ValueGeneratedNever()
                    .HasColumnName("AC_MUID_ID");
            });

            modelBuilder.Entity<AcMuidLink>(entity =>
            {
                entity.HasKey(e => new { e.AcMuidId, e.DrId, e.DroId });

                entity.ToTable("AC_MUID_LINKS");

                entity.Property(e => e.AcMuidId).HasColumnName("AC_MUID_ID");

                entity.Property(e => e.DrId).HasColumnName("DR_ID");

                entity.Property(e => e.DroId).HasColumnName("DRO_ID");
            });

            modelBuilder.Entity<AcNum>(entity =>
            {
                entity.ToTable("AC_NUM");

                entity.Property(e => e.AcNumId)
                    .ValueGeneratedNever()
                    .HasColumnName("AC_NUM_ID");

                entity.HasOne(d => d.AcNumNavigation)
                    .WithOne(p => p.AcNum)
                    .HasForeignKey<AcNum>(d => d.AcNumId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__AC_NUM__AC_NUM_I__22378A4F");
            });

            modelBuilder.Entity<AcTxt>(entity =>
            {
                entity.ToTable("AC_TXT");

                entity.Property(e => e.AcTxtId)
                    .ValueGeneratedNever()
                    .HasColumnName("AC_TXT_ID");

                entity.Property(e => e.AcTxt1)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TXT_1");

                entity.Property(e => e.AcTxt10)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TXT_10");

                entity.Property(e => e.AcTxt11)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TXT_11");

                entity.Property(e => e.AcTxt12)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TXT_12");

                entity.Property(e => e.AcTxt13)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TXT_13");

                entity.Property(e => e.AcTxt14)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TXT_14");

                entity.Property(e => e.AcTxt15)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TXT_15");

                entity.Property(e => e.AcTxt2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TXT_2");

                entity.Property(e => e.AcTxt3)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TXT_3");

                entity.Property(e => e.AcTxt4)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TXT_4");

                entity.Property(e => e.AcTxt5)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TXT_5");

                entity.Property(e => e.AcTxt6)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TXT_6");

                entity.Property(e => e.AcTxt7)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TXT_7");

                entity.Property(e => e.AcTxt8)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TXT_8");

                entity.Property(e => e.AcTxt9)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TXT_9");

                entity.HasOne(d => d.AcTxtNavigation)
                    .WithOne(p => p.AcTxt)
                    .HasForeignKey<AcTxt>(d => d.AcTxtId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__AC_TXT__AC_TXT_I__16C5D7A3");
            });

            modelBuilder.Entity<AcUid>(entity =>
            {
                entity.ToTable("AC_UID");

                entity.Property(e => e.AcUidId)
                    .ValueGeneratedNever()
                    .HasColumnName("AC_UID_ID");

                entity.Property(e => e.AcUid1).HasColumnName("AC_UID_1");

                entity.Property(e => e.AcUid2).HasColumnName("AC_UID_2");

                entity.HasOne(d => d.AcUidNavigation)
                    .WithOne(p => p.AcUid)
                    .HasForeignKey<AcUid>(d => d.AcUidId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__AC_UID__AC_UID_I__1F5B1DA4");
            });

            modelBuilder.Entity<AcaBit>(entity =>
            {
                entity.ToTable("ACA_BIT");

                entity.Property(e => e.AcaBitId)
                    .ValueGeneratedNever()
                    .HasColumnName("ACA_BIT_ID");

                entity.HasOne(d => d.AcaBitNavigation)
                    .WithOne(p => p.AcaBit)
                    .HasForeignKey<AcaBit>(d => d.AcaBitId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ACA_BIT__ACA_BIT__363E82FC");
            });

            modelBuilder.Entity<AcaDate>(entity =>
            {
                entity.ToTable("ACA_DATE");

                entity.Property(e => e.AcaDateId)
                    .ValueGeneratedNever()
                    .HasColumnName("ACA_DATE_ID");

                entity.HasOne(d => d.AcaDateNavigation)
                    .WithOne(p => p.AcaDate)
                    .HasForeignKey<AcaDate>(d => d.AcaDateId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ACA_DATE__ACA_DA__391AEFA7");
            });

            modelBuilder.Entity<AcaMuid>(entity =>
            {
                entity.HasKey(e => e.AcaMuidId)
                    .IsClustered(false);

                entity.ToTable("ACA_MUID");

                entity.Property(e => e.AcaMuidId)
                    .ValueGeneratedNever()
                    .HasColumnName("ACA_MUID_ID");
            });

            modelBuilder.Entity<AcaMuidLink>(entity =>
            {
                entity.HasKey(e => new { e.AcaMuidId, e.DrId, e.DroId });

                entity.ToTable("ACA_MUID_LINKS");

                entity.Property(e => e.AcaMuidId).HasColumnName("ACA_MUID_ID");

                entity.Property(e => e.DrId).HasColumnName("DR_ID");

                entity.Property(e => e.DroId).HasColumnName("DRO_ID");
            });

            modelBuilder.Entity<AcaNum>(entity =>
            {
                entity.ToTable("ACA_NUM");

                entity.Property(e => e.AcaNumId)
                    .ValueGeneratedNever()
                    .HasColumnName("ACA_NUM_ID");

                entity.HasOne(d => d.AcaNumNavigation)
                    .WithOne(p => p.AcaNum)
                    .HasForeignKey<AcaNum>(d => d.AcaNumId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ACA_NUM__ACA_NUM__3ED3C8FD");
            });

            modelBuilder.Entity<AcaTxt>(entity =>
            {
                entity.ToTable("ACA_TXT");

                entity.Property(e => e.AcaTxtId)
                    .ValueGeneratedNever()
                    .HasColumnName("ACA_TXT_ID");

                entity.HasOne(d => d.AcaTxtNavigation)
                    .WithOne(p => p.AcaTxt)
                    .HasForeignKey<AcaTxt>(d => d.AcaTxtId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ACA_TXT__ACA_TXT__33621651");
            });

            modelBuilder.Entity<AcaUid>(entity =>
            {
                entity.ToTable("ACA_UID");

                entity.Property(e => e.AcaUidId)
                    .ValueGeneratedNever()
                    .HasColumnName("ACA_UID_ID");

                entity.HasOne(d => d.AcaUidNavigation)
                    .WithOne(p => p.AcaUid)
                    .HasForeignKey<AcaUid>(d => d.AcaUidId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ACA_UID__ACA_UID__3BF75C52");
            });

            modelBuilder.Entity<AccBit>(entity =>
            {
                entity.ToTable("ACC_BIT");

                entity.Property(e => e.AccBitId)
                    .ValueGeneratedNever()
                    .HasColumnName("ACC_BIT_ID");

                entity.HasOne(d => d.AccBitNavigation)
                    .WithOne(p => p.AccBit)
                    .HasForeignKey<AccBit>(d => d.AccBitId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ACC_BIT__ACC_BIT__27F063A5");
            });

            modelBuilder.Entity<AccDate>(entity =>
            {
                entity.ToTable("ACC_DATE");

                entity.Property(e => e.AccDateId)
                    .ValueGeneratedNever()
                    .HasColumnName("ACC_DATE_ID");

                entity.HasOne(d => d.AccDateNavigation)
                    .WithOne(p => p.AccDate)
                    .HasForeignKey<AccDate>(d => d.AccDateId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ACC_DATE__ACC_DA__2ACCD050");
            });

            modelBuilder.Entity<AccMuid>(entity =>
            {
                entity.HasKey(e => e.AccMuidId)
                    .IsClustered(false);

                entity.ToTable("ACC_MUID");

                entity.Property(e => e.AccMuidId)
                    .ValueGeneratedNever()
                    .HasColumnName("ACC_MUID_ID");
            });

            modelBuilder.Entity<AccMuidLink>(entity =>
            {
                entity.HasKey(e => new { e.AccMuidId, e.DrId, e.DroId });

                entity.ToTable("ACC_MUID_LINKS");

                entity.Property(e => e.AccMuidId).HasColumnName("ACC_MUID_ID");

                entity.Property(e => e.DrId).HasColumnName("DR_ID");

                entity.Property(e => e.DroId).HasColumnName("DRO_ID");
            });

            modelBuilder.Entity<AccNum>(entity =>
            {
                entity.ToTable("ACC_NUM");

                entity.Property(e => e.AccNumId)
                    .ValueGeneratedNever()
                    .HasColumnName("ACC_NUM_ID");

                entity.HasOne(d => d.AccNumNavigation)
                    .WithOne(p => p.AccNum)
                    .HasForeignKey<AccNum>(d => d.AccNumId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ACC_NUM__ACC_NUM__3085A9A6");
            });

            modelBuilder.Entity<AccTxt>(entity =>
            {
                entity.ToTable("ACC_TXT");

                entity.Property(e => e.AccTxtId)
                    .ValueGeneratedNever()
                    .HasColumnName("ACC_TXT_ID");

                entity.Property(e => e.AccTxt1)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_TXT_1");

                entity.HasOne(d => d.AccTxtNavigation)
                    .WithOne(p => p.AccTxt)
                    .HasForeignKey<AccTxt>(d => d.AccTxtId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ACC_TXT__ACC_TXT__2513F6FA");
            });

            modelBuilder.Entity<AccUid>(entity =>
            {
                entity.ToTable("ACC_UID");

                entity.Property(e => e.AccUidId)
                    .ValueGeneratedNever()
                    .HasColumnName("ACC_UID_ID");

                entity.HasOne(d => d.AccUidNavigation)
                    .WithOne(p => p.AccUid)
                    .HasForeignKey<AccUid>(d => d.AccUidId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ACC_UID__ACC_UID__2DA93CFB");
            });

            modelBuilder.Entity<AccaBit>(entity =>
            {
                entity.ToTable("ACCA_BIT");

                entity.Property(e => e.AccaBitId)
                    .ValueGeneratedNever()
                    .HasColumnName("ACCA_BIT_ID");

                entity.HasOne(d => d.AccaBitNavigation)
                    .WithOne(p => p.AccaBit)
                    .HasForeignKey<AccaBit>(d => d.AccaBitId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ACCA_BIT__ACCA_B__448CA253");
            });

            modelBuilder.Entity<AccaDate>(entity =>
            {
                entity.ToTable("ACCA_DATE");

                entity.Property(e => e.AccaDateId)
                    .ValueGeneratedNever()
                    .HasColumnName("ACCA_DATE_ID");

                entity.HasOne(d => d.AccaDateNavigation)
                    .WithOne(p => p.AccaDate)
                    .HasForeignKey<AccaDate>(d => d.AccaDateId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ACCA_DATE__ACCA___47690EFE");
            });

            modelBuilder.Entity<AccaMuid>(entity =>
            {
                entity.HasKey(e => e.AccaMuidId)
                    .IsClustered(false);

                entity.ToTable("ACCA_MUID");

                entity.Property(e => e.AccaMuidId)
                    .ValueGeneratedNever()
                    .HasColumnName("ACCA_MUID_ID");
            });

            modelBuilder.Entity<AccaMuidLink>(entity =>
            {
                entity.HasKey(e => new { e.AccaMuidId, e.DrId, e.DroId });

                entity.ToTable("ACCA_MUID_LINKS");

                entity.Property(e => e.AccaMuidId).HasColumnName("ACCA_MUID_ID");

                entity.Property(e => e.DrId).HasColumnName("DR_ID");

                entity.Property(e => e.DroId).HasColumnName("DRO_ID");
            });

            modelBuilder.Entity<AccaNum>(entity =>
            {
                entity.ToTable("ACCA_NUM");

                entity.Property(e => e.AccaNumId)
                    .ValueGeneratedNever()
                    .HasColumnName("ACCA_NUM_ID");

                entity.HasOne(d => d.AccaNumNavigation)
                    .WithOne(p => p.AccaNum)
                    .HasForeignKey<AccaNum>(d => d.AccaNumId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ACCA_NUM__ACCA_N__4D21E854");
            });

            modelBuilder.Entity<AccaTxt>(entity =>
            {
                entity.ToTable("ACCA_TXT");

                entity.Property(e => e.AccaTxtId)
                    .ValueGeneratedNever()
                    .HasColumnName("ACCA_TXT_ID");

                entity.HasOne(d => d.AccaTxtNavigation)
                    .WithOne(p => p.AccaTxt)
                    .HasForeignKey<AccaTxt>(d => d.AccaTxtId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ACCA_TXT__ACCA_T__41B035A8");
            });

            modelBuilder.Entity<AccaUid>(entity =>
            {
                entity.ToTable("ACCA_UID");

                entity.Property(e => e.AccaUidId)
                    .ValueGeneratedNever()
                    .HasColumnName("ACCA_UID_ID");

                entity.HasOne(d => d.AccaUidNavigation)
                    .WithOne(p => p.AccaUid)
                    .HasForeignKey<AccaUid>(d => d.AccaUidId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ACCA_UID__ACCA_U__4A457BA9");
            });

            modelBuilder.Entity<AccessOption>(entity =>
            {
                entity.HasKey(e => e.AcoId);

                entity.ToTable("ACCESS_OPTIONS");

                entity.Property(e => e.AcoId)
                    .ValueGeneratedNever()
                    .HasColumnName("ACO_ID");

                entity.Property(e => e.LicenceType).HasDefaultValueSql("(CONVERT([uniqueidentifier],'8C848D9C-E432-4A86-8D7E-2D9CA6FBE77B',(0)))");

                entity.Property(e => e.PluralLabel)
                    .HasMaxLength(50)
                    .HasColumnName("Plural_label");

                entity.Property(e => e.SingularLabel)
                    .HasMaxLength(50)
                    .HasColumnName("Singular_label");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");
            });

            modelBuilder.Entity<AccessOption1>(entity =>
            {
                entity.HasKey(e => e.AcoId);

                entity.ToTable("ACCESS_OPTIONS", "install");

                entity.Property(e => e.AcoId)
                    .ValueGeneratedNever()
                    .HasColumnName("ACO_ID");

                entity.Property(e => e.LicenceType).HasDefaultValueSql("(CONVERT([uniqueidentifier],'8C848D9C-E432-4A86-8D7E-2D9CA6FBE77B',(0)))");

                entity.Property(e => e.PluralLabel)
                    .HasMaxLength(50)
                    .HasColumnName("Plural_label")
                    .UseCollation("Latin1_General_CI_AS");

                entity.Property(e => e.SingularLabel)
                    .HasMaxLength(50)
                    .HasColumnName("Singular_label")
                    .UseCollation("Latin1_General_CI_AS");

                entity.Property(e => e.Summary)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY")
                    .UseCollation("Latin1_General_CI_AS");
            });

            modelBuilder.Entity<Account>(entity =>
            {
                entity.HasKey(e => e.AcId);

                entity.ToTable("ACCOUNTS");

                entity.HasIndex(e => e.UsIdSales, "IX_ACCOUNTS_US_ID_SALES")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.EmailDomains, "IX__ACCOUNTS__EMAIL_DOMAINS__INCLS");

                entity.HasIndex(e => new { e.Postcode, e.AcDeleted }, "IX__ACCOUNTS__POSTCODE_DELETED__INCLS");

                entity.HasIndex(e => e.ShortCode, "IX__ACCOUNTS__SHORT_CODE");

                entity.Property(e => e.AcId)
                    .HasColumnName("AC_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.AcDeleted)
                    .HasColumnName("AC_DELETED")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.AcDiscount)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("AC_DISCOUNT");

                entity.Property(e => e.AcDormant).HasColumnName("AC_DORMANT");

                entity.Property(e => e.AcExternal)
                    .HasMaxLength(255)
                    .HasColumnName("AC_EXTERNAL");

                entity.Property(e => e.AcFlag).HasColumnName("AC_FLAG");

                entity.Property(e => e.AcImport).HasColumnName("AC_IMPORT");

                entity.Property(e => e.AcNumber)
                    .HasMaxLength(10)
                    .HasColumnName("AC_NUMBER")
                    .IsFixedLength(true);

                entity.Property(e => e.AcPotential)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("AC_POTENTIAL");

                entity.Property(e => e.AcSales)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("AC_SALES");

                entity.Property(e => e.AcUd1)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1");

                entity.Property(e => e.AcUd10)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10");

                entity.Property(e => e.AcUd10Bit).HasColumnName("AC_UD10_BIT");

                entity.Property(e => e.AcUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD10_DATE");

                entity.Property(e => e.AcUd10Id).HasColumnName("AC_UD10_ID");

                entity.Property(e => e.AcUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD10_NUMERIC");

                entity.Property(e => e.AcUd11)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD11");

                entity.Property(e => e.AcUd11Bit).HasColumnName("AC_UD11_BIT");

                entity.Property(e => e.AcUd12)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD12");

                entity.Property(e => e.AcUd12Bit).HasColumnName("AC_UD12_BIT");

                entity.Property(e => e.AcUd13)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD13");

                entity.Property(e => e.AcUd13Bit).HasColumnName("AC_UD13_BIT");

                entity.Property(e => e.AcUd14)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD14");

                entity.Property(e => e.AcUd14Bit).HasColumnName("AC_UD14_BIT");

                entity.Property(e => e.AcUd15)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD15");

                entity.Property(e => e.AcUd15Bit).HasColumnName("AC_UD15_BIT");

                entity.Property(e => e.AcUd16Bit).HasColumnName("AC_UD16_BIT");

                entity.Property(e => e.AcUd17Bit).HasColumnName("AC_UD17_BIT");

                entity.Property(e => e.AcUd18Bit).HasColumnName("AC_UD18_BIT");

                entity.Property(e => e.AcUd19Bit).HasColumnName("AC_UD19_BIT");

                entity.Property(e => e.AcUd1Bit).HasColumnName("AC_UD1_BIT");

                entity.Property(e => e.AcUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD1_DATE");

                entity.Property(e => e.AcUd1Id).HasColumnName("AC_UD1_ID");

                entity.Property(e => e.AcUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD1_NUMERIC");

                entity.Property(e => e.AcUd2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2");

                entity.Property(e => e.AcUd20Bit).HasColumnName("AC_UD20_BIT");

                entity.Property(e => e.AcUd21Bit).HasColumnName("AC_UD21_BIT");

                entity.Property(e => e.AcUd22Bit).HasColumnName("AC_UD22_BIT");

                entity.Property(e => e.AcUd23Bit).HasColumnName("AC_UD23_BIT");

                entity.Property(e => e.AcUd24Bit).HasColumnName("AC_UD24_BIT");

                entity.Property(e => e.AcUd2Bit).HasColumnName("AC_UD2_BIT");

                entity.Property(e => e.AcUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD2_DATE");

                entity.Property(e => e.AcUd2Id).HasColumnName("AC_UD2_ID");

                entity.Property(e => e.AcUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD2_NUMERIC");

                entity.Property(e => e.AcUd3)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3");

                entity.Property(e => e.AcUd3Bit).HasColumnName("AC_UD3_BIT");

                entity.Property(e => e.AcUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD3_DATE");

                entity.Property(e => e.AcUd3Id).HasColumnName("AC_UD3_ID");

                entity.Property(e => e.AcUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD3_NUMERIC");

                entity.Property(e => e.AcUd4)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4");

                entity.Property(e => e.AcUd4Bit).HasColumnName("AC_UD4_BIT");

                entity.Property(e => e.AcUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD4_DATE");

                entity.Property(e => e.AcUd4Id).HasColumnName("AC_UD4_ID");

                entity.Property(e => e.AcUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD4_NUMERIC");

                entity.Property(e => e.AcUd5)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5");

                entity.Property(e => e.AcUd5Bit).HasColumnName("AC_UD5_BIT");

                entity.Property(e => e.AcUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD5_DATE");

                entity.Property(e => e.AcUd5Id).HasColumnName("AC_UD5_ID");

                entity.Property(e => e.AcUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD5_NUMERIC");

                entity.Property(e => e.AcUd6)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6");

                entity.Property(e => e.AcUd6Bit).HasColumnName("AC_UD6_BIT");

                entity.Property(e => e.AcUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD6_DATE");

                entity.Property(e => e.AcUd6Id).HasColumnName("AC_UD6_ID");

                entity.Property(e => e.AcUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD6_NUMERIC");

                entity.Property(e => e.AcUd7)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7");

                entity.Property(e => e.AcUd7Bit).HasColumnName("AC_UD7_BIT");

                entity.Property(e => e.AcUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD7_DATE");

                entity.Property(e => e.AcUd7Id).HasColumnName("AC_UD7_ID");

                entity.Property(e => e.AcUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD7_NUMERIC");

                entity.Property(e => e.AcUd8)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8");

                entity.Property(e => e.AcUd8Bit).HasColumnName("AC_UD8_BIT");

                entity.Property(e => e.AcUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD8_DATE");

                entity.Property(e => e.AcUd8Id).HasColumnName("AC_UD8_ID");

                entity.Property(e => e.AcUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD8_NUMERIC");

                entity.Property(e => e.AcUd9)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9");

                entity.Property(e => e.AcUd9Bit).HasColumnName("AC_UD9_BIT");

                entity.Property(e => e.AcUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD9_DATE");

                entity.Property(e => e.AcUd9Id).HasColumnName("AC_UD9_ID");

                entity.Property(e => e.AcUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD9_NUMERIC");

                entity.Property(e => e.AccIdSales).HasColumnName("ACC_ID_SALES");

                entity.Property(e => e.AccIdSupport).HasColumnName("ACC_ID_SUPPORT");

                entity.Property(e => e.AcgId).HasColumnName("ACG_ID");

                entity.Property(e => e.ActualTime).HasColumnName("ACTUAL_TIME");

                entity.Property(e => e.ActualUnits).HasColumnName("ACTUAL_UNITS");

                entity.Property(e => e.Address1)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_1");

                entity.Property(e => e.Address2)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_2");

                entity.Property(e => e.Address3)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_3");

                entity.Property(e => e.BillingAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_ADDRESS_1");

                entity.Property(e => e.BillingAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_ADDRESS_2");

                entity.Property(e => e.BillingAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_ADDRESS_3");

                entity.Property(e => e.BillingCountry)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_COUNTRY");

                entity.Property(e => e.BillingCounty)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_COUNTY");

                entity.Property(e => e.BillingPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_POSTCODE");

                entity.Property(e => e.BillingSitId).HasColumnName("BILLING_SIT_ID");

                entity.Property(e => e.BillingTown)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_TOWN");

                entity.Property(e => e.Country)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.County)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTY");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CsId).HasColumnName("CS_ID");

                entity.Property(e => e.CurId).HasColumnName("CUR_ID");

                entity.Property(e => e.CurIdBilling).HasColumnName("CUR_ID_BILLING");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.EmailDomains)
                    .HasMaxLength(1024)
                    .HasColumnName("EMAIL_DOMAINS");

                entity.Property(e => e.EstimatedTime).HasColumnName("ESTIMATED_TIME");

                entity.Property(e => e.EstimatedUnits).HasColumnName("ESTIMATED_UNITS");

                entity.Property(e => e.Fax1)
                    .HasMaxLength(50)
                    .HasColumnName("FAX_1");

                entity.Property(e => e.Fax2)
                    .HasMaxLength(50)
                    .HasColumnName("FAX_2");

                entity.Property(e => e.Fax3)
                    .HasMaxLength(50)
                    .HasColumnName("FAX_3");

                entity.Property(e => e.Industry).HasColumnName("INDUSTRY");

                entity.Property(e => e.Label).HasColumnName("LABEL");

                entity.Property(e => e.Level).HasColumnName("LEVEL");

                entity.Property(e => e.LinkedinName)
                    .HasMaxLength(255)
                    .HasColumnName("LINKEDIN_NAME");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .HasColumnName("NAME");

                entity.Property(e => e.NameLongestWord)
                    .HasMaxLength(255)
                    .HasColumnName("NAME_LONGEST_WORD");

                entity.Property(e => e.NameSoundex)
                    .HasMaxLength(4)
                    .HasColumnName("NAME_SOUNDEX");

                entity.Property(e => e.NumberEmployees)
                    .HasMaxLength(10)
                    .HasColumnName("NUMBER_EMPLOYEES");

                entity.Property(e => e.Parent).HasColumnName("PARENT");

                entity.Property(e => e.Phone1)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_1");

                entity.Property(e => e.Phone2)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_2");

                entity.Property(e => e.Phone3)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_3");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(255)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", true);

                entity.Property(e => e.PrimarySitId).HasColumnName("PRIMARY_SIT_ID");

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.ReferenceSeed).HasColumnName("REFERENCE_SEED");

                entity.Property(e => e.Sentiment)
                    .HasMaxLength(8)
                    .HasColumnName("SENTIMENT");

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'ACC-')");

                entity.Property(e => e.Site)
                    .HasMaxLength(100)
                    .HasColumnName("SITE");

                entity.Property(e => e.Source).HasColumnName("SOURCE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Town)
                    .HasMaxLength(255)
                    .HasColumnName("TOWN");

                entity.Property(e => e.Type1).HasColumnName("TYPE_1");

                entity.Property(e => e.Type2).HasColumnName("TYPE_2");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");

                entity.Property(e => e.UsIdSupport).HasColumnName("US_ID_SUPPORT");

                entity.Property(e => e.Validationmessage)
                    .HasMaxLength(255)
                    .HasColumnName("VALIDATIONMESSAGE");

                entity.Property(e => e.WebSite1)
                    .HasMaxLength(100)
                    .HasColumnName("WEB_SITE_1");

                entity.Property(e => e.WebSite2)
                    .HasMaxLength(100)
                    .HasColumnName("WEB_SITE_2");

                entity.HasOne(d => d.Acg)
                    .WithMany(p => p.Accounts)
                    .HasForeignKey(d => d.AcgId)
                    .HasConstraintName("FK_ACCOUNTS_ACCOUNTS_GROUPS");

                entity.HasOne(d => d.Cur)
                    .WithMany(p => p.AccountCurs)
                    .HasForeignKey(d => d.CurId)
                    .HasConstraintName("FK_ACCOUNTS_CURRENCIES");

                entity.HasOne(d => d.CurIdBillingNavigation)
                    .WithMany(p => p.AccountCurIdBillingNavigations)
                    .HasForeignKey(d => d.CurIdBilling)
                    .HasConstraintName("FK_ACCOUNTS_CURRENCIES_BILLING");

                entity.HasOne(d => d.UsIdSalesNavigation)
                    .WithMany(p => p.AccountUsIdSalesNavigations)
                    .HasForeignKey(d => d.UsIdSales)
                    .HasConstraintName("FK_ACCOUNTS_USERS");

                entity.HasOne(d => d.UsIdSupportNavigation)
                    .WithMany(p => p.AccountUsIdSupportNavigations)
                    .HasForeignKey(d => d.UsIdSupport)
                    .HasConstraintName("FK_ACCOUNTS_USERS1");
            });

            modelBuilder.Entity<AccountDiscount>(entity =>
            {
                entity.HasKey(e => e.AcdId)
                    .HasName("PK__ACCOUNT___40FFC45073C07973");

                entity.ToTable("ACCOUNT_DISCOUNTS");

                entity.Property(e => e.AcdId)
                    .ValueGeneratedNever()
                    .HasColumnName("ACD_ID");

                entity.Property(e => e.Value)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("VALUE");
            });

            modelBuilder.Entity<AccountsContact>(entity =>
            {
                entity.HasKey(e => e.AccId);

                entity.ToTable("ACCOUNTS_CONTACTS");

                entity.HasIndex(e => e.AcId, "IX_ACCOUNTS_CONTACTS_AC_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.CreatedDate, "IX_ACCOUNTS_CONTACTS_CDATE")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => new { e.Email1Address, e.AccDeleted }, "IX_ACCOUNTS_CONTACTS_EMAIL1ADDRESS");

                entity.HasIndex(e => new { e.Email2Address, e.AccDeleted }, "IX_ACCOUNTS_CONTACTS_EMAIL2ADDRESS");

                entity.HasIndex(e => new { e.Email3Address, e.AccDeleted }, "IX_ACCOUNTS_CONTACTS_EMAIL3ADDRESS");

                entity.HasIndex(e => e.ShortCode, "IX__ACCOUNTS_CONTACTS__SHORT_CODE");

                entity.Property(e => e.AccId)
                    .HasColumnName("ACC_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccDeleted)
                    .HasColumnName("ACC_DELETED")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.AccDormant).HasColumnName("ACC_DORMANT");

                entity.Property(e => e.AccExternal)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_EXTERNAL");

                entity.Property(e => e.AccImport).HasColumnName("ACC_IMPORT");

                entity.Property(e => e.AccStatus).HasColumnName("ACC_STATUS");

                entity.Property(e => e.AccUd1)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD1");

                entity.Property(e => e.AccUd10)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD10");

                entity.Property(e => e.AccUd10Bit).HasColumnName("ACC_UD10_BIT");

                entity.Property(e => e.AccUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD10_DATE");

                entity.Property(e => e.AccUd10Id).HasColumnName("ACC_UD10_ID");

                entity.Property(e => e.AccUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD10_NUMERIC");

                entity.Property(e => e.AccUd11)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD11");

                entity.Property(e => e.AccUd11Bit).HasColumnName("ACC_UD11_BIT");

                entity.Property(e => e.AccUd12)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD12");

                entity.Property(e => e.AccUd12Bit).HasColumnName("ACC_UD12_BIT");

                entity.Property(e => e.AccUd13)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD13");

                entity.Property(e => e.AccUd13Bit).HasColumnName("ACC_UD13_BIT");

                entity.Property(e => e.AccUd14)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD14");

                entity.Property(e => e.AccUd14Bit).HasColumnName("ACC_UD14_BIT");

                entity.Property(e => e.AccUd15)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD15");

                entity.Property(e => e.AccUd15Bit).HasColumnName("ACC_UD15_BIT");

                entity.Property(e => e.AccUd16Bit).HasColumnName("ACC_UD16_BIT");

                entity.Property(e => e.AccUd17Bit).HasColumnName("ACC_UD17_BIT");

                entity.Property(e => e.AccUd18Bit).HasColumnName("ACC_UD18_BIT");

                entity.Property(e => e.AccUd19Bit).HasColumnName("ACC_UD19_BIT");

                entity.Property(e => e.AccUd1Bit).HasColumnName("ACC_UD1_BIT");

                entity.Property(e => e.AccUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD1_DATE");

                entity.Property(e => e.AccUd1Id).HasColumnName("ACC_UD1_ID");

                entity.Property(e => e.AccUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD1_NUMERIC");

                entity.Property(e => e.AccUd2)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD2");

                entity.Property(e => e.AccUd20Bit).HasColumnName("ACC_UD20_BIT");

                entity.Property(e => e.AccUd21Bit).HasColumnName("ACC_UD21_BIT");

                entity.Property(e => e.AccUd22Bit).HasColumnName("ACC_UD22_BIT");

                entity.Property(e => e.AccUd23Bit).HasColumnName("ACC_UD23_BIT");

                entity.Property(e => e.AccUd24Bit).HasColumnName("ACC_UD24_BIT");

                entity.Property(e => e.AccUd2Bit).HasColumnName("ACC_UD2_BIT");

                entity.Property(e => e.AccUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD2_DATE");

                entity.Property(e => e.AccUd2Id).HasColumnName("ACC_UD2_ID");

                entity.Property(e => e.AccUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD2_NUMERIC");

                entity.Property(e => e.AccUd3)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD3");

                entity.Property(e => e.AccUd3Bit).HasColumnName("ACC_UD3_BIT");

                entity.Property(e => e.AccUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD3_DATE");

                entity.Property(e => e.AccUd3Id).HasColumnName("ACC_UD3_ID");

                entity.Property(e => e.AccUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD3_NUMERIC");

                entity.Property(e => e.AccUd4)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD4");

                entity.Property(e => e.AccUd4Bit).HasColumnName("ACC_UD4_BIT");

                entity.Property(e => e.AccUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD4_DATE");

                entity.Property(e => e.AccUd4Id).HasColumnName("ACC_UD4_ID");

                entity.Property(e => e.AccUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD4_NUMERIC");

                entity.Property(e => e.AccUd5)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD5");

                entity.Property(e => e.AccUd5Bit).HasColumnName("ACC_UD5_BIT");

                entity.Property(e => e.AccUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD5_DATE");

                entity.Property(e => e.AccUd5Id).HasColumnName("ACC_UD5_ID");

                entity.Property(e => e.AccUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD5_NUMERIC");

                entity.Property(e => e.AccUd6)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD6");

                entity.Property(e => e.AccUd6Bit).HasColumnName("ACC_UD6_BIT");

                entity.Property(e => e.AccUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD6_DATE");

                entity.Property(e => e.AccUd6Id).HasColumnName("ACC_UD6_ID");

                entity.Property(e => e.AccUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD6_NUMERIC");

                entity.Property(e => e.AccUd7)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD7");

                entity.Property(e => e.AccUd7Bit).HasColumnName("ACC_UD7_BIT");

                entity.Property(e => e.AccUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD7_DATE");

                entity.Property(e => e.AccUd7Id).HasColumnName("ACC_UD7_ID");

                entity.Property(e => e.AccUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD7_NUMERIC");

                entity.Property(e => e.AccUd8)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD8");

                entity.Property(e => e.AccUd8Bit).HasColumnName("ACC_UD8_BIT");

                entity.Property(e => e.AccUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD8_DATE");

                entity.Property(e => e.AccUd8Id).HasColumnName("ACC_UD8_ID");

                entity.Property(e => e.AccUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD8_NUMERIC");

                entity.Property(e => e.AccUd9)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD9");

                entity.Property(e => e.AccUd9Bit).HasColumnName("ACC_UD9_BIT");

                entity.Property(e => e.AccUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD9_DATE");

                entity.Property(e => e.AccUd9Id).HasColumnName("ACC_UD9_ID");

                entity.Property(e => e.AccUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD9_NUMERIC");

                entity.Property(e => e.Account).HasMaxLength(255);

                entity.Property(e => e.Anniversary).HasMaxLength(255);

                entity.Property(e => e.AssistantTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Assistantname).HasMaxLength(255);

                entity.Property(e => e.BillingInformation).HasMaxLength(255);

                entity.Property(e => e.Birthday).HasMaxLength(255);

                entity.Property(e => e.Business2TelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.BusinessAddress).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressCity).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressCountry).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressState).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.BusinessFaxNumber).HasMaxLength(255);

                entity.Property(e => e.BusinessHomePage).HasMaxLength(255);

                entity.Property(e => e.BusinessSitId).HasColumnName("BUSINESS_SIT_ID");

                entity.Property(e => e.BusinessTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.CallbackTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.CarTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Categories).HasMaxLength(500);

                entity.Property(e => e.Children).HasMaxLength(255);

                entity.Property(e => e.Companies).HasMaxLength(255);

                entity.Property(e => e.CompanyAndFullName).HasMaxLength(255);

                entity.Property(e => e.CompanyLastFirstNoSpace).HasMaxLength(255);

                entity.Property(e => e.CompanyLastFirstSpaceOnly).HasMaxLength(255);

                entity.Property(e => e.CompanyMainTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.CompanyName).HasMaxLength(255);

                entity.Property(e => e.ComputerNetworkName).HasMaxLength(255);

                entity.Property(e => e.ConnectOptIn).HasColumnName("CONNECT_OPT_IN");

                entity.Property(e => e.ConnectOptInDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CONNECT_OPT_IN_DATE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CreationTime).HasMaxLength(255);

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Department).HasMaxLength(255);

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.Email1Address).HasMaxLength(255);

                entity.Property(e => e.Email1AddressType).HasMaxLength(255);

                entity.Property(e => e.Email1DisplayName).HasMaxLength(255);

                entity.Property(e => e.Email1EntryId)
                    .HasMaxLength(255)
                    .HasColumnName("Email1EntryID");

                entity.Property(e => e.Email2Address).HasMaxLength(255);

                entity.Property(e => e.Email2AddressType).HasMaxLength(255);

                entity.Property(e => e.Email2DisplayName).HasMaxLength(255);

                entity.Property(e => e.Email2EntryId)
                    .HasMaxLength(255)
                    .HasColumnName("Email2EntryID");

                entity.Property(e => e.Email3Address).HasMaxLength(255);

                entity.Property(e => e.Email3AddressType).HasMaxLength(255);

                entity.Property(e => e.Email3DisplayName).HasMaxLength(255);

                entity.Property(e => e.Email3EntryId)
                    .HasMaxLength(255)
                    .HasColumnName("Email3EntryID");

                entity.Property(e => e.Erased).HasColumnName("ERASED");

                entity.Property(e => e.ErasedBy)
                    .HasMaxLength(255)
                    .HasColumnName("ERASED_BY");

                entity.Property(e => e.ErasedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ERASED_DATE");

                entity.Property(e => e.Exported).HasColumnName("EXPORTED");

                entity.Property(e => e.FirstName).HasMaxLength(255);

                entity.Property(e => e.Ftpsite)
                    .HasMaxLength(255)
                    .HasColumnName("FTPSite");

                entity.Property(e => e.FullName).HasMaxLength(255);

                entity.Property(e => e.FullNameAndCompany).HasMaxLength(255);

                entity.Property(e => e.Hobby).HasMaxLength(255);

                entity.Property(e => e.Home2TelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.HomeAddress).HasMaxLength(255);

                entity.Property(e => e.HomeAddressCity).HasMaxLength(255);

                entity.Property(e => e.HomeAddressCountry).HasMaxLength(255);

                entity.Property(e => e.HomeAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.HomeAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.HomeAddressState).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.HomeFaxNumber).HasMaxLength(255);

                entity.Property(e => e.HomeTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Initials).HasMaxLength(255);

                entity.Property(e => e.InternetFreeBusyAddress).HasMaxLength(255);

                entity.Property(e => e.Isdnnumber)
                    .HasMaxLength(255)
                    .HasColumnName("ISDNNumber");

                entity.Property(e => e.JobTitle).HasMaxLength(255);

                entity.Property(e => e.LastFirstAndSuffix).HasMaxLength(255);

                entity.Property(e => e.LastFirstNoSpaceCompany).HasMaxLength(255);

                entity.Property(e => e.LastFirstSpaceOnly).HasMaxLength(255);

                entity.Property(e => e.LastFirstSpaceOnlyCompany).HasMaxLength(255);

                entity.Property(e => e.LastModificationTime).HasMaxLength(255);

                entity.Property(e => e.LastName).HasMaxLength(255);

                entity.Property(e => e.LastNameAndFirstName).HasMaxLength(255);

                entity.Property(e => e.LinkedinName)
                    .HasMaxLength(255)
                    .HasColumnName("LINKEDIN_NAME");

                entity.Property(e => e.MailingAddress).HasMaxLength(255);

                entity.Property(e => e.MailingAddressCity).HasMaxLength(255);

                entity.Property(e => e.MailingAddressCountry).HasMaxLength(255);

                entity.Property(e => e.MailingAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.MailingAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.MailingAddressState).HasMaxLength(255);

                entity.Property(e => e.MailingAddressStreet).HasMaxLength(255);

                entity.Property(e => e.MailingAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.MailingAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.ManagerName).HasMaxLength(255);

                entity.Property(e => e.MiddleName).HasMaxLength(255);

                entity.Property(e => e.Mileage).HasMaxLength(255);

                entity.Property(e => e.MobileTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.MultiAccountAccess)
                    .HasColumnName("MULTI_ACCOUNT_ACCESS")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NetMeetingAlias).HasMaxLength(255);

                entity.Property(e => e.NetMeetingServer).HasMaxLength(255);

                entity.Property(e => e.NickName).HasMaxLength(255);

                entity.Property(e => e.NtIdOutlook).HasColumnName("NT_ID_OUTLOOK");

                entity.Property(e => e.OfficeLocation).HasMaxLength(255);

                entity.Property(e => e.OtherAddress).HasMaxLength(255);

                entity.Property(e => e.OtherAddressCity).HasMaxLength(255);

                entity.Property(e => e.OtherAddressCountry).HasMaxLength(255);

                entity.Property(e => e.OtherAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.OtherAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.OtherAddressState).HasMaxLength(255);

                entity.Property(e => e.OtherAddressStreet).HasMaxLength(255);

                entity.Property(e => e.OtherAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.OtherAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.OtherFaxNumber).HasMaxLength(255);

                entity.Property(e => e.OtherTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.PersonalHomePage).HasMaxLength(255);

                entity.Property(e => e.PrefAddress).HasColumnName("PREF_ADDRESS");

                entity.Property(e => e.PrefEmail).HasColumnName("PREF_EMAIL");

                entity.Property(e => e.PrefPhone).HasColumnName("PREF_PHONE");

                entity.Property(e => e.PreferredContact).HasColumnName("PREFERRED_CONTACT");

                entity.Property(e => e.PreferredContactEmail).HasColumnName("PREFERRED_CONTACT_EMAIL");

                entity.Property(e => e.PreferredContactFax).HasColumnName("PREFERRED_CONTACT_FAX");

                entity.Property(e => e.PreferredContactLetter).HasColumnName("PREFERRED_CONTACT_LETTER");

                entity.Property(e => e.PreferredContactPhone).HasColumnName("PREFERRED_CONTACT_PHONE");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", true);

                entity.Property(e => e.PrimaryTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.PrivacyNotified).HasColumnName("PRIVACY_NOTIFIED");

                entity.Property(e => e.PrivacyNotifiedBy)
                    .HasMaxLength(255)
                    .HasColumnName("PRIVACY_NOTIFIED_BY");

                entity.Property(e => e.PrivacyNotifiedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRIVACY_NOTIFIED_DATE");

                entity.Property(e => e.PrivacyNotifiedMethod)
                    .HasMaxLength(255)
                    .HasColumnName("PRIVACY_NOTIFIED_METHOD");

                entity.Property(e => e.Profession).HasMaxLength(255);

                entity.Property(e => e.RadioTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.ReferredBy).HasMaxLength(255);

                entity.Property(e => e.RemovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("REMOVAL_DATE");

                entity.Property(e => e.Salutation)
                    .HasMaxLength(255)
                    .HasColumnName("SALUTATION");

                entity.Property(e => e.SelectedMailingAddress).HasMaxLength(255);

                entity.Property(e => e.Sensitivity)
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('Normal')");

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'CON-')");

                entity.Property(e => e.Spouse).HasMaxLength(255);

                entity.Property(e => e.Subject).HasMaxLength(255);

                entity.Property(e => e.Suffix).HasMaxLength(255);

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.SyncUpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYNC_UPDATED_DATE");

                entity.Property(e => e.SyncedWithPortal).HasColumnName("SYNCED_WITH_PORTAL");

                entity.Property(e => e.TelexNumber).HasMaxLength(255);

                entity.Property(e => e.Title).HasMaxLength(255);

                entity.Property(e => e.TtytddtelephoneNumber)
                    .HasMaxLength(255)
                    .HasColumnName("TTYTDDTelephoneNumber");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.WebPage).HasMaxLength(255);

                entity.Property(e => e.YomiCompanyName).HasMaxLength(255);

                entity.Property(e => e.YomiFirstName).HasMaxLength(255);

                entity.Property(e => e.YomiLastName).HasMaxLength(255);

                entity.HasOne(d => d.Ac)
                    .WithMany(p => p.AccountsContacts)
                    .HasForeignKey(d => d.AcId)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_ACCOUNTS_CONTACTS_ACCOUNTS");
            });

            modelBuilder.Entity<AccountsContactsValue>(entity =>
            {
                entity.HasKey(e => e.AccId);

                entity.ToTable("ACCOUNTS_CONTACTS_VALUES");

                entity.Property(e => e.AccId)
                    .ValueGeneratedNever()
                    .HasColumnName("ACC_ID");

                entity.Property(e => e.AccStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_STATUS");

                entity.Property(e => e.AccStatusHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_STATUS_HLIGHT");

                entity.Property(e => e.AccUd10Id)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD10_ID");

                entity.Property(e => e.AccUd10IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD10_ID_HLIGHT");

                entity.Property(e => e.AccUd1Id)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD1_ID");

                entity.Property(e => e.AccUd1IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD1_ID_HLIGHT");

                entity.Property(e => e.AccUd2Id)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD2_ID");

                entity.Property(e => e.AccUd2IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD2_ID_HLIGHT");

                entity.Property(e => e.AccUd3Id)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD3_ID");

                entity.Property(e => e.AccUd3IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD3_ID_HLIGHT");

                entity.Property(e => e.AccUd4Id)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD4_ID");

                entity.Property(e => e.AccUd4IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD4_ID_HLIGHT");

                entity.Property(e => e.AccUd5Id)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD5_ID");

                entity.Property(e => e.AccUd5IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD5_ID_HLIGHT");

                entity.Property(e => e.AccUd6Id)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD6_ID");

                entity.Property(e => e.AccUd6IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD6_ID_HLIGHT");

                entity.Property(e => e.AccUd7Id)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD7_ID");

                entity.Property(e => e.AccUd7IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD7_ID_HLIGHT");

                entity.Property(e => e.AccUd8Id)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD8_ID");

                entity.Property(e => e.AccUd8IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD8_ID_HLIGHT");

                entity.Property(e => e.AccUd9Id)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD9_ID");

                entity.Property(e => e.AccUd9IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD9_ID_HLIGHT");

                entity.Property(e => e.BusinessTelephoneNumberTrim)
                    .HasMaxLength(15)
                    .HasColumnName("BusinessTelephoneNumber_TRIM");

                entity.Property(e => e.MobileTelephoneNumberTrim)
                    .HasMaxLength(15)
                    .HasColumnName("MobileTelephoneNumber_TRIM");

                entity.Property(e => e.UsId)
                    .HasMaxLength(255)
                    .HasColumnName("US_ID");
            });

            modelBuilder.Entity<AccountsCurrency>(entity =>
            {
                entity.HasKey(e => e.AcurId);

                entity.ToTable("ACCOUNTS_CURRENCIES");

                entity.Property(e => e.AcurId)
                    .HasColumnName("ACUR_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.CurId).HasColumnName("CUR_ID");

                entity.Property(e => e.IsDefault).HasColumnName("IS_DEFAULT");
            });

            modelBuilder.Entity<AccountsFinancialEntity>(entity =>
            {
                entity.HasKey(e => e.AcfneId)
                    .HasName("PK_AC_FNE");

                entity.ToTable("ACCOUNTS_FINANCIAL_ENTITIES");

                entity.Property(e => e.AcfneId)
                    .ValueGeneratedNever()
                    .HasColumnName("ACFNE_ID");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcfneDeleted).HasColumnName("ACFNE_DELETED");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.FneId).HasColumnName("FNE_ID");

                entity.Property(e => e.IsDefault).HasColumnName("IS_DEFAULT");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<AccountsGroup>(entity =>
            {
                entity.HasKey(e => e.AcgId)
                    .HasName("PK_ACC_GROUPS");

                entity.ToTable("ACCOUNTS_GROUPS");

                entity.Property(e => e.AcgId)
                    .HasColumnName("ACG_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.AcgDeleted).HasColumnName("ACG_DELETED");

                entity.Property(e => e.AcgOrder).HasColumnName("ACG_ORDER");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Type).HasColumnName("TYPE");

                entity.Property(e => e.Ud1)
                    .HasMaxLength(255)
                    .HasColumnName("UD1");

                entity.Property(e => e.Ud10)
                    .HasMaxLength(255)
                    .HasColumnName("UD10");

                entity.Property(e => e.Ud11)
                    .HasMaxLength(255)
                    .HasColumnName("UD11");

                entity.Property(e => e.Ud12)
                    .HasMaxLength(255)
                    .HasColumnName("UD12");

                entity.Property(e => e.Ud13)
                    .HasMaxLength(255)
                    .HasColumnName("UD13");

                entity.Property(e => e.Ud14)
                    .HasMaxLength(255)
                    .HasColumnName("UD14");

                entity.Property(e => e.Ud15)
                    .HasMaxLength(255)
                    .HasColumnName("UD15");

                entity.Property(e => e.Ud2)
                    .HasMaxLength(255)
                    .HasColumnName("UD2");

                entity.Property(e => e.Ud3)
                    .HasMaxLength(255)
                    .HasColumnName("UD3");

                entity.Property(e => e.Ud4)
                    .HasMaxLength(255)
                    .HasColumnName("UD4");

                entity.Property(e => e.Ud5)
                    .HasMaxLength(255)
                    .HasColumnName("UD5");

                entity.Property(e => e.Ud6)
                    .HasMaxLength(255)
                    .HasColumnName("UD6");

                entity.Property(e => e.Ud7)
                    .HasMaxLength(255)
                    .HasColumnName("UD7");

                entity.Property(e => e.Ud8)
                    .HasMaxLength(255)
                    .HasColumnName("UD8");

                entity.Property(e => e.Ud9)
                    .HasMaxLength(255)
                    .HasColumnName("UD9");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<AccountsProfile>(entity =>
            {
                entity.HasKey(e => e.AcpId)
                    .HasName("PK_ACC_PROFILES");

                entity.ToTable("ACCOUNTS_PROFILES");

                entity.HasIndex(e => e.AccId, "IX_ACCOUNTS_PROFILES_ACC_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.AcId, "IX_ACCOUNTS_PROFILES_AC_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.CreatedDate, "IX_ACCOUNTS_PROFILES_CREATED_DATE")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.ShortCode, "IX__ACCOUNTS_PROFILES__SHORT_CODE");

                entity.Property(e => e.AcpId)
                    .HasColumnName("ACP_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AcpDeleted)
                    .HasColumnName("ACP_DELETED")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.AcpExternal)
                    .HasMaxLength(255)
                    .HasColumnName("ACP_EXTERNAL");

                entity.Property(e => e.AcpImport).HasColumnName("ACP_IMPORT");

                entity.Property(e => e.AcpUd10Bit).HasColumnName("ACP_UD10_BIT");

                entity.Property(e => e.AcpUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACP_UD10_DATE");

                entity.Property(e => e.AcpUd10Id).HasColumnName("ACP_UD10_ID");

                entity.Property(e => e.AcpUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACP_UD10_NUMERIC");

                entity.Property(e => e.AcpUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACP_UD10_TEXT");

                entity.Property(e => e.AcpUd11Bit).HasColumnName("ACP_UD11_BIT");

                entity.Property(e => e.AcpUd12Bit).HasColumnName("ACP_UD12_BIT");

                entity.Property(e => e.AcpUd13Bit).HasColumnName("ACP_UD13_BIT");

                entity.Property(e => e.AcpUd14Bit).HasColumnName("ACP_UD14_BIT");

                entity.Property(e => e.AcpUd15Bit).HasColumnName("ACP_UD15_BIT");

                entity.Property(e => e.AcpUd16Bit).HasColumnName("ACP_UD16_BIT");

                entity.Property(e => e.AcpUd17Bit).HasColumnName("ACP_UD17_BIT");

                entity.Property(e => e.AcpUd18Bit).HasColumnName("ACP_UD18_BIT");

                entity.Property(e => e.AcpUd19Bit).HasColumnName("ACP_UD19_BIT");

                entity.Property(e => e.AcpUd1Bit).HasColumnName("ACP_UD1_BIT");

                entity.Property(e => e.AcpUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACP_UD1_DATE");

                entity.Property(e => e.AcpUd1Id).HasColumnName("ACP_UD1_ID");

                entity.Property(e => e.AcpUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACP_UD1_NUMERIC");

                entity.Property(e => e.AcpUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACP_UD1_TEXT");

                entity.Property(e => e.AcpUd20Bit).HasColumnName("ACP_UD20_BIT");

                entity.Property(e => e.AcpUd21Bit).HasColumnName("ACP_UD21_BIT");

                entity.Property(e => e.AcpUd22Bit).HasColumnName("ACP_UD22_BIT");

                entity.Property(e => e.AcpUd23Bit).HasColumnName("ACP_UD23_BIT");

                entity.Property(e => e.AcpUd24Bit).HasColumnName("ACP_UD24_BIT");

                entity.Property(e => e.AcpUd2Bit).HasColumnName("ACP_UD2_BIT");

                entity.Property(e => e.AcpUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACP_UD2_DATE");

                entity.Property(e => e.AcpUd2Id).HasColumnName("ACP_UD2_ID");

                entity.Property(e => e.AcpUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACP_UD2_NUMERIC");

                entity.Property(e => e.AcpUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACP_UD2_TEXT");

                entity.Property(e => e.AcpUd3Bit).HasColumnName("ACP_UD3_BIT");

                entity.Property(e => e.AcpUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACP_UD3_DATE");

                entity.Property(e => e.AcpUd3Id).HasColumnName("ACP_UD3_ID");

                entity.Property(e => e.AcpUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACP_UD3_NUMERIC");

                entity.Property(e => e.AcpUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACP_UD3_TEXT");

                entity.Property(e => e.AcpUd4Bit).HasColumnName("ACP_UD4_BIT");

                entity.Property(e => e.AcpUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACP_UD4_DATE");

                entity.Property(e => e.AcpUd4Id).HasColumnName("ACP_UD4_ID");

                entity.Property(e => e.AcpUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACP_UD4_NUMERIC");

                entity.Property(e => e.AcpUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACP_UD4_TEXT");

                entity.Property(e => e.AcpUd5Bit).HasColumnName("ACP_UD5_BIT");

                entity.Property(e => e.AcpUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACP_UD5_DATE");

                entity.Property(e => e.AcpUd5Id).HasColumnName("ACP_UD5_ID");

                entity.Property(e => e.AcpUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACP_UD5_NUMERIC");

                entity.Property(e => e.AcpUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACP_UD5_TEXT");

                entity.Property(e => e.AcpUd6Bit).HasColumnName("ACP_UD6_BIT");

                entity.Property(e => e.AcpUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACP_UD6_DATE");

                entity.Property(e => e.AcpUd6Id).HasColumnName("ACP_UD6_ID");

                entity.Property(e => e.AcpUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACP_UD6_NUMERIC");

                entity.Property(e => e.AcpUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACP_UD6_TEXT");

                entity.Property(e => e.AcpUd7Bit).HasColumnName("ACP_UD7_BIT");

                entity.Property(e => e.AcpUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACP_UD7_DATE");

                entity.Property(e => e.AcpUd7Id).HasColumnName("ACP_UD7_ID");

                entity.Property(e => e.AcpUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACP_UD7_NUMERIC");

                entity.Property(e => e.AcpUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACP_UD7_TEXT");

                entity.Property(e => e.AcpUd8Bit).HasColumnName("ACP_UD8_BIT");

                entity.Property(e => e.AcpUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACP_UD8_DATE");

                entity.Property(e => e.AcpUd8Id).HasColumnName("ACP_UD8_ID");

                entity.Property(e => e.AcpUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACP_UD8_NUMERIC");

                entity.Property(e => e.AcpUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACP_UD8_TEXT");

                entity.Property(e => e.AcpUd9Bit).HasColumnName("ACP_UD9_BIT");

                entity.Property(e => e.AcpUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACP_UD9_DATE");

                entity.Property(e => e.AcpUd9Id).HasColumnName("ACP_UD9_ID");

                entity.Property(e => e.AcpUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACP_UD9_NUMERIC");

                entity.Property(e => e.AcpUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACP_UD9_TEXT");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.Label).HasColumnName("LABEL");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", true);

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'PRF-')");

                entity.Property(e => e.SitId).HasColumnName("SIT_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Type).HasColumnName("TYPE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.HasOne(d => d.Ac)
                    .WithMany(p => p.AccountsProfiles)
                    .HasForeignKey(d => d.AcId)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_ACCOUNTS_PROFILES_ACCOUNTS");

                entity.HasOne(d => d.Acc)
                    .WithMany(p => p.AccountsProfiles)
                    .HasForeignKey(d => d.AccId)
                    .HasConstraintName("FK_ACCOUNTS_PROFILES_ACCOUNTS_CONTACTS");
            });

            modelBuilder.Entity<AccountsValue>(entity =>
            {
                entity.HasKey(e => e.AcId)
                    .HasName("PK_ACCOUNT_VALUES");

                entity.ToTable("ACCOUNTS_VALUES");

                entity.HasIndex(e => e.Phone1Trim, "IX__ACV__PHONE_1_TRIM");

                entity.HasIndex(e => e.Phone2Trim, "IX__ACV__PHONE_2_TRIM");

                entity.HasIndex(e => e.Phone3Trim, "IX__ACV__PHONE_3_TRIM");

                entity.Property(e => e.AcId)
                    .ValueGeneratedNever()
                    .HasColumnName("AC_ID");

                entity.Property(e => e.AcFlag)
                    .HasMaxLength(255)
                    .HasColumnName("AC_FLAG");

                entity.Property(e => e.AcFlagHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_FLAG_HLIGHT");

                entity.Property(e => e.AcImport)
                    .HasMaxLength(255)
                    .HasColumnName("AC_IMPORT");

                entity.Property(e => e.AcUd10Bit).HasColumnName("AC_UD10_BIT");

                entity.Property(e => e.AcUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD10_DATE");

                entity.Property(e => e.AcUd10Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_ID");

                entity.Property(e => e.AcUd10IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD10_ID_HLIGHT");

                entity.Property(e => e.AcUd10Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD10_NUMERIC");

                entity.Property(e => e.AcUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_TEXT");

                entity.Property(e => e.AcUd11Bit).HasColumnName("AC_UD11_BIT");

                entity.Property(e => e.AcUd11Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD11_TEXT");

                entity.Property(e => e.AcUd12Bit).HasColumnName("AC_UD12_BIT");

                entity.Property(e => e.AcUd12Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD12_TEXT");

                entity.Property(e => e.AcUd13Bit).HasColumnName("AC_UD13_BIT");

                entity.Property(e => e.AcUd13Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD13_TEXT");

                entity.Property(e => e.AcUd14Bit).HasColumnName("AC_UD14_BIT");

                entity.Property(e => e.AcUd14Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD14_TEXT");

                entity.Property(e => e.AcUd15Bit).HasColumnName("AC_UD15_BIT");

                entity.Property(e => e.AcUd15Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD15_TEXT");

                entity.Property(e => e.AcUd16Bit).HasColumnName("AC_UD16_BIT");

                entity.Property(e => e.AcUd17Bit).HasColumnName("AC_UD17_BIT");

                entity.Property(e => e.AcUd18Bit).HasColumnName("AC_UD18_BIT");

                entity.Property(e => e.AcUd19Bit).HasColumnName("AC_UD19_BIT");

                entity.Property(e => e.AcUd1Bit).HasColumnName("AC_UD1_BIT");

                entity.Property(e => e.AcUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD1_DATE");

                entity.Property(e => e.AcUd1Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_ID");

                entity.Property(e => e.AcUd1IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD1_ID_HLIGHT");

                entity.Property(e => e.AcUd1Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD1_NUMERIC");

                entity.Property(e => e.AcUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_TEXT");

                entity.Property(e => e.AcUd20Bit).HasColumnName("AC_UD20_BIT");

                entity.Property(e => e.AcUd21Bit).HasColumnName("AC_UD21_BIT");

                entity.Property(e => e.AcUd22Bit).HasColumnName("AC_UD22_BIT");

                entity.Property(e => e.AcUd23Bit).HasColumnName("AC_UD23_BIT");

                entity.Property(e => e.AcUd24Bit).HasColumnName("AC_UD24_BIT");

                entity.Property(e => e.AcUd2Bit).HasColumnName("AC_UD2_BIT");

                entity.Property(e => e.AcUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD2_DATE");

                entity.Property(e => e.AcUd2Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_ID");

                entity.Property(e => e.AcUd2IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD2_ID_HLIGHT");

                entity.Property(e => e.AcUd2Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD2_NUMERIC");

                entity.Property(e => e.AcUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_TEXT");

                entity.Property(e => e.AcUd3Bit).HasColumnName("AC_UD3_BIT");

                entity.Property(e => e.AcUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD3_DATE");

                entity.Property(e => e.AcUd3Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_ID");

                entity.Property(e => e.AcUd3IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD3_ID_HLIGHT");

                entity.Property(e => e.AcUd3Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD3_NUMERIC");

                entity.Property(e => e.AcUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_TEXT");

                entity.Property(e => e.AcUd4Bit).HasColumnName("AC_UD4_BIT");

                entity.Property(e => e.AcUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD4_DATE");

                entity.Property(e => e.AcUd4Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_ID");

                entity.Property(e => e.AcUd4IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD4_ID_HLIGHT");

                entity.Property(e => e.AcUd4Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD4_NUMERIC");

                entity.Property(e => e.AcUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_TEXT");

                entity.Property(e => e.AcUd5Bit).HasColumnName("AC_UD5_BIT");

                entity.Property(e => e.AcUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD5_DATE");

                entity.Property(e => e.AcUd5Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_ID");

                entity.Property(e => e.AcUd5IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD5_ID_HLIGHT");

                entity.Property(e => e.AcUd5Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD5_NUMERIC");

                entity.Property(e => e.AcUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_TEXT");

                entity.Property(e => e.AcUd6Bit).HasColumnName("AC_UD6_BIT");

                entity.Property(e => e.AcUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD6_DATE");

                entity.Property(e => e.AcUd6Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_ID");

                entity.Property(e => e.AcUd6IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD6_ID_HLIGHT");

                entity.Property(e => e.AcUd6Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD6_NUMERIC");

                entity.Property(e => e.AcUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_TEXT");

                entity.Property(e => e.AcUd7Bit).HasColumnName("AC_UD7_BIT");

                entity.Property(e => e.AcUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD7_DATE");

                entity.Property(e => e.AcUd7Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_ID");

                entity.Property(e => e.AcUd7IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD7_ID_HLIGHT");

                entity.Property(e => e.AcUd7Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD7_NUMERIC");

                entity.Property(e => e.AcUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_TEXT");

                entity.Property(e => e.AcUd8Bit).HasColumnName("AC_UD8_BIT");

                entity.Property(e => e.AcUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD8_DATE");

                entity.Property(e => e.AcUd8Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_ID");

                entity.Property(e => e.AcUd8IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD8_ID_HLIGHT");

                entity.Property(e => e.AcUd8Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD8_NUMERIC");

                entity.Property(e => e.AcUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_TEXT");

                entity.Property(e => e.AcUd9Bit).HasColumnName("AC_UD9_BIT");

                entity.Property(e => e.AcUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD9_DATE");

                entity.Property(e => e.AcUd9Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_ID");

                entity.Property(e => e.AcUd9IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD9_ID_HLIGHT");

                entity.Property(e => e.AcUd9Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD9_NUMERIC");

                entity.Property(e => e.AcUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_TEXT");

                entity.Property(e => e.BillingPostcodeTrim)
                    .HasMaxLength(15)
                    .HasColumnName("BILLING_POSTCODE_TRIM");

                entity.Property(e => e.Import)
                    .HasMaxLength(255)
                    .HasColumnName("IMPORT");

                entity.Property(e => e.Industry)
                    .HasMaxLength(255)
                    .HasColumnName("INDUSTRY");

                entity.Property(e => e.IndustryHlight)
                    .HasMaxLength(100)
                    .HasColumnName("INDUSTRY_HLIGHT");

                entity.Property(e => e.Label)
                    .HasMaxLength(255)
                    .HasColumnName("LABEL");

                entity.Property(e => e.LabelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("LABEL_HLIGHT");

                entity.Property(e => e.Level)
                    .HasMaxLength(255)
                    .HasColumnName("LEVEL");

                entity.Property(e => e.LevelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("LEVEL_HLIGHT");

                entity.Property(e => e.Phone1Trim)
                    .HasMaxLength(15)
                    .HasColumnName("PHONE_1_TRIM");

                entity.Property(e => e.Phone2Trim)
                    .HasMaxLength(15)
                    .HasColumnName("PHONE_2_TRIM");

                entity.Property(e => e.Phone3Trim)
                    .HasMaxLength(15)
                    .HasColumnName("PHONE_3_TRIM");

                entity.Property(e => e.PostcodeTrim)
                    .HasMaxLength(15)
                    .HasColumnName("POSTCODE_TRIM");

                entity.Property(e => e.Reference)
                    .HasMaxLength(255)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.Source)
                    .HasMaxLength(255)
                    .HasColumnName("SOURCE");

                entity.Property(e => e.SourceHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SOURCE_HLIGHT");

                entity.Property(e => e.SummaryTrim)
                    .HasMaxLength(100)
                    .HasColumnName("SUMMARY_TRIM");

                entity.Property(e => e.Type1)
                    .HasMaxLength(255)
                    .HasColumnName("TYPE_1");

                entity.Property(e => e.Type1Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("TYPE_1_HLIGHT");

                entity.Property(e => e.Type2)
                    .HasMaxLength(255)
                    .HasColumnName("TYPE_2");

                entity.Property(e => e.Type2Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("TYPE_2_HLIGHT");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsIdSales)
                    .HasMaxLength(255)
                    .HasColumnName("US_ID_SALES");

                entity.Property(e => e.UsIdSupport)
                    .HasMaxLength(255)
                    .HasColumnName("US_ID_SUPPORT");

                entity.Property(e => e.WebsiteTrim)
                    .HasMaxLength(100)
                    .HasColumnName("WEBSITE_TRIM");

                entity.HasOne(d => d.Ac)
                    .WithOne(p => p.AccountsValue)
                    .HasForeignKey<AccountsValue>(d => d.AcId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ACCOUNTS_VALUES_ACCOUNTS");
            });

            modelBuilder.Entity<AcpBit>(entity =>
            {
                entity.ToTable("ACP_BIT");

                entity.Property(e => e.AcpBitId)
                    .ValueGeneratedNever()
                    .HasColumnName("ACP_BIT_ID");

                entity.HasOne(d => d.AcpBitNavigation)
                    .WithOne(p => p.AcpBit)
                    .HasForeignKey<AcpBit>(d => d.AcpBitId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ACP_BIT__ACP_BIT__454BBC62");
            });

            modelBuilder.Entity<AcpDate>(entity =>
            {
                entity.ToTable("ACP_DATE");

                entity.Property(e => e.AcpDateId)
                    .ValueGeneratedNever()
                    .HasColumnName("ACP_DATE_ID");

                entity.HasOne(d => d.AcpDateNavigation)
                    .WithOne(p => p.AcpDate)
                    .HasForeignKey<AcpDate>(d => d.AcpDateId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ACP_DATE__ACP_DA__4828290D");
            });

            modelBuilder.Entity<AcpMuid>(entity =>
            {
                entity.HasKey(e => e.AcpMuidId)
                    .IsClustered(false);

                entity.ToTable("ACP_MUID");

                entity.Property(e => e.AcpMuidId)
                    .ValueGeneratedNever()
                    .HasColumnName("ACP_MUID_ID");
            });

            modelBuilder.Entity<AcpMuidLink>(entity =>
            {
                entity.HasKey(e => new { e.AcpMuidId, e.DrId, e.DroId });

                entity.ToTable("ACP_MUID_LINKS");

                entity.Property(e => e.AcpMuidId).HasColumnName("ACP_MUID_ID");

                entity.Property(e => e.DrId).HasColumnName("DR_ID");

                entity.Property(e => e.DroId).HasColumnName("DRO_ID");
            });

            modelBuilder.Entity<AcpNum>(entity =>
            {
                entity.ToTable("ACP_NUM");

                entity.Property(e => e.AcpNumId)
                    .ValueGeneratedNever()
                    .HasColumnName("ACP_NUM_ID");

                entity.HasOne(d => d.AcpNumNavigation)
                    .WithOne(p => p.AcpNum)
                    .HasForeignKey<AcpNum>(d => d.AcpNumId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ACP_NUM__ACP_NUM__4DE10263");
            });

            modelBuilder.Entity<AcpTxt>(entity =>
            {
                entity.ToTable("ACP_TXT");

                entity.Property(e => e.AcpTxtId)
                    .ValueGeneratedNever()
                    .HasColumnName("ACP_TXT_ID");

                entity.HasOne(d => d.AcpTxtNavigation)
                    .WithOne(p => p.AcpTxt)
                    .HasForeignKey<AcpTxt>(d => d.AcpTxtId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ACP_TXT__ACP_TXT__426F4FB7");
            });

            modelBuilder.Entity<AcpUid>(entity =>
            {
                entity.ToTable("ACP_UID");

                entity.Property(e => e.AcpUidId)
                    .ValueGeneratedNever()
                    .HasColumnName("ACP_UID_ID");

                entity.HasOne(d => d.AcpUidNavigation)
                    .WithOne(p => p.AcpUid)
                    .HasForeignKey<AcpUid>(d => d.AcpUidId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ACP_UID__ACP_UID__4B0495B8");
            });

            modelBuilder.Entity<Activity>(entity =>
            {
                entity.HasKey(e => e.ActId);

                entity.ToTable("ACTIVITIES");

                entity.HasIndex(e => e.AccId, "IX_ACTIVITIES_ACC_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.AcId, "IX_ACTIVITIES_AC_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.CreatedDate, "IX_ACTIVITIES_CREATED_DATE")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.DueDate, "IX_ACTIVITIES_DUE_DATE")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.Complete, "IX_ACTIVITIES_HOTBAR")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => new { e.UsId, e.ShowOnCalendar }, "IX_ACTIVITIES_HOTBAR_1")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.OpId, "IX_ACTIVITIES_OP_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.ParentId, "IX_ACTIVITIES_PARENT_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.PjId, "IX_ACTIVITIES_PJ_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.SitId, "IX_ACTIVITIES_SIT_ID");

                entity.HasIndex(e => e.StartDate, "IX_ACTIVITIES_START_DATE")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.UsId, "IX_ACTIVITIES_US_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.ShortCode, "IX__ACTIVITIES__SHORT_CODE");

                entity.Property(e => e.ActId)
                    .ValueGeneratedNever()
                    .HasColumnName("ACT_ID");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcaUd10Bit).HasColumnName("ACA_UD10_BIT");

                entity.Property(e => e.AcaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD10_DATE");

                entity.Property(e => e.AcaUd10Id).HasColumnName("ACA_UD10_ID");

                entity.Property(e => e.AcaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD10_NUMERIC");

                entity.Property(e => e.AcaUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD10_TEXT");

                entity.Property(e => e.AcaUd1Bit).HasColumnName("ACA_UD1_BIT");

                entity.Property(e => e.AcaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD1_DATE");

                entity.Property(e => e.AcaUd1Id).HasColumnName("ACA_UD1_ID");

                entity.Property(e => e.AcaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD1_NUMERIC");

                entity.Property(e => e.AcaUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD1_TEXT");

                entity.Property(e => e.AcaUd2Bit).HasColumnName("ACA_UD2_BIT");

                entity.Property(e => e.AcaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD2_DATE");

                entity.Property(e => e.AcaUd2Id).HasColumnName("ACA_UD2_ID");

                entity.Property(e => e.AcaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD2_NUMERIC");

                entity.Property(e => e.AcaUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD2_TEXT");

                entity.Property(e => e.AcaUd3Bit).HasColumnName("ACA_UD3_BIT");

                entity.Property(e => e.AcaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD3_DATE");

                entity.Property(e => e.AcaUd3Id).HasColumnName("ACA_UD3_ID");

                entity.Property(e => e.AcaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD3_NUMERIC");

                entity.Property(e => e.AcaUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD3_TEXT");

                entity.Property(e => e.AcaUd4Bit).HasColumnName("ACA_UD4_BIT");

                entity.Property(e => e.AcaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD4_DATE");

                entity.Property(e => e.AcaUd4Id).HasColumnName("ACA_UD4_ID");

                entity.Property(e => e.AcaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD4_NUMERIC");

                entity.Property(e => e.AcaUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD4_TEXT");

                entity.Property(e => e.AcaUd5Bit).HasColumnName("ACA_UD5_BIT");

                entity.Property(e => e.AcaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD5_DATE");

                entity.Property(e => e.AcaUd5Id).HasColumnName("ACA_UD5_ID");

                entity.Property(e => e.AcaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD5_NUMERIC");

                entity.Property(e => e.AcaUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD5_TEXT");

                entity.Property(e => e.AcaUd6Bit).HasColumnName("ACA_UD6_BIT");

                entity.Property(e => e.AcaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD6_DATE");

                entity.Property(e => e.AcaUd6Id).HasColumnName("ACA_UD6_ID");

                entity.Property(e => e.AcaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD6_NUMERIC");

                entity.Property(e => e.AcaUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD6_TEXT");

                entity.Property(e => e.AcaUd7Bit).HasColumnName("ACA_UD7_BIT");

                entity.Property(e => e.AcaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD7_DATE");

                entity.Property(e => e.AcaUd7Id).HasColumnName("ACA_UD7_ID");

                entity.Property(e => e.AcaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD7_NUMERIC");

                entity.Property(e => e.AcaUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD7_TEXT");

                entity.Property(e => e.AcaUd8Bit).HasColumnName("ACA_UD8_BIT");

                entity.Property(e => e.AcaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD8_DATE");

                entity.Property(e => e.AcaUd8Id).HasColumnName("ACA_UD8_ID");

                entity.Property(e => e.AcaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD8_NUMERIC");

                entity.Property(e => e.AcaUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD8_TEXT");

                entity.Property(e => e.AcaUd9Bit).HasColumnName("ACA_UD9_BIT");

                entity.Property(e => e.AcaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD9_DATE");

                entity.Property(e => e.AcaUd9Id).HasColumnName("ACA_UD9_ID");

                entity.Property(e => e.AcaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD9_NUMERIC");

                entity.Property(e => e.AcaUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD9_TEXT");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccaNumber).HasColumnName("ACCA_NUMBER");

                entity.Property(e => e.AccaStage).HasColumnName("ACCA_STAGE");

                entity.Property(e => e.AccaUd10Bit).HasColumnName("ACCA_UD10_BIT");

                entity.Property(e => e.AccaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD10_DATE");

                entity.Property(e => e.AccaUd10Id).HasColumnName("ACCA_UD10_ID");

                entity.Property(e => e.AccaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD10_NUMERIC");

                entity.Property(e => e.AccaUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD10_TEXT");

                entity.Property(e => e.AccaUd1Bit).HasColumnName("ACCA_UD1_BIT");

                entity.Property(e => e.AccaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD1_DATE");

                entity.Property(e => e.AccaUd1Id).HasColumnName("ACCA_UD1_ID");

                entity.Property(e => e.AccaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD1_NUMERIC");

                entity.Property(e => e.AccaUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD1_TEXT");

                entity.Property(e => e.AccaUd2Bit).HasColumnName("ACCA_UD2_BIT");

                entity.Property(e => e.AccaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD2_DATE");

                entity.Property(e => e.AccaUd2Id).HasColumnName("ACCA_UD2_ID");

                entity.Property(e => e.AccaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD2_NUMERIC");

                entity.Property(e => e.AccaUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD2_TEXT");

                entity.Property(e => e.AccaUd3Bit).HasColumnName("ACCA_UD3_BIT");

                entity.Property(e => e.AccaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD3_DATE");

                entity.Property(e => e.AccaUd3Id).HasColumnName("ACCA_UD3_ID");

                entity.Property(e => e.AccaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD3_NUMERIC");

                entity.Property(e => e.AccaUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD3_TEXT");

                entity.Property(e => e.AccaUd4Bit).HasColumnName("ACCA_UD4_BIT");

                entity.Property(e => e.AccaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD4_DATE");

                entity.Property(e => e.AccaUd4Id).HasColumnName("ACCA_UD4_ID");

                entity.Property(e => e.AccaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD4_NUMERIC");

                entity.Property(e => e.AccaUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD4_TEXT");

                entity.Property(e => e.AccaUd5Bit).HasColumnName("ACCA_UD5_BIT");

                entity.Property(e => e.AccaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD5_DATE");

                entity.Property(e => e.AccaUd5Id).HasColumnName("ACCA_UD5_ID");

                entity.Property(e => e.AccaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD5_NUMERIC");

                entity.Property(e => e.AccaUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD5_TEXT");

                entity.Property(e => e.AccaUd6Bit).HasColumnName("ACCA_UD6_BIT");

                entity.Property(e => e.AccaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD6_DATE");

                entity.Property(e => e.AccaUd6Id).HasColumnName("ACCA_UD6_ID");

                entity.Property(e => e.AccaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD6_NUMERIC");

                entity.Property(e => e.AccaUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD6_TEXT");

                entity.Property(e => e.AccaUd7Bit).HasColumnName("ACCA_UD7_BIT");

                entity.Property(e => e.AccaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD7_DATE");

                entity.Property(e => e.AccaUd7Id).HasColumnName("ACCA_UD7_ID");

                entity.Property(e => e.AccaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD7_NUMERIC");

                entity.Property(e => e.AccaUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD7_TEXT");

                entity.Property(e => e.AccaUd8Bit).HasColumnName("ACCA_UD8_BIT");

                entity.Property(e => e.AccaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD8_DATE");

                entity.Property(e => e.AccaUd8Id).HasColumnName("ACCA_UD8_ID");

                entity.Property(e => e.AccaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD8_NUMERIC");

                entity.Property(e => e.AccaUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD8_TEXT");

                entity.Property(e => e.AccaUd9Bit).HasColumnName("ACCA_UD9_BIT");

                entity.Property(e => e.AccaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD9_DATE");

                entity.Property(e => e.AccaUd9Id).HasColumnName("ACCA_UD9_ID");

                entity.Property(e => e.AccaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD9_NUMERIC");

                entity.Property(e => e.AccaUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD9_TEXT");

                entity.Property(e => e.ActDeleted).HasColumnName("ACT_DELETED");

                entity.Property(e => e.ActExternal)
                    .HasMaxLength(255)
                    .HasColumnName("ACT_EXTERNAL");

                entity.Property(e => e.ActImport).HasColumnName("ACT_IMPORT");

                entity.Property(e => e.ActReadOnly).HasColumnName("ACT_READ_ONLY");

                entity.Property(e => e.ActivityType)
                    .HasMaxLength(50)
                    .HasColumnName("ACTIVITY_TYPE");

                entity.Property(e => e.ActualTime).HasColumnName("ACTUAL_TIME");

                entity.Property(e => e.ActualUnits).HasColumnName("ACTUAL_UNITS");

                entity.Property(e => e.BillingInformation)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_INFORMATION");

                entity.Property(e => e.Complete).HasColumnName("COMPLETE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DateCompleted)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_COMPLETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.DueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DUE_DATE");

                entity.Property(e => e.Duration)
                    .HasMaxLength(50)
                    .HasColumnName("DURATION");

                entity.Property(e => e.EstimatedTime).HasColumnName("ESTIMATED_TIME");

                entity.Property(e => e.EstimatedUnits).HasColumnName("ESTIMATED_UNITS");

                entity.Property(e => e.Exported).HasColumnName("EXPORTED");

                entity.Property(e => e.MacId).HasColumnName("MAC_ID");

                entity.Property(e => e.McrId).HasColumnName("MCR_ID");

                entity.Property(e => e.NtIdOutlook).HasColumnName("NT_ID_OUTLOOK");

                entity.Property(e => e.OpId).HasColumnName("OP_ID");

                entity.Property(e => e.OpaUd10Bit).HasColumnName("OPA_UD10_BIT");

                entity.Property(e => e.OpaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD10_DATE");

                entity.Property(e => e.OpaUd10Id).HasColumnName("OPA_UD10_ID");

                entity.Property(e => e.OpaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD10_NUMERIC");

                entity.Property(e => e.OpaUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD10_TEXT");

                entity.Property(e => e.OpaUd1Bit).HasColumnName("OPA_UD1_BIT");

                entity.Property(e => e.OpaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD1_DATE");

                entity.Property(e => e.OpaUd1Id).HasColumnName("OPA_UD1_ID");

                entity.Property(e => e.OpaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD1_NUMERIC");

                entity.Property(e => e.OpaUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD1_TEXT");

                entity.Property(e => e.OpaUd2Bit).HasColumnName("OPA_UD2_BIT");

                entity.Property(e => e.OpaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD2_DATE");

                entity.Property(e => e.OpaUd2Id).HasColumnName("OPA_UD2_ID");

                entity.Property(e => e.OpaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD2_NUMERIC");

                entity.Property(e => e.OpaUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD2_TEXT");

                entity.Property(e => e.OpaUd3Bit).HasColumnName("OPA_UD3_BIT");

                entity.Property(e => e.OpaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD3_DATE");

                entity.Property(e => e.OpaUd3Id).HasColumnName("OPA_UD3_ID");

                entity.Property(e => e.OpaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD3_NUMERIC");

                entity.Property(e => e.OpaUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD3_TEXT");

                entity.Property(e => e.OpaUd4Bit).HasColumnName("OPA_UD4_BIT");

                entity.Property(e => e.OpaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD4_DATE");

                entity.Property(e => e.OpaUd4Id).HasColumnName("OPA_UD4_ID");

                entity.Property(e => e.OpaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD4_NUMERIC");

                entity.Property(e => e.OpaUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD4_TEXT");

                entity.Property(e => e.OpaUd5Bit).HasColumnName("OPA_UD5_BIT");

                entity.Property(e => e.OpaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD5_DATE");

                entity.Property(e => e.OpaUd5Id).HasColumnName("OPA_UD5_ID");

                entity.Property(e => e.OpaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD5_NUMERIC");

                entity.Property(e => e.OpaUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD5_TEXT");

                entity.Property(e => e.OpaUd6Bit).HasColumnName("OPA_UD6_BIT");

                entity.Property(e => e.OpaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD6_DATE");

                entity.Property(e => e.OpaUd6Id).HasColumnName("OPA_UD6_ID");

                entity.Property(e => e.OpaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD6_NUMERIC");

                entity.Property(e => e.OpaUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD6_TEXT");

                entity.Property(e => e.OpaUd7Bit).HasColumnName("OPA_UD7_BIT");

                entity.Property(e => e.OpaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD7_DATE");

                entity.Property(e => e.OpaUd7Id).HasColumnName("OPA_UD7_ID");

                entity.Property(e => e.OpaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD7_NUMERIC");

                entity.Property(e => e.OpaUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD7_TEXT");

                entity.Property(e => e.OpaUd8Bit).HasColumnName("OPA_UD8_BIT");

                entity.Property(e => e.OpaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD8_DATE");

                entity.Property(e => e.OpaUd8Id).HasColumnName("OPA_UD8_ID");

                entity.Property(e => e.OpaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD8_NUMERIC");

                entity.Property(e => e.OpaUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD8_TEXT");

                entity.Property(e => e.OpaUd9Bit).HasColumnName("OPA_UD9_BIT");

                entity.Property(e => e.OpaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD9_DATE");

                entity.Property(e => e.OpaUd9Id).HasColumnName("OPA_UD9_ID");

                entity.Property(e => e.OpaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD9_NUMERIC");

                entity.Property(e => e.OpaUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD9_TEXT");

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.PercentComplete).HasColumnName("PERCENT_COMPLETE");

                entity.Property(e => e.PjId).HasColumnName("PJ_ID");

                entity.Property(e => e.PjaUd10Bit).HasColumnName("PJA_UD10_BIT");

                entity.Property(e => e.PjaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD10_DATE");

                entity.Property(e => e.PjaUd10Id).HasColumnName("PJA_UD10_ID");

                entity.Property(e => e.PjaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD10_NUMERIC");

                entity.Property(e => e.PjaUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD10_TEXT");

                entity.Property(e => e.PjaUd1Bit).HasColumnName("PJA_UD1_BIT");

                entity.Property(e => e.PjaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD1_DATE");

                entity.Property(e => e.PjaUd1Id).HasColumnName("PJA_UD1_ID");

                entity.Property(e => e.PjaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD1_NUMERIC");

                entity.Property(e => e.PjaUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD1_TEXT");

                entity.Property(e => e.PjaUd2Bit).HasColumnName("PJA_UD2_BIT");

                entity.Property(e => e.PjaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD2_DATE");

                entity.Property(e => e.PjaUd2Id).HasColumnName("PJA_UD2_ID");

                entity.Property(e => e.PjaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD2_NUMERIC");

                entity.Property(e => e.PjaUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD2_TEXT");

                entity.Property(e => e.PjaUd3Bit).HasColumnName("PJA_UD3_BIT");

                entity.Property(e => e.PjaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD3_DATE");

                entity.Property(e => e.PjaUd3Id).HasColumnName("PJA_UD3_ID");

                entity.Property(e => e.PjaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD3_NUMERIC");

                entity.Property(e => e.PjaUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD3_TEXT");

                entity.Property(e => e.PjaUd4Bit).HasColumnName("PJA_UD4_BIT");

                entity.Property(e => e.PjaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD4_DATE");

                entity.Property(e => e.PjaUd4Id).HasColumnName("PJA_UD4_ID");

                entity.Property(e => e.PjaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD4_NUMERIC");

                entity.Property(e => e.PjaUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD4_TEXT");

                entity.Property(e => e.PjaUd5Bit).HasColumnName("PJA_UD5_BIT");

                entity.Property(e => e.PjaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD5_DATE");

                entity.Property(e => e.PjaUd5Id).HasColumnName("PJA_UD5_ID");

                entity.Property(e => e.PjaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD5_NUMERIC");

                entity.Property(e => e.PjaUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD5_TEXT");

                entity.Property(e => e.PjaUd6Bit).HasColumnName("PJA_UD6_BIT");

                entity.Property(e => e.PjaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD6_DATE");

                entity.Property(e => e.PjaUd6Id).HasColumnName("PJA_UD6_ID");

                entity.Property(e => e.PjaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD6_NUMERIC");

                entity.Property(e => e.PjaUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD6_TEXT");

                entity.Property(e => e.PjaUd7Bit).HasColumnName("PJA_UD7_BIT");

                entity.Property(e => e.PjaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD7_DATE");

                entity.Property(e => e.PjaUd7Id).HasColumnName("PJA_UD7_ID");

                entity.Property(e => e.PjaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD7_NUMERIC");

                entity.Property(e => e.PjaUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD7_TEXT");

                entity.Property(e => e.PjaUd8Bit).HasColumnName("PJA_UD8_BIT");

                entity.Property(e => e.PjaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD8_DATE");

                entity.Property(e => e.PjaUd8Id).HasColumnName("PJA_UD8_ID");

                entity.Property(e => e.PjaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD8_NUMERIC");

                entity.Property(e => e.PjaUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD8_TEXT");

                entity.Property(e => e.PjaUd9Bit).HasColumnName("PJA_UD9_BIT");

                entity.Property(e => e.PjaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD9_DATE");

                entity.Property(e => e.PjaUd9Id).HasColumnName("PJA_UD9_ID");

                entity.Property(e => e.PjaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD9_NUMERIC");

                entity.Property(e => e.PjaUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD9_TEXT");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", true);

                entity.Property(e => e.Priority).HasColumnName("PRIORITY");

                entity.Property(e => e.Private).HasColumnName("PRIVATE");

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.Reminder).HasColumnName("REMINDER");

                entity.Property(e => e.ReminderAlerted).HasColumnName("REMINDER_ALERTED");

                entity.Property(e => e.ReminderMinutes).HasColumnName("REMINDER_MINUTES");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.Sensitivity).HasColumnName("SENSITIVITY");

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX");

                entity.Property(e => e.ShowOnCalendar).HasColumnName("SHOW_ON_CALENDAR");

                entity.Property(e => e.SitId).HasColumnName("SIT_ID");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("START_DATE");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.StgId).HasColumnName("STG_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.SyncUpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYNC_UPDATED_DATE");

                entity.Property(e => e.Type).HasColumnName("TYPE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.HasOne(d => d.Ac)
                    .WithMany(p => p.Activities)
                    .HasForeignKey(d => d.AcId)
                    .HasConstraintName("FK_ACTIVITIES_ACCOUNTS");

                entity.HasOne(d => d.Acc)
                    .WithMany(p => p.Activities)
                    .HasForeignKey(d => d.AccId)
                    .HasConstraintName("FK_ACTIVITIES_ACCOUNTS_CONTACTS");

                entity.HasOne(d => d.Mac)
                    .WithMany(p => p.Activities)
                    .HasForeignKey(d => d.MacId)
                    .HasConstraintName("FK_ACTIVITIES_MAIL_CAMPAIGNS");

                entity.HasOne(d => d.Sit)
                    .WithMany(p => p.Activities)
                    .HasForeignKey(d => d.SitId)
                    .HasConstraintName("FK_ACTIVITIES_SITES");

                entity.HasOne(d => d.Us)
                    .WithMany(p => p.Activities)
                    .HasForeignKey(d => d.UsId)
                    .HasConstraintName("FK_ACTIVITIES_USERS");
            });

            modelBuilder.Entity<AdditionalField>(entity =>
            {
                entity.ToTable("ADDITIONAL_FIELDS", "Portal");

                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<AdditionalFieldsConfiguration>(entity =>
            {
                entity.ToTable("ADDITIONAL_FIELDS_CONFIGURATION", "Portal");

                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Configuration).IsRequired();

                entity.HasOne(d => d.Area)
                    .WithMany(p => p.AdditionalFieldsConfigurations)
                    .HasForeignKey(d => d.AreaId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ADDITIONAL_FIELDS_CONFIGURATION__AREA_ID__AREAS__AREA_ID");

                entity.HasOne(d => d.Field)
                    .WithMany(p => p.AdditionalFieldsConfigurations)
                    .HasForeignKey(d => d.FieldId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ADDITIONAL_FIELDS_CONFIGURATION__FIELD_ID__ADDITIONAL_FIELDS__ID");
            });

            modelBuilder.Entity<AddressGroup>(entity =>
            {
                entity.ToTable("ADDRESS_GROUPS");

                entity.Property(e => e.AddressGroupId)
                    .HasColumnName("ADDRESS_GROUP_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.LinkedSiteLfdId).HasColumnName("LINKED_SITE_LFD_ID");
            });

            modelBuilder.Entity<AddressLine>(entity =>
            {
                entity.HasKey(e => e.LegacyFieldId)
                    .HasName("PK__ADDRESS___E47FB02DE771A1CD");

                entity.ToTable("ADDRESS_LINES");

                entity.Property(e => e.LegacyFieldId)
                    .ValueGeneratedNever()
                    .HasColumnName("LEGACY_FIELD_ID");

                entity.Property(e => e.AddressGroupId).HasColumnName("ADDRESS_GROUP_ID");

                entity.Property(e => e.AddressLineType).HasColumnName("ADDRESS_LINE_TYPE");

                entity.HasOne(d => d.AddressGroup)
                    .WithMany(p => p.AddressLines)
                    .HasForeignKey(d => d.AddressGroupId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ADDRESS_L__ADDRE__7AAB1DE7");
            });

            modelBuilder.Entity<Agreement>(entity =>
            {
                entity.HasKey(e => e.AgrId)
                    .HasName("PK_AGGREMENTS");

                entity.ToTable("AGREEMENTS");

                entity.Property(e => e.AgrId)
                    .HasColumnName("AGR_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AcpId).HasColumnName("ACP_ID");

                entity.Property(e => e.ActId).HasColumnName("ACT_ID");

                entity.Property(e => e.AgrDeleted).HasColumnName("AGR_DELETED");

                entity.Property(e => e.AgreementCancelled).HasColumnName("AGREEMENT_CANCELLED");

                entity.Property(e => e.AgreementDocumentFolder)
                    .IsRequired()
                    .HasMaxLength(2000)
                    .HasColumnName("AGREEMENT_DOCUMENT_FOLDER");

                entity.Property(e => e.AgreementDocumentName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("AGREEMENT_DOCUMENT_NAME");

                entity.Property(e => e.AgreementName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("AGREEMENT_NAME");

                entity.Property(e => e.AgreementProvider).HasColumnName("AGREEMENT_PROVIDER");

                entity.Property(e => e.AgreementStatus).HasColumnName("AGREEMENT_STATUS");

                entity.Property(e => e.CancelledBy)
                    .HasMaxLength(255)
                    .HasColumnName("CANCELLED_BY");

                entity.Property(e => e.CancelledDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CANCELLED_DATE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.DocId).HasColumnName("DOC_ID");

                entity.Property(e => e.DocfId).HasColumnName("DOCF_ID");

                entity.Property(e => e.ExternalSocId).HasColumnName("EXTERNAL_SOC_ID");

                entity.Property(e => e.IsDownloaded).HasColumnName("IS_DOWNLOADED");

                entity.Property(e => e.IsPortalAgreement).HasColumnName("IS_PORTAL_AGREEMENT");

                entity.Property(e => e.OpId).HasColumnName("OP_ID");

                entity.Property(e => e.OpqId).HasColumnName("OPQ_ID");

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.PjId).HasColumnName("PJ_ID");

                entity.Property(e => e.ProviderId)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("PROVIDER_ID");

                entity.Property(e => e.ProviderLink)
                    .HasMaxLength(255)
                    .HasColumnName("PROVIDER_LINK")
                    .IsFixedLength(true);

                entity.Property(e => e.ProviderStatus)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("PROVIDER_STATUS");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.SembId).HasColumnName("SEMB_ID");

                entity.Property(e => e.SembaId).HasColumnName("SEMBA_ID");

                entity.Property(e => e.SemsId).HasColumnName("SEMS_ID");

                entity.Property(e => e.SemsaId).HasColumnName("SEMSA_ID");

                entity.Property(e => e.SiId).HasColumnName("SI_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsaId).HasColumnName("USA_ID");

                entity.HasOne(d => d.Ac)
                    .WithMany(p => p.Agreements)
                    .HasForeignKey(d => d.AcId)
                    .HasConstraintName("FK_AGREEMENTS_ACCOUNTS");

                entity.HasOne(d => d.Acc)
                    .WithMany(p => p.Agreements)
                    .HasForeignKey(d => d.AccId)
                    .HasConstraintName("FK_AGREEMENTS_CONTACTS");

                entity.HasOne(d => d.Acp)
                    .WithMany(p => p.Agreements)
                    .HasForeignKey(d => d.AcpId)
                    .HasConstraintName("FK_AGREEMENTS_ACCOUNTS_PROFILES");

                entity.HasOne(d => d.Act)
                    .WithMany(p => p.Agreements)
                    .HasForeignKey(d => d.ActId)
                    .HasConstraintName("FK_AGREEMENTS_ACTIVITIES");

                entity.HasOne(d => d.Doc)
                    .WithMany(p => p.Agreements)
                    .HasForeignKey(d => d.DocId)
                    .HasConstraintName("FK_AGREEMENTS_DOCUMENTS");

                entity.HasOne(d => d.Docf)
                    .WithMany(p => p.Agreements)
                    .HasForeignKey(d => d.DocfId)
                    .HasConstraintName("DOCF_ID");

                entity.HasOne(d => d.Op)
                    .WithMany(p => p.Agreements)
                    .HasForeignKey(d => d.OpId)
                    .HasConstraintName("FK_AGREEMENTS_OPPORTUNITIES");

                entity.HasOne(d => d.Opq)
                    .WithMany(p => p.Agreements)
                    .HasForeignKey(d => d.OpqId)
                    .HasConstraintName("FK_AGREEMENTS_OPPORTUNITIES_QUOTES");

                entity.HasOne(d => d.Pj)
                    .WithMany(p => p.Agreements)
                    .HasForeignKey(d => d.PjId)
                    .HasConstraintName("FK_AGREEMENTS_PROJECTS");

                entity.HasOne(d => d.Sem)
                    .WithMany(p => p.Agreements)
                    .HasForeignKey(d => d.SemId)
                    .HasConstraintName("FK_AGREEMENTS_SEMINARS");

                entity.HasOne(d => d.Semb)
                    .WithMany(p => p.Agreements)
                    .HasForeignKey(d => d.SembId)
                    .HasConstraintName("FK_AGREEMENTS_SEMINARS_BOOKINGS");

                entity.HasOne(d => d.Semba)
                    .WithMany(p => p.Agreements)
                    .HasForeignKey(d => d.SembaId)
                    .HasConstraintName("FK_AGREEMENTS_SEMINARS_BOOKINGS_ATTENDEES");

                entity.HasOne(d => d.Sems)
                    .WithMany(p => p.Agreements)
                    .HasForeignKey(d => d.SemsId)
                    .HasConstraintName("FK_AGREEMENTS_SEMINARS_SESSIONS");

                entity.HasOne(d => d.Semsa)
                    .WithMany(p => p.Agreements)
                    .HasForeignKey(d => d.SemsaId)
                    .HasConstraintName("FK_AGREEMENTS_SEMINARS_SESSIONS_ATTENDEES");

                entity.HasOne(d => d.Si)
                    .WithMany(p => p.Agreements)
                    .HasForeignKey(d => d.SiId)
                    .HasConstraintName("FK_AGREEMENTS_INTEGRATIONS");

                entity.HasOne(d => d.Us)
                    .WithMany(p => p.Agreements)
                    .HasForeignKey(d => d.UsId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_AGREEMENTS_USERS");

                entity.HasOne(d => d.Usa)
                    .WithMany(p => p.Agreements)
                    .HasForeignKey(d => d.UsaId)
                    .HasConstraintName("FK_AGREEMENTS_USERS_APPOINTMENTS");
            });

            modelBuilder.Entity<Alert>(entity =>
            {
                entity.HasKey(e => e.AlId);

                entity.ToTable("ALERTS");

                entity.HasIndex(e => new { e.UsId, e.ActionType, e.AlertStatus, e.DueDate }, "IX_ALERTS_HOTBAR");

                entity.HasIndex(e => e.AtId, "IX__ALERTS__AT_ID__INCLS");

                entity.HasIndex(e => new { e.AlertStatus, e.AtId }, "IX__ALERTS__AT_ID__INCLS_ALERT_STATUS_OBJ_ID_CREATED_DATE");

                entity.HasIndex(e => e.ObjId, "IX__ALERTS__OBJ_ID");

                entity.Property(e => e.AlId)
                    .ValueGeneratedNever()
                    .HasColumnName("AL_ID");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.ActionOptions).HasColumnName("ACTION_OPTIONS");

                entity.Property(e => e.ActionType).HasColumnName("ACTION_TYPE");

                entity.Property(e => e.AlDeleted).HasColumnName("AL_DELETED");

                entity.Property(e => e.AlertStatus).HasColumnName("ALERT_STATUS");

                entity.Property(e => e.AtId).HasColumnName("AT_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.DismissedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DISMISSED_BY");

                entity.Property(e => e.DismissedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DISMISSED_DATE");

                entity.Property(e => e.DueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DUE_DATE")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.EmailAddress)
                    .HasMaxLength(255)
                    .HasColumnName("EMAIL_ADDRESS");

                entity.Property(e => e.EmailBody)
                    .HasColumnType("text")
                    .HasColumnName("EMAIL_BODY");

                entity.Property(e => e.EmailSubject)
                    .HasMaxLength(255)
                    .HasColumnName("EMAIL_SUBJECT");

                entity.Property(e => e.EmailType).HasColumnName("EMAIL_TYPE");

                entity.Property(e => e.JobId).HasColumnName("JOB_ID");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.ParentSummary)
                    .HasMaxLength(255)
                    .HasColumnName("PARENT_SUMMARY");

                entity.Property(e => e.ParentType)
                    .HasMaxLength(255)
                    .HasColumnName("PARENT_TYPE");

                entity.Property(e => e.SmtpFrom)
                    .HasMaxLength(100)
                    .HasColumnName("SMTP_FROM");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");

                entity.HasOne(d => d.Us)
                    .WithMany(p => p.Alerts)
                    .HasForeignKey(d => d.UsId)
                    .HasConstraintName("FK_ALERTS_USERS");

                entity.HasOne(d => d.Usg)
                    .WithMany(p => p.Alerts)
                    .HasForeignKey(d => d.UsgId)
                    .HasConstraintName("FK_ALERTS_USERS_GROUPS");
            });

            modelBuilder.Entity<AlertLabel>(entity =>
            {
                entity.HasKey(e => new { e.AlertDefFilename, e.LangId });

                entity.ToTable("ALERT_LABELS");

                entity.Property(e => e.AlertDefFilename)
                    .HasMaxLength(255)
                    .HasColumnName("ALERT_DEF_FILENAME");

                entity.Property(e => e.LangId).HasColumnName("LANG_ID");

                entity.Property(e => e.Description)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.Group)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("GROUP");

                entity.Property(e => e.LabelId).HasColumnName("LABEL_ID");

                entity.Property(e => e.LastUpdated)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_UPDATED")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Title)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("TITLE");

                entity.HasOne(d => d.Lang)
                    .WithMany(p => p.AlertLabels)
                    .HasForeignKey(d => d.LangId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ALERT_LABELS_LANGUAGES");
            });

            modelBuilder.Entity<AlertTrace>(entity =>
            {
                entity.HasKey(e => e.AeId);

                entity.ToTable("ALERT_TRACE");

                entity.Property(e => e.AeId)
                    .ValueGeneratedNever()
                    .HasColumnName("AE_ID");

                entity.Property(e => e.AlId).HasColumnName("AL_ID");

                entity.Property(e => e.AlertDescription)
                    .HasMaxLength(255)
                    .HasColumnName("ALERT_DESCRIPTION");

                entity.Property(e => e.AlertTitle)
                    .HasMaxLength(255)
                    .HasColumnName("ALERT_TITLE");

                entity.Property(e => e.AlertType)
                    .HasMaxLength(255)
                    .HasColumnName("ALERT_TYPE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.ObjectSummary)
                    .HasMaxLength(255)
                    .HasColumnName("OBJECT_SUMMARY");

                entity.Property(e => e.ObjectType)
                    .HasMaxLength(50)
                    .HasColumnName("OBJECT_TYPE");

                entity.Property(e => e.State).HasColumnName("STATE");
            });

            modelBuilder.Entity<AppliedXmlPoke>(entity =>
            {
                entity.HasKey(e => e.PokeId)
                    .HasName("PK__APPLIED_XML_POKES");

                entity.ToTable("APPLIED_XML_POKES");

                entity.Property(e => e.PokeId)
                    .ValueGeneratedNever()
                    .HasColumnName("POKE_ID");

                entity.Property(e => e.DateApplied)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_APPLIED");
            });

            modelBuilder.Entity<Area>(entity =>
            {
                entity.ToTable("AREAS", "Portal");

                entity.Property(e => e.AreaId)
                    .ValueGeneratedNever()
                    .HasColumnName("AREA_ID");

                entity.Property(e => e.AreaName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("AREA_NAME");

                entity.Property(e => e.Created).HasColumnName("CREATED");

                entity.Property(e => e.Deleted).HasColumnName("DELETED");

                entity.Property(e => e.IsHidden).HasColumnName("IS_HIDDEN");

                entity.Property(e => e.IsMenuPage).HasColumnName("IS_MENU_PAGE");

                entity.Property(e => e.LastSaved)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_SAVED");

                entity.Property(e => e.MenuTitle)
                    .HasMaxLength(255)
                    .HasColumnName("MENU_TITLE");

                entity.Property(e => e.ModuleId).HasColumnName("MODULE_ID");

                entity.Property(e => e.Order)
                    .HasColumnName("ORDER")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.RedirectFromParent).HasColumnName("REDIRECT_FROM_PARENT");

                entity.Property(e => e.RequiresDeleting).HasColumnName("REQUIRES_DELETING");

                entity.Property(e => e.ShowMenu).HasColumnName("SHOW_MENU");

                entity.Property(e => e.SpaceId).HasColumnName("SPACE_ID");

                entity.Property(e => e.Type).HasColumnName("TYPE");

                entity.HasOne(d => d.Module)
                    .WithMany(p => p.Areas)
                    .HasForeignKey(d => d.ModuleId)
                    .HasConstraintName("FK__AREAS__MODULE_ID__4F145267");
            });

            modelBuilder.Entity<AreaCreateRole>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("AREA_CREATE_ROLES", "Portal");

                entity.Property(e => e.AreaId).HasColumnName("AREA_ID");

                entity.Property(e => e.RoleId).HasColumnName("ROLE_ID");
            });

            modelBuilder.Entity<AreaEditRole>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("AREA_EDIT_ROLES", "Portal");

                entity.Property(e => e.AreaId).HasColumnName("AREA_ID");

                entity.Property(e => e.RoleId).HasColumnName("ROLE_ID");
            });

            modelBuilder.Entity<AreaRole>(entity =>
            {
                entity.HasKey(e => e.SrId);

                entity.ToTable("AREA_ROLES", "Portal");

                entity.Property(e => e.SrId)
                    .ValueGeneratedNever()
                    .HasColumnName("SR_ID");

                entity.Property(e => e.AreaId).HasColumnName("AREA_ID");

                entity.Property(e => e.RId).HasColumnName("R_ID");

                entity.HasOne(d => d.Area)
                    .WithMany(p => p.AreaRoles)
                    .HasForeignKey(d => d.AreaId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_AREA_ROLES_AREAS");

                entity.HasOne(d => d.RIdNavigation)
                    .WithMany(p => p.AreaRoles)
                    .HasForeignKey(d => d.RId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_AREA_ROLES_ROLES");
            });

            modelBuilder.Entity<AreaType>(entity =>
            {
                entity.HasKey(e => e.AreaType1);

                entity.ToTable("AREA_TYPES", "Portal");

                entity.Property(e => e.AreaType1)
                    .ValueGeneratedNever()
                    .HasColumnName("AREA_TYPE");

                entity.Property(e => e.Description)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.Enabled).HasColumnName("ENABLED");
            });

            modelBuilder.Entity<AreaVersion>(entity =>
            {
                entity.HasKey(e => new { e.VersionId, e.AreaId });

                entity.ToTable("AREA_VERSIONS", "Portal");

                entity.Property(e => e.VersionId).HasColumnName("VERSION_ID");

                entity.Property(e => e.AreaId).HasColumnName("AREA_ID");

                entity.Property(e => e.AreaName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("AREA_NAME");

                entity.Property(e => e.IsHidden).HasColumnName("IS_HIDDEN");

                entity.Property(e => e.SpaceId).HasColumnName("SPACE_ID");

                entity.Property(e => e.Type).HasColumnName("TYPE");
            });

            modelBuilder.Entity<AvailableComponent>(entity =>
            {
                entity.ToTable("AVAILABLE_COMPONENTS", "install");

                entity.Property(e => e.AvailableComponentId)
                    .ValueGeneratedNever()
                    .HasColumnName("AVAILABLE_COMPONENT_ID");

                entity.Property(e => e.DefaultTitle)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("DEFAULT_TITLE")
                    .UseCollation("Latin1_General_CI_AS");

                entity.Property(e => e.EnabledOnLandingPage).HasColumnName("ENABLED_ON_LANDING_PAGE");

                entity.Property(e => e.ImagePath)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("IMAGE_PATH")
                    .UseCollation("Latin1_General_CI_AS");

                entity.Property(e => e.Type).HasColumnName("TYPE");
            });

            modelBuilder.Entity<AvailableComponent1>(entity =>
            {
                entity.HasKey(e => e.AvailableComponentId);

                entity.ToTable("AVAILABLE_COMPONENTS", "Portal");

                entity.Property(e => e.AvailableComponentId)
                    .ValueGeneratedNever()
                    .HasColumnName("AVAILABLE_COMPONENT_ID");

                entity.Property(e => e.DefaultTitle)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("DEFAULT_TITLE");

                entity.Property(e => e.EnabledOnLandingPage).HasColumnName("ENABLED_ON_LANDING_PAGE");

                entity.Property(e => e.ImagePath)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("IMAGE_PATH");

                entity.Property(e => e.Type).HasColumnName("TYPE");
            });

            modelBuilder.Entity<BulkChangeJob>(entity =>
            {
                entity.HasKey(e => e.BlcId);

                entity.ToTable("BULK_CHANGE_JOBS");

                entity.Property(e => e.BlcId)
                    .HasColumnName("BLC_ID")
                    .HasDefaultValueSql("(newsequentialid())");

                entity.Property(e => e.Created)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DatabaseColumnName)
                    .HasMaxLength(500)
                    .HasColumnName("DATABASE_COLUMN_NAME");

                entity.Property(e => e.JobType).HasColumnName("JOB_TYPE");

                entity.Property(e => e.Modifier)
                    .HasColumnName("MODIFIER")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Processed).HasColumnName("PROCESSED");

                entity.Property(e => e.ReqId).HasColumnName("REQ_ID");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TagIds).HasMaxLength(2000);

                entity.Property(e => e.TargetFieldId).HasColumnName("TARGET_FIELD_ID");

                entity.Property(e => e.Total).HasColumnName("TOTAL");

                entity.Property(e => e.UserId).HasColumnName("USER_ID");

                entity.Property(e => e.Value).HasColumnName("VALUE");
            });

            modelBuilder.Entity<CalPermission>(entity =>
            {
                entity.HasKey(e => new { e.UsId, e.UsgId });

                entity.ToTable("CAL_PERMISSIONS");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");

                entity.Property(e => e.CreateEdit).HasColumnName("CREATE_EDIT");

                entity.Property(e => e.ThirdPartyRead).HasColumnName("THIRD_PARTY_READ");
            });

            modelBuilder.Entity<CallLog>(entity =>
            {
                entity.HasKey(e => e.CllId);

                entity.ToTable("CALL_LOG");

                entity.HasIndex(e => e.AccId, "IX_CALL_LOG_ACC_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.AcId, "IX_CALL_LOG_AC_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.CreatedDate, "IX_CALL_LOG_CREATED_DATE")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.UsId, "IX_CALL_LOG_US_ID")
                    .HasFillFactor((byte)80);

                entity.Property(e => e.CllId)
                    .ValueGeneratedNever()
                    .HasColumnName("CLL_ID");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Duration).HasColumnName("DURATION");

                entity.Property(e => e.Incomming).HasColumnName("INCOMMING");

                entity.Property(e => e.Number)
                    .HasMaxLength(255)
                    .HasColumnName("NUMBER");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.Type)
                    .HasMaxLength(255)
                    .HasColumnName("TYPE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.HasOne(d => d.Ac)
                    .WithMany(p => p.CallLogs)
                    .HasForeignKey(d => d.AcId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALL_LOG_ACCOUNTS");

                entity.HasOne(d => d.Acc)
                    .WithMany(p => p.CallLogs)
                    .HasForeignKey(d => d.AccId)
                    .HasConstraintName("FK_CALL_LOG_ACCOUNTS_CONTACTS");

                entity.HasOne(d => d.Us)
                    .WithMany(p => p.CallLogs)
                    .HasForeignKey(d => d.UsId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALL_LOG_USERS");
            });

            modelBuilder.Entity<CampaignTypeUnsubscribe>(entity =>
            {
                entity.HasKey(e => e.CtuId);

                entity.ToTable("CAMPAIGN_TYPE_UNSUBSCRIBES");

                entity.Property(e => e.CtuId)
                    .ValueGeneratedNever()
                    .HasColumnName("CTU_ID");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CsId).HasColumnName("CS_ID");

                entity.Property(e => e.MacType).HasColumnName("MAC_TYPE");

                entity.Property(e => e.OptionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OPTION_DATE");

                entity.Property(e => e.Subscribed).HasColumnName("SUBSCRIBED");
            });

            modelBuilder.Entity<Canary>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CANARY", "can");

                entity.Property(e => e.LastUpdate).HasColumnType("datetime");
            });

            modelBuilder.Entity<Code>(entity =>
            {
                entity.HasKey(e => e.CodId);

                entity.ToTable("CODES");

                entity.Property(e => e.CodId)
                    .HasColumnName("COD_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.AcoId).HasColumnName("ACO_ID");

                entity.Property(e => e.AcoId2).HasColumnName("ACO_ID2");

                entity.Property(e => e.AppendSummary).HasColumnName("APPEND_SUMMARY");

                entity.Property(e => e.CreateOnInsert).HasColumnName("CREATE_ON_INSERT");

                entity.Property(e => e.Expression)
                    .HasMaxLength(50)
                    .HasColumnName("EXPRESSION");

                entity.Property(e => e.Optional).HasColumnName("OPTIONAL");

                entity.Property(e => e.Ref)
                    .HasMaxLength(50)
                    .HasColumnName("REF");

                entity.Property(e => e.Seed).HasColumnName("SEED");

                entity.Property(e => e.Seedwidth).HasColumnName("SEEDWIDTH");

                entity.Property(e => e.TableName)
                    .HasMaxLength(50)
                    .HasColumnName("TABLE_NAME");
            });

            modelBuilder.Entity<Component>(entity =>
            {
                entity.HasKey(e => e.ComId);

                entity.ToTable("COMPONENTS", "Portal");

                entity.Property(e => e.ComId)
                    .ValueGeneratedNever()
                    .HasColumnName("COM_ID");

                entity.Property(e => e.AreaId).HasColumnName("AREA_ID");

                entity.Property(e => e.Content).HasColumnName("CONTENT");

                entity.Property(e => e.Deleted).HasColumnName("DELETED");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Order).HasColumnName("ORDER");

                entity.Property(e => e.PageId).HasColumnName("PAGE_ID");

                entity.Property(e => e.RequiresDeleting).HasColumnName("REQUIRES_DELETING");

                entity.Property(e => e.Summary)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Type).HasColumnName("TYPE");

                entity.HasOne(d => d.Area)
                    .WithMany(p => p.Components)
                    .HasForeignKey(d => d.AreaId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_COMPONENTS_AREAS");
            });

            modelBuilder.Entity<ComponentCreateRole>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("COMPONENT_CREATE_ROLES", "Portal");

                entity.Property(e => e.ComId).HasColumnName("COM_ID");

                entity.Property(e => e.RoleId).HasColumnName("ROLE_ID");

                entity.HasOne(d => d.Role)
                    .WithMany()
                    .HasForeignKey(d => d.RoleId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_COMPONENT_CREATE_ROLES_ROLES");
            });

            modelBuilder.Entity<ComponentEditRole>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("COMPONENT_EDIT_ROLES", "Portal");

                entity.Property(e => e.ComId).HasColumnName("COM_ID");

                entity.Property(e => e.RoleId).HasColumnName("ROLE_ID");

                entity.HasOne(d => d.Role)
                    .WithMany()
                    .HasForeignKey(d => d.RoleId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_COMPONENT_EDIT_ROLES_ROLES");
            });

            modelBuilder.Entity<ComponentProperty>(entity =>
            {
                entity.HasKey(e => e.ComPropId)
                    .HasName("PK_Portal.COMPONENT_PROPERTIES");

                entity.ToTable("COMPONENT_PROPERTIES", "Portal");

                entity.Property(e => e.ComPropId)
                    .ValueGeneratedNever()
                    .HasColumnName("COM_PROP_ID");

                entity.Property(e => e.AreaId).HasColumnName("AREA_ID");

                entity.Property(e => e.ComId).HasColumnName("COM_ID");

                entity.Property(e => e.Deleted).HasColumnName("DELETED");

                entity.Property(e => e.PropertyType).HasColumnName("PROPERTY_TYPE");

                entity.Property(e => e.RequiresDeleting).HasColumnName("REQUIRES_DELETING");

                entity.Property(e => e.Value)
                    .IsRequired()
                    .HasMaxLength(512)
                    .HasColumnName("VALUE");
            });

            modelBuilder.Entity<ComponentRole>(entity =>
            {
                entity.HasKey(e => e.CrId);

                entity.ToTable("COMPONENT_ROLES", "Portal");

                entity.Property(e => e.CrId)
                    .ValueGeneratedNever()
                    .HasColumnName("CR_ID");

                entity.Property(e => e.ComId).HasColumnName("COM_ID");

                entity.Property(e => e.RId).HasColumnName("R_ID");

                entity.HasOne(d => d.RIdNavigation)
                    .WithMany(p => p.ComponentRoles)
                    .HasForeignKey(d => d.RId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_COMPONENT_ROLES_ROLES");
            });

            modelBuilder.Entity<ComponentVersion>(entity =>
            {
                entity.HasKey(e => new { e.VersionId, e.ComId });

                entity.ToTable("COMPONENT_VERSIONS", "Portal");

                entity.Property(e => e.VersionId).HasColumnName("VERSION_ID");

                entity.Property(e => e.ComId).HasColumnName("COM_ID");

                entity.Property(e => e.AreaId).HasColumnName("AREA_ID");

                entity.Property(e => e.Order).HasColumnName("ORDER");

                entity.Property(e => e.SpaceId).HasColumnName("SPACE_ID");

                entity.Property(e => e.Summary)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Type).HasColumnName("TYPE");

                entity.HasOne(d => d.Space)
                    .WithMany(p => p.ComponentVersions)
                    .HasForeignKey(d => d.SpaceId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_COMPONENT_VERSIONS_SPACES");
            });

            modelBuilder.Entity<ContactRoleGroupCollection>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CONTACT_ROLE_GROUP_COLLECTIONS", "Portal");

                entity.HasIndex(e => e.SpaceId, "IX_CONTACT_ROLE_GROUP_COLLECTION");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.RgcId).HasColumnName("RGC_ID");

                entity.Property(e => e.SpaceId).HasColumnName("SPACE_ID");
            });

            modelBuilder.Entity<ContactSyncContact>(entity =>
            {
                entity.HasKey(e => new { e.AccId, e.UsId })
                    .HasName("PK__CONTACT_SYNC_CONTACTS")
                    .IsClustered(false);

                entity.ToTable("CONTACT_SYNC_CONTACTS");

                entity.HasIndex(e => e.Id, "CI__CONTACT_SYNC_CONTACTS")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.CreatedDateUtc)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE_UTC");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.JobType).HasColumnName("Job_Type");

                entity.Property(e => e.LastSyncedDateUtc)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_SYNCED_DATE_UTC");

                entity.Property(e => e.SyncedWithOffice365).HasColumnName("SYNCED_WITH_OFFICE365");

                entity.Property(e => e.ThirdpartyId)
                    .HasMaxLength(500)
                    .HasColumnName("THIRDPARTY_ID");

                entity.HasOne(d => d.Acc)
                    .WithMany(p => p.ContactSyncContacts)
                    .HasForeignKey(d => d.AccId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CONTACT_SYNC_CONTACTS_ACCOUNTS_CONTACTS");

                entity.HasOne(d => d.Us)
                    .WithMany(p => p.ContactSyncContacts)
                    .HasForeignKey(d => d.UsId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CONTACT_SYNC_CONTACTS_USERS");
            });

            modelBuilder.Entity<ContactSyncDate>(entity =>
            {
                entity.HasKey(e => e.CsdId);

                entity.ToTable("CONTACT_SYNC_DATES");

                entity.HasIndex(e => new { e.AccId, e.UsId }, "IX_CSD_ACCID_USID")
                    .IsUnique()
                    .HasFillFactor((byte)50);

                entity.Property(e => e.CsdId)
                    .ValueGeneratedNever()
                    .HasColumnName("CSD_ID");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.SyncDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYNC_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.HasOne(d => d.Acc)
                    .WithMany(p => p.ContactSyncDates)
                    .HasForeignKey(d => d.AccId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CONTACT_SYNC_DATES_ACCOUNTS_CONTACTS");

                entity.HasOne(d => d.Us)
                    .WithMany(p => p.ContactSyncDates)
                    .HasForeignKey(d => d.UsId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CONTACT_SYNC_DATES_USERS");
            });

            modelBuilder.Entity<Content>(entity =>
            {
                entity.HasKey(e => e.ContentsId);

                entity.ToTable("CONTENTS", "Portal");

                entity.Property(e => e.ContentsId)
                    .ValueGeneratedNever()
                    .HasColumnName("CONTENTS_ID");

                entity.Property(e => e.ColumnLayoutId).HasColumnName("COLUMN_LAYOUT_ID");

                entity.Property(e => e.ContentsName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnName("CONTENTS_NAME")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Correspondence>(entity =>
            {
                entity.HasKey(e => e.CoId);

                entity.ToTable("CORRESPONDENCE");

                entity.HasIndex(e => e.CoAccId, "IX_CORRESPONDENCE_CO_ACC_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.CoMapiId, "IX_CORRESPONDENCE_CO_MAPI_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.CoRef, "IX_CORRESPONDENCE_CO_REF")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => new { e.CoRef, e.CoDeleted }, "IX_CORRESPONDENCE_CO_REF_CO_DELETED_INCLUDES")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.CreatedDate, "IX_CORRESPONDENCE_CREATED_DATE")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.DateSent, "IX_CORRESPONDENCE_DATE_SENT")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.MailboxUsId, "IX_CORRESPONDENCE_MAILBOX_US_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.MailKey, "IX_CORRESPONDENCE_MAIL_KEY")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => new { e.CoDeleted, e.DateSent }, "IX_CORRESPONDENCE_SEC_01")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.ShortCode, "IX__CORRESPONDENCE__SHORT_CODE");

                entity.Property(e => e.CoId)
                    .ValueGeneratedNever()
                    .HasColumnName("CO_ID");

                entity.Property(e => e.Body).HasColumnName("BODY");

                entity.Property(e => e.CoAccId).HasColumnName("CO_ACC_ID");

                entity.Property(e => e.CoDeleted).HasColumnName("CO_DELETED");

                entity.Property(e => e.CoMapiId)
                    .HasMaxLength(350)
                    .HasColumnName("CO_MAPI_ID");

                entity.Property(e => e.CoRef).HasColumnName("CO_REF");

                entity.Property(e => e.CoStoreId)
                    .HasMaxLength(800)
                    .HasColumnName("CO_STORE_ID");

                entity.Property(e => e.CoType)
                    .HasColumnName("CO_TYPE")
                    .HasDefaultValueSql("('60CD890D-63D1-46E2-A27F-46F65370C2E7')");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DateSent)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_SENT");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.From)
                    .HasMaxLength(255)
                    .HasColumnName("FROM");

                entity.Property(e => e.HtmlBody)
                    .HasColumnType("text")
                    .HasColumnName("HTML_BODY");

                entity.Property(e => e.MailKey)
                    .HasMaxLength(255)
                    .HasColumnName("MAIL_KEY");

                entity.Property(e => e.MailboxUsId).HasColumnName("MAILBOX_US_ID");

                entity.Property(e => e.ManualCreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("MANUAL_CREATED_DATE");

                entity.Property(e => e.ManualPending).HasColumnName("MANUAL_PENDING");

                entity.Property(e => e.ManualUsId).HasColumnName("MANUAL_US_ID");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", true);

                entity.Property(e => e.Private)
                    .HasColumnName("PRIVATE")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RecipientAddress)
                    .HasMaxLength(255)
                    .HasColumnName("RECIPIENT_ADDRESS");

                entity.Property(e => e.SenderAddress)
                    .HasMaxLength(255)
                    .HasColumnName("SENDER_ADDRESS");

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'COR-')");

                entity.Property(e => e.Subject)
                    .HasMaxLength(255)
                    .HasColumnName("SUBJECT");

                entity.Property(e => e.To)
                    .HasMaxLength(255)
                    .HasColumnName("TO");

                entity.Property(e => e.Type)
                    .HasMaxLength(50)
                    .HasColumnName("TYPE");

                entity.Property(e => e.Ud1)
                    .HasMaxLength(255)
                    .HasColumnName("UD1");

                entity.Property(e => e.Ud10)
                    .HasMaxLength(255)
                    .HasColumnName("UD10");

                entity.Property(e => e.Ud11)
                    .HasMaxLength(255)
                    .HasColumnName("UD11");

                entity.Property(e => e.Ud12)
                    .HasMaxLength(255)
                    .HasColumnName("UD12");

                entity.Property(e => e.Ud13)
                    .HasMaxLength(255)
                    .HasColumnName("UD13");

                entity.Property(e => e.Ud14)
                    .HasMaxLength(255)
                    .HasColumnName("UD14");

                entity.Property(e => e.Ud15)
                    .HasMaxLength(255)
                    .HasColumnName("UD15");

                entity.Property(e => e.Ud2)
                    .HasMaxLength(255)
                    .HasColumnName("UD2");

                entity.Property(e => e.Ud3)
                    .HasMaxLength(255)
                    .HasColumnName("UD3");

                entity.Property(e => e.Ud4)
                    .HasMaxLength(255)
                    .HasColumnName("UD4");

                entity.Property(e => e.Ud5)
                    .HasMaxLength(255)
                    .HasColumnName("UD5");

                entity.Property(e => e.Ud6)
                    .HasMaxLength(255)
                    .HasColumnName("UD6");

                entity.Property(e => e.Ud7)
                    .HasMaxLength(255)
                    .HasColumnName("UD7");

                entity.Property(e => e.Ud8)
                    .HasMaxLength(255)
                    .HasColumnName("UD8");

                entity.Property(e => e.Ud9)
                    .HasMaxLength(255)
                    .HasColumnName("UD9");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.HasOne(d => d.CoAcc)
                    .WithMany(p => p.Correspondences)
                    .HasForeignKey(d => d.CoAccId)
                    .HasConstraintName("FK_CORRESPONDENCE_ACCOUNTS_CONTACTS");

                entity.HasOne(d => d.CoRefNavigation)
                    .WithMany(p => p.Correspondences)
                    .HasForeignKey(d => d.CoRef)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_CORRESPONDENCE_ACCOUNTS");
            });

            modelBuilder.Entity<CorrespondenceAttachment>(entity =>
            {
                entity.HasKey(e => e.CoaId);

                entity.ToTable("CORRESPONDENCE_ATTACHMENTS");

                entity.HasIndex(e => e.CoId, "IX_CORRESPONDENCE_ATTACHMENTS_CO_ID")
                    .HasFillFactor((byte)80);

                entity.Property(e => e.CoaId)
                    .ValueGeneratedNever()
                    .HasColumnName("COA_ID");

                entity.Property(e => e.Body)
                    .HasColumnType("image")
                    .HasColumnName("BODY");

                entity.Property(e => e.CoId).HasColumnName("CO_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Filepath)
                    .HasMaxLength(255)
                    .HasColumnName("FILEPATH");

                entity.Property(e => e.LinkId)
                    .HasMaxLength(255)
                    .HasColumnName("LINK_ID");

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .HasColumnName("NAME");

                entity.Property(e => e.Summary).HasColumnName("SUMMARY");

                entity.HasOne(d => d.Co)
                    .WithMany(p => p.CorrespondenceAttachments)
                    .HasForeignKey(d => d.CoId)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_CORRESPONDENCE_ATTACHMENTS_CORRESPONDENCE");
            });

            modelBuilder.Entity<CorrespondenceRecipient>(entity =>
            {
                entity.HasKey(e => e.CorId);

                entity.ToTable("CORRESPONDENCE_RECIPIENTS");

                entity.HasIndex(e => e.AccId, "IX_CORRESPONDENCE_RECIPIENTS_ACC_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.CoId, "IX_CORRESPONDENCE_RECIPIENTS_CO_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.Recipient, "IX__CORRESPONDENCE_RECIPIENTS__RECIPIENT__INCLUDES")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => new { e.CoId, e.Recipient, e.RecipientType }, "IX__CORRESPONDENCE_RECIPIENTS__spInsertCorrespondenceRecipient");

                entity.Property(e => e.CorId)
                    .ValueGeneratedNever()
                    .HasColumnName("COR_ID");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.CoId).HasColumnName("CO_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Recipient)
                    .HasMaxLength(255)
                    .HasColumnName("RECIPIENT");

                entity.Property(e => e.RecipientType)
                    .HasMaxLength(50)
                    .HasColumnName("RECIPIENT_TYPE");

                entity.HasOne(d => d.Acc)
                    .WithMany(p => p.CorrespondenceRecipients)
                    .HasForeignKey(d => d.AccId)
                    .HasConstraintName("FK_CORRESPONDENCE_RECIPIENTS_ACCOUNTS_CONTACTS");

                entity.HasOne(d => d.Co)
                    .WithMany(p => p.CorrespondenceRecipients)
                    .HasForeignKey(d => d.CoId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CORRESPONDENCE_RECIPIENTS_CORRESPONDENCE");
            });

            modelBuilder.Entity<CorrespondenceRecipientsTeam>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CORRESPONDENCE_RECIPIENTS_TEAMS");

                entity.HasIndex(e => e.UsgId, "IX_CORRESPONDENCE_RECIPIENTS_TEAMS_USG_ID_CO_ID");

                entity.Property(e => e.CoId).HasColumnName("co_id");

                entity.Property(e => e.UsgId).HasColumnName("usg_id");
            });

            modelBuilder.Entity<Country>(entity =>
            {
                entity.HasKey(e => e.CtId);

                entity.ToTable("COUNTRIES");

                entity.Property(e => e.CtId)
                    .ValueGeneratedNever()
                    .HasColumnName("CT_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CtDeleted).HasColumnName("CT_DELETED");

                entity.Property(e => e.CtSoundex)
                    .HasMaxLength(4)
                    .HasColumnName("CT_SOUNDEX")
                    .IsFixedLength(true);

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.DialingCode)
                    .HasMaxLength(50)
                    .HasColumnName("DIALING_CODE");

                entity.Property(e => e.IddPrefix)
                    .HasMaxLength(50)
                    .HasColumnName("IDD_PREFIX");

                entity.Property(e => e.Iso2code)
                    .HasMaxLength(2)
                    .HasColumnName("ISO_2CODE")
                    .IsFixedLength(true);

                entity.Property(e => e.Iso3code)
                    .HasMaxLength(3)
                    .HasColumnName("ISO_3CODE")
                    .IsFixedLength(true);

                entity.Property(e => e.IsoNumeric)
                    .HasMaxLength(10)
                    .HasColumnName("ISO_NUMERIC")
                    .IsFixedLength(true);

                entity.Property(e => e.NddPrefix)
                    .HasMaxLength(50)
                    .HasColumnName("NDD_PREFIX");

                entity.Property(e => e.OtherCode)
                    .HasMaxLength(50)
                    .HasColumnName("OTHER_CODE");

                entity.Property(e => e.SortOrder).HasColumnName("SORT_ORDER");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<Currency>(entity =>
            {
                entity.HasKey(e => e.CurId);

                entity.ToTable("CURRENCIES");

                entity.HasIndex(e => e.ShortCode, "IX__CURRENCIES__SHORT_CODE");

                entity.Property(e => e.CurId)
                    .ValueGeneratedNever()
                    .HasColumnName("CUR_ID");

                entity.Property(e => e.BaseExchange).HasColumnName("BASE_EXCHANGE");

                entity.Property(e => e.Code)
                    .HasMaxLength(3)
                    .HasColumnName("CODE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CurDeleted).HasColumnName("CUR_DELETED");

                entity.Property(e => e.CurExternal)
                    .HasMaxLength(255)
                    .HasColumnName("CUR_EXTERNAL");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Discount).HasColumnName("DISCOUNT");

                entity.Property(e => e.Exclusive).HasColumnName("EXCLUSIVE");

                entity.Property(e => e.FneId).HasColumnName("FNE_ID");

                entity.Property(e => e.Order).HasColumnName("ORDER");

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", true);

                entity.Property(e => e.PriceList).HasColumnName("PRICE_LIST");

                entity.Property(e => e.PriceListEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRICE_LIST_END_DATE");

                entity.Property(e => e.PriceListStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRICE_LIST_START_DATE");

                entity.Property(e => e.PriceListState).HasColumnName("PRICE_LIST_STATE");

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'CUR-')");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Symbol)
                    .HasMaxLength(3)
                    .HasColumnName("SYMBOL");

                entity.Property(e => e.TxcId).HasColumnName("TXC_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.HasOne(d => d.Fne)
                    .WithMany(p => p.Currencies)
                    .HasForeignKey(d => d.FneId)
                    .HasConstraintName("FK_CURRENCIES_FINANCIAL_ENTITIES");
            });

            modelBuilder.Entity<CustomItemRequest>(entity =>
            {
                entity.HasKey(e => e.ReqId)
                    .HasName("PK__CUSTOM_ITEM_REQUESTS__REQ_ID");

                entity.ToTable("CUSTOM_ITEM_REQUESTS");

                entity.Property(e => e.ReqId)
                    .ValueGeneratedNever()
                    .HasColumnName("REQ_ID");

                entity.Property(e => e.RequestData)
                    .IsRequired()
                    .HasColumnName("REQUEST_DATA");

                entity.Property(e => e.RequestType).HasColumnName("REQUEST_TYPE");
            });

            modelBuilder.Entity<CustomJavascript>(entity =>
            {
                entity.ToTable("CUSTOM_JAVASCRIPT", "files");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Content).HasColumnName("CONTENT");

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .HasColumnName("NAME");
            });

            modelBuilder.Entity<Dashboard>(entity =>
            {
                entity.HasKey(e => e.DshId);

                entity.ToTable("DASHBOARDS");

                entity.HasIndex(e => new { e.UsId, e.LocationReference }, "IX_US_ID_LOCATION_REFERENCE")
                    .IsUnique();

                entity.Property(e => e.DshId)
                    .HasColumnName("DSH_ID")
                    .HasDefaultValueSql("(newsequentialid())");

                entity.Property(e => e.Created)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.Deleted)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DisplayOrder).HasColumnName("DISPLAY_ORDER");

                entity.Property(e => e.LocationReference).HasColumnName("LOCATION_REFERENCE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Updated)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.HasOne(d => d.Us)
                    .WithMany(p => p.Dashboards)
                    .HasForeignKey(d => d.UsId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DASHBOARDS_USERS");
            });

            modelBuilder.Entity<DashboardGaugeChartThreshold>(entity =>
            {
                entity.HasKey(e => e.DgctId);

                entity.ToTable("DASHBOARD_GAUGE_CHART_THRESHOLDS");

                entity.Property(e => e.DgctId)
                    .ValueGeneratedNever()
                    .HasColumnName("DGCT_ID");

                entity.Property(e => e.Colour)
                    .HasMaxLength(7)
                    .HasColumnName("COLOUR");

                entity.Property(e => e.DshId).HasColumnName("DSH_ID");

                entity.Property(e => e.ThemeColour).HasColumnName("THEME_COLOUR");

                entity.Property(e => e.Threshold)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("THRESHOLD");
            });

            modelBuilder.Entity<DashboardHomepage>(entity =>
            {
                entity.HasKey(e => e.DhoId);

                entity.ToTable("DASHBOARD_HOMEPAGES");

                entity.Property(e => e.DhoId).HasColumnName("DHO_ID");

                entity.Property(e => e.CopyAllowed).HasColumnName("COPY_ALLOWED");

                entity.Property(e => e.Deleted)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED");

                entity.Property(e => e.DhoOrder).HasColumnName("DHO_ORDER");

                entity.Property(e => e.Selected).HasColumnName("SELECTED");

                entity.Property(e => e.Summary)
                    .HasMaxLength(100)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UsId).HasColumnName("US_ID");
            });

            modelBuilder.Entity<DashboardHomepageLabel>(entity =>
            {
                entity.HasKey(e => new { e.DhoId, e.LangId });

                entity.ToTable("DASHBOARD_HOMEPAGE_LABELS");

                entity.Property(e => e.DhoId).HasColumnName("DHO_ID");

                entity.Property(e => e.LangId).HasColumnName("LANG_ID");

                entity.Property(e => e.Label)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("LABEL");

                entity.Property(e => e.LabelId).HasColumnName("LABEL_ID");

                entity.Property(e => e.LastUpdated)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_UPDATED")
                    .HasDefaultValueSql("(getdate())");

                entity.HasOne(d => d.Dho)
                    .WithMany(p => p.DashboardHomepageLabels)
                    .HasForeignKey(d => d.DhoId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DASHBOARD_HOMEPAGE_LABELS_DASHBOARD_HOMEPAGES1");

                entity.HasOne(d => d.Lang)
                    .WithMany(p => p.DashboardHomepageLabels)
                    .HasForeignKey(d => d.LangId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DASHBOARD_HOMEPAGE_LABELS_LANGUAGES1");
            });

            modelBuilder.Entity<DashboardHomepagesCopy>(entity =>
            {
                entity.HasKey(e => e.DhocId);

                entity.ToTable("DASHBOARD_HOMEPAGES_COPY");

                entity.Property(e => e.DhocId).HasColumnName("DHOC_ID");

                entity.Property(e => e.DhoId).HasColumnName("DHO_ID");

                entity.Property(e => e.UsId).HasColumnName("US_ID");
            });

            modelBuilder.Entity<DashboardUserWidget>(entity =>
            {
                entity.HasKey(e => e.DuwId)
                    .HasName("PK_DASH_USER");

                entity.ToTable("DASHBOARD_USER_WIDGETS");

                entity.Property(e => e.DuwId).HasColumnName("DUW_ID");

                entity.Property(e => e.DhoFilters)
                    .HasMaxLength(1000)
                    .HasColumnName("DHO_FILTERS");

                entity.Property(e => e.DhoFiltertext)
                    .HasMaxLength(512)
                    .HasColumnName("DHO_FILTERTEXT");

                entity.Property(e => e.DhoId).HasColumnName("DHO_ID");

                entity.Property(e => e.DhoSummary)
                    .HasMaxLength(255)
                    .HasColumnName("DHO_SUMMARY");

                entity.Property(e => e.DshId).HasColumnName("DSH_ID");

                entity.Property(e => e.DshOrder)
                    .HasColumnName("DSH_ORDER")
                    .HasDefaultValueSql("((999))");

                entity.Property(e => e.Height).HasColumnName("HEIGHT");

                entity.Property(e => e.LocationRef).HasColumnName("LOCATION_REF");

                entity.Property(e => e.OverviewSectionId).HasColumnName("OVERVIEW_SECTION_ID");

                entity.Property(e => e.ReqId).HasColumnName("REQ_ID");

                entity.Property(e => e.StagingDscId).HasColumnName("STAGING_DSC_ID");

                entity.Property(e => e.StagingDspsId).HasColumnName("STAGING_DSPS_ID");

                entity.Property(e => e.SublistSectionId).HasColumnName("SUBLIST_SECTION_ID");

                entity.Property(e => e.UsrId).HasColumnName("USR_ID");

                entity.Property(e => e.WidgetSectionId).HasColumnName("WIDGET_SECTION_ID");

                entity.Property(e => e.WidgetType)
                    .HasColumnName("WIDGET_TYPE")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Width).HasColumnName("WIDTH");
            });

            modelBuilder.Entity<DashboardUserWidgetLabel>(entity =>
            {
                entity.HasKey(e => new { e.DuwId, e.LangId });

                entity.ToTable("DASHBOARD_USER_WIDGET_LABELS");

                entity.Property(e => e.DuwId).HasColumnName("DUW_ID");

                entity.Property(e => e.LangId).HasColumnName("LANG_ID");

                entity.Property(e => e.Label)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("LABEL");

                entity.Property(e => e.LabelId).HasColumnName("LABEL_ID");

                entity.Property(e => e.LastUpdated)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_UPDATED")
                    .HasDefaultValueSql("(getdate())");

                entity.HasOne(d => d.Duw)
                    .WithMany(p => p.DashboardUserWidgetLabels)
                    .HasForeignKey(d => d.DuwId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DASHBOARD_USER_WIDGET_LABELS_DASHBOARD_USER_WIDGETS1");

                entity.HasOne(d => d.Lang)
                    .WithMany(p => p.DashboardUserWidgetLabels)
                    .HasForeignKey(d => d.LangId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DASHBOARD_USER_WIDGET_LABELS_LANGUAGES1");
            });

            modelBuilder.Entity<DashboardWidget>(entity =>
            {
                entity.HasKey(e => e.DshId)
                    .HasName("PK_DASH_DASHBOARDS");

                entity.ToTable("DASHBOARD_WIDGETS");

                entity.Property(e => e.DshId).HasColumnName("DSH_ID");

                entity.Property(e => e.Def)
                    .HasMaxLength(4000)
                    .HasColumnName("DEF");

                entity.Property(e => e.Deleted)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED");

                entity.Property(e => e.DesignId).HasColumnName("DESIGN_ID");

                entity.Property(e => e.IsItemDesignTheme).HasColumnName("IS_ITEM_DESIGN_THEME");

                entity.Property(e => e.IsPublic)
                    .IsRequired()
                    .HasColumnName("IS_PUBLIC")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.ListType)
                    .HasMaxLength(255)
                    .HasColumnName("LIST_TYPE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.SummaryRef)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY_REF");

                entity.Property(e => e.Type)
                    .HasMaxLength(255)
                    .HasColumnName("TYPE");

                entity.Property(e => e.UsrId).HasColumnName("USR_ID");

                entity.Property(e => e.WidthType).HasColumnName("WIDTH_TYPE");

                entity.Property(e => e.YAxisLabelGroupType)
                    .HasMaxLength(50)
                    .HasColumnName("Y_AXIS_LABEL_GROUP_TYPE");

                entity.Property(e => e.YAxisTimeUnitDataType)
                    .HasMaxLength(50)
                    .HasColumnName("Y_AXIS_TIME_UNIT_DATA_TYPE");
            });

            modelBuilder.Entity<DashboardWidgetLabel>(entity =>
            {
                entity.HasKey(e => new { e.DshId, e.LangId });

                entity.ToTable("DASHBOARD_WIDGET_LABELS");

                entity.Property(e => e.DshId).HasColumnName("DSH_ID");

                entity.Property(e => e.LangId).HasColumnName("LANG_ID");

                entity.Property(e => e.Label)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("LABEL");

                entity.Property(e => e.LabelId).HasColumnName("LABEL_ID");

                entity.Property(e => e.LastUpdated)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_UPDATED")
                    .HasDefaultValueSql("(getdate())");

                entity.HasOne(d => d.Dsh)
                    .WithMany(p => p.DashboardWidgetLabels)
                    .HasForeignKey(d => d.DshId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DASHBOARD_WIDGET_LABELS_DASHBOARD_HOMEPAGES1");

                entity.HasOne(d => d.Lang)
                    .WithMany(p => p.DashboardWidgetLabels)
                    .HasForeignKey(d => d.LangId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DASHBOARD_WIDGET_LABELS_LANGUAGES1");
            });

            modelBuilder.Entity<DataImportApiEndpointParameter>(entity =>
            {
                entity.Property(e => e.ParameterKey)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.ParameterValue)
                    .IsRequired()
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<DataImportJob>(entity =>
            {
                entity.Property(e => e.Enabled)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.JobName)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.LastRunUtcDate).HasColumnType("datetime");

                entity.HasOne(d => d.Integration)
                    .WithMany(p => p.DataImportJobs)
                    .HasForeignKey(d => d.IntegrationId)
                    .HasConstraintName("FK_DataImportJobs_INTEGRATIONS");

                entity.HasOne(d => d.RunAsUser)
                    .WithMany(p => p.DataImportJobs)
                    .HasForeignKey(d => d.RunAsUserId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_RunAsUser");
            });

            modelBuilder.Entity<DataImportJobSource>(entity =>
            {
                entity.Property(e => e.DateFormat).HasMaxLength(255);

                entity.Property(e => e.Encoding).HasMaxLength(255);

                entity.Property(e => e.FileDirectory).HasMaxLength(255);

                entity.Property(e => e.FileOrderByType).HasDefaultValueSql("((0))");

                entity.Property(e => e.FilenamePattern).HasMaxLength(255);

                entity.Property(e => e.Separator).HasMaxLength(50);

                entity.Property(e => e.SortDirection).HasDefaultValueSql("((0))");

                entity.Property(e => e.SourceType).HasDefaultValueSql("((1))");

                entity.HasOne(d => d.Job)
                    .WithMany(p => p.DataImportJobSources)
                    .HasForeignKey(d => d.JobId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DataImportJobSources_DataImportJobs");
            });

            modelBuilder.Entity<DataImportJobSourceApi>(entity =>
            {
                entity.Property(e => e.BaseUrl)
                    .IsRequired()
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<DataImportJobSourceApiEndpoint>(entity =>
            {
                entity.Property(e => e.Endpoint)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.JsonResultPath).HasMaxLength(255);

                entity.HasOne(d => d.Api)
                    .WithMany(p => p.DataImportJobSourceApiEndpoints)
                    .HasForeignKey(d => d.ApiId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DataImportJobSourceApiEndpoints_DataImportJobSourceApis");

                entity.HasOne(d => d.Source)
                    .WithMany(p => p.DataImportJobSourceApiEndpoints)
                    .HasForeignKey(d => d.SourceId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DataImportJobSourceApiEndpoints_DataImportJobSources");
            });

            modelBuilder.Entity<DataImportMessage>(entity =>
            {
                entity.Property(e => e.DateTime).HasColumnType("datetime");

                entity.Property(e => e.Description).HasMaxLength(500);

                entity.Property(e => e.Filename).HasMaxLength(255);
            });

            modelBuilder.Entity<DataImportSourceMapping>(entity =>
            {
                entity.Property(e => e.ColumnName).HasMaxLength(255);

                entity.Property(e => e.DateTimeFormat).HasMaxLength(50);

                entity.Property(e => e.FilterValue).HasMaxLength(500);

                entity.Property(e => e.OutputName).HasMaxLength(255);

                entity.HasOne(d => d.Source)
                    .WithMany(p => p.DataImportSourceMappings)
                    .HasForeignKey(d => d.SourceId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DataImportSourceMappings_DataImportJobSources");
            });

            modelBuilder.Entity<DataImportStep>(entity =>
            {
                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.ObjectName)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.HasOne(d => d.Source)
                    .WithMany(p => p.DataImportSteps)
                    .HasForeignKey(d => d.SourceId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DataImportSteps_DataImportJobSources");
            });

            modelBuilder.Entity<DataImportStepFilter>(entity =>
            {
                entity.Property(e => e.DateTimeFormat).HasMaxLength(255);

                entity.Property(e => e.FilterValue)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.OutputName)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.HasOne(d => d.Step)
                    .WithMany(p => p.DataImportStepFilters)
                    .HasForeignKey(d => d.StepId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DataImportStepFilters_DataImportSteps");
            });

            modelBuilder.Entity<DataImportStepMapping>(entity =>
            {
                entity.Property(e => e.Source)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.Target)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.HasOne(d => d.Step)
                    .WithMany(p => p.DataImportStepMappings)
                    .HasForeignKey(d => d.StepId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DataImportStepMappings_DataImportSteps");
            });

            modelBuilder.Entity<DataServicesSetting>(entity =>
            {
                entity.HasKey(e => e.DtaId);

                entity.ToTable("DATA_SERVICES_SETTINGS");

                entity.Property(e => e.DtaId)
                    .HasColumnName("DTA_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.AllowSelfCert).HasColumnName("ALLOW_SELF_CERT");

                entity.Property(e => e.CertificateBytes).HasColumnName("CERTIFICATE_BYTES");

                entity.Property(e => e.ConnectionIdentifier)
                    .HasMaxLength(255)
                    .HasColumnName("CONNECTION_IDENTIFIER");

                entity.Property(e => e.Created)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.DefaultObject)
                    .HasMaxLength(255)
                    .HasColumnName("DEFAULT_OBJECT");

                entity.Property(e => e.Deleted)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.Impersonate).HasColumnName("IMPERSONATE");

                entity.Property(e => e.ImportThirdParty).HasColumnName("IMPORT_THIRD_PARTY");

                entity.Property(e => e.Password)
                    .HasMaxLength(50)
                    .HasColumnName("PASSWORD");

                entity.Property(e => e.ProxyAddress)
                    .HasMaxLength(255)
                    .HasColumnName("PROXY_ADDRESS");

                entity.Property(e => e.ProxyPassword)
                    .HasMaxLength(255)
                    .HasColumnName("PROXY_PASSWORD");

                entity.Property(e => e.ProxyUser)
                    .HasMaxLength(255)
                    .HasColumnName("PROXY_USER");

                entity.Property(e => e.ServerAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("SERVER_ADDRESS_1");

                entity.Property(e => e.ServerAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("SERVER_ADDRESS_2");

                entity.Property(e => e.ServiceType).HasColumnName("SERVICE_TYPE");

                entity.Property(e => e.Updated)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.Username)
                    .HasMaxLength(50)
                    .HasColumnName("USERNAME");
            });

            modelBuilder.Entity<DefaultHousekeepingProcess>(entity =>
            {
                entity.HasKey(e => e.ProcessId)
                    .HasName("PK__install__DefaultHousekeepingProcesses__ProcessId");

                entity.ToTable("DefaultHousekeepingProcesses", "install");

                entity.Property(e => e.LastRunUtcDateTime).HasColumnType("datetime");

                entity.Property(e => e.StoredProcedureName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .UseCollation("Latin1_General_CI_AS");
            });

            modelBuilder.Entity<Delv1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("DELV1");

                entity.Property(e => e.AcDeleted).HasColumnName("AC_DELETED");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcgId).HasColumnName("ACG_ID");

                entity.Property(e => e.Address1)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_1");

                entity.Property(e => e.Address2)
                    .HasMaxLength(255)
                    .HasColumnName("Address_2");

                entity.Property(e => e.Address3)
                    .HasMaxLength(255)
                    .HasColumnName("Address_3");

                entity.Property(e => e.BillingAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("Billing_Address_1");

                entity.Property(e => e.BillingAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("Billing_Address_2");

                entity.Property(e => e.BillingAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("Billing_Address_3");

                entity.Property(e => e.BillingCountry)
                    .HasMaxLength(255)
                    .HasColumnName("Billing_Country");

                entity.Property(e => e.BillingCounty)
                    .HasMaxLength(255)
                    .HasColumnName("Billing_County");

                entity.Property(e => e.BillingPostCode)
                    .HasMaxLength(255)
                    .HasColumnName("Billing_PostCode");

                entity.Property(e => e.BillingTown)
                    .HasMaxLength(255)
                    .HasColumnName("Billing_Town");

                entity.Property(e => e.Country).HasMaxLength(255);

                entity.Property(e => e.County)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTY");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("Created_By");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .HasColumnName("NAME");

                entity.Property(e => e.Phone1)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_1");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(255)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.Town)
                    .HasMaxLength(255)
                    .HasColumnName("TOWN");

                entity.Property(e => e.WebSite1)
                    .HasMaxLength(100)
                    .HasColumnName("WEB_SITE_1");
            });

            modelBuilder.Entity<Delv2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("DELV2");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccDeleted).HasColumnName("ACC_DELETED");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.BusinessAddressCity).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressCountry).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressPostalcode).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressState).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.BusinessTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Email1Address).HasMaxLength(255);

                entity.Property(e => e.FirstName).HasMaxLength(255);

                entity.Property(e => e.FullName).HasMaxLength(255);

                entity.Property(e => e.JobTitle).HasMaxLength(255);

                entity.Property(e => e.LastName).HasMaxLength(255);

                entity.Property(e => e.Summary).HasMaxLength(255);

                entity.Property(e => e.Title).HasMaxLength(255);
            });

            modelBuilder.Entity<Delv2nn>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("DELV2NN");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccDeleted).HasColumnName("ACC_DELETED");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.BusinessAddressCity).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressCountry).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressPostalcode).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressState).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.BusinessTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Email1Address).HasMaxLength(255);

                entity.Property(e => e.FirstName).HasMaxLength(255);

                entity.Property(e => e.FullName).HasMaxLength(255);

                entity.Property(e => e.JobTitle).HasMaxLength(255);

                entity.Property(e => e.LastName).HasMaxLength(255);

                entity.Property(e => e.Summary).HasMaxLength(255);

                entity.Property(e => e.Title).HasMaxLength(255);
            });

            modelBuilder.Entity<DeploymentMetadatum>(entity =>
            {
                entity.ToTable("DeploymentMetadata", "RedGateLocal");

                entity.HasComment("This table records deployments with migration scripts. Learn more: http://rd.gt/230GBP3");

                entity.Property(e => e.Action)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.As)
                    .IsRequired()
                    .HasMaxLength(128)
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.BlockId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.By)
                    .IsRequired()
                    .HasMaxLength(128)
                    .HasDefaultValueSql("(original_login())");

                entity.Property(e => e.CompletedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.InsertedSerial)
                    .IsRequired()
                    .HasMaxLength(8)
                    .HasDefaultValueSql("(@@dbts+(1))")
                    .IsFixedLength(true);

                entity.Property(e => e.MetadataVersion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Name).IsRequired();

                entity.Property(e => e.Type)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdatedSerial)
                    .IsRequired()
                    .IsRowVersion()
                    .IsConcurrencyToken();

                entity.Property(e => e.With)
                    .IsRequired()
                    .HasMaxLength(128)
                    .HasDefaultValueSql("(app_name())");
            });

            modelBuilder.Entity<DesignDef>(entity =>
            {
                entity.HasKey(e => e.DdId)
                    .HasName("PK_DESIGN_DEFS_1");

                entity.ToTable("DESIGN_DEFS");

                entity.Property(e => e.DdId).HasColumnName("DD_ID");

                entity.Property(e => e.DdDeleted).HasColumnName("DD_DELETED");

                entity.Property(e => e.DesId)
                    .HasColumnName("DES_ID")
                    .HasDefaultValueSql("(newsequentialid())");

                entity.Property(e => e.DesignType)
                    .HasColumnName("DESIGN_TYPE")
                    .HasComment("Defines if it is a Layout or Object. 0 for Object, 1 for Layout");

                entity.Property(e => e.IsDefaultDesign).HasColumnName("IS_DEFAULT_DESIGN");

                entity.Property(e => e.IsExtension).HasColumnName("IS_EXTENSION");

                entity.Property(e => e.LabelPlural)
                    .HasMaxLength(255)
                    .HasColumnName("LABEL_PLURAL");

                entity.Property(e => e.LabelSingle)
                    .HasMaxLength(255)
                    .HasColumnName("LABEL_SINGLE");

                entity.Property(e => e.RelatedDesign).HasColumnName("RELATED_DESIGN");

                entity.Property(e => e.TypeId).HasColumnName("TYPE_ID");

                entity.Property(e => e.XmlName)
                    .HasMaxLength(255)
                    .HasColumnName("XML_NAME");
            });

            modelBuilder.Entity<DesignEntity>(entity =>
            {
                entity.HasKey(e => e.DetId);

                entity.Property(e => e.DetId)
                    .HasColumnName("DET_ID")
                    .HasDefaultValueSql("(newsequentialid())");

                entity.Property(e => e.DltId).HasColumnName("DLT_ID");

                entity.Property(e => e.DscId).HasColumnName("DSC_ID");

                entity.Property(e => e.DstId).HasColumnName("DST_ID");

                entity.Property(e => e.LabelPlural)
                    .HasMaxLength(255)
                    .HasColumnName("LABEL_PLURAL");

                entity.Property(e => e.LabelSingle)
                    .HasMaxLength(255)
                    .HasColumnName("LABEL_SINGLE");

                entity.HasOne(d => d.Dlt)
                    .WithMany(p => p.DesignEntities)
                    .HasForeignKey(d => d.DltId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DesignEntities_DesignLists");

                entity.HasOne(d => d.Dsc)
                    .WithMany(p => p.DesignEntities)
                    .HasForeignKey(d => d.DscId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DesignEntities_DesignScreens");

                entity.HasOne(d => d.Dst)
                    .WithMany(p => p.DesignEntities)
                    .HasForeignKey(d => d.DstId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DesignEntities_DesignSets");
            });

            modelBuilder.Entity<DesignField>(entity =>
            {
                entity.HasKey(e => e.DfdId);

                entity.HasIndex(e => e.LfdId, "IX__DesignFields__LFD_ID_Includes");

                entity.Property(e => e.DfdId)
                    .HasColumnName("DFD_ID")
                    .HasDefaultValueSql("(newsequentialid())");

                entity.Property(e => e.ActionDscId).HasColumnName("ACTION_DSC_ID");

                entity.Property(e => e.AncestorDscId).HasColumnName("ANCESTOR_DSC_ID");

                entity.Property(e => e.DeDupeType).HasColumnName("DE_DUPE_TYPE");

                entity.Property(e => e.DisplayType2).HasColumnName("DISPLAY_TYPE_2");

                entity.Property(e => e.LfdId).HasColumnName("LFD_ID");

                entity.Property(e => e.MandatoryType).HasColumnName("MANDATORY_TYPE");

                entity.Property(e => e.NewitemPickerDltId).HasColumnName("NEWITEM_PICKER_DLT_ID");

                entity.Property(e => e.ParentLfdId).HasColumnName("PARENT_LFD_ID");

                entity.Property(e => e.PickerDltId).HasColumnName("PICKER_DLT_ID");

                entity.Property(e => e.ReadOnly).HasColumnName("READ_ONLY");

                entity.HasOne(d => d.Lfd)
                    .WithMany(p => p.DesignFields)
                    .HasForeignKey(d => d.LfdId)
                    .HasConstraintName("FK_DesignFields_DesignLegacyFields");
            });

            modelBuilder.Entity<DesignFieldGroupFieldLink>(entity =>
            {
                entity.HasKey(e => new { e.DfdId, e.DsfgId });

                entity.HasIndex(e => new { e.DsfgId, e.DfdId }, "IX__DesignFieldGroupFieldLinks__DSFG_ID_DFD_ID__Includes");

                entity.Property(e => e.DfdId).HasColumnName("DFD_ID");

                entity.Property(e => e.DsfgId).HasColumnName("DSFG_ID");

                entity.Property(e => e.FieldGroupFieldOrdinal).HasColumnName("FIELD_GROUP_FIELD_ORDINAL");

                entity.HasOne(d => d.Dfd)
                    .WithMany(p => p.DesignFieldGroupFieldLinks)
                    .HasForeignKey(d => d.DfdId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DesignFieldGroupFieldLinks_DesignFields");

                entity.HasOne(d => d.Dsfg)
                    .WithMany(p => p.DesignFieldGroupFieldLinks)
                    .HasForeignKey(d => d.DsfgId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DesignFieldGroupFieldLinks_DesignScreenFieldGroups");
            });

            modelBuilder.Entity<DesignFieldValidation>(entity =>
            {
                entity.HasKey(e => e.DfvId);

                entity.ToTable("DesignFieldValidation");

                entity.Property(e => e.DfvId)
                    .ValueGeneratedNever()
                    .HasColumnName("DFV_ID");

                entity.Property(e => e.CustomMessageId).HasColumnName("CUSTOM_MESSAGE_ID");

                entity.Property(e => e.LfdId).HasColumnName("LFD_ID");

                entity.Property(e => e.Regex).HasColumnName("REGEX");

                entity.Property(e => e.Type).HasColumnName("TYPE");

                entity.HasOne(d => d.Lfd)
                    .WithMany(p => p.DesignFieldValidations)
                    .HasForeignKey(d => d.LfdId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DesignFieldValidation_DesignLegacyFields");
            });

            modelBuilder.Entity<DesignLabel>(entity =>
            {
                entity.HasKey(e => new { e.ObjId, e.LangId })
                    .HasName("PK__DESIGN_LABELS__OBJ__ID_LANG_ID");

                entity.HasIndex(e => new { e.DlId, e.LangId }, "IX_DESIGNLABELS_DL_ID_LANG_ID");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.LangId).HasColumnName("LANG_ID");

                entity.Property(e => e.DlId)
                    .HasColumnName("DL_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Label)
                    .HasMaxLength(255)
                    .HasColumnName("LABEL");

                entity.Property(e => e.LabelPlural)
                    .HasMaxLength(255)
                    .HasColumnName("LABEL_PLURAL");

                entity.Property(e => e.LastUpdated)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_UPDATED")
                    .HasDefaultValueSql("(getdate())");

                entity.HasOne(d => d.Lang)
                    .WithMany(p => p.DesignLabels)
                    .HasForeignKey(d => d.LangId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DesignLabels_UserCultures_LANG_ID");
            });

            modelBuilder.Entity<DesignLegacyAction>(entity =>
            {
                entity.HasKey(e => e.DlaId);

                entity.Property(e => e.DlaId)
                    .ValueGeneratedNever()
                    .HasColumnName("DLA_ID");

                entity.Property(e => e.AcoId).HasColumnName("ACO_ID");

                entity.Property(e => e.AcoIsDelete).HasColumnName("ACO_IS_DELETE");

                entity.Property(e => e.AcoIsEdit).HasColumnName("ACO_IS_EDIT");

                entity.Property(e => e.ActionBinding)
                    .HasMaxLength(50)
                    .HasColumnName("ACTION_BINDING");

                entity.Property(e => e.ActionType).HasColumnName("ACTION_TYPE");

                entity.Property(e => e.Enabled).HasColumnName("ENABLED");

                entity.Property(e => e.FilterDfdId).HasColumnName("FILTER_DFD_ID");

                entity.Property(e => e.IconDscId).HasColumnName("ICON_DSC_ID");

                entity.Property(e => e.IconType)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("ICON_TYPE");

                entity.Property(e => e.IsCustomNewAction).HasColumnName("IS_CUSTOM_NEW_ACTION");

                entity.Property(e => e.IsCustomSaveAction).HasColumnName("IS_CUSTOM_SAVE_ACTION");

                entity.Property(e => e.IsPrimary).HasColumnName("IS_PRIMARY");

                entity.Property(e => e.IsWhatsnext)
                    .HasColumnName("IS_WHATSNEXT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.LegId).HasColumnName("LEG_ID");

                entity.Property(e => e.LegIdListRef).HasColumnName("LEG_ID_LIST_REF");

                entity.Property(e => e.LfdIdEnabledRef).HasColumnName("LFD_ID_ENABLED_REF");

                entity.Property(e => e.Order).HasColumnName("ORDER");

                entity.Property(e => e.Type).HasColumnName("TYPE");

                entity.HasOne(d => d.Aco)
                    .WithMany(p => p.DesignLegacyActions)
                    .HasForeignKey(d => d.AcoId)
                    .HasConstraintName("FK_DesignLegacyActions_ACCESS_OPTIONS");

                entity.HasOne(d => d.Leg)
                    .WithMany(p => p.DesignLegacyActionLegs)
                    .HasForeignKey(d => d.LegId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DesignLegacyActions_DesignLegacyFiles");

                entity.HasOne(d => d.LegIdListRefNavigation)
                    .WithMany(p => p.DesignLegacyActionLegIdListRefNavigations)
                    .HasForeignKey(d => d.LegIdListRef)
                    .HasConstraintName("FK_DesignLegacyActions_DesignLegacyFilesListRef");
            });

            modelBuilder.Entity<DesignLegacyChild>(entity =>
            {
                entity.HasKey(e => e.DlcId)
                    .HasName("PK_DesignLegacyChildren_1");

                entity.Property(e => e.DlcId)
                    .ValueGeneratedNever()
                    .HasColumnName("DLC_ID");

                entity.Property(e => e.DisplayOrder).HasColumnName("DISPLAY_ORDER");

                entity.Property(e => e.IsCustom).HasColumnName("IS_CUSTOM");

                entity.Property(e => e.IsHorizontal).HasColumnName("IS_HORIZONTAL");

                entity.Property(e => e.IsWhatsnext).HasColumnName("IS_WHATSNEXT");

                entity.Property(e => e.LegIdChild).HasColumnName("LEG_ID_CHILD");

                entity.Property(e => e.LegIdParent).HasColumnName("LEG_ID_PARENT");

                entity.HasOne(d => d.LegIdChildNavigation)
                    .WithMany(p => p.DesignLegacyChildLegIdChildNavigations)
                    .HasForeignKey(d => d.LegIdChild)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DesignLegacyChildren_DesignLegacyFiles_Child");

                entity.HasOne(d => d.LegIdParentNavigation)
                    .WithMany(p => p.DesignLegacyChildLegIdParentNavigations)
                    .HasForeignKey(d => d.LegIdParent)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DesignLegacyChildren_DesignLegacyFiles_Parent");
            });

            modelBuilder.Entity<DesignLegacyChildField>(entity =>
            {
                entity.HasKey(e => e.DlccId)
                    .HasName("PK_DesignLegacyChildFields_1");

                entity.Property(e => e.DlccId)
                    .ValueGeneratedNever()
                    .HasColumnName("DLCC_ID");

                entity.Property(e => e.DlcId).HasColumnName("DLC_ID");

                entity.Property(e => e.LfdIdChild).HasColumnName("LFD_ID_CHILD");

                entity.Property(e => e.LfdIdParent).HasColumnName("LFD_ID_PARENT");

                entity.HasOne(d => d.Dlc)
                    .WithMany(p => p.DesignLegacyChildFields)
                    .HasForeignKey(d => d.DlcId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DesignLegacyChildFields_DesignLegacyChildren");

                entity.HasOne(d => d.LfdIdChildNavigation)
                    .WithMany(p => p.DesignLegacyChildFieldLfdIdChildNavigations)
                    .HasForeignKey(d => d.LfdIdChild)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DesignLegacyChildFields_DesignLegacyFields_Child");

                entity.HasOne(d => d.LfdIdParentNavigation)
                    .WithMany(p => p.DesignLegacyChildFieldLfdIdParentNavigations)
                    .HasForeignKey(d => d.LfdIdParent)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DesignLegacyChildFields_DesignLegacyFields_Parent");
            });

            modelBuilder.Entity<DesignLegacyField>(entity =>
            {
                entity.HasKey(e => e.LfdId);

                entity.HasIndex(e => e.LfdId, "IX__DesignLegacyFields__LFD_ID__Includes");

                entity.HasIndex(e => new { e.OriginalObjectId, e.DrId }, "IX__DesignLegacyFields__ORIGINAL_OBJECT_ID_DR_ID");

                entity.Property(e => e.LfdId)
                    .HasColumnName("LFD_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.ActionLegId).HasColumnName("ACTION_LEG_ID");

                entity.Property(e => e.CanBeGloballySearched)
                    .HasColumnName("CAN_BE_GLOBALLY_SEARCHED")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CanBeGroupedBy).HasColumnName("CAN_BE_GROUPED_BY");

                entity.Property(e => e.DataType).HasColumnName("DATA_TYPE");

                entity.Property(e => e.DepLfdId).HasColumnName("DEP_LFD_ID");

                entity.Property(e => e.DrId).HasColumnName("DR_ID");

                entity.Property(e => e.EditibilityLevel).HasColumnName("EDITIBILITY_LEVEL");

                entity.Property(e => e.EditibilityTeamId).HasColumnName("EDITIBILITY_TEAM_ID");

                entity.Property(e => e.GloballySearchable).HasColumnName("GLOBALLY_SEARCHABLE");

                entity.Property(e => e.IsConvertedToInteger).HasColumnName("IS_CONVERTED_TO_INTEGER");

                entity.Property(e => e.IsCritical)
                    .HasColumnName("IS_CRITICAL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.IsGeocoded).HasColumnName("IS_GEOCODED");

                entity.Property(e => e.IsHidden).HasColumnName("IS_HIDDEN");

                entity.Property(e => e.IsMandatory).HasColumnName("IS_MANDATORY");

                entity.Property(e => e.IsOwnerField).HasColumnName("IS_OWNER_FIELD");

                entity.Property(e => e.IsOwnersTeamField).HasColumnName("IS_OWNERS_TEAM_FIELD");

                entity.Property(e => e.IsReadonly).HasColumnName("IS_READONLY");

                entity.Property(e => e.IsReadonlyAfterSave).HasColumnName("IS_READONLY_AFTER_SAVE");

                entity.Property(e => e.IsSecure).HasColumnName("IS_SECURE");

                entity.Property(e => e.IsUtc).HasColumnName("IS_UTC");

                entity.Property(e => e.NewitemPickerLegId).HasColumnName("NEWITEM_PICKER_LEG_ID");

                entity.Property(e => e.OriginalName)
                    .HasMaxLength(255)
                    .HasColumnName("ORIGINAL_NAME");

                entity.Property(e => e.OriginalObject)
                    .HasMaxLength(255)
                    .HasColumnName("ORIGINAL_OBJECT");

                entity.Property(e => e.OriginalObjectId).HasColumnName("ORIGINAL_OBJECT_ID");

                entity.Property(e => e.ParentDropLfdId).HasColumnName("PARENT_DROP_LFD_ID");

                entity.Property(e => e.ParentLfdId).HasColumnName("PARENT_LFD_ID");

                entity.Property(e => e.PickerLegId).HasColumnName("PICKER_LEG_ID");

                entity.Property(e => e.TextFieldMaxLength).HasColumnName("TEXT_FIELD_MAX_LENGTH");

                entity.Property(e => e.Tooltip)
                    .HasMaxLength(255)
                    .HasColumnName("TOOLTIP");

                entity.Property(e => e.VisibilityLevel).HasColumnName("VISIBILITY_LEVEL");

                entity.Property(e => e.VisibilityTeamId).HasColumnName("VISIBILITY_TEAM_ID");
            });

            modelBuilder.Entity<DesignLegacyFieldAssociation>(entity =>
            {
                entity.HasOne(d => d.AssociatedDesignLegacyField)
                    .WithMany(p => p.DesignLegacyFieldAssociationAssociatedDesignLegacyFields)
                    .HasForeignKey(d => d.AssociatedDesignLegacyFieldId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DesignLegacyFieldAssociations_DesignLegacyFields1");

                entity.HasOne(d => d.DesignLegacyField)
                    .WithMany(p => p.DesignLegacyFieldAssociationDesignLegacyFields)
                    .HasForeignKey(d => d.DesignLegacyFieldId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DesignLegacyFieldAssociations_DesignLegacyFields");
            });

            modelBuilder.Entity<DesignLegacyFieldDefault>(entity =>
            {
                entity.HasKey(e => e.LfdId)
                    .HasName("PK__DesignLe__0EE3F6CBA8E42F2B");

                entity.Property(e => e.LfdId)
                    .ValueGeneratedNever()
                    .HasColumnName("LFD_ID");

                entity.Property(e => e.DefaultDisplayValue)
                    .HasMaxLength(255)
                    .HasColumnName("DEFAULT_DISPLAY_VALUE");

                entity.Property(e => e.DefaultValue)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("DEFAULT_VALUE");
            });

            modelBuilder.Entity<DesignLegacyFieldLabelPropagationMapping>(entity =>
            {
                entity.HasKey(e => new { e.FromLfdId, e.ToLfdId })
                    .HasName("PK__DesignLegacyFieldLabelPropagationMappings");

                entity.Property(e => e.FromLfdId).HasColumnName("FROM_LFD_ID");

                entity.Property(e => e.ToLfdId).HasColumnName("TO_LFD_ID");

                entity.HasOne(d => d.FromLfd)
                    .WithMany(p => p.DesignLegacyFieldLabelPropagationMappingFromLfds)
                    .HasForeignKey(d => d.FromLfdId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__DesignLegacyFieldLabelPropagationMappings__FROM_LFD_ID__DesignLegacyFields__LFD_ID");

                entity.HasOne(d => d.ToLfd)
                    .WithMany(p => p.DesignLegacyFieldLabelPropagationMappingToLfds)
                    .HasForeignKey(d => d.ToLfdId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__DesignLegacyFieldLabelPropagationMappings__TO_LFD_ID__DesignLegacyFields__LFD_ID");
            });

            modelBuilder.Entity<DesignLegacyFieldLink>(entity =>
            {
                entity.HasKey(e => new { e.LegId, e.LfdId });

                entity.HasIndex(e => e.LegId, "IX__DesignLegacyFieldLinks__LEG_ID__Includes");

                entity.Property(e => e.LegId).HasColumnName("LEG_ID");

                entity.Property(e => e.LfdId).HasColumnName("LFD_ID");

                entity.Property(e => e.ActionXml)
                    .HasMaxLength(255)
                    .HasColumnName("ACTION_XML");

                entity.Property(e => e.CurrencySymbolColumn)
                    .HasMaxLength(255)
                    .HasColumnName("CURRENCY_SYMBOL_COLUMN");

                entity.Property(e => e.DefaultLabel)
                    .HasMaxLength(255)
                    .HasColumnName("DEFAULT_LABEL");

                entity.Property(e => e.DisplayType).HasColumnName("DISPLAY_TYPE");

                entity.Property(e => e.Filter)
                    .HasMaxLength(255)
                    .HasColumnName("FILTER");

                entity.Property(e => e.FormatFieldColour)
                    .HasMaxLength(10)
                    .HasColumnName("FORMAT_FIELD_COLOUR");

                entity.Property(e => e.IsDetailRow).HasColumnName("IS_DETAIL_ROW");

                entity.Property(e => e.IsFormatField).HasColumnName("IS_FORMAT_FIELD");

                entity.Property(e => e.IsKey).HasColumnName("IS_KEY");

                entity.Property(e => e.IsShortCode).HasColumnName("IS_SHORT_CODE");

                entity.Property(e => e.IsSummary).HasColumnName("IS_SUMMARY");

                entity.Property(e => e.ItemFieldLabelColumn)
                    .HasMaxLength(255)
                    .HasColumnName("ITEM_FIELD_LABEL_COLUMN");

                entity.Property(e => e.OverrideName)
                    .HasMaxLength(100)
                    .HasColumnName("OVERRIDE_NAME");

                entity.Property(e => e.PickerXml)
                    .HasMaxLength(255)
                    .HasColumnName("PICKER_XML");

                entity.Property(e => e.TimeUnitIsTimeColumnName)
                    .HasMaxLength(100)
                    .HasColumnName("TIME_UNIT_IS_TIME_COLUMN_NAME");

                entity.Property(e => e.TodrId).HasColumnName("TODR_ID");

                entity.HasOne(d => d.Leg)
                    .WithMany(p => p.DesignLegacyFieldLinks)
                    .HasForeignKey(d => d.LegId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DesignLegacyFieldLinks_DesignLegacyFiles");

                entity.HasOne(d => d.Lfd)
                    .WithMany(p => p.DesignLegacyFieldLinks)
                    .HasForeignKey(d => d.LfdId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DesignLegacyFieldLinks_DesignLegacyFields");
            });

            modelBuilder.Entity<DesignLegacyFieldMixedListLink>(entity =>
            {
                entity.HasKey(e => new { e.ScreenLfdId, e.ListLfdId });

                entity.ToTable("DesignLegacyFieldMixedListLink");

                entity.Property(e => e.ScreenLfdId).HasColumnName("SCREEN_LFD_ID");

                entity.Property(e => e.ListLfdId).HasColumnName("LIST_LFD_ID");

                entity.HasOne(d => d.ListLfd)
                    .WithMany(p => p.DesignLegacyFieldMixedListLinkListLfds)
                    .HasForeignKey(d => d.ListLfdId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DesignLegacyFieldMixedListLink_DesignLegacyFields_ListField");

                entity.HasOne(d => d.ScreenLfd)
                    .WithMany(p => p.DesignLegacyFieldMixedListLinkScreenLfds)
                    .HasForeignKey(d => d.ScreenLfdId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DesignLegacyFieldMixedListLink_DesignLegacyFields_ScreenField");
            });

            modelBuilder.Entity<DesignLegacyFieldSearchModifier>(entity =>
            {
                entity.HasKey(e => e.SmId);

                entity.Property(e => e.SmId)
                    .ValueGeneratedNever()
                    .HasColumnName("SM_ID");

                entity.Property(e => e.LfdId).HasColumnName("LFD_ID");

                entity.Property(e => e.SearchModifier).HasColumnName("SEARCH_MODIFIER");

                entity.HasOne(d => d.Lfd)
                    .WithMany(p => p.DesignLegacyFieldSearchModifiers)
                    .HasForeignKey(d => d.LfdId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DesignLegacyFieldSearchModifiers_DesignLegacyFields");
            });

            modelBuilder.Entity<DesignLegacyFile>(entity =>
            {
                entity.HasKey(e => e.LegId);

                entity.Property(e => e.LegId)
                    .HasColumnName("LEG_ID")
                    .HasDefaultValueSql("(newsequentialid())");

                entity.Property(e => e.AccessOption).HasColumnName("ACCESS_OPTION");

                entity.Property(e => e.CanAddFields).HasColumnName("CAN_ADD_FIELDS");

                entity.Property(e => e.Category).HasColumnName("CATEGORY");

                entity.Property(e => e.GlobalSearchListId).HasColumnName("GLOBAL_SEARCH_LIST_ID");

                entity.Property(e => e.IsAdmin).HasColumnName("IS_ADMIN");

                entity.Property(e => e.IsEditable).HasColumnName("IS_EDITABLE");

                entity.Property(e => e.IsExtension).HasColumnName("IS_EXTENSION");

                entity.Property(e => e.IsLeadObject)
                    .HasColumnName("IS_LEAD_OBJECT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.LegacyType).HasColumnName("LEGACY_TYPE");

                entity.Property(e => e.ListDefaultView).HasColumnName("LIST_DEFAULT_VIEW");

                entity.Property(e => e.ListObjectRef).HasColumnName("LIST_OBJECT_REF");

                entity.Property(e => e.ObjectNameForMigration)
                    .HasMaxLength(100)
                    .HasColumnName("OBJECT_NAME_FOR_MIGRATION");

                entity.Property(e => e.PrimaryKeyColumn)
                    .HasMaxLength(100)
                    .HasColumnName("PRIMARY_KEY_COLUMN");

                entity.Property(e => e.PrimaryList).HasColumnName("PRIMARY_LIST");

                entity.Property(e => e.RenderRowsInEditMode).HasColumnName("RENDER_ROWS_IN_EDIT_MODE");

                entity.Property(e => e.RequiresAdminAccess).HasColumnName("REQUIRES_ADMIN_ACCESS");

                entity.Property(e => e.SaveEndpointType).HasColumnName("SAVE_ENDPOINT_TYPE");

                entity.Property(e => e.SecondaryGlobalSearchDataColumn)
                    .HasMaxLength(50)
                    .HasColumnName("SECONDARY_GLOBAL_SEARCH_DATA_COLUMN");

                entity.Property(e => e.SqlFunction)
                    .HasMaxLength(100)
                    .HasColumnName("SQL_FUNCTION");

                entity.Property(e => e.TableName)
                    .HasMaxLength(255)
                    .HasColumnName("TABLE_NAME");

                entity.Property(e => e.UndeleteLegId).HasColumnName("UNDELETE_LEG_ID");

                entity.Property(e => e.XmlFilename)
                    .HasMaxLength(255)
                    .HasColumnName("XML_FILENAME");

                entity.HasOne(d => d.ListObjectRefNavigation)
                    .WithMany(p => p.InverseListObjectRefNavigation)
                    .HasForeignKey(d => d.ListObjectRef)
                    .HasConstraintName("FK_DesignLegacyFiles_DesignLegacyFiles");

                entity.HasOne(d => d.UndeleteLeg)
                    .WithMany(p => p.InverseUndeleteLeg)
                    .HasForeignKey(d => d.UndeleteLegId)
                    .HasConstraintName("FK__DesignLeg__UNDEL__0E2806AF");
            });

            modelBuilder.Entity<DesignLegacyListOption>(entity =>
            {
                entity.HasKey(e => e.DloId)
                    .HasName("PK_DesignListOptions");

                entity.Property(e => e.DloId)
                    .HasColumnName("DLO_ID")
                    .HasDefaultValueSql("(newsequentialid())");

                entity.Property(e => e.FunctionName)
                    .HasMaxLength(255)
                    .HasColumnName("FUNCTION_NAME");

                entity.Property(e => e.LegId).HasColumnName("LEG_ID");

                entity.Property(e => e.ListOption)
                    .HasMaxLength(255)
                    .HasColumnName("LIST_OPTION");

                entity.Property(e => e.Selected).HasColumnName("SELECTED");

                entity.HasOne(d => d.Leg)
                    .WithMany(p => p.DesignLegacyListOptions)
                    .HasForeignKey(d => d.LegId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DesignListOptions_DesignLegacyFiles");
            });

            modelBuilder.Entity<DesignLegacyListView>(entity =>
            {
                entity.HasNoKey();

                entity.HasIndex(e => new { e.LegId, e.ListViewType }, "IX_DesignLegacyListViews")
                    .IsUnique();

                entity.Property(e => e.LegId).HasColumnName("LEG_ID");

                entity.Property(e => e.ListViewType).HasColumnName("LIST_VIEW_TYPE");

                entity.HasOne(d => d.Leg)
                    .WithMany()
                    .HasForeignKey(d => d.LegId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DesignLegacyListViews_DesignLegacyFiles");
            });

            modelBuilder.Entity<DesignLegacyPickerFilterField>(entity =>
            {
                entity.HasKey(e => new { e.LfdIdPicker, e.LfdIdFilterSource })
                    .HasName("PK_DesignLegacyPickerFields");

                entity.Property(e => e.LfdIdPicker).HasColumnName("LFD_ID_PICKER");

                entity.Property(e => e.LfdIdFilterSource).HasColumnName("LFD_ID_FILTER_SOURCE");

                entity.Property(e => e.AllowNulls).HasColumnName("ALLOW_NULLS");

                entity.Property(e => e.FilterSourceIsItemid).HasColumnName("FILTER_SOURCE_IS_ITEMID");

                entity.Property(e => e.IsButtonLink)
                    .HasColumnName("IS_BUTTON_LINK")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.LfdIdFilterTarget).HasColumnName("LFD_ID_FILTER_TARGET");

                entity.Property(e => e.OnlyAppliesForNewScreen).HasColumnName("ONLY_APPLIES_FOR_NEW_SCREEN");
            });

            modelBuilder.Entity<DesignLegacySubList>(entity =>
            {
                entity.HasKey(e => new { e.ObjectLegId, e.ListLegId })
                    .HasName("PK_DesignLegacySubLists_1");

                entity.Property(e => e.ObjectLegId).HasColumnName("OBJECT_LEG_ID");

                entity.Property(e => e.ListLegId).HasColumnName("LIST_LEG_ID");

                entity.Property(e => e.ParentField)
                    .HasMaxLength(255)
                    .HasColumnName("PARENT_FIELD");

                entity.HasOne(d => d.ListLeg)
                    .WithMany(p => p.DesignLegacySubListListLegs)
                    .HasForeignKey(d => d.ListLegId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DesignLegacySubLists_DesignLegacyFiles_List");

                entity.HasOne(d => d.ObjectLeg)
                    .WithMany(p => p.DesignLegacySubListObjectLegs)
                    .HasForeignKey(d => d.ObjectLegId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DesignLegacySubLists_DesignLegacyFiles_Object");
            });

            modelBuilder.Entity<DesignList>(entity =>
            {
                entity.HasKey(e => e.DltId);

                entity.Property(e => e.DltId)
                    .HasColumnName("DLT_ID")
                    .HasDefaultValueSql("(newsequentialid())");

                entity.Property(e => e.CanExpandToEdit).HasColumnName("CAN_EXPAND_TO_EDIT");

                entity.Property(e => e.CanNotesDigestForReports).HasColumnName("CAN_NOTES_DIGEST_FOR_REPORTS");

                entity.Property(e => e.DefaultDscId).HasColumnName("DEFAULT_DSC_ID");

                entity.Property(e => e.DefaultView)
                    .HasColumnName("DEFAULT_VIEW")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.DstId).HasColumnName("DST_ID");

                entity.Property(e => e.LegId).HasColumnName("LEG_ID");

                entity.Property(e => e.ListPrefix)
                    .HasMaxLength(20)
                    .HasColumnName("LIST_PREFIX");

                entity.HasOne(d => d.Dst)
                    .WithMany(p => p.DesignLists)
                    .HasForeignKey(d => d.DstId)
                    .HasConstraintName("FK_DesignLists_DesignSets");
            });

            modelBuilder.Entity<DesignListColumn>(entity =>
            {
                entity.HasKey(e => e.DlcId);

                entity.Property(e => e.DlcId)
                    .HasColumnName("DLC_ID")
                    .HasDefaultValueSql("(newsequentialid())");

                entity.Property(e => e.ColumnOrdinal).HasColumnName("COLUMN_ORDINAL");

                entity.Property(e => e.ColumnWidth).HasColumnName("COLUMN_WIDTH");

                entity.Property(e => e.DefaultField).HasColumnName("DEFAULT_FIELD");

                entity.Property(e => e.DltId).HasColumnName("DLT_ID");

                entity.Property(e => e.FrozenColumnLeftPosition).HasColumnName("FROZEN_COLUMN_LEFT_POSITION");

                entity.Property(e => e.IsFrozenColumn).HasColumnName("IS_FROZEN_COLUMN");

                entity.Property(e => e.IsSortAsc).HasColumnName("IS_SORT_ASC");

                entity.Property(e => e.IsSortColumn).HasColumnName("IS_SORT_COLUMN");

                entity.Property(e => e.Selectable).HasColumnName("SELECTABLE");

                entity.HasOne(d => d.DefaultFieldNavigation)
                    .WithMany(p => p.DesignListColumns)
                    .HasForeignKey(d => d.DefaultField)
                    .HasConstraintName("FK_DesignListColumns_DesignFields");

                entity.HasOne(d => d.Dlt)
                    .WithMany(p => p.DesignListColumns)
                    .HasForeignKey(d => d.DltId)
                    .HasConstraintName("FK_DesignListColumns_DesignLists");
            });

            modelBuilder.Entity<DesignListField>(entity =>
            {
                entity.HasKey(e => new { e.DfdId, e.DltId });

                entity.HasIndex(e => new { e.DfdId, e.DltId }, "IX__DesignListFields__DFD_ID_DLT_ID__SELECTABLE");

                entity.Property(e => e.DfdId)
                    .HasColumnName("DFD_ID")
                    .HasDefaultValueSql("(newsequentialid())");

                entity.Property(e => e.DltId).HasColumnName("DLT_ID");

                entity.Property(e => e.IsDefaultHorizontalField)
                    .HasColumnName("IS_DEFAULT_HORIZONTAL_FIELD")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.IsDefaultVerticalField)
                    .HasColumnName("IS_DEFAULT_VERTICAL_FIELD")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Selectable).HasColumnName("SELECTABLE");

                entity.HasOne(d => d.Dfd)
                    .WithMany(p => p.DesignListFields)
                    .HasForeignKey(d => d.DfdId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DesignListFields_DesignFields");

                entity.HasOne(d => d.Dlt)
                    .WithMany(p => p.DesignListFields)
                    .HasForeignKey(d => d.DltId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DesignListFields_DesignLists");
            });

            modelBuilder.Entity<DesignListViewMenuOrder>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("DesignListViewMenuOrder");

                entity.Property(e => e.DltId).HasColumnName("DLT_ID");

                entity.Property(e => e.Order).HasColumnName("ORDER");
            });

            modelBuilder.Entity<DesignMenuGroup>(entity =>
            {
                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.GroupDescription)
                    .HasMaxLength(50)
                    .HasColumnName("GROUP_DESCRIPTION")
                    .UseCollation("Latin1_General_CI_AS");

                entity.Property(e => e.GroupOrder).HasColumnName("GROUP_ORDER");

                entity.Property(e => e.MenuType).HasColumnName("MENU_TYPE");
            });

            modelBuilder.Entity<DesignMenuGroupItemOrder>(entity =>
            {
                entity.HasKey(e => e.LegId);

                entity.ToTable("DesignMenuGroupItemOrder");

                entity.Property(e => e.LegId)
                    .ValueGeneratedNever()
                    .HasColumnName("LEG_ID");

                entity.Property(e => e.GroupId).HasColumnName("GROUP_ID");

                entity.Property(e => e.ItemOrder).HasColumnName("ITEM_ORDER");

                entity.HasOne(d => d.Group)
                    .WithMany(p => p.DesignMenuGroupItemOrders)
                    .HasForeignKey(d => d.GroupId)
                    .HasConstraintName("FK_DesignMenuGroupItemOrder_DesignMenuGroups");

                entity.HasOne(d => d.Leg)
                    .WithOne(p => p.DesignMenuGroupItemOrder)
                    .HasForeignKey<DesignMenuGroupItemOrder>(d => d.LegId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DesignMenuGroupItemOrder_DesignLegacyFiles");
            });

            modelBuilder.Entity<DesignScreen>(entity =>
            {
                entity.HasKey(e => e.DscId);

                entity.Property(e => e.DscId)
                    .HasColumnName("DSC_ID")
                    .HasDefaultValueSql("(newsequentialid())");

                entity.Property(e => e.AvatarsEnabled).HasColumnName("AVATARS_ENABLED");

                entity.Property(e => e.DstId).HasColumnName("DST_ID");

                entity.Property(e => e.DuplicateCheckEnabled).HasColumnName("DUPLICATE_CHECK_ENABLED");

                entity.Property(e => e.GloballySearchable).HasColumnName("GLOBALLY_SEARCHABLE");

                entity.Property(e => e.IsEditable).HasColumnName("IS_EDITABLE");

                entity.Property(e => e.IsOnNewMenu)
                    .HasColumnName("IS_ON_NEW_MENU")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.LegId).HasColumnName("LEG_ID");

                entity.Property(e => e.PrimaryScreen).HasColumnName("PRIMARY_SCREEN");

                entity.Property(e => e.ShortCodePrefix)
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX");

                entity.HasOne(d => d.Dst)
                    .WithMany(p => p.DesignScreens)
                    .HasForeignKey(d => d.DstId)
                    .HasConstraintName("FK_DesignScreens_DesignSets");
            });

            modelBuilder.Entity<DesignScreenDedupeOverrideUser>(entity =>
            {
                entity.HasKey(e => new { e.DscId, e.UsId })
                    .HasName("PK_DesignScreenDupeOverride");

                entity.Property(e => e.DscId).HasColumnName("DSC_ID");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.HasOne(d => d.Us)
                    .WithMany(p => p.DesignScreenDedupeOverrideUsers)
                    .HasForeignKey(d => d.UsId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DesignScreenDedupeOverrideUsers_USERS");
            });

            modelBuilder.Entity<DesignScreenFieldGroup>(entity =>
            {
                entity.HasKey(e => e.DsfgId);

                entity.Property(e => e.DsfgId)
                    .HasColumnName("DSFG_ID")
                    .HasDefaultValueSql("(newsequentialid())");

                entity.Property(e => e.AccessRights).HasColumnName("ACCESS_RIGHTS");

                entity.Property(e => e.DspsId).HasColumnName("DSPS_ID");

                entity.Property(e => e.FieldGroupOrdinal).HasColumnName("FIELD_GROUP_ORDINAL");

                entity.Property(e => e.FieldGroupWidth)
                    .HasColumnName("FIELD_GROUP_WIDTH")
                    .HasDefaultValueSql("((3))");

                entity.HasOne(d => d.Dsps)
                    .WithMany(p => p.DesignScreenFieldGroups)
                    .HasForeignKey(d => d.DspsId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DesignScreenFieldGroups_DesignScreenPageSections");
            });

            modelBuilder.Entity<DesignScreenPage>(entity =>
            {
                entity.HasKey(e => e.DspId)
                    .HasName("PK_DesignScreenPage");

                entity.Property(e => e.DspId)
                    .HasColumnName("DSP_ID")
                    .HasDefaultValueSql("(newsequentialid())");

                entity.Property(e => e.AccessRights).HasColumnName("ACCESS_RIGHTS");

                entity.Property(e => e.DscId).HasColumnName("DSC_ID");

                entity.Property(e => e.IsFixed).HasColumnName("IS_FIXED");

                entity.Property(e => e.PageOrdinal).HasColumnName("PAGE_ORDINAL");

                entity.HasOne(d => d.Dsc)
                    .WithMany(p => p.DesignScreenPages)
                    .HasForeignKey(d => d.DscId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DesignScreenPages_DesignScreens");
            });

            modelBuilder.Entity<DesignScreenPageSection>(entity =>
            {
                entity.HasKey(e => e.DspsId);

                entity.Property(e => e.DspsId)
                    .HasColumnName("DSPS_ID")
                    .HasDefaultValueSql("(newsequentialid())");

                entity.Property(e => e.AccessRights).HasColumnName("ACCESS_RIGHTS");

                entity.Property(e => e.DspId).HasColumnName("DSP_ID");

                entity.Property(e => e.IframeUrl)
                    .HasMaxLength(255)
                    .HasColumnName("IFRAME_URL");

                entity.Property(e => e.IntegrationId).HasColumnName("INTEGRATION_ID");

                entity.Property(e => e.IsFixed).HasColumnName("IS_FIXED");

                entity.Property(e => e.ReqId).HasColumnName("REQ_ID");

                entity.Property(e => e.SectionOrdinal).HasColumnName("SECTION_ORDINAL");

                entity.Property(e => e.SectionType).HasColumnName("SECTION_TYPE");

                entity.Property(e => e.SectionWidth)
                    .HasColumnName("SECTION_WIDTH")
                    .HasDefaultValueSql("((3))");

                entity.Property(e => e.SubFolder)
                    .HasMaxLength(255)
                    .HasColumnName("SUB_FOLDER");

                entity.Property(e => e.SublistDltId).HasColumnName("SUBLIST_DLT_ID");

                entity.Property(e => e.TimePurchased)
                    .IsRequired()
                    .HasColumnName("TIME_PURCHASED")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.UnitPurchased)
                    .IsRequired()
                    .HasColumnName("UNIT_PURCHASED")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.UserTimePurchased)
                    .IsRequired()
                    .HasColumnName("USER_TIME_PURCHASED")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.UserUnitPurchased)
                    .IsRequired()
                    .HasColumnName("USER_UNIT_PURCHASED")
                    .HasDefaultValueSql("((1))");

                entity.HasOne(d => d.Dsp)
                    .WithMany(p => p.DesignScreenPageSections)
                    .HasForeignKey(d => d.DspId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DesignScreenPageSections_DesignScreenPages");
            });

            modelBuilder.Entity<DesignScreenTeamEditability>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("DesignScreenTeamEditability");

                entity.Property(e => e.ScreenComponentId).HasColumnName("SCREEN_COMPONENT_ID");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");
            });

            modelBuilder.Entity<DesignScreenTeamVisibility>(entity =>
            {
                entity.HasKey(e => new { e.ScreenComponentId, e.UsgId })
                    .HasName("PK_ScreenComponentId_TeamId")
                    .IsClustered(false);

                entity.ToTable("DesignScreenTeamVisibility");

                entity.Property(e => e.ScreenComponentId).HasColumnName("SCREEN_COMPONENT_ID");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");
            });

            modelBuilder.Entity<DesignScreenVisibilityRule>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.DroId).HasColumnName("DRO_ID");

                entity.Property(e => e.LfdId).HasColumnName("LFD_ID");

                entity.Property(e => e.ScreenComponentId).HasColumnName("SCREEN_COMPONENT_ID");
            });

            modelBuilder.Entity<DesignSet>(entity =>
            {
                entity.HasKey(e => e.DstId);

                entity.Property(e => e.DstId)
                    .HasColumnName("DST_ID")
                    .HasDefaultValueSql("(newsequentialid())");
            });

            modelBuilder.Entity<DesignSubList>(entity =>
            {
                entity.HasKey(e => new { e.DltId, e.DspsId });

                entity.Property(e => e.DltId).HasColumnName("DLT_ID");

                entity.Property(e => e.DspsId).HasColumnName("DSPS_ID");

                entity.HasOne(d => d.Dlt)
                    .WithMany(p => p.DesignSubLists)
                    .HasForeignKey(d => d.DltId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DesignSubLists_DesignLists");

                entity.HasOne(d => d.Dsps)
                    .WithMany(p => p.DesignSubLists)
                    .HasForeignKey(d => d.DspsId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DesignSubLists_DesignScreenPageSections");
            });

            modelBuilder.Entity<DesignTheme>(entity =>
            {
                entity.HasKey(e => new { e.LegId, e.DstId });

                entity.Property(e => e.LegId).HasColumnName("LEG_ID");

                entity.Property(e => e.DstId).HasColumnName("DST_ID");

                entity.Property(e => e.Color).HasColumnName("COLOR");

                entity.Property(e => e.Icon)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("ICON");

                entity.HasOne(d => d.Dst)
                    .WithMany(p => p.DesignThemes)
                    .HasForeignKey(d => d.DstId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DesignThemes_DesignSets");

                entity.HasOne(d => d.Leg)
                    .WithMany(p => p.DesignThemes)
                    .HasForeignKey(d => d.LegId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DesignThemes_DesignLegacyFiles");
            });

            modelBuilder.Entity<Document>(entity =>
            {
                entity.HasKey(e => e.DocId);

                entity.ToTable("DOCUMENTS");

                entity.HasIndex(e => e.AcId, "IX_DOCUMENTS_AC_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.CreatedDate, "IX_DOCUMENTS_CREATED_DATE")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.RefId, "IX_DOCUMENTS_REF_ID")
                    .HasFillFactor((byte)80);

                entity.Property(e => e.DocId)
                    .ValueGeneratedNever()
                    .HasColumnName("DOC_ID");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.DocDeleted).HasColumnName("DOC_DELETED");

                entity.Property(e => e.Path)
                    .HasMaxLength(2000)
                    .HasColumnName("PATH");

                entity.Property(e => e.RefId).HasColumnName("REF_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Type)
                    .HasMaxLength(50)
                    .HasColumnName("TYPE");

                entity.Property(e => e.Ud1)
                    .HasMaxLength(255)
                    .HasColumnName("UD1");

                entity.Property(e => e.Ud10)
                    .HasMaxLength(255)
                    .HasColumnName("UD10");

                entity.Property(e => e.Ud11)
                    .HasMaxLength(255)
                    .HasColumnName("UD11");

                entity.Property(e => e.Ud12)
                    .HasMaxLength(255)
                    .HasColumnName("UD12");

                entity.Property(e => e.Ud13)
                    .HasMaxLength(255)
                    .HasColumnName("UD13");

                entity.Property(e => e.Ud14)
                    .HasMaxLength(255)
                    .HasColumnName("UD14");

                entity.Property(e => e.Ud15)
                    .HasMaxLength(255)
                    .HasColumnName("UD15");

                entity.Property(e => e.Ud2)
                    .HasMaxLength(255)
                    .HasColumnName("UD2");

                entity.Property(e => e.Ud3)
                    .HasMaxLength(255)
                    .HasColumnName("UD3");

                entity.Property(e => e.Ud4)
                    .HasMaxLength(255)
                    .HasColumnName("UD4");

                entity.Property(e => e.Ud5)
                    .HasMaxLength(255)
                    .HasColumnName("UD5");

                entity.Property(e => e.Ud6)
                    .HasMaxLength(255)
                    .HasColumnName("UD6");

                entity.Property(e => e.Ud7)
                    .HasMaxLength(255)
                    .HasColumnName("UD7");

                entity.Property(e => e.Ud8)
                    .HasMaxLength(255)
                    .HasColumnName("UD8");

                entity.Property(e => e.Ud9)
                    .HasMaxLength(255)
                    .HasColumnName("UD9");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.HasOne(d => d.Ac)
                    .WithMany(p => p.Documents)
                    .HasForeignKey(d => d.AcId)
                    .HasConstraintName("FK_DOCUMENTS_ACCOUNTS");
            });

            modelBuilder.Entity<DocumentGenerationJob>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.DocumentFileName).HasMaxLength(255);

                entity.Property(e => e.MergedFilePath).HasMaxLength(2000);

                entity.Property(e => e.TemplateName)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<DocumentGenerationJobItem>(entity =>
            {
                entity.ToTable("DocumentGenerationJobItem");

                entity.HasIndex(e => e.ItemId, "IX_DocumentGenerationJobItem");

                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.DocumentJobItemReferenceId).HasMaxLength(255);

                entity.Property(e => e.ErrorMessage).HasMaxLength(255);

                entity.HasOne(d => d.Job)
                    .WithMany(p => p.DocumentGenerationJobItems)
                    .HasForeignKey(d => d.JobId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__DocumentG__JobId__09801FC7");
            });

            modelBuilder.Entity<DocumentsFolder>(entity =>
            {
                entity.HasKey(e => e.DocfId);

                entity.ToTable("DOCUMENTS_FOLDERS");

                entity.HasIndex(e => new { e.RefId, e.DocfDeleted }, "IX__DOCUMENTS_FOLDERS__REF_ID_DOCF_DELETED");

                entity.Property(e => e.DocfId)
                    .ValueGeneratedNever()
                    .HasColumnName("DOCF_ID");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DocfDeleted).HasColumnName("DOCF_DELETED");

                entity.Property(e => e.Path)
                    .HasMaxLength(500)
                    .HasColumnName("PATH");

                entity.Property(e => e.RefId).HasColumnName("REF_ID");

                entity.Property(e => e.Subfolders).HasColumnName("SUBFOLDERS");
            });

            modelBuilder.Entity<Drop>(entity =>
            {
                entity.HasKey(e => e.DrId);

                entity.ToTable("DROPS");

                entity.Property(e => e.DrId)
                    .HasColumnName("DR_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.DropOptionsAreScreenDesignable)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.ExternalId)
                    .HasMaxLength(50)
                    .HasColumnName("EXTERNAL_ID");

                entity.Property(e => e.Label)
                    .HasMaxLength(255)
                    .HasColumnName("LABEL");

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<Drop1>(entity =>
            {
                entity.HasKey(e => e.DrId);

                entity.ToTable("DROPS", "install");

                entity.Property(e => e.DrId)
                    .ValueGeneratedNever()
                    .HasColumnName("DR_ID");

                entity.Property(e => e.Details)
                    .HasColumnName("DETAILS")
                    .UseCollation("Latin1_General_CI_AS");

                entity.Property(e => e.DropOptionsAreScreenDesignable)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.ExternalId)
                    .HasMaxLength(50)
                    .HasColumnName("EXTERNAL_ID")
                    .UseCollation("Latin1_General_CI_AS");

                entity.Property(e => e.Label)
                    .HasMaxLength(255)
                    .HasColumnName("LABEL")
                    .UseCollation("Latin1_General_CI_AS");

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY")
                    .UseCollation("Latin1_General_CI_AS");
            });

            modelBuilder.Entity<DropsOption>(entity =>
            {
                entity.HasKey(e => e.DroId);

                entity.ToTable("DROPS_OPTIONS");

                entity.HasIndex(e => e.DrId, "IX_DROPS_OPTIONS_DR_ID")
                    .HasFillFactor((byte)80);

                entity.Property(e => e.DroId)
                    .HasColumnName("DRO_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.DrId).HasColumnName("DR_ID");

                entity.Property(e => e.DroDeleted).HasColumnName("DRO_DELETED");

                entity.Property(e => e.DroOrder).HasColumnName("DRO_ORDER");

                entity.Property(e => e.ExternalId)
                    .HasMaxLength(50)
                    .HasColumnName("EXTERNAL_ID");

                entity.Property(e => e.Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("HLIGHT");

                entity.Property(e => e.PaId).HasColumnName("PA_ID");

                entity.Property(e => e.State)
                    .HasMaxLength(10)
                    .HasColumnName("STATE")
                    .HasDefaultValueSql("('OPEN')");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.HasOne(d => d.Dr)
                    .WithMany(p => p.DropsOptions)
                    .HasForeignKey(d => d.DrId)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_DROPS_OPTIONS_DROPS");

                entity.HasOne(d => d.Pa)
                    .WithMany(p => p.DropsOptions)
                    .HasForeignKey(d => d.PaId)
                    .HasConstraintName("FK_DROPS_OPTIONS_PARAGRAPHS");
            });

            modelBuilder.Entity<DropsOption1>(entity =>
            {
                entity.HasKey(e => e.DroId);

                entity.ToTable("DROPS_OPTIONS", "install");

                entity.Property(e => e.DroId)
                    .ValueGeneratedNever()
                    .HasColumnName("DRO_ID");

                entity.Property(e => e.Details)
                    .HasColumnName("DETAILS")
                    .UseCollation("Latin1_General_CI_AS");

                entity.Property(e => e.DrId).HasColumnName("DR_ID");

                entity.Property(e => e.DroDeleted).HasColumnName("DRO_DELETED");

                entity.Property(e => e.DroOrder).HasColumnName("DRO_ORDER");

                entity.Property(e => e.ExternalId)
                    .HasMaxLength(50)
                    .HasColumnName("EXTERNAL_ID")
                    .UseCollation("Latin1_General_CI_AS");

                entity.Property(e => e.Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("HLIGHT")
                    .UseCollation("Latin1_General_CI_AS");

                entity.Property(e => e.PaId).HasColumnName("PA_ID");

                entity.Property(e => e.State)
                    .HasMaxLength(10)
                    .HasColumnName("STATE")
                    .UseCollation("Latin1_General_CI_AS");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY")
                    .UseCollation("Latin1_General_CI_AS");

                entity.HasOne(d => d.Dr)
                    .WithMany(p => p.DropsOption1s)
                    .HasForeignKey(d => d.DrId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DROPS_OPTIONS_DROPS");
            });

            modelBuilder.Entity<DropsOptionsParent>(entity =>
            {
                entity.HasKey(e => new { e.DroId, e.ParentId });

                entity.ToTable("DROPS_OPTIONS_PARENTS");

                entity.Property(e => e.DroId).HasColumnName("DRO_ID");

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");
            });

            modelBuilder.Entity<EmailJob>(entity =>
            {
                entity.HasKey(e => e.EjId);

                entity.ToTable("EMAIL_JOBS");

                entity.Property(e => e.EjId)
                    .ValueGeneratedNever()
                    .HasColumnName("EJ_ID");

                entity.Property(e => e.Body)
                    .IsRequired()
                    .HasColumnName("BODY");

                entity.Property(e => e.CoId).HasColumnName("CO_ID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.State).HasColumnName("STATE");

                entity.Property(e => e.Subject)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("SUBJECT");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.HasOne(d => d.Co)
                    .WithMany(p => p.EmailJobs)
                    .HasForeignKey(d => d.CoId)
                    .HasConstraintName("FK_EMAIL_JOBS_CORRESPONDENCE");

                entity.HasOne(d => d.Us)
                    .WithMany(p => p.EmailJobs)
                    .HasForeignKey(d => d.UsId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_EMAIL_JOBS_USERS");
            });

            modelBuilder.Entity<EmailJobsRecipient>(entity =>
            {
                entity.HasKey(e => e.ErId);

                entity.ToTable("EMAIL_JOBS_RECIPIENTS");

                entity.Property(e => e.ErId)
                    .ValueGeneratedNever()
                    .HasColumnName("ER_ID");

                entity.Property(e => e.EjId).HasColumnName("EJ_ID");

                entity.Property(e => e.Email)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("EMAIL");

                entity.Property(e => e.RecipientType).HasColumnName("RECIPIENT_TYPE");

                entity.HasOne(d => d.Ej)
                    .WithMany(p => p.EmailJobsRecipients)
                    .HasForeignKey(d => d.EjId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_EMAIL_JOBS_RECIPIENTS_EMAIL_JOBS");
            });

            modelBuilder.Entity<Event>(entity =>
            {
                entity.HasKey(e => e.EvId);

                entity.ToTable("EVENTS");

                entity.HasIndex(e => e.AcId, "IX_EVENTS_AC_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.CreatedDate, "IX_EVENTS_CREATED_DATE")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.RefId, "IX_EVENTS_REF_ID")
                    .HasFillFactor((byte)80);

                entity.Property(e => e.EvId)
                    .HasColumnName("EV_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.ActId).HasColumnName("ACT_ID");

                entity.Property(e => e.Class)
                    .HasMaxLength(10)
                    .HasColumnName("CLASS");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Details)
                    .HasMaxLength(255)
                    .HasColumnName("DETAILS");

                entity.Property(e => e.McaId).HasColumnName("MCA_ID");

                entity.Property(e => e.OpId).HasColumnName("OP_ID");

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.ParentSummary)
                    .HasMaxLength(255)
                    .HasColumnName("PARENT_SUMMARY");

                entity.Property(e => e.ParentType)
                    .HasMaxLength(50)
                    .HasColumnName("PARENT_TYPE");

                entity.Property(e => e.PjId).HasColumnName("PJ_ID");

                entity.Property(e => e.RefId).HasColumnName("REF_ID");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.SrcId).HasColumnName("SRC_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Type)
                    .HasMaxLength(50)
                    .HasColumnName("TYPE");

                entity.HasOne(d => d.Ac)
                    .WithMany(p => p.Events)
                    .HasForeignKey(d => d.AcId)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_EVENTS_ACCOUNTS");
            });

            modelBuilder.Entity<EventImage>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("EVENT_IMAGES");

                entity.Property(e => e.CropPoints)
                    .HasMaxLength(255)
                    .HasColumnName("CROP_POINTS");

                entity.Property(e => e.CroppedImageFileName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("CROPPED_IMAGE_FILE_NAME");

                entity.Property(e => e.EvtAssetId).HasColumnName("EVT_ASSET_ID");

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.EvtImageId).HasColumnName("EVT_IMAGE_ID");

                entity.Property(e => e.FileName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("FILE_NAME");

                entity.Property(e => e.Zoom)
                    .HasMaxLength(255)
                    .HasColumnName("ZOOM");
            });

            modelBuilder.Entity<EventInfoAssetItem>(entity =>
            {
                entity.HasKey(e => e.EvtAssetItemId);

                entity.ToTable("EVENT_INFO_ASSET_ITEMS");

                entity.Property(e => e.EvtAssetItemId)
                    .ValueGeneratedNever()
                    .HasColumnName("EVT_ASSET_ITEM_ID");

                entity.Property(e => e.EvtAssetId).HasColumnName("EVT_ASSET_ID");

                entity.Property(e => e.FileName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("FILE_NAME");

                entity.Property(e => e.LinkLabel)
                    .HasMaxLength(255)
                    .HasColumnName("LINK_LABEL");
            });

            modelBuilder.Entity<EventInformation>(entity =>
            {
                entity.HasKey(e => e.EvtInfoId)
                    .HasName("PK__EVENT_IN__A27B21CBF10FEB97");

                entity.ToTable("EVENT_INFORMATION");

                entity.Property(e => e.EvtInfoId)
                    .HasColumnName("EVT_INFO_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.HasOne(d => d.Sem)
                    .WithMany(p => p.EventInformations)
                    .HasForeignKey(d => d.SemId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__EVENT_INF__SEM_I__212D8C26");
            });

            modelBuilder.Entity<EventInformationAsset>(entity =>
            {
                entity.HasKey(e => e.AssetId);

                entity.ToTable("EVENT_INFORMATION_ASSETS");

                entity.Property(e => e.AssetId)
                    .ValueGeneratedNever()
                    .HasColumnName("ASSET_ID");

                entity.Property(e => e.AssetType).HasColumnName("ASSET_TYPE");

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.EvtInfoOrder).HasColumnName("EVT_INFO_ORDER");
            });

            modelBuilder.Entity<EventInformationField>(entity =>
            {
                entity.HasKey(e => new { e.EvtInfoId, e.LfdId })
                    .HasName("PK_EVENT_INFORMATION_EVENT_INFORMATION_FIELDS");

                entity.ToTable("EVENT_INFORMATION_FIELDS");

                entity.Property(e => e.EvtInfoId).HasColumnName("EVT_INFO_ID");

                entity.Property(e => e.LfdId).HasColumnName("LFD_ID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Order).HasColumnName("ORDER");
            });

            modelBuilder.Entity<EventMessage>(entity =>
            {
                entity.ToTable("EventMessage");

                entity.Property(e => e.Id).HasDefaultValueSql("(newid())");

                entity.Property(e => e.JobType).HasMaxLength(255);

                entity.Property(e => e.LastUpdated).HasColumnType("datetime");

                entity.Property(e => e.MessageStatus).HasDefaultValueSql("((0))");

                entity.Property(e => e.RaisedDate).HasColumnType("datetime");

                entity.Property(e => e.TaskType).HasMaxLength(255);
            });

            modelBuilder.Entity<EventMessageSetting>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.AuthenticationType).HasDefaultValueSql("((0))");

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.Enabled)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.FriendlyName)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.TargetUri).IsRequired();
            });

            modelBuilder.Entity<EventMessageSource>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Summary).HasMaxLength(255);
            });

            modelBuilder.Entity<EventbriteContactStaging>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("EVENTBRITE_CONTACT_STAGING");

                entity.Property(e => e.EcsId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ECS_ID");

                entity.Property(e => e.Email)
                    .HasMaxLength(255)
                    .HasColumnName("EMAIL");
            });

            modelBuilder.Entity<EventbriteImport>(entity =>
            {
                entity.HasKey(e => e.EiId);

                entity.ToTable("EVENTBRITE_IMPORTS");

                entity.HasIndex(e => e.ShortCode, "IX__EVENTBRITE_IMPORTS__SHORT_CODE");

                entity.Property(e => e.EiId)
                    .ValueGeneratedNever()
                    .HasColumnName("EI_ID");

                entity.Property(e => e.Capacity).HasColumnName("CAPACITY");

                entity.Property(e => e.Category)
                    .HasMaxLength(255)
                    .HasColumnName("CATEGORY");

                entity.Property(e => e.Changed)
                    .HasColumnType("datetime")
                    .HasColumnName("CHANGED");

                entity.Property(e => e.Created)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Currency)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CURRENCY")
                    .IsFixedLength(true);

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.EiDeleted).HasColumnName("EI_DELETED");

                entity.Property(e => e.EiStatus).HasColumnName("EI_STATUS");

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("END_DATE");

                entity.Property(e => e.EventId)
                    .HasMaxLength(50)
                    .HasColumnName("EVENT_ID");

                entity.Property(e => e.EventName)
                    .HasMaxLength(255)
                    .HasColumnName("EVENT_NAME");

                entity.Property(e => e.Format)
                    .HasMaxLength(255)
                    .HasColumnName("FORMAT");

                entity.Property(e => e.InviteOnly).HasColumnName("INVITE_ONLY");

                entity.Property(e => e.Listed).HasColumnName("LISTED");

                entity.Property(e => e.OnlineEvent).HasColumnName("ONLINE_EVENT");

                entity.Property(e => e.Organiser)
                    .HasMaxLength(255)
                    .HasColumnName("ORGANISER");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", true);

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'EBI-')");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("START_DATE");

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .HasColumnName("STATUS");

                entity.Property(e => e.Subcategory)
                    .HasMaxLength(255)
                    .HasColumnName("SUBCATEGORY");

                entity.Property(e => e.Timezone)
                    .HasMaxLength(255)
                    .HasColumnName("TIMEZONE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.Url)
                    .HasMaxLength(255)
                    .HasColumnName("URL");
            });

            modelBuilder.Entity<ExtensionsDatum>(entity =>
            {
                entity.HasKey(e => e.EdId);

                entity.ToTable("EXTENSIONS_DATA");

                entity.Property(e => e.EdId)
                    .ValueGeneratedNever()
                    .HasColumnName("ED_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.EdDeleted).HasColumnName("ED_DELETED");

                entity.Property(e => e.EdUd10Bit).HasColumnName("ED_UD10_BIT");

                entity.Property(e => e.EdUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ED_UD10_DATE");

                entity.Property(e => e.EdUd10Id).HasColumnName("ED_UD10_ID");

                entity.Property(e => e.EdUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ED_UD10_NUMERIC");

                entity.Property(e => e.EdUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("ED_UD10_TEXT");

                entity.Property(e => e.EdUd11Bit).HasColumnName("ED_UD11_BIT");

                entity.Property(e => e.EdUd11Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ED_UD11_DATE");

                entity.Property(e => e.EdUd11Id).HasColumnName("ED_UD11_ID");

                entity.Property(e => e.EdUd11Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ED_UD11_NUMERIC");

                entity.Property(e => e.EdUd11Text)
                    .HasMaxLength(255)
                    .HasColumnName("ED_UD11_TEXT");

                entity.Property(e => e.EdUd12Bit).HasColumnName("ED_UD12_BIT");

                entity.Property(e => e.EdUd12Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ED_UD12_DATE");

                entity.Property(e => e.EdUd12Id).HasColumnName("ED_UD12_ID");

                entity.Property(e => e.EdUd12Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ED_UD12_NUMERIC");

                entity.Property(e => e.EdUd12Text)
                    .HasMaxLength(255)
                    .HasColumnName("ED_UD12_TEXT");

                entity.Property(e => e.EdUd13Bit).HasColumnName("ED_UD13_BIT");

                entity.Property(e => e.EdUd13Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ED_UD13_DATE");

                entity.Property(e => e.EdUd13Id).HasColumnName("ED_UD13_ID");

                entity.Property(e => e.EdUd13Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ED_UD13_NUMERIC");

                entity.Property(e => e.EdUd13Text)
                    .HasMaxLength(255)
                    .HasColumnName("ED_UD13_TEXT");

                entity.Property(e => e.EdUd14Bit).HasColumnName("ED_UD14_BIT");

                entity.Property(e => e.EdUd14Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ED_UD14_DATE");

                entity.Property(e => e.EdUd14Id).HasColumnName("ED_UD14_ID");

                entity.Property(e => e.EdUd14Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ED_UD14_NUMERIC");

                entity.Property(e => e.EdUd14Text)
                    .HasMaxLength(255)
                    .HasColumnName("ED_UD14_TEXT");

                entity.Property(e => e.EdUd15Bit).HasColumnName("ED_UD15_BIT");

                entity.Property(e => e.EdUd15Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ED_UD15_DATE");

                entity.Property(e => e.EdUd15Id).HasColumnName("ED_UD15_ID");

                entity.Property(e => e.EdUd15Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ED_UD15_NUMERIC");

                entity.Property(e => e.EdUd15Text)
                    .HasMaxLength(255)
                    .HasColumnName("ED_UD15_TEXT");

                entity.Property(e => e.EdUd16Bit).HasColumnName("ED_UD16_BIT");

                entity.Property(e => e.EdUd16Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ED_UD16_DATE");

                entity.Property(e => e.EdUd16Id).HasColumnName("ED_UD16_ID");

                entity.Property(e => e.EdUd16Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ED_UD16_NUMERIC");

                entity.Property(e => e.EdUd16Text)
                    .HasMaxLength(255)
                    .HasColumnName("ED_UD16_TEXT");

                entity.Property(e => e.EdUd17Bit).HasColumnName("ED_UD17_BIT");

                entity.Property(e => e.EdUd17Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ED_UD17_DATE");

                entity.Property(e => e.EdUd17Id).HasColumnName("ED_UD17_ID");

                entity.Property(e => e.EdUd17Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ED_UD17_NUMERIC");

                entity.Property(e => e.EdUd17Text)
                    .HasMaxLength(255)
                    .HasColumnName("ED_UD17_TEXT");

                entity.Property(e => e.EdUd18Bit).HasColumnName("ED_UD18_BIT");

                entity.Property(e => e.EdUd18Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ED_UD18_DATE");

                entity.Property(e => e.EdUd18Id).HasColumnName("ED_UD18_ID");

                entity.Property(e => e.EdUd18Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ED_UD18_NUMERIC");

                entity.Property(e => e.EdUd18Text)
                    .HasMaxLength(255)
                    .HasColumnName("ED_UD18_TEXT");

                entity.Property(e => e.EdUd19Bit).HasColumnName("ED_UD19_BIT");

                entity.Property(e => e.EdUd19Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ED_UD19_DATE");

                entity.Property(e => e.EdUd19Id).HasColumnName("ED_UD19_ID");

                entity.Property(e => e.EdUd19Text)
                    .HasMaxLength(255)
                    .HasColumnName("ED_UD19_TEXT");

                entity.Property(e => e.EdUd1Bit).HasColumnName("ED_UD1_BIT");

                entity.Property(e => e.EdUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ED_UD1_DATE");

                entity.Property(e => e.EdUd1Id).HasColumnName("ED_UD1_ID");

                entity.Property(e => e.EdUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ED_UD1_NUMERIC");

                entity.Property(e => e.EdUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("ED_UD1_TEXT");

                entity.Property(e => e.EdUd20Bit).HasColumnName("ED_UD20_BIT");

                entity.Property(e => e.EdUd20Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ED_UD20_DATE");

                entity.Property(e => e.EdUd20Id).HasColumnName("ED_UD20_ID");

                entity.Property(e => e.EdUd20Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ED_UD20_NUMERIC");

                entity.Property(e => e.EdUd20Text)
                    .HasMaxLength(255)
                    .HasColumnName("ED_UD20_TEXT");

                entity.Property(e => e.EdUd2Bit).HasColumnName("ED_UD2_BIT");

                entity.Property(e => e.EdUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ED_UD2_DATE");

                entity.Property(e => e.EdUd2Id).HasColumnName("ED_UD2_ID");

                entity.Property(e => e.EdUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ED_UD2_NUMERIC");

                entity.Property(e => e.EdUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("ED_UD2_TEXT");

                entity.Property(e => e.EdUd3Bit).HasColumnName("ED_UD3_BIT");

                entity.Property(e => e.EdUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ED_UD3_DATE");

                entity.Property(e => e.EdUd3Id).HasColumnName("ED_UD3_ID");

                entity.Property(e => e.EdUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ED_UD3_NUMERIC");

                entity.Property(e => e.EdUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("ED_UD3_TEXT");

                entity.Property(e => e.EdUd4Bit).HasColumnName("ED_UD4_bit");

                entity.Property(e => e.EdUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ED_UD4_DATE");

                entity.Property(e => e.EdUd4Id).HasColumnName("ED_UD4_ID");

                entity.Property(e => e.EdUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ED_UD4_NUMERIC");

                entity.Property(e => e.EdUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("ED_UD4_TEXT");

                entity.Property(e => e.EdUd5Bit).HasColumnName("ED_UD5_BIT");

                entity.Property(e => e.EdUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ED_UD5_DATE");

                entity.Property(e => e.EdUd5Id).HasColumnName("ED_UD5_ID");

                entity.Property(e => e.EdUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ED_UD5_NUMERIC");

                entity.Property(e => e.EdUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("ED_UD5_TEXT");

                entity.Property(e => e.EdUd6Bit).HasColumnName("ED_UD6_BIT");

                entity.Property(e => e.EdUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ED_UD6_DATE");

                entity.Property(e => e.EdUd6Id).HasColumnName("ED_UD6_ID");

                entity.Property(e => e.EdUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ED_UD6_NUMERIC");

                entity.Property(e => e.EdUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("ED_UD6_TEXT");

                entity.Property(e => e.EdUd7Bit).HasColumnName("ED_UD7_BIT");

                entity.Property(e => e.EdUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ED_UD7_DATE");

                entity.Property(e => e.EdUd7Id).HasColumnName("ED_UD7_ID");

                entity.Property(e => e.EdUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ED_UD7_NUMERIC");

                entity.Property(e => e.EdUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("ED_UD7_TEXT");

                entity.Property(e => e.EdUd8Bit).HasColumnName("ED_UD8_BIT");

                entity.Property(e => e.EdUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ED_UD8_DATE");

                entity.Property(e => e.EdUd8Id).HasColumnName("ED_UD8_ID");

                entity.Property(e => e.EdUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ED_UD8_NUMERIC");

                entity.Property(e => e.EdUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("ED_UD8_TEXT");

                entity.Property(e => e.EdUd9Bit).HasColumnName("ED_UD9_BIT");

                entity.Property(e => e.EdUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ED_UD9_DATE");

                entity.Property(e => e.EdUd9Id).HasColumnName("ED_UD9_ID");

                entity.Property(e => e.EdUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ED_UD9_NUMERIC");

                entity.Property(e => e.EdUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("ED_UD9_TEXT");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.Parenttype)
                    .HasMaxLength(255)
                    .HasColumnName("PARENTTYPE");

                entity.Property(e => e.Subtype)
                    .HasMaxLength(255)
                    .HasColumnName("SUBTYPE");

                entity.Property(e => e.Type)
                    .HasMaxLength(255)
                    .HasColumnName("TYPE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<ExtensionsIgnoreList>(entity =>
            {
                entity.HasKey(e => e.FilePath)
                    .HasName("PK__EXTENSIO__96D1EEAADC2E288C");

                entity.ToTable("EXTENSIONS_IGNORE_LIST");

                entity.Property(e => e.FilePath)
                    .HasMaxLength(200)
                    .HasColumnName("FILE_PATH");
            });

            modelBuilder.Entity<ExternalItem>(entity =>
            {
                entity.HasKey(e => e.ExiId);

                entity.ToTable("EXTERNAL_ITEMS");

                entity.Property(e => e.ExiId)
                    .HasColumnName("EXI_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Color).HasColumnName("COLOR");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.ExiDeleted)
                    .HasColumnName("EXI_DELETED")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.IconName)
                    .HasMaxLength(255)
                    .HasColumnName("ICON_NAME");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("NAME");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.Url)
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasColumnName("URL")
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<FeatureFlag>(entity =>
            {
                entity.HasKey(e => e.FeatId);

                entity.ToTable("FEATURE_FLAGS");

                entity.Property(e => e.FeatId).HasColumnName("FEAT_ID");

                entity.Property(e => e.Enabled).HasColumnName("ENABLED");

                entity.Property(e => e.FeatureName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("FEATURE_NAME");
            });

            modelBuilder.Entity<FinancialEntity>(entity =>
            {
                entity.HasKey(e => e.FneId);

                entity.ToTable("FINANCIAL_ENTITIES");

                entity.HasIndex(e => e.ShortCode, "IX__FINANCIAL_ENTITIES__SHORT_CODE");

                entity.Property(e => e.FneId)
                    .ValueGeneratedNever()
                    .HasColumnName("FNE_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.FneDeleted).HasColumnName("FNE_DELETED");

                entity.Property(e => e.FneExternal)
                    .HasMaxLength(255)
                    .HasColumnName("FNE_EXTERNAL");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", true);

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'FNE-')");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<Footer>(entity =>
            {
                entity.ToTable("FOOTERS", "Portal");

                entity.Property(e => e.FooterId)
                    .ValueGeneratedNever()
                    .HasColumnName("FOOTER_ID");

                entity.Property(e => e.ColumnLayoutId).HasColumnName("COLUMN_LAYOUT_ID");

                entity.Property(e => e.FooterName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnName("FOOTER_NAME")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<FormsDatum>(entity =>
            {
                entity.HasKey(e => e.FrmId);

                entity.ToTable("FORMS_DATA");

                entity.Property(e => e.FrmId)
                    .HasColumnName("FRM_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Address1)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_1");

                entity.Property(e => e.Address2)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_2");

                entity.Property(e => e.Address3)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_3");

                entity.Property(e => e.BillingAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_ADDRESS_1");

                entity.Property(e => e.BillingAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_ADDRESS_2");

                entity.Property(e => e.BillingAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_ADDRESS_3");

                entity.Property(e => e.BillingCountry)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_COUNTRY");

                entity.Property(e => e.BillingCounty)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_COUNTY");

                entity.Property(e => e.BillingPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_POSTCODE");

                entity.Property(e => e.BillingTown)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_TOWN");

                entity.Property(e => e.BusinessAddressCity).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressCountry).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressState).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.BusinessFaxNumber).HasMaxLength(255);

                entity.Property(e => e.BusinessHomePage).HasMaxLength(255);

                entity.Property(e => e.BusinessTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Country)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.County)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTY");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Email1Address).HasMaxLength(255);

                entity.Property(e => e.Email2Address).HasMaxLength(255);

                entity.Property(e => e.Email3Address).HasMaxLength(255);

                entity.Property(e => e.Fax1)
                    .HasMaxLength(255)
                    .HasColumnName("FAX_1");

                entity.Property(e => e.Fax2)
                    .HasMaxLength(255)
                    .HasColumnName("FAX_2");

                entity.Property(e => e.Fax3)
                    .HasMaxLength(255)
                    .HasColumnName("FAX_3");

                entity.Property(e => e.FirstName).HasMaxLength(255);

                entity.Property(e => e.FrmAcId).HasColumnName("FRM_AC_ID");

                entity.Property(e => e.FrmDeleted).HasColumnName("FRM_DELETED");

                entity.Property(e => e.FrmExternal)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_EXTERNAL");

                entity.Property(e => e.FrmProcessed).HasColumnName("FRM_PROCESSED");

                entity.Property(e => e.FrmSecurity).HasColumnName("FRM_SECURITY");

                entity.Property(e => e.FrmUd10Bit).HasColumnName("FRM_UD10_BIT");

                entity.Property(e => e.FrmUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("FRM_UD10_DATE");

                entity.Property(e => e.FrmUd10Id).HasColumnName("FRM_UD10_ID");

                entity.Property(e => e.FrmUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("FRM_UD10_NUMERIC");

                entity.Property(e => e.FrmUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD10_TEXT");

                entity.Property(e => e.FrmUd11Bit).HasColumnName("FRM_UD11_BIT");

                entity.Property(e => e.FrmUd11Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD11_TEXT");

                entity.Property(e => e.FrmUd12Bit).HasColumnName("FRM_UD12_BIT");

                entity.Property(e => e.FrmUd12Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD12_TEXT");

                entity.Property(e => e.FrmUd13Bit).HasColumnName("FRM_UD13_BIT");

                entity.Property(e => e.FrmUd13Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD13_TEXT");

                entity.Property(e => e.FrmUd14Bit).HasColumnName("FRM_UD14_BIT");

                entity.Property(e => e.FrmUd14Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD14_TEXT");

                entity.Property(e => e.FrmUd15Bit).HasColumnName("FRM_UD15_BIT");

                entity.Property(e => e.FrmUd15Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD15_TEXT");

                entity.Property(e => e.FrmUd16Bit).HasColumnName("FRM_UD16_BIT");

                entity.Property(e => e.FrmUd16Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD16_TEXT");

                entity.Property(e => e.FrmUd17Bit).HasColumnName("FRM_UD17_BIT");

                entity.Property(e => e.FrmUd17Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD17_TEXT");

                entity.Property(e => e.FrmUd18Bit).HasColumnName("FRM_UD18_BIT");

                entity.Property(e => e.FrmUd18Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD18_TEXT");

                entity.Property(e => e.FrmUd19Bit).HasColumnName("FRM_UD19_BIT");

                entity.Property(e => e.FrmUd19Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD19_TEXT");

                entity.Property(e => e.FrmUd1Bit).HasColumnName("FRM_UD1_BIT");

                entity.Property(e => e.FrmUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("FRM_UD1_DATE");

                entity.Property(e => e.FrmUd1Id).HasColumnName("FRM_UD1_ID");

                entity.Property(e => e.FrmUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("FRM_UD1_NUMERIC");

                entity.Property(e => e.FrmUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD1_TEXT");

                entity.Property(e => e.FrmUd20Bit).HasColumnName("FRM_UD20_BIT");

                entity.Property(e => e.FrmUd20Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD20_TEXT");

                entity.Property(e => e.FrmUd21Bit).HasColumnName("FRM_UD21_BIT");

                entity.Property(e => e.FrmUd21Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD21_TEXT");

                entity.Property(e => e.FrmUd22Bit).HasColumnName("FRM_UD22_BIT");

                entity.Property(e => e.FrmUd22Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD22_TEXT");

                entity.Property(e => e.FrmUd23Bit).HasColumnName("FRM_UD23_BIT");

                entity.Property(e => e.FrmUd23Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD23_TEXT");

                entity.Property(e => e.FrmUd24Bit).HasColumnName("FRM_UD24_BIT");

                entity.Property(e => e.FrmUd24Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD24_TEXT");

                entity.Property(e => e.FrmUd25Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD25_TEXT");

                entity.Property(e => e.FrmUd26Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD26_TEXT");

                entity.Property(e => e.FrmUd27Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD27_TEXT");

                entity.Property(e => e.FrmUd28Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD28_TEXT");

                entity.Property(e => e.FrmUd29Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD29_TEXT");

                entity.Property(e => e.FrmUd2Bit).HasColumnName("FRM_UD2_BIT");

                entity.Property(e => e.FrmUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("FRM_UD2_DATE");

                entity.Property(e => e.FrmUd2Id).HasColumnName("FRM_UD2_ID");

                entity.Property(e => e.FrmUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("FRM_UD2_NUMERIC");

                entity.Property(e => e.FrmUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD2_TEXT");

                entity.Property(e => e.FrmUd30Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD30_TEXT");

                entity.Property(e => e.FrmUd3Bit).HasColumnName("FRM_UD3_BIT");

                entity.Property(e => e.FrmUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("FRM_UD3_DATE");

                entity.Property(e => e.FrmUd3Id).HasColumnName("FRM_UD3_ID");

                entity.Property(e => e.FrmUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("FRM_UD3_NUMERIC");

                entity.Property(e => e.FrmUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD3_TEXT");

                entity.Property(e => e.FrmUd4Bit).HasColumnName("FRM_UD4_BIT");

                entity.Property(e => e.FrmUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("FRM_UD4_DATE");

                entity.Property(e => e.FrmUd4Id).HasColumnName("FRM_UD4_ID");

                entity.Property(e => e.FrmUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("FRM_UD4_NUMERIC");

                entity.Property(e => e.FrmUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD4_TEXT");

                entity.Property(e => e.FrmUd5Bit).HasColumnName("FRM_UD5_BIT");

                entity.Property(e => e.FrmUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("FRM_UD5_DATE");

                entity.Property(e => e.FrmUd5Id).HasColumnName("FRM_UD5_ID");

                entity.Property(e => e.FrmUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("FRM_UD5_NUMERIC");

                entity.Property(e => e.FrmUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD5_TEXT");

                entity.Property(e => e.FrmUd6Bit).HasColumnName("FRM_UD6_BIT");

                entity.Property(e => e.FrmUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("FRM_UD6_DATE");

                entity.Property(e => e.FrmUd6Id).HasColumnName("FRM_UD6_ID");

                entity.Property(e => e.FrmUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("FRM_UD6_NUMERIC");

                entity.Property(e => e.FrmUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD6_TEXT");

                entity.Property(e => e.FrmUd7Bit).HasColumnName("FRM_UD7_BIT");

                entity.Property(e => e.FrmUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("FRM_UD7_DATE");

                entity.Property(e => e.FrmUd7Id).HasColumnName("FRM_UD7_ID");

                entity.Property(e => e.FrmUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("FRM_UD7_NUMERIC");

                entity.Property(e => e.FrmUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD7_TEXT");

                entity.Property(e => e.FrmUd8Bit).HasColumnName("FRM_UD8_BIT");

                entity.Property(e => e.FrmUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("FRM_UD8_DATE");

                entity.Property(e => e.FrmUd8Id).HasColumnName("FRM_UD8_ID");

                entity.Property(e => e.FrmUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("FRM_UD8_NUMERIC");

                entity.Property(e => e.FrmUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD8_TEXT");

                entity.Property(e => e.FrmUd9Bit).HasColumnName("FRM_UD9_BIT");

                entity.Property(e => e.FrmUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("FRM_UD9_DATE");

                entity.Property(e => e.FrmUd9Id).HasColumnName("FRM_UD9_ID");

                entity.Property(e => e.FrmUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("FRM_UD9_NUMERIC");

                entity.Property(e => e.FrmUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD9_TEXT");

                entity.Property(e => e.HomeAddressCity).HasMaxLength(255);

                entity.Property(e => e.HomeAddressCountry).HasMaxLength(255);

                entity.Property(e => e.HomeAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.HomeAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.HomeAddressState).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.HomeFaxNumber).HasMaxLength(255);

                entity.Property(e => e.HomeTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.JobTitle).HasMaxLength(255);

                entity.Property(e => e.LastName).HasMaxLength(255);

                entity.Property(e => e.MiddleName).HasMaxLength(255);

                entity.Property(e => e.MobileTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Notes)
                    .HasMaxLength(4000)
                    .HasColumnName("NOTES");

                entity.Property(e => e.Phone1)
                    .HasMaxLength(255)
                    .HasColumnName("PHONE_1");

                entity.Property(e => e.Phone2)
                    .HasMaxLength(255)
                    .HasColumnName("PHONE_2");

                entity.Property(e => e.Phone3)
                    .HasMaxLength(255)
                    .HasColumnName("PHONE_3");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(255)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.PreferredContactEmail).HasColumnName("PREFERRED_CONTACT_EMAIL");

                entity.Property(e => e.PreferredContactFax).HasColumnName("PREFERRED_CONTACT_FAX");

                entity.Property(e => e.PreferredContactLetter).HasColumnName("PREFERRED_CONTACT_LETTER");

                entity.Property(e => e.PreferredContactPhone).HasColumnName("PREFERRED_CONTACT_PHONE");

                entity.Property(e => e.Source)
                    .HasMaxLength(255)
                    .HasColumnName("SOURCE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Title).HasMaxLength(255);

                entity.Property(e => e.Town)
                    .HasMaxLength(255)
                    .HasColumnName("TOWN");

                entity.Property(e => e.Type).HasColumnName("TYPE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.WebSite1)
                    .HasMaxLength(255)
                    .HasColumnName("WEB_SITE_1");

                entity.Property(e => e.WebSite2)
                    .HasMaxLength(255)
                    .HasColumnName("WEB_SITE_2");
            });

            modelBuilder.Entity<FormsScanned>(entity =>
            {
                entity.HasKey(e => e.FsId);

                entity.ToTable("FORMS_SCANNED");

                entity.Property(e => e.FsId)
                    .ValueGeneratedNever()
                    .HasColumnName("FS_ID");

                entity.Property(e => e.Body)
                    .HasMaxLength(800)
                    .HasColumnName("BODY");

                entity.Property(e => e.MapiId)
                    .HasMaxLength(800)
                    .HasColumnName("MAPI_ID");

                entity.Property(e => e.Result)
                    .HasMaxLength(255)
                    .HasColumnName("RESULT");

                entity.Property(e => e.ScannedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SCANNED_DATE");
            });

            modelBuilder.Entity<Gadget>(entity =>
            {
                entity.HasKey(e => e.GadId)
                    .HasName("PK_GADJETS");

                entity.ToTable("GADGETS");

                entity.Property(e => e.GadId)
                    .ValueGeneratedNever()
                    .HasColumnName("GAD_ID");

                entity.Property(e => e.AcoId).HasColumnName("ACO_ID");

                entity.Property(e => e.Data)
                    .HasMaxLength(1000)
                    .HasColumnName("DATA");

                entity.Property(e => e.Refresh).HasColumnName("REFRESH");

                entity.Property(e => e.Summary)
                    .HasMaxLength(100)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.SummaryRef)
                    .HasMaxLength(100)
                    .HasColumnName("SUMMARY_REF");

                entity.Property(e => e.Type)
                    .HasMaxLength(50)
                    .HasColumnName("TYPE");

                entity.HasOne(d => d.Aco)
                    .WithMany(p => p.Gadgets)
                    .HasForeignKey(d => d.AcoId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GADGETS_ACCESS_OPTIONS");
            });

            modelBuilder.Entity<GeoCode>(entity =>
            {
                entity.HasKey(e => e.GeoId);

                entity.ToTable("GEO_CODE");

                entity.Property(e => e.GeoId).HasColumnName("GEO_ID");

                entity.Property(e => e.GeoAcId).HasColumnName("GEO_AC_ID");

                entity.Property(e => e.GeoAddress)
                    .HasMaxLength(1000)
                    .HasColumnName("GEO_ADDRESS");

                entity.Property(e => e.GeoColumnName)
                    .HasMaxLength(50)
                    .HasColumnName("GEO_COLUMN_NAME");

                entity.Property(e => e.GeoCountry).HasColumnName("GEO_COUNTRY");

                entity.Property(e => e.GeoExpiry)
                    .HasColumnType("datetime")
                    .HasColumnName("GEO_EXPIRY");

                entity.Property(e => e.GeoHash)
                    .HasMaxLength(20)
                    .HasColumnName("GEO_HASH")
                    .IsFixedLength(true);

                entity.Property(e => e.GeoIsExtension).HasColumnName("GEO_IS_EXTENSION");

                entity.Property(e => e.GeoLatitude).HasColumnName("GEO_LATITUDE");

                entity.Property(e => e.GeoLongitude).HasColumnName("GEO_LONGITUDE");

                entity.Property(e => e.GeoObjId).HasColumnName("GEO_OBJ_ID");

                entity.Property(e => e.GeoObjectName)
                    .HasMaxLength(100)
                    .HasColumnName("GEO_OBJECT_NAME");

                entity.Property(e => e.GeoPendingLookup).HasColumnName("GEO_PENDING_LOOKUP");

                entity.Property(e => e.GeoPostCode)
                    .HasMaxLength(50)
                    .HasColumnName("GEO_POST_CODE");

                entity.Property(e => e.GeoTableName)
                    .HasMaxLength(50)
                    .HasColumnName("GEO_TABLE_NAME");

                entity.Property(e => e.GeoUpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("GEO_UPDATED_DATE");
            });

            modelBuilder.Entity<GlobalSearchField>(entity =>
            {
                entity.HasKey(e => new { e.ScreenDesignId, e.LegacyFieldId })
                    .HasName("PK_ScreenDesignId_LegacyFieldId")
                    .IsClustered(false);

                entity.HasIndex(e => e.ScreenDesignId, "IX_GlobalSearchFields_ScreenDesignId")
                    .IsClustered();

                entity.HasOne(d => d.LegacyField)
                    .WithMany(p => p.GlobalSearchFields)
                    .HasForeignKey(d => d.LegacyFieldId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_LegacyFieldId");

                entity.HasOne(d => d.ScreenDesign)
                    .WithMany(p => p.GlobalSearchFields)
                    .HasForeignKey(d => d.ScreenDesignId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ScreenDesignId");
            });

            modelBuilder.Entity<Group>(entity =>
            {
                entity.HasKey(e => e.GId)
                    .HasName("PK__GROUPS__C51F0F3E55991321");

                entity.ToTable("GROUPS", "Portal");

                entity.Property(e => e.GId)
                    .ValueGeneratedNever()
                    .HasColumnName("G_ID");

                entity.Property(e => e.Description)
                    .HasMaxLength(255)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.Priority).HasColumnName("PRIORITY");

                entity.Property(e => e.SpaceId).HasColumnName("SPACE_ID");

                entity.HasOne(d => d.Space)
                    .WithMany(p => p.Groups)
                    .HasForeignKey(d => d.SpaceId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__GROUPS__SPACE_ID__3FC721DF");
            });

            modelBuilder.Entity<GvvBookingsForEvent>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("gvvBookingsForEvents");

                entity.Property(e => e.AcExternal)
                    .HasMaxLength(255)
                    .HasColumnName("AC_EXTERNAL");

                entity.Property(e => e.AcFlag)
                    .HasMaxLength(255)
                    .HasColumnName("AC_FLAG");

                entity.Property(e => e.AcFlagHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_FLAG_HLIGHT");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcIndustry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_INDUSTRY");

                entity.Property(e => e.AcIndustryHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_INDUSTRY_HLIGHT");

                entity.Property(e => e.AcLabel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LABEL");

                entity.Property(e => e.AcLabelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LABEL_HLIGHT");

                entity.Property(e => e.AcLevel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LEVEL");

                entity.Property(e => e.AcLevelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LEVEL_HLIGHT");

                entity.Property(e => e.AcManager).HasColumnName("AC_MANAGER");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.AcSource)
                    .HasMaxLength(255)
                    .HasColumnName("AC_SOURCE");

                entity.Property(e => e.AcSourceHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_SOURCE_HLIGHT");

                entity.Property(e => e.AcType1)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_1");

                entity.Property(e => e.AcType1Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_1_HLIGHT");

                entity.Property(e => e.AcType2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_2");

                entity.Property(e => e.AcType2Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_2_HLIGHT");

                entity.Property(e => e.AcUd10Bit).HasColumnName("AC_UD10_BIT");

                entity.Property(e => e.AcUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD10_DATE");

                entity.Property(e => e.AcUd10Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_ID");

                entity.Property(e => e.AcUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_ID_NAME");

                entity.Property(e => e.AcUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd10Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD10_NUMERIC");

                entity.Property(e => e.AcUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_TEXT");

                entity.Property(e => e.AcUd11Bit).HasColumnName("AC_UD11_BIT");

                entity.Property(e => e.AcUd11Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD11_TEXT");

                entity.Property(e => e.AcUd12Bit).HasColumnName("AC_UD12_BIT");

                entity.Property(e => e.AcUd12Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD12_TEXT");

                entity.Property(e => e.AcUd13Bit).HasColumnName("AC_UD13_BIT");

                entity.Property(e => e.AcUd13Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD13_TEXT");

                entity.Property(e => e.AcUd14Bit).HasColumnName("AC_UD14_BIT");

                entity.Property(e => e.AcUd14Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD14_TEXT");

                entity.Property(e => e.AcUd15Bit).HasColumnName("AC_UD15_BIT");

                entity.Property(e => e.AcUd15Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD15_TEXT");

                entity.Property(e => e.AcUd16Bit).HasColumnName("AC_UD16_BIT");

                entity.Property(e => e.AcUd17Bit).HasColumnName("AC_UD17_BIT");

                entity.Property(e => e.AcUd18Bit).HasColumnName("AC_UD18_BIT");

                entity.Property(e => e.AcUd19Bit).HasColumnName("AC_UD19_BIT");

                entity.Property(e => e.AcUd1Bit).HasColumnName("AC_UD1_BIT");

                entity.Property(e => e.AcUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD1_DATE");

                entity.Property(e => e.AcUd1Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_ID");

                entity.Property(e => e.AcUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_ID_NAME");

                entity.Property(e => e.AcUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd1Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD1_NUMERIC");

                entity.Property(e => e.AcUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_TEXT");

                entity.Property(e => e.AcUd20Bit).HasColumnName("AC_UD20_BIT");

                entity.Property(e => e.AcUd21Bit).HasColumnName("AC_UD21_BIT");

                entity.Property(e => e.AcUd22Bit).HasColumnName("AC_UD22_BIT");

                entity.Property(e => e.AcUd23Bit).HasColumnName("AC_UD23_BIT");

                entity.Property(e => e.AcUd24Bit).HasColumnName("AC_UD24_BIT");

                entity.Property(e => e.AcUd2Bit).HasColumnName("AC_UD2_BIT");

                entity.Property(e => e.AcUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD2_DATE");

                entity.Property(e => e.AcUd2Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_ID");

                entity.Property(e => e.AcUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_ID_NAME");

                entity.Property(e => e.AcUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd2Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD2_NUMERIC");

                entity.Property(e => e.AcUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_TEXT");

                entity.Property(e => e.AcUd3Bit).HasColumnName("AC_UD3_BIT");

                entity.Property(e => e.AcUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD3_DATE");

                entity.Property(e => e.AcUd3Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_ID");

                entity.Property(e => e.AcUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_ID_NAME");

                entity.Property(e => e.AcUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd3Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD3_NUMERIC");

                entity.Property(e => e.AcUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_TEXT");

                entity.Property(e => e.AcUd4Bit).HasColumnName("AC_UD4_BIT");

                entity.Property(e => e.AcUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD4_DATE");

                entity.Property(e => e.AcUd4Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_ID");

                entity.Property(e => e.AcUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_ID_NAME");

                entity.Property(e => e.AcUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd4Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD4_NUMERIC");

                entity.Property(e => e.AcUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_TEXT");

                entity.Property(e => e.AcUd5Bit).HasColumnName("AC_UD5_BIT");

                entity.Property(e => e.AcUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD5_DATE");

                entity.Property(e => e.AcUd5Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_ID");

                entity.Property(e => e.AcUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_ID_NAME");

                entity.Property(e => e.AcUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd5Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD5_NUMERIC");

                entity.Property(e => e.AcUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_TEXT");

                entity.Property(e => e.AcUd6Bit).HasColumnName("AC_UD6_BIT");

                entity.Property(e => e.AcUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD6_DATE");

                entity.Property(e => e.AcUd6Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_ID");

                entity.Property(e => e.AcUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_ID_NAME");

                entity.Property(e => e.AcUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd6Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD6_NUMERIC");

                entity.Property(e => e.AcUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_TEXT");

                entity.Property(e => e.AcUd7Bit).HasColumnName("AC_UD7_BIT");

                entity.Property(e => e.AcUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD7_DATE");

                entity.Property(e => e.AcUd7Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_ID");

                entity.Property(e => e.AcUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_ID_NAME");

                entity.Property(e => e.AcUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd7Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD7_NUMERIC");

                entity.Property(e => e.AcUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_TEXT");

                entity.Property(e => e.AcUd8Bit).HasColumnName("AC_UD8_BIT");

                entity.Property(e => e.AcUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD8_DATE");

                entity.Property(e => e.AcUd8Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_ID");

                entity.Property(e => e.AcUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_ID_NAME");

                entity.Property(e => e.AcUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd8Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD8_NUMERIC");

                entity.Property(e => e.AcUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_TEXT");

                entity.Property(e => e.AcUd9Bit).HasColumnName("AC_UD9_BIT");

                entity.Property(e => e.AcUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD9_DATE");

                entity.Property(e => e.AcUd9Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_ID");

                entity.Property(e => e.AcUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_ID_NAME");

                entity.Property(e => e.AcUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd9Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD9_NUMERIC");

                entity.Property(e => e.AcUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_TEXT");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_NAME");

                entity.Property(e => e.AcgId).HasColumnName("ACG_ID");

                entity.Property(e => e.ActualClose)
                    .HasColumnType("datetime")
                    .HasColumnName("ACTUAL_CLOSE");

                entity.Property(e => e.Address1)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_1");

                entity.Property(e => e.Address2)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_2");

                entity.Property(e => e.Address3)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_3");

                entity.Property(e => e.Attendees).HasColumnName("ATTENDEES");

                entity.Property(e => e.CampaignSummary)
                    .HasMaxLength(255)
                    .HasColumnName("CAMPAIGN_SUMMARY");

                entity.Property(e => e.Confirmed).HasColumnName("CONFIRMED");

                entity.Property(e => e.CostBooking)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_BOOKING");

                entity.Property(e => e.CostItems)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_ITEMS");

                entity.Property(e => e.CostSub)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_SUB");

                entity.Property(e => e.CostTotal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_TOTAL");

                entity.Property(e => e.CostUpdatedSub)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_UPDATED_SUB");

                entity.Property(e => e.CostVat)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_VAT");

                entity.Property(e => e.Country)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.County)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTY");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CurId).HasColumnName("CUR_ID");

                entity.Property(e => e.CurIdPriceList).HasColumnName("CUR_ID_PRICE_LIST");

                entity.Property(e => e.CurrencyCode)
                    .HasMaxLength(3)
                    .HasColumnName("CURRENCY_CODE");

                entity.Property(e => e.CurrencyRate).HasColumnName("CURRENCY_RATE");

                entity.Property(e => e.CurrencySymbol)
                    .HasMaxLength(3)
                    .HasColumnName("CURRENCY_SYMBOL");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.DiscountAccount).HasColumnName("DISCOUNT_ACCOUNT");

                entity.Property(e => e.DiscountItems).HasColumnName("DISCOUNT_ITEMS");

                entity.Property(e => e.EarlyBirdDate)
                    .HasColumnType("datetime")
                    .HasColumnName("EARLY_BIRD_DATE");

                entity.Property(e => e.EarlyBirdDiscount)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("EARLY_BIRD_DISCOUNT");

                entity.Property(e => e.Email1Address).HasMaxLength(255);

                entity.Property(e => e.EstimatedClose)
                    .HasColumnType("datetime")
                    .HasColumnName("ESTIMATED_CLOSE");

                entity.Property(e => e.ExternalEventbriteId)
                    .HasMaxLength(255)
                    .HasColumnName("EXTERNAL_EVENTBRITE_ID");

                entity.Property(e => e.Fax1)
                    .HasMaxLength(50)
                    .HasColumnName("FAX_1");

                entity.Property(e => e.FneId).HasColumnName("FNE_ID");

                entity.Property(e => e.ForecastDate)
                    .HasColumnType("datetime")
                    .HasColumnName("FORECAST_DATE");

                entity.Property(e => e.McaId).HasColumnName("MCA_ID");

                entity.Property(e => e.NumberOfItems).HasColumnName("NUMBER_OF_ITEMS");

                entity.Property(e => e.Owner).HasColumnName("OWNER");

                entity.Property(e => e.OwnerEmail)
                    .HasMaxLength(255)
                    .HasColumnName("OWNER_EMAIL");

                entity.Property(e => e.Phone1)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_1");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(255)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.ReferenceSeed).HasColumnName("REFERENCE_SEED");

                entity.Property(e => e.SemAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_ADDRESS_1");

                entity.Property(e => e.SemAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_ADDRESS_2");

                entity.Property(e => e.SemAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_ADDRESS_3");

                entity.Property(e => e.SemCountry)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_COUNTRY");

                entity.Property(e => e.SemCounty)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_COUNTY");

                entity.Property(e => e.SemCreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_CREATED_BY");

                entity.Property(e => e.SemCreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_CREATED_DATE");

                entity.Property(e => e.SemDeleted).HasColumnName("SEM_DELETED");

                entity.Property(e => e.SemDeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_DELETED_BY");

                entity.Property(e => e.SemDeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_DELETED_DATE");

                entity.Property(e => e.SemEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_END_DATE");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.SemName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_NAME");

                entity.Property(e => e.SemOwner).HasColumnName("SEM_OWNER");

                entity.Property(e => e.SemPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_POSTCODE");

                entity.Property(e => e.SemReference)
                    .HasMaxLength(50)
                    .HasColumnName("SEM_REFERENCE");

                entity.Property(e => e.SemSourceDetails)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_SOURCE_DETAILS");

                entity.Property(e => e.SemStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_START_DATE");

                entity.Property(e => e.SemState)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("SEM_STATE");

                entity.Property(e => e.SemStgId).HasColumnName("SEM_STG_ID");

                entity.Property(e => e.SemTown)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_TOWN");

                entity.Property(e => e.SemType)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_TYPE");

                entity.Property(e => e.SemUpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UPDATED_BY");

                entity.Property(e => e.SemUpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UPDATED_DATE");

                entity.Property(e => e.SemUrl)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_URL");

                entity.Property(e => e.SembDeleted).HasColumnName("SEMB_DELETED");

                entity.Property(e => e.SembId).HasColumnName("SEMB_ID");

                entity.Property(e => e.SembState)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SEMB_STATE");

                entity.Property(e => e.SembUd10Bit).HasColumnName("SEMB_UD10_BIT");

                entity.Property(e => e.SembUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD10_DATE");

                entity.Property(e => e.SembUd10Id).HasColumnName("SEMB_UD10_ID");

                entity.Property(e => e.SembUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD10_ID_NAME");

                entity.Property(e => e.SembUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD10_NUMERIC");

                entity.Property(e => e.SembUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD10_TEXT");

                entity.Property(e => e.SembUd11Bit).HasColumnName("SEMB_UD11_BIT");

                entity.Property(e => e.SembUd12Bit).HasColumnName("SEMB_UD12_BIT");

                entity.Property(e => e.SembUd13Bit).HasColumnName("SEMB_UD13_BIT");

                entity.Property(e => e.SembUd14Bit).HasColumnName("SEMB_UD14_BIT");

                entity.Property(e => e.SembUd15Bit).HasColumnName("SEMB_UD15_BIT");

                entity.Property(e => e.SembUd16Bit).HasColumnName("SEMB_UD16_BIT");

                entity.Property(e => e.SembUd17Bit).HasColumnName("SEMB_UD17_BIT");

                entity.Property(e => e.SembUd18Bit).HasColumnName("SEMB_UD18_BIT");

                entity.Property(e => e.SembUd19Bit).HasColumnName("SEMB_UD19_BIT");

                entity.Property(e => e.SembUd1Bit).HasColumnName("SEMB_UD1_BIT");

                entity.Property(e => e.SembUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD1_DATE");

                entity.Property(e => e.SembUd1Id).HasColumnName("SEMB_UD1_ID");

                entity.Property(e => e.SembUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD1_ID_NAME");

                entity.Property(e => e.SembUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD1_NUMERIC");

                entity.Property(e => e.SembUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD1_TEXT");

                entity.Property(e => e.SembUd20Bit).HasColumnName("SEMB_UD20_BIT");

                entity.Property(e => e.SembUd21Bit).HasColumnName("SEMB_UD21_BIT");

                entity.Property(e => e.SembUd22Bit).HasColumnName("SEMB_UD22_BIT");

                entity.Property(e => e.SembUd23Bit).HasColumnName("SEMB_UD23_BIT");

                entity.Property(e => e.SembUd24Bit).HasColumnName("SEMB_UD24_BIT");

                entity.Property(e => e.SembUd2Bit).HasColumnName("SEMB_UD2_BIT");

                entity.Property(e => e.SembUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD2_DATE");

                entity.Property(e => e.SembUd2Id).HasColumnName("SEMB_UD2_ID");

                entity.Property(e => e.SembUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD2_ID_NAME");

                entity.Property(e => e.SembUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD2_NUMERIC");

                entity.Property(e => e.SembUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD2_TEXT");

                entity.Property(e => e.SembUd3Bit).HasColumnName("SEMB_UD3_BIT");

                entity.Property(e => e.SembUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD3_DATE");

                entity.Property(e => e.SembUd3Id).HasColumnName("SEMB_UD3_ID");

                entity.Property(e => e.SembUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD3_ID_NAME");

                entity.Property(e => e.SembUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD3_NUMERIC");

                entity.Property(e => e.SembUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD3_TEXT");

                entity.Property(e => e.SembUd4Bit).HasColumnName("SEMB_UD4_BIT");

                entity.Property(e => e.SembUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD4_DATE");

                entity.Property(e => e.SembUd4Id).HasColumnName("SEMB_UD4_ID");

                entity.Property(e => e.SembUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD4_ID_NAME");

                entity.Property(e => e.SembUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD4_NUMERIC");

                entity.Property(e => e.SembUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD4_TEXT");

                entity.Property(e => e.SembUd5Bit).HasColumnName("SEMB_UD5_BIT");

                entity.Property(e => e.SembUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD5_DATE");

                entity.Property(e => e.SembUd5Id).HasColumnName("SEMB_UD5_ID");

                entity.Property(e => e.SembUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD5_ID_NAME");

                entity.Property(e => e.SembUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD5_NUMERIC");

                entity.Property(e => e.SembUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD5_TEXT");

                entity.Property(e => e.SembUd6Bit).HasColumnName("SEMB_UD6_BIT");

                entity.Property(e => e.SembUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD6_DATE");

                entity.Property(e => e.SembUd6Id).HasColumnName("SEMB_UD6_ID");

                entity.Property(e => e.SembUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD6_ID_NAME");

                entity.Property(e => e.SembUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD6_NUMERIC");

                entity.Property(e => e.SembUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD6_TEXT");

                entity.Property(e => e.SembUd7Bit).HasColumnName("SEMB_UD7_BIT");

                entity.Property(e => e.SembUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD7_DATE");

                entity.Property(e => e.SembUd7Id).HasColumnName("SEMB_UD7_ID");

                entity.Property(e => e.SembUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD7_ID_NAME");

                entity.Property(e => e.SembUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD7_NUMERIC");

                entity.Property(e => e.SembUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD7_TEXT");

                entity.Property(e => e.SembUd8Bit).HasColumnName("SEMB_UD8_BIT");

                entity.Property(e => e.SembUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD8_DATE");

                entity.Property(e => e.SembUd8Id).HasColumnName("SEMB_UD8_ID");

                entity.Property(e => e.SembUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD8_ID_NAME");

                entity.Property(e => e.SembUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD8_NUMERIC");

                entity.Property(e => e.SembUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD8_TEXT");

                entity.Property(e => e.SembUd9Bit).HasColumnName("SEMB_UD9_BIT");

                entity.Property(e => e.SembUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD9_DATE");

                entity.Property(e => e.SembUd9Id).HasColumnName("SEMB_UD9_ID");

                entity.Property(e => e.SembUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD9_ID_NAME");

                entity.Property(e => e.SembUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD9_NUMERIC");

                entity.Property(e => e.SembUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD9_TEXT");

                entity.Property(e => e.SgId).HasColumnName("SG_ID");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Stage).HasColumnName("STAGE");

                entity.Property(e => e.StageSummary)
                    .HasMaxLength(255)
                    .HasColumnName("STAGE_SUMMARY");

                entity.Property(e => e.StgId).HasColumnName("STG_ID");

                entity.Property(e => e.Town)
                    .HasMaxLength(255)
                    .HasColumnName("TOWN");

                entity.Property(e => e.Type).HasColumnName("TYPE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsName)
                    .HasMaxLength(255)
                    .HasColumnName("US_NAME");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");

                entity.Property(e => e.UsgName)
                    .HasMaxLength(255)
                    .HasColumnName("USG_NAME");

                entity.Property(e => e.Value)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("VALUE");
            });

            modelBuilder.Entity<GvvDeletedAccountActivity>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("gvvDeletedAccountActivities");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.AcaUd10Bit).HasColumnName("ACA_UD10_BIT");

                entity.Property(e => e.AcaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD10_DATE");

                entity.Property(e => e.AcaUd10Id).HasColumnName("ACA_UD10_ID");

                entity.Property(e => e.AcaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD10_NUMERIC");

                entity.Property(e => e.AcaUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD10_TEXT");

                entity.Property(e => e.AcaUd1Bit).HasColumnName("ACA_UD1_BIT");

                entity.Property(e => e.AcaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD1_DATE");

                entity.Property(e => e.AcaUd1Id).HasColumnName("ACA_UD1_ID");

                entity.Property(e => e.AcaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD1_NUMERIC");

                entity.Property(e => e.AcaUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD1_TEXT");

                entity.Property(e => e.AcaUd2Bit).HasColumnName("ACA_UD2_BIT");

                entity.Property(e => e.AcaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD2_DATE");

                entity.Property(e => e.AcaUd2Id).HasColumnName("ACA_UD2_ID");

                entity.Property(e => e.AcaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD2_NUMERIC");

                entity.Property(e => e.AcaUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD2_TEXT");

                entity.Property(e => e.AcaUd3Bit).HasColumnName("ACA_UD3_BIT");

                entity.Property(e => e.AcaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD3_DATE");

                entity.Property(e => e.AcaUd3Id).HasColumnName("ACA_UD3_ID");

                entity.Property(e => e.AcaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD3_NUMERIC");

                entity.Property(e => e.AcaUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD3_TEXT");

                entity.Property(e => e.AcaUd4Bit).HasColumnName("ACA_UD4_BIT");

                entity.Property(e => e.AcaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD4_DATE");

                entity.Property(e => e.AcaUd4Id).HasColumnName("ACA_UD4_ID");

                entity.Property(e => e.AcaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD4_NUMERIC");

                entity.Property(e => e.AcaUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD4_TEXT");

                entity.Property(e => e.AcaUd5Bit).HasColumnName("ACA_UD5_BIT");

                entity.Property(e => e.AcaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD5_DATE");

                entity.Property(e => e.AcaUd5Id).HasColumnName("ACA_UD5_ID");

                entity.Property(e => e.AcaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD5_NUMERIC");

                entity.Property(e => e.AcaUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD5_TEXT");

                entity.Property(e => e.AcaUd6Bit).HasColumnName("ACA_UD6_BIT");

                entity.Property(e => e.AcaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD6_DATE");

                entity.Property(e => e.AcaUd6Id).HasColumnName("ACA_UD6_ID");

                entity.Property(e => e.AcaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD6_NUMERIC");

                entity.Property(e => e.AcaUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD6_TEXT");

                entity.Property(e => e.AcaUd7Bit).HasColumnName("ACA_UD7_BIT");

                entity.Property(e => e.AcaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD7_DATE");

                entity.Property(e => e.AcaUd7Id).HasColumnName("ACA_UD7_ID");

                entity.Property(e => e.AcaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD7_NUMERIC");

                entity.Property(e => e.AcaUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD7_TEXT");

                entity.Property(e => e.AcaUd8Bit).HasColumnName("ACA_UD8_BIT");

                entity.Property(e => e.AcaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD8_DATE");

                entity.Property(e => e.AcaUd8Id).HasColumnName("ACA_UD8_ID");

                entity.Property(e => e.AcaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD8_NUMERIC");

                entity.Property(e => e.AcaUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD8_TEXT");

                entity.Property(e => e.AcaUd9Bit).HasColumnName("ACA_UD9_BIT");

                entity.Property(e => e.AcaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD9_DATE");

                entity.Property(e => e.AcaUd9Id).HasColumnName("ACA_UD9_ID");

                entity.Property(e => e.AcaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD9_NUMERIC");

                entity.Property(e => e.AcaUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD9_TEXT");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccaNumber).HasColumnName("ACCA_NUMBER");

                entity.Property(e => e.AccaStage).HasColumnName("ACCA_STAGE");

                entity.Property(e => e.AccaUd10Bit).HasColumnName("ACCA_UD10_BIT");

                entity.Property(e => e.AccaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD10_DATE");

                entity.Property(e => e.AccaUd10Id).HasColumnName("ACCA_UD10_ID");

                entity.Property(e => e.AccaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD10_NUMERIC");

                entity.Property(e => e.AccaUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD10_TEXT");

                entity.Property(e => e.AccaUd1Bit).HasColumnName("ACCA_UD1_BIT");

                entity.Property(e => e.AccaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD1_DATE");

                entity.Property(e => e.AccaUd1Id).HasColumnName("ACCA_UD1_ID");

                entity.Property(e => e.AccaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD1_NUMERIC");

                entity.Property(e => e.AccaUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD1_TEXT");

                entity.Property(e => e.AccaUd2Bit).HasColumnName("ACCA_UD2_BIT");

                entity.Property(e => e.AccaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD2_DATE");

                entity.Property(e => e.AccaUd2Id).HasColumnName("ACCA_UD2_ID");

                entity.Property(e => e.AccaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD2_NUMERIC");

                entity.Property(e => e.AccaUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD2_TEXT");

                entity.Property(e => e.AccaUd3Bit).HasColumnName("ACCA_UD3_BIT");

                entity.Property(e => e.AccaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD3_DATE");

                entity.Property(e => e.AccaUd3Id).HasColumnName("ACCA_UD3_ID");

                entity.Property(e => e.AccaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD3_NUMERIC");

                entity.Property(e => e.AccaUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD3_TEXT");

                entity.Property(e => e.AccaUd4Bit).HasColumnName("ACCA_UD4_BIT");

                entity.Property(e => e.AccaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD4_DATE");

                entity.Property(e => e.AccaUd4Id).HasColumnName("ACCA_UD4_ID");

                entity.Property(e => e.AccaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD4_NUMERIC");

                entity.Property(e => e.AccaUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD4_TEXT");

                entity.Property(e => e.AccaUd5Bit).HasColumnName("ACCA_UD5_BIT");

                entity.Property(e => e.AccaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD5_DATE");

                entity.Property(e => e.AccaUd5Id).HasColumnName("ACCA_UD5_ID");

                entity.Property(e => e.AccaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD5_NUMERIC");

                entity.Property(e => e.AccaUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD5_TEXT");

                entity.Property(e => e.AccaUd6Bit).HasColumnName("ACCA_UD6_BIT");

                entity.Property(e => e.AccaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD6_DATE");

                entity.Property(e => e.AccaUd6Id).HasColumnName("ACCA_UD6_ID");

                entity.Property(e => e.AccaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD6_NUMERIC");

                entity.Property(e => e.AccaUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD6_TEXT");

                entity.Property(e => e.AccaUd7Bit).HasColumnName("ACCA_UD7_BIT");

                entity.Property(e => e.AccaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD7_DATE");

                entity.Property(e => e.AccaUd7Id).HasColumnName("ACCA_UD7_ID");

                entity.Property(e => e.AccaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD7_NUMERIC");

                entity.Property(e => e.AccaUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD7_TEXT");

                entity.Property(e => e.AccaUd8Bit).HasColumnName("ACCA_UD8_BIT");

                entity.Property(e => e.AccaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD8_DATE");

                entity.Property(e => e.AccaUd8Id).HasColumnName("ACCA_UD8_ID");

                entity.Property(e => e.AccaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD8_NUMERIC");

                entity.Property(e => e.AccaUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD8_TEXT");

                entity.Property(e => e.AccaUd9Bit).HasColumnName("ACCA_UD9_BIT");

                entity.Property(e => e.AccaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD9_DATE");

                entity.Property(e => e.AccaUd9Id).HasColumnName("ACCA_UD9_ID");

                entity.Property(e => e.AccaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD9_NUMERIC");

                entity.Property(e => e.AccaUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD9_TEXT");

                entity.Property(e => e.ActDeleted).HasColumnName("ACT_DELETED");

                entity.Property(e => e.ActExternal)
                    .HasMaxLength(255)
                    .HasColumnName("ACT_EXTERNAL");

                entity.Property(e => e.ActId).HasColumnName("ACT_ID");

                entity.Property(e => e.ActImport).HasColumnName("ACT_IMPORT");

                entity.Property(e => e.ActReadOnly).HasColumnName("ACT_READ_ONLY");

                entity.Property(e => e.ActivityType)
                    .HasMaxLength(50)
                    .HasColumnName("ACTIVITY_TYPE");

                entity.Property(e => e.BillingInformation)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_INFORMATION");

                entity.Property(e => e.Complete).HasColumnName("COMPLETE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DateCompleted)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_COMPLETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.DueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DUE_DATE");

                entity.Property(e => e.Duration)
                    .HasMaxLength(50)
                    .HasColumnName("DURATION");

                entity.Property(e => e.Exported).HasColumnName("EXPORTED");

                entity.Property(e => e.MacId).HasColumnName("MAC_ID");

                entity.Property(e => e.McrId).HasColumnName("MCR_ID");

                entity.Property(e => e.NtIdOutlook).HasColumnName("NT_ID_OUTLOOK");

                entity.Property(e => e.OpId).HasColumnName("OP_ID");

                entity.Property(e => e.OpaUd10Bit).HasColumnName("OPA_UD10_BIT");

                entity.Property(e => e.OpaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD10_DATE");

                entity.Property(e => e.OpaUd10Id).HasColumnName("OPA_UD10_ID");

                entity.Property(e => e.OpaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD10_NUMERIC");

                entity.Property(e => e.OpaUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD10_TEXT");

                entity.Property(e => e.OpaUd1Bit).HasColumnName("OPA_UD1_BIT");

                entity.Property(e => e.OpaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD1_DATE");

                entity.Property(e => e.OpaUd1Id).HasColumnName("OPA_UD1_ID");

                entity.Property(e => e.OpaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD1_NUMERIC");

                entity.Property(e => e.OpaUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD1_TEXT");

                entity.Property(e => e.OpaUd2Bit).HasColumnName("OPA_UD2_BIT");

                entity.Property(e => e.OpaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD2_DATE");

                entity.Property(e => e.OpaUd2Id).HasColumnName("OPA_UD2_ID");

                entity.Property(e => e.OpaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD2_NUMERIC");

                entity.Property(e => e.OpaUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD2_TEXT");

                entity.Property(e => e.OpaUd3Bit).HasColumnName("OPA_UD3_BIT");

                entity.Property(e => e.OpaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD3_DATE");

                entity.Property(e => e.OpaUd3Id).HasColumnName("OPA_UD3_ID");

                entity.Property(e => e.OpaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD3_NUMERIC");

                entity.Property(e => e.OpaUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD3_TEXT");

                entity.Property(e => e.OpaUd4Bit).HasColumnName("OPA_UD4_BIT");

                entity.Property(e => e.OpaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD4_DATE");

                entity.Property(e => e.OpaUd4Id).HasColumnName("OPA_UD4_ID");

                entity.Property(e => e.OpaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD4_NUMERIC");

                entity.Property(e => e.OpaUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD4_TEXT");

                entity.Property(e => e.OpaUd5Bit).HasColumnName("OPA_UD5_BIT");

                entity.Property(e => e.OpaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD5_DATE");

                entity.Property(e => e.OpaUd5Id).HasColumnName("OPA_UD5_ID");

                entity.Property(e => e.OpaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD5_NUMERIC");

                entity.Property(e => e.OpaUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD5_TEXT");

                entity.Property(e => e.OpaUd6Bit).HasColumnName("OPA_UD6_BIT");

                entity.Property(e => e.OpaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD6_DATE");

                entity.Property(e => e.OpaUd6Id).HasColumnName("OPA_UD6_ID");

                entity.Property(e => e.OpaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD6_NUMERIC");

                entity.Property(e => e.OpaUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD6_TEXT");

                entity.Property(e => e.OpaUd7Bit).HasColumnName("OPA_UD7_BIT");

                entity.Property(e => e.OpaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD7_DATE");

                entity.Property(e => e.OpaUd7Id).HasColumnName("OPA_UD7_ID");

                entity.Property(e => e.OpaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD7_NUMERIC");

                entity.Property(e => e.OpaUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD7_TEXT");

                entity.Property(e => e.OpaUd8Bit).HasColumnName("OPA_UD8_BIT");

                entity.Property(e => e.OpaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD8_DATE");

                entity.Property(e => e.OpaUd8Id).HasColumnName("OPA_UD8_ID");

                entity.Property(e => e.OpaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD8_NUMERIC");

                entity.Property(e => e.OpaUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD8_TEXT");

                entity.Property(e => e.OpaUd9Bit).HasColumnName("OPA_UD9_BIT");

                entity.Property(e => e.OpaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD9_DATE");

                entity.Property(e => e.OpaUd9Id).HasColumnName("OPA_UD9_ID");

                entity.Property(e => e.OpaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD9_NUMERIC");

                entity.Property(e => e.OpaUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD9_TEXT");

                entity.Property(e => e.Owner)
                    .HasMaxLength(255)
                    .HasColumnName("OWNER");

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.PercentComplete).HasColumnName("PERCENT_COMPLETE");

                entity.Property(e => e.PjId).HasColumnName("PJ_ID");

                entity.Property(e => e.PjaUd10Bit).HasColumnName("PJA_UD10_BIT");

                entity.Property(e => e.PjaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD10_DATE");

                entity.Property(e => e.PjaUd10Id).HasColumnName("PJA_UD10_ID");

                entity.Property(e => e.PjaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD10_NUMERIC");

                entity.Property(e => e.PjaUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD10_TEXT");

                entity.Property(e => e.PjaUd1Bit).HasColumnName("PJA_UD1_BIT");

                entity.Property(e => e.PjaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD1_DATE");

                entity.Property(e => e.PjaUd1Id).HasColumnName("PJA_UD1_ID");

                entity.Property(e => e.PjaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD1_NUMERIC");

                entity.Property(e => e.PjaUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD1_TEXT");

                entity.Property(e => e.PjaUd2Bit).HasColumnName("PJA_UD2_BIT");

                entity.Property(e => e.PjaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD2_DATE");

                entity.Property(e => e.PjaUd2Id).HasColumnName("PJA_UD2_ID");

                entity.Property(e => e.PjaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD2_NUMERIC");

                entity.Property(e => e.PjaUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD2_TEXT");

                entity.Property(e => e.PjaUd3Bit).HasColumnName("PJA_UD3_BIT");

                entity.Property(e => e.PjaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD3_DATE");

                entity.Property(e => e.PjaUd3Id).HasColumnName("PJA_UD3_ID");

                entity.Property(e => e.PjaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD3_NUMERIC");

                entity.Property(e => e.PjaUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD3_TEXT");

                entity.Property(e => e.PjaUd4Bit).HasColumnName("PJA_UD4_BIT");

                entity.Property(e => e.PjaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD4_DATE");

                entity.Property(e => e.PjaUd4Id).HasColumnName("PJA_UD4_ID");

                entity.Property(e => e.PjaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD4_NUMERIC");

                entity.Property(e => e.PjaUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD4_TEXT");

                entity.Property(e => e.PjaUd5Bit).HasColumnName("PJA_UD5_BIT");

                entity.Property(e => e.PjaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD5_DATE");

                entity.Property(e => e.PjaUd5Id).HasColumnName("PJA_UD5_ID");

                entity.Property(e => e.PjaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD5_NUMERIC");

                entity.Property(e => e.PjaUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD5_TEXT");

                entity.Property(e => e.PjaUd6Bit).HasColumnName("PJA_UD6_BIT");

                entity.Property(e => e.PjaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD6_DATE");

                entity.Property(e => e.PjaUd6Id).HasColumnName("PJA_UD6_ID");

                entity.Property(e => e.PjaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD6_NUMERIC");

                entity.Property(e => e.PjaUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD6_TEXT");

                entity.Property(e => e.PjaUd7Bit).HasColumnName("PJA_UD7_BIT");

                entity.Property(e => e.PjaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD7_DATE");

                entity.Property(e => e.PjaUd7Id).HasColumnName("PJA_UD7_ID");

                entity.Property(e => e.PjaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD7_NUMERIC");

                entity.Property(e => e.PjaUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD7_TEXT");

                entity.Property(e => e.PjaUd8Bit).HasColumnName("PJA_UD8_BIT");

                entity.Property(e => e.PjaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD8_DATE");

                entity.Property(e => e.PjaUd8Id).HasColumnName("PJA_UD8_ID");

                entity.Property(e => e.PjaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD8_NUMERIC");

                entity.Property(e => e.PjaUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD8_TEXT");

                entity.Property(e => e.PjaUd9Bit).HasColumnName("PJA_UD9_BIT");

                entity.Property(e => e.PjaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD9_DATE");

                entity.Property(e => e.PjaUd9Id).HasColumnName("PJA_UD9_ID");

                entity.Property(e => e.PjaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD9_NUMERIC");

                entity.Property(e => e.PjaUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD9_TEXT");

                entity.Property(e => e.Priority).HasColumnName("PRIORITY");

                entity.Property(e => e.Private).HasColumnName("PRIVATE");

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.Reminder).HasColumnName("REMINDER");

                entity.Property(e => e.ReminderAlerted).HasColumnName("REMINDER_ALERTED");

                entity.Property(e => e.ReminderMinutes).HasColumnName("REMINDER_MINUTES");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.Sensitivity).HasColumnName("SENSITIVITY");

                entity.Property(e => e.ShowOnCalendar).HasColumnName("SHOW_ON_CALENDAR");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("START_DATE");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.StgId).HasColumnName("STG_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.SyncUpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYNC_UPDATED_DATE");

                entity.Property(e => e.Type).HasColumnName("TYPE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");
            });

            modelBuilder.Entity<GvvDeletedContactActivity>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("gvvDeletedContactActivities");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.AcaUd10Bit).HasColumnName("ACA_UD10_BIT");

                entity.Property(e => e.AcaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD10_DATE");

                entity.Property(e => e.AcaUd10Id).HasColumnName("ACA_UD10_ID");

                entity.Property(e => e.AcaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD10_NUMERIC");

                entity.Property(e => e.AcaUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD10_TEXT");

                entity.Property(e => e.AcaUd1Bit).HasColumnName("ACA_UD1_BIT");

                entity.Property(e => e.AcaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD1_DATE");

                entity.Property(e => e.AcaUd1Id).HasColumnName("ACA_UD1_ID");

                entity.Property(e => e.AcaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD1_NUMERIC");

                entity.Property(e => e.AcaUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD1_TEXT");

                entity.Property(e => e.AcaUd2Bit).HasColumnName("ACA_UD2_BIT");

                entity.Property(e => e.AcaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD2_DATE");

                entity.Property(e => e.AcaUd2Id).HasColumnName("ACA_UD2_ID");

                entity.Property(e => e.AcaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD2_NUMERIC");

                entity.Property(e => e.AcaUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD2_TEXT");

                entity.Property(e => e.AcaUd3Bit).HasColumnName("ACA_UD3_BIT");

                entity.Property(e => e.AcaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD3_DATE");

                entity.Property(e => e.AcaUd3Id).HasColumnName("ACA_UD3_ID");

                entity.Property(e => e.AcaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD3_NUMERIC");

                entity.Property(e => e.AcaUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD3_TEXT");

                entity.Property(e => e.AcaUd4Bit).HasColumnName("ACA_UD4_BIT");

                entity.Property(e => e.AcaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD4_DATE");

                entity.Property(e => e.AcaUd4Id).HasColumnName("ACA_UD4_ID");

                entity.Property(e => e.AcaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD4_NUMERIC");

                entity.Property(e => e.AcaUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD4_TEXT");

                entity.Property(e => e.AcaUd5Bit).HasColumnName("ACA_UD5_BIT");

                entity.Property(e => e.AcaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD5_DATE");

                entity.Property(e => e.AcaUd5Id).HasColumnName("ACA_UD5_ID");

                entity.Property(e => e.AcaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD5_NUMERIC");

                entity.Property(e => e.AcaUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD5_TEXT");

                entity.Property(e => e.AcaUd6Bit).HasColumnName("ACA_UD6_BIT");

                entity.Property(e => e.AcaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD6_DATE");

                entity.Property(e => e.AcaUd6Id).HasColumnName("ACA_UD6_ID");

                entity.Property(e => e.AcaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD6_NUMERIC");

                entity.Property(e => e.AcaUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD6_TEXT");

                entity.Property(e => e.AcaUd7Bit).HasColumnName("ACA_UD7_BIT");

                entity.Property(e => e.AcaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD7_DATE");

                entity.Property(e => e.AcaUd7Id).HasColumnName("ACA_UD7_ID");

                entity.Property(e => e.AcaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD7_NUMERIC");

                entity.Property(e => e.AcaUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD7_TEXT");

                entity.Property(e => e.AcaUd8Bit).HasColumnName("ACA_UD8_BIT");

                entity.Property(e => e.AcaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD8_DATE");

                entity.Property(e => e.AcaUd8Id).HasColumnName("ACA_UD8_ID");

                entity.Property(e => e.AcaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD8_NUMERIC");

                entity.Property(e => e.AcaUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD8_TEXT");

                entity.Property(e => e.AcaUd9Bit).HasColumnName("ACA_UD9_BIT");

                entity.Property(e => e.AcaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD9_DATE");

                entity.Property(e => e.AcaUd9Id).HasColumnName("ACA_UD9_ID");

                entity.Property(e => e.AcaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD9_NUMERIC");

                entity.Property(e => e.AcaUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD9_TEXT");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccaNumber).HasColumnName("ACCA_NUMBER");

                entity.Property(e => e.AccaStage).HasColumnName("ACCA_STAGE");

                entity.Property(e => e.AccaUd10Bit).HasColumnName("ACCA_UD10_BIT");

                entity.Property(e => e.AccaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD10_DATE");

                entity.Property(e => e.AccaUd10Id).HasColumnName("ACCA_UD10_ID");

                entity.Property(e => e.AccaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD10_NUMERIC");

                entity.Property(e => e.AccaUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD10_TEXT");

                entity.Property(e => e.AccaUd1Bit).HasColumnName("ACCA_UD1_BIT");

                entity.Property(e => e.AccaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD1_DATE");

                entity.Property(e => e.AccaUd1Id).HasColumnName("ACCA_UD1_ID");

                entity.Property(e => e.AccaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD1_NUMERIC");

                entity.Property(e => e.AccaUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD1_TEXT");

                entity.Property(e => e.AccaUd2Bit).HasColumnName("ACCA_UD2_BIT");

                entity.Property(e => e.AccaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD2_DATE");

                entity.Property(e => e.AccaUd2Id).HasColumnName("ACCA_UD2_ID");

                entity.Property(e => e.AccaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD2_NUMERIC");

                entity.Property(e => e.AccaUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD2_TEXT");

                entity.Property(e => e.AccaUd3Bit).HasColumnName("ACCA_UD3_BIT");

                entity.Property(e => e.AccaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD3_DATE");

                entity.Property(e => e.AccaUd3Id).HasColumnName("ACCA_UD3_ID");

                entity.Property(e => e.AccaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD3_NUMERIC");

                entity.Property(e => e.AccaUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD3_TEXT");

                entity.Property(e => e.AccaUd4Bit).HasColumnName("ACCA_UD4_BIT");

                entity.Property(e => e.AccaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD4_DATE");

                entity.Property(e => e.AccaUd4Id).HasColumnName("ACCA_UD4_ID");

                entity.Property(e => e.AccaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD4_NUMERIC");

                entity.Property(e => e.AccaUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD4_TEXT");

                entity.Property(e => e.AccaUd5Bit).HasColumnName("ACCA_UD5_BIT");

                entity.Property(e => e.AccaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD5_DATE");

                entity.Property(e => e.AccaUd5Id).HasColumnName("ACCA_UD5_ID");

                entity.Property(e => e.AccaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD5_NUMERIC");

                entity.Property(e => e.AccaUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD5_TEXT");

                entity.Property(e => e.AccaUd6Bit).HasColumnName("ACCA_UD6_BIT");

                entity.Property(e => e.AccaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD6_DATE");

                entity.Property(e => e.AccaUd6Id).HasColumnName("ACCA_UD6_ID");

                entity.Property(e => e.AccaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD6_NUMERIC");

                entity.Property(e => e.AccaUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD6_TEXT");

                entity.Property(e => e.AccaUd7Bit).HasColumnName("ACCA_UD7_BIT");

                entity.Property(e => e.AccaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD7_DATE");

                entity.Property(e => e.AccaUd7Id).HasColumnName("ACCA_UD7_ID");

                entity.Property(e => e.AccaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD7_NUMERIC");

                entity.Property(e => e.AccaUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD7_TEXT");

                entity.Property(e => e.AccaUd8Bit).HasColumnName("ACCA_UD8_BIT");

                entity.Property(e => e.AccaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD8_DATE");

                entity.Property(e => e.AccaUd8Id).HasColumnName("ACCA_UD8_ID");

                entity.Property(e => e.AccaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD8_NUMERIC");

                entity.Property(e => e.AccaUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD8_TEXT");

                entity.Property(e => e.AccaUd9Bit).HasColumnName("ACCA_UD9_BIT");

                entity.Property(e => e.AccaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD9_DATE");

                entity.Property(e => e.AccaUd9Id).HasColumnName("ACCA_UD9_ID");

                entity.Property(e => e.AccaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD9_NUMERIC");

                entity.Property(e => e.AccaUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD9_TEXT");

                entity.Property(e => e.ActDeleted).HasColumnName("ACT_DELETED");

                entity.Property(e => e.ActExternal)
                    .HasMaxLength(255)
                    .HasColumnName("ACT_EXTERNAL");

                entity.Property(e => e.ActId).HasColumnName("ACT_ID");

                entity.Property(e => e.ActImport).HasColumnName("ACT_IMPORT");

                entity.Property(e => e.ActReadOnly).HasColumnName("ACT_READ_ONLY");

                entity.Property(e => e.ActivityType)
                    .HasMaxLength(50)
                    .HasColumnName("ACTIVITY_TYPE");

                entity.Property(e => e.BillingInformation)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_INFORMATION");

                entity.Property(e => e.Complete).HasColumnName("COMPLETE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DateCompleted)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_COMPLETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.DueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DUE_DATE");

                entity.Property(e => e.Duration)
                    .HasMaxLength(50)
                    .HasColumnName("DURATION");

                entity.Property(e => e.Exported).HasColumnName("EXPORTED");

                entity.Property(e => e.MacId).HasColumnName("MAC_ID");

                entity.Property(e => e.McrId).HasColumnName("MCR_ID");

                entity.Property(e => e.NtIdOutlook).HasColumnName("NT_ID_OUTLOOK");

                entity.Property(e => e.OpId).HasColumnName("OP_ID");

                entity.Property(e => e.OpaUd10Bit).HasColumnName("OPA_UD10_BIT");

                entity.Property(e => e.OpaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD10_DATE");

                entity.Property(e => e.OpaUd10Id).HasColumnName("OPA_UD10_ID");

                entity.Property(e => e.OpaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD10_NUMERIC");

                entity.Property(e => e.OpaUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD10_TEXT");

                entity.Property(e => e.OpaUd1Bit).HasColumnName("OPA_UD1_BIT");

                entity.Property(e => e.OpaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD1_DATE");

                entity.Property(e => e.OpaUd1Id).HasColumnName("OPA_UD1_ID");

                entity.Property(e => e.OpaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD1_NUMERIC");

                entity.Property(e => e.OpaUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD1_TEXT");

                entity.Property(e => e.OpaUd2Bit).HasColumnName("OPA_UD2_BIT");

                entity.Property(e => e.OpaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD2_DATE");

                entity.Property(e => e.OpaUd2Id).HasColumnName("OPA_UD2_ID");

                entity.Property(e => e.OpaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD2_NUMERIC");

                entity.Property(e => e.OpaUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD2_TEXT");

                entity.Property(e => e.OpaUd3Bit).HasColumnName("OPA_UD3_BIT");

                entity.Property(e => e.OpaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD3_DATE");

                entity.Property(e => e.OpaUd3Id).HasColumnName("OPA_UD3_ID");

                entity.Property(e => e.OpaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD3_NUMERIC");

                entity.Property(e => e.OpaUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD3_TEXT");

                entity.Property(e => e.OpaUd4Bit).HasColumnName("OPA_UD4_BIT");

                entity.Property(e => e.OpaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD4_DATE");

                entity.Property(e => e.OpaUd4Id).HasColumnName("OPA_UD4_ID");

                entity.Property(e => e.OpaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD4_NUMERIC");

                entity.Property(e => e.OpaUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD4_TEXT");

                entity.Property(e => e.OpaUd5Bit).HasColumnName("OPA_UD5_BIT");

                entity.Property(e => e.OpaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD5_DATE");

                entity.Property(e => e.OpaUd5Id).HasColumnName("OPA_UD5_ID");

                entity.Property(e => e.OpaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD5_NUMERIC");

                entity.Property(e => e.OpaUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD5_TEXT");

                entity.Property(e => e.OpaUd6Bit).HasColumnName("OPA_UD6_BIT");

                entity.Property(e => e.OpaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD6_DATE");

                entity.Property(e => e.OpaUd6Id).HasColumnName("OPA_UD6_ID");

                entity.Property(e => e.OpaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD6_NUMERIC");

                entity.Property(e => e.OpaUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD6_TEXT");

                entity.Property(e => e.OpaUd7Bit).HasColumnName("OPA_UD7_BIT");

                entity.Property(e => e.OpaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD7_DATE");

                entity.Property(e => e.OpaUd7Id).HasColumnName("OPA_UD7_ID");

                entity.Property(e => e.OpaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD7_NUMERIC");

                entity.Property(e => e.OpaUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD7_TEXT");

                entity.Property(e => e.OpaUd8Bit).HasColumnName("OPA_UD8_BIT");

                entity.Property(e => e.OpaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD8_DATE");

                entity.Property(e => e.OpaUd8Id).HasColumnName("OPA_UD8_ID");

                entity.Property(e => e.OpaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD8_NUMERIC");

                entity.Property(e => e.OpaUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD8_TEXT");

                entity.Property(e => e.OpaUd9Bit).HasColumnName("OPA_UD9_BIT");

                entity.Property(e => e.OpaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD9_DATE");

                entity.Property(e => e.OpaUd9Id).HasColumnName("OPA_UD9_ID");

                entity.Property(e => e.OpaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD9_NUMERIC");

                entity.Property(e => e.OpaUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD9_TEXT");

                entity.Property(e => e.Owner)
                    .HasMaxLength(255)
                    .HasColumnName("OWNER");

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.PercentComplete).HasColumnName("PERCENT_COMPLETE");

                entity.Property(e => e.PjId).HasColumnName("PJ_ID");

                entity.Property(e => e.PjaUd10Bit).HasColumnName("PJA_UD10_BIT");

                entity.Property(e => e.PjaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD10_DATE");

                entity.Property(e => e.PjaUd10Id).HasColumnName("PJA_UD10_ID");

                entity.Property(e => e.PjaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD10_NUMERIC");

                entity.Property(e => e.PjaUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD10_TEXT");

                entity.Property(e => e.PjaUd1Bit).HasColumnName("PJA_UD1_BIT");

                entity.Property(e => e.PjaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD1_DATE");

                entity.Property(e => e.PjaUd1Id).HasColumnName("PJA_UD1_ID");

                entity.Property(e => e.PjaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD1_NUMERIC");

                entity.Property(e => e.PjaUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD1_TEXT");

                entity.Property(e => e.PjaUd2Bit).HasColumnName("PJA_UD2_BIT");

                entity.Property(e => e.PjaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD2_DATE");

                entity.Property(e => e.PjaUd2Id).HasColumnName("PJA_UD2_ID");

                entity.Property(e => e.PjaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD2_NUMERIC");

                entity.Property(e => e.PjaUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD2_TEXT");

                entity.Property(e => e.PjaUd3Bit).HasColumnName("PJA_UD3_BIT");

                entity.Property(e => e.PjaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD3_DATE");

                entity.Property(e => e.PjaUd3Id).HasColumnName("PJA_UD3_ID");

                entity.Property(e => e.PjaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD3_NUMERIC");

                entity.Property(e => e.PjaUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD3_TEXT");

                entity.Property(e => e.PjaUd4Bit).HasColumnName("PJA_UD4_BIT");

                entity.Property(e => e.PjaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD4_DATE");

                entity.Property(e => e.PjaUd4Id).HasColumnName("PJA_UD4_ID");

                entity.Property(e => e.PjaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD4_NUMERIC");

                entity.Property(e => e.PjaUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD4_TEXT");

                entity.Property(e => e.PjaUd5Bit).HasColumnName("PJA_UD5_BIT");

                entity.Property(e => e.PjaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD5_DATE");

                entity.Property(e => e.PjaUd5Id).HasColumnName("PJA_UD5_ID");

                entity.Property(e => e.PjaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD5_NUMERIC");

                entity.Property(e => e.PjaUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD5_TEXT");

                entity.Property(e => e.PjaUd6Bit).HasColumnName("PJA_UD6_BIT");

                entity.Property(e => e.PjaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD6_DATE");

                entity.Property(e => e.PjaUd6Id).HasColumnName("PJA_UD6_ID");

                entity.Property(e => e.PjaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD6_NUMERIC");

                entity.Property(e => e.PjaUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD6_TEXT");

                entity.Property(e => e.PjaUd7Bit).HasColumnName("PJA_UD7_BIT");

                entity.Property(e => e.PjaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD7_DATE");

                entity.Property(e => e.PjaUd7Id).HasColumnName("PJA_UD7_ID");

                entity.Property(e => e.PjaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD7_NUMERIC");

                entity.Property(e => e.PjaUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD7_TEXT");

                entity.Property(e => e.PjaUd8Bit).HasColumnName("PJA_UD8_BIT");

                entity.Property(e => e.PjaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD8_DATE");

                entity.Property(e => e.PjaUd8Id).HasColumnName("PJA_UD8_ID");

                entity.Property(e => e.PjaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD8_NUMERIC");

                entity.Property(e => e.PjaUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD8_TEXT");

                entity.Property(e => e.PjaUd9Bit).HasColumnName("PJA_UD9_BIT");

                entity.Property(e => e.PjaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD9_DATE");

                entity.Property(e => e.PjaUd9Id).HasColumnName("PJA_UD9_ID");

                entity.Property(e => e.PjaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD9_NUMERIC");

                entity.Property(e => e.PjaUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD9_TEXT");

                entity.Property(e => e.Priority).HasColumnName("PRIORITY");

                entity.Property(e => e.Private).HasColumnName("PRIVATE");

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.Reminder).HasColumnName("REMINDER");

                entity.Property(e => e.ReminderAlerted).HasColumnName("REMINDER_ALERTED");

                entity.Property(e => e.ReminderMinutes).HasColumnName("REMINDER_MINUTES");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.Sensitivity).HasColumnName("SENSITIVITY");

                entity.Property(e => e.ShowOnCalendar).HasColumnName("SHOW_ON_CALENDAR");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("START_DATE");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.StgId).HasColumnName("STG_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.SyncUpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYNC_UPDATED_DATE");

                entity.Property(e => e.Type).HasColumnName("TYPE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");
            });

            modelBuilder.Entity<GvvDeletedOpportunityActivity>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("gvvDeletedOpportunityActivities");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.AcaUd10Bit).HasColumnName("ACA_UD10_BIT");

                entity.Property(e => e.AcaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD10_DATE");

                entity.Property(e => e.AcaUd10Id).HasColumnName("ACA_UD10_ID");

                entity.Property(e => e.AcaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD10_NUMERIC");

                entity.Property(e => e.AcaUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD10_TEXT");

                entity.Property(e => e.AcaUd1Bit).HasColumnName("ACA_UD1_BIT");

                entity.Property(e => e.AcaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD1_DATE");

                entity.Property(e => e.AcaUd1Id).HasColumnName("ACA_UD1_ID");

                entity.Property(e => e.AcaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD1_NUMERIC");

                entity.Property(e => e.AcaUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD1_TEXT");

                entity.Property(e => e.AcaUd2Bit).HasColumnName("ACA_UD2_BIT");

                entity.Property(e => e.AcaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD2_DATE");

                entity.Property(e => e.AcaUd2Id).HasColumnName("ACA_UD2_ID");

                entity.Property(e => e.AcaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD2_NUMERIC");

                entity.Property(e => e.AcaUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD2_TEXT");

                entity.Property(e => e.AcaUd3Bit).HasColumnName("ACA_UD3_BIT");

                entity.Property(e => e.AcaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD3_DATE");

                entity.Property(e => e.AcaUd3Id).HasColumnName("ACA_UD3_ID");

                entity.Property(e => e.AcaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD3_NUMERIC");

                entity.Property(e => e.AcaUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD3_TEXT");

                entity.Property(e => e.AcaUd4Bit).HasColumnName("ACA_UD4_BIT");

                entity.Property(e => e.AcaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD4_DATE");

                entity.Property(e => e.AcaUd4Id).HasColumnName("ACA_UD4_ID");

                entity.Property(e => e.AcaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD4_NUMERIC");

                entity.Property(e => e.AcaUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD4_TEXT");

                entity.Property(e => e.AcaUd5Bit).HasColumnName("ACA_UD5_BIT");

                entity.Property(e => e.AcaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD5_DATE");

                entity.Property(e => e.AcaUd5Id).HasColumnName("ACA_UD5_ID");

                entity.Property(e => e.AcaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD5_NUMERIC");

                entity.Property(e => e.AcaUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD5_TEXT");

                entity.Property(e => e.AcaUd6Bit).HasColumnName("ACA_UD6_BIT");

                entity.Property(e => e.AcaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD6_DATE");

                entity.Property(e => e.AcaUd6Id).HasColumnName("ACA_UD6_ID");

                entity.Property(e => e.AcaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD6_NUMERIC");

                entity.Property(e => e.AcaUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD6_TEXT");

                entity.Property(e => e.AcaUd7Bit).HasColumnName("ACA_UD7_BIT");

                entity.Property(e => e.AcaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD7_DATE");

                entity.Property(e => e.AcaUd7Id).HasColumnName("ACA_UD7_ID");

                entity.Property(e => e.AcaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD7_NUMERIC");

                entity.Property(e => e.AcaUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD7_TEXT");

                entity.Property(e => e.AcaUd8Bit).HasColumnName("ACA_UD8_BIT");

                entity.Property(e => e.AcaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD8_DATE");

                entity.Property(e => e.AcaUd8Id).HasColumnName("ACA_UD8_ID");

                entity.Property(e => e.AcaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD8_NUMERIC");

                entity.Property(e => e.AcaUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD8_TEXT");

                entity.Property(e => e.AcaUd9Bit).HasColumnName("ACA_UD9_BIT");

                entity.Property(e => e.AcaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD9_DATE");

                entity.Property(e => e.AcaUd9Id).HasColumnName("ACA_UD9_ID");

                entity.Property(e => e.AcaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD9_NUMERIC");

                entity.Property(e => e.AcaUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD9_TEXT");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccaNumber).HasColumnName("ACCA_NUMBER");

                entity.Property(e => e.AccaStage).HasColumnName("ACCA_STAGE");

                entity.Property(e => e.AccaUd10Bit).HasColumnName("ACCA_UD10_BIT");

                entity.Property(e => e.AccaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD10_DATE");

                entity.Property(e => e.AccaUd10Id).HasColumnName("ACCA_UD10_ID");

                entity.Property(e => e.AccaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD10_NUMERIC");

                entity.Property(e => e.AccaUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD10_TEXT");

                entity.Property(e => e.AccaUd1Bit).HasColumnName("ACCA_UD1_BIT");

                entity.Property(e => e.AccaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD1_DATE");

                entity.Property(e => e.AccaUd1Id).HasColumnName("ACCA_UD1_ID");

                entity.Property(e => e.AccaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD1_NUMERIC");

                entity.Property(e => e.AccaUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD1_TEXT");

                entity.Property(e => e.AccaUd2Bit).HasColumnName("ACCA_UD2_BIT");

                entity.Property(e => e.AccaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD2_DATE");

                entity.Property(e => e.AccaUd2Id).HasColumnName("ACCA_UD2_ID");

                entity.Property(e => e.AccaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD2_NUMERIC");

                entity.Property(e => e.AccaUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD2_TEXT");

                entity.Property(e => e.AccaUd3Bit).HasColumnName("ACCA_UD3_BIT");

                entity.Property(e => e.AccaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD3_DATE");

                entity.Property(e => e.AccaUd3Id).HasColumnName("ACCA_UD3_ID");

                entity.Property(e => e.AccaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD3_NUMERIC");

                entity.Property(e => e.AccaUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD3_TEXT");

                entity.Property(e => e.AccaUd4Bit).HasColumnName("ACCA_UD4_BIT");

                entity.Property(e => e.AccaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD4_DATE");

                entity.Property(e => e.AccaUd4Id).HasColumnName("ACCA_UD4_ID");

                entity.Property(e => e.AccaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD4_NUMERIC");

                entity.Property(e => e.AccaUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD4_TEXT");

                entity.Property(e => e.AccaUd5Bit).HasColumnName("ACCA_UD5_BIT");

                entity.Property(e => e.AccaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD5_DATE");

                entity.Property(e => e.AccaUd5Id).HasColumnName("ACCA_UD5_ID");

                entity.Property(e => e.AccaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD5_NUMERIC");

                entity.Property(e => e.AccaUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD5_TEXT");

                entity.Property(e => e.AccaUd6Bit).HasColumnName("ACCA_UD6_BIT");

                entity.Property(e => e.AccaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD6_DATE");

                entity.Property(e => e.AccaUd6Id).HasColumnName("ACCA_UD6_ID");

                entity.Property(e => e.AccaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD6_NUMERIC");

                entity.Property(e => e.AccaUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD6_TEXT");

                entity.Property(e => e.AccaUd7Bit).HasColumnName("ACCA_UD7_BIT");

                entity.Property(e => e.AccaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD7_DATE");

                entity.Property(e => e.AccaUd7Id).HasColumnName("ACCA_UD7_ID");

                entity.Property(e => e.AccaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD7_NUMERIC");

                entity.Property(e => e.AccaUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD7_TEXT");

                entity.Property(e => e.AccaUd8Bit).HasColumnName("ACCA_UD8_BIT");

                entity.Property(e => e.AccaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD8_DATE");

                entity.Property(e => e.AccaUd8Id).HasColumnName("ACCA_UD8_ID");

                entity.Property(e => e.AccaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD8_NUMERIC");

                entity.Property(e => e.AccaUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD8_TEXT");

                entity.Property(e => e.AccaUd9Bit).HasColumnName("ACCA_UD9_BIT");

                entity.Property(e => e.AccaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD9_DATE");

                entity.Property(e => e.AccaUd9Id).HasColumnName("ACCA_UD9_ID");

                entity.Property(e => e.AccaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD9_NUMERIC");

                entity.Property(e => e.AccaUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD9_TEXT");

                entity.Property(e => e.ActDeleted).HasColumnName("ACT_DELETED");

                entity.Property(e => e.ActExternal)
                    .HasMaxLength(255)
                    .HasColumnName("ACT_EXTERNAL");

                entity.Property(e => e.ActId).HasColumnName("ACT_ID");

                entity.Property(e => e.ActImport).HasColumnName("ACT_IMPORT");

                entity.Property(e => e.ActReadOnly).HasColumnName("ACT_READ_ONLY");

                entity.Property(e => e.ActivityType)
                    .HasMaxLength(50)
                    .HasColumnName("ACTIVITY_TYPE");

                entity.Property(e => e.BillingInformation)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_INFORMATION");

                entity.Property(e => e.Complete).HasColumnName("COMPLETE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DateCompleted)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_COMPLETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.DueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DUE_DATE");

                entity.Property(e => e.Duration)
                    .HasMaxLength(50)
                    .HasColumnName("DURATION");

                entity.Property(e => e.Exported).HasColumnName("EXPORTED");

                entity.Property(e => e.MacId).HasColumnName("MAC_ID");

                entity.Property(e => e.McrId).HasColumnName("MCR_ID");

                entity.Property(e => e.NtIdOutlook).HasColumnName("NT_ID_OUTLOOK");

                entity.Property(e => e.OpId).HasColumnName("OP_ID");

                entity.Property(e => e.OpaUd10Bit).HasColumnName("OPA_UD10_BIT");

                entity.Property(e => e.OpaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD10_DATE");

                entity.Property(e => e.OpaUd10Id).HasColumnName("OPA_UD10_ID");

                entity.Property(e => e.OpaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD10_NUMERIC");

                entity.Property(e => e.OpaUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD10_TEXT");

                entity.Property(e => e.OpaUd1Bit).HasColumnName("OPA_UD1_BIT");

                entity.Property(e => e.OpaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD1_DATE");

                entity.Property(e => e.OpaUd1Id).HasColumnName("OPA_UD1_ID");

                entity.Property(e => e.OpaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD1_NUMERIC");

                entity.Property(e => e.OpaUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD1_TEXT");

                entity.Property(e => e.OpaUd2Bit).HasColumnName("OPA_UD2_BIT");

                entity.Property(e => e.OpaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD2_DATE");

                entity.Property(e => e.OpaUd2Id).HasColumnName("OPA_UD2_ID");

                entity.Property(e => e.OpaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD2_NUMERIC");

                entity.Property(e => e.OpaUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD2_TEXT");

                entity.Property(e => e.OpaUd3Bit).HasColumnName("OPA_UD3_BIT");

                entity.Property(e => e.OpaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD3_DATE");

                entity.Property(e => e.OpaUd3Id).HasColumnName("OPA_UD3_ID");

                entity.Property(e => e.OpaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD3_NUMERIC");

                entity.Property(e => e.OpaUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD3_TEXT");

                entity.Property(e => e.OpaUd4Bit).HasColumnName("OPA_UD4_BIT");

                entity.Property(e => e.OpaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD4_DATE");

                entity.Property(e => e.OpaUd4Id).HasColumnName("OPA_UD4_ID");

                entity.Property(e => e.OpaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD4_NUMERIC");

                entity.Property(e => e.OpaUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD4_TEXT");

                entity.Property(e => e.OpaUd5Bit).HasColumnName("OPA_UD5_BIT");

                entity.Property(e => e.OpaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD5_DATE");

                entity.Property(e => e.OpaUd5Id).HasColumnName("OPA_UD5_ID");

                entity.Property(e => e.OpaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD5_NUMERIC");

                entity.Property(e => e.OpaUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD5_TEXT");

                entity.Property(e => e.OpaUd6Bit).HasColumnName("OPA_UD6_BIT");

                entity.Property(e => e.OpaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD6_DATE");

                entity.Property(e => e.OpaUd6Id).HasColumnName("OPA_UD6_ID");

                entity.Property(e => e.OpaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD6_NUMERIC");

                entity.Property(e => e.OpaUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD6_TEXT");

                entity.Property(e => e.OpaUd7Bit).HasColumnName("OPA_UD7_BIT");

                entity.Property(e => e.OpaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD7_DATE");

                entity.Property(e => e.OpaUd7Id).HasColumnName("OPA_UD7_ID");

                entity.Property(e => e.OpaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD7_NUMERIC");

                entity.Property(e => e.OpaUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD7_TEXT");

                entity.Property(e => e.OpaUd8Bit).HasColumnName("OPA_UD8_BIT");

                entity.Property(e => e.OpaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD8_DATE");

                entity.Property(e => e.OpaUd8Id).HasColumnName("OPA_UD8_ID");

                entity.Property(e => e.OpaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD8_NUMERIC");

                entity.Property(e => e.OpaUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD8_TEXT");

                entity.Property(e => e.OpaUd9Bit).HasColumnName("OPA_UD9_BIT");

                entity.Property(e => e.OpaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD9_DATE");

                entity.Property(e => e.OpaUd9Id).HasColumnName("OPA_UD9_ID");

                entity.Property(e => e.OpaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD9_NUMERIC");

                entity.Property(e => e.OpaUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD9_TEXT");

                entity.Property(e => e.Owner)
                    .HasMaxLength(255)
                    .HasColumnName("OWNER");

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.PercentComplete).HasColumnName("PERCENT_COMPLETE");

                entity.Property(e => e.PjId).HasColumnName("PJ_ID");

                entity.Property(e => e.PjaUd10Bit).HasColumnName("PJA_UD10_BIT");

                entity.Property(e => e.PjaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD10_DATE");

                entity.Property(e => e.PjaUd10Id).HasColumnName("PJA_UD10_ID");

                entity.Property(e => e.PjaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD10_NUMERIC");

                entity.Property(e => e.PjaUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD10_TEXT");

                entity.Property(e => e.PjaUd1Bit).HasColumnName("PJA_UD1_BIT");

                entity.Property(e => e.PjaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD1_DATE");

                entity.Property(e => e.PjaUd1Id).HasColumnName("PJA_UD1_ID");

                entity.Property(e => e.PjaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD1_NUMERIC");

                entity.Property(e => e.PjaUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD1_TEXT");

                entity.Property(e => e.PjaUd2Bit).HasColumnName("PJA_UD2_BIT");

                entity.Property(e => e.PjaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD2_DATE");

                entity.Property(e => e.PjaUd2Id).HasColumnName("PJA_UD2_ID");

                entity.Property(e => e.PjaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD2_NUMERIC");

                entity.Property(e => e.PjaUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD2_TEXT");

                entity.Property(e => e.PjaUd3Bit).HasColumnName("PJA_UD3_BIT");

                entity.Property(e => e.PjaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD3_DATE");

                entity.Property(e => e.PjaUd3Id).HasColumnName("PJA_UD3_ID");

                entity.Property(e => e.PjaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD3_NUMERIC");

                entity.Property(e => e.PjaUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD3_TEXT");

                entity.Property(e => e.PjaUd4Bit).HasColumnName("PJA_UD4_BIT");

                entity.Property(e => e.PjaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD4_DATE");

                entity.Property(e => e.PjaUd4Id).HasColumnName("PJA_UD4_ID");

                entity.Property(e => e.PjaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD4_NUMERIC");

                entity.Property(e => e.PjaUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD4_TEXT");

                entity.Property(e => e.PjaUd5Bit).HasColumnName("PJA_UD5_BIT");

                entity.Property(e => e.PjaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD5_DATE");

                entity.Property(e => e.PjaUd5Id).HasColumnName("PJA_UD5_ID");

                entity.Property(e => e.PjaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD5_NUMERIC");

                entity.Property(e => e.PjaUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD5_TEXT");

                entity.Property(e => e.PjaUd6Bit).HasColumnName("PJA_UD6_BIT");

                entity.Property(e => e.PjaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD6_DATE");

                entity.Property(e => e.PjaUd6Id).HasColumnName("PJA_UD6_ID");

                entity.Property(e => e.PjaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD6_NUMERIC");

                entity.Property(e => e.PjaUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD6_TEXT");

                entity.Property(e => e.PjaUd7Bit).HasColumnName("PJA_UD7_BIT");

                entity.Property(e => e.PjaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD7_DATE");

                entity.Property(e => e.PjaUd7Id).HasColumnName("PJA_UD7_ID");

                entity.Property(e => e.PjaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD7_NUMERIC");

                entity.Property(e => e.PjaUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD7_TEXT");

                entity.Property(e => e.PjaUd8Bit).HasColumnName("PJA_UD8_BIT");

                entity.Property(e => e.PjaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD8_DATE");

                entity.Property(e => e.PjaUd8Id).HasColumnName("PJA_UD8_ID");

                entity.Property(e => e.PjaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD8_NUMERIC");

                entity.Property(e => e.PjaUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD8_TEXT");

                entity.Property(e => e.PjaUd9Bit).HasColumnName("PJA_UD9_BIT");

                entity.Property(e => e.PjaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD9_DATE");

                entity.Property(e => e.PjaUd9Id).HasColumnName("PJA_UD9_ID");

                entity.Property(e => e.PjaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD9_NUMERIC");

                entity.Property(e => e.PjaUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD9_TEXT");

                entity.Property(e => e.Priority).HasColumnName("PRIORITY");

                entity.Property(e => e.Private).HasColumnName("PRIVATE");

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.Reminder).HasColumnName("REMINDER");

                entity.Property(e => e.ReminderAlerted).HasColumnName("REMINDER_ALERTED");

                entity.Property(e => e.ReminderMinutes).HasColumnName("REMINDER_MINUTES");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.Sensitivity).HasColumnName("SENSITIVITY");

                entity.Property(e => e.ShowOnCalendar).HasColumnName("SHOW_ON_CALENDAR");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("START_DATE");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.StgId).HasColumnName("STG_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.SyncUpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYNC_UPDATED_DATE");

                entity.Property(e => e.Type).HasColumnName("TYPE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");
            });

            modelBuilder.Entity<GvvDeletedProjectActivity>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("gvvDeletedProjectActivities");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.AcaUd10Bit).HasColumnName("ACA_UD10_BIT");

                entity.Property(e => e.AcaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD10_DATE");

                entity.Property(e => e.AcaUd10Id).HasColumnName("ACA_UD10_ID");

                entity.Property(e => e.AcaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD10_NUMERIC");

                entity.Property(e => e.AcaUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD10_TEXT");

                entity.Property(e => e.AcaUd1Bit).HasColumnName("ACA_UD1_BIT");

                entity.Property(e => e.AcaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD1_DATE");

                entity.Property(e => e.AcaUd1Id).HasColumnName("ACA_UD1_ID");

                entity.Property(e => e.AcaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD1_NUMERIC");

                entity.Property(e => e.AcaUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD1_TEXT");

                entity.Property(e => e.AcaUd2Bit).HasColumnName("ACA_UD2_BIT");

                entity.Property(e => e.AcaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD2_DATE");

                entity.Property(e => e.AcaUd2Id).HasColumnName("ACA_UD2_ID");

                entity.Property(e => e.AcaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD2_NUMERIC");

                entity.Property(e => e.AcaUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD2_TEXT");

                entity.Property(e => e.AcaUd3Bit).HasColumnName("ACA_UD3_BIT");

                entity.Property(e => e.AcaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD3_DATE");

                entity.Property(e => e.AcaUd3Id).HasColumnName("ACA_UD3_ID");

                entity.Property(e => e.AcaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD3_NUMERIC");

                entity.Property(e => e.AcaUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD3_TEXT");

                entity.Property(e => e.AcaUd4Bit).HasColumnName("ACA_UD4_BIT");

                entity.Property(e => e.AcaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD4_DATE");

                entity.Property(e => e.AcaUd4Id).HasColumnName("ACA_UD4_ID");

                entity.Property(e => e.AcaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD4_NUMERIC");

                entity.Property(e => e.AcaUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD4_TEXT");

                entity.Property(e => e.AcaUd5Bit).HasColumnName("ACA_UD5_BIT");

                entity.Property(e => e.AcaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD5_DATE");

                entity.Property(e => e.AcaUd5Id).HasColumnName("ACA_UD5_ID");

                entity.Property(e => e.AcaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD5_NUMERIC");

                entity.Property(e => e.AcaUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD5_TEXT");

                entity.Property(e => e.AcaUd6Bit).HasColumnName("ACA_UD6_BIT");

                entity.Property(e => e.AcaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD6_DATE");

                entity.Property(e => e.AcaUd6Id).HasColumnName("ACA_UD6_ID");

                entity.Property(e => e.AcaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD6_NUMERIC");

                entity.Property(e => e.AcaUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD6_TEXT");

                entity.Property(e => e.AcaUd7Bit).HasColumnName("ACA_UD7_BIT");

                entity.Property(e => e.AcaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD7_DATE");

                entity.Property(e => e.AcaUd7Id).HasColumnName("ACA_UD7_ID");

                entity.Property(e => e.AcaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD7_NUMERIC");

                entity.Property(e => e.AcaUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD7_TEXT");

                entity.Property(e => e.AcaUd8Bit).HasColumnName("ACA_UD8_BIT");

                entity.Property(e => e.AcaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD8_DATE");

                entity.Property(e => e.AcaUd8Id).HasColumnName("ACA_UD8_ID");

                entity.Property(e => e.AcaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD8_NUMERIC");

                entity.Property(e => e.AcaUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD8_TEXT");

                entity.Property(e => e.AcaUd9Bit).HasColumnName("ACA_UD9_BIT");

                entity.Property(e => e.AcaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD9_DATE");

                entity.Property(e => e.AcaUd9Id).HasColumnName("ACA_UD9_ID");

                entity.Property(e => e.AcaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD9_NUMERIC");

                entity.Property(e => e.AcaUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD9_TEXT");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccaNumber).HasColumnName("ACCA_NUMBER");

                entity.Property(e => e.AccaStage).HasColumnName("ACCA_STAGE");

                entity.Property(e => e.AccaUd10Bit).HasColumnName("ACCA_UD10_BIT");

                entity.Property(e => e.AccaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD10_DATE");

                entity.Property(e => e.AccaUd10Id).HasColumnName("ACCA_UD10_ID");

                entity.Property(e => e.AccaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD10_NUMERIC");

                entity.Property(e => e.AccaUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD10_TEXT");

                entity.Property(e => e.AccaUd1Bit).HasColumnName("ACCA_UD1_BIT");

                entity.Property(e => e.AccaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD1_DATE");

                entity.Property(e => e.AccaUd1Id).HasColumnName("ACCA_UD1_ID");

                entity.Property(e => e.AccaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD1_NUMERIC");

                entity.Property(e => e.AccaUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD1_TEXT");

                entity.Property(e => e.AccaUd2Bit).HasColumnName("ACCA_UD2_BIT");

                entity.Property(e => e.AccaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD2_DATE");

                entity.Property(e => e.AccaUd2Id).HasColumnName("ACCA_UD2_ID");

                entity.Property(e => e.AccaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD2_NUMERIC");

                entity.Property(e => e.AccaUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD2_TEXT");

                entity.Property(e => e.AccaUd3Bit).HasColumnName("ACCA_UD3_BIT");

                entity.Property(e => e.AccaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD3_DATE");

                entity.Property(e => e.AccaUd3Id).HasColumnName("ACCA_UD3_ID");

                entity.Property(e => e.AccaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD3_NUMERIC");

                entity.Property(e => e.AccaUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD3_TEXT");

                entity.Property(e => e.AccaUd4Bit).HasColumnName("ACCA_UD4_BIT");

                entity.Property(e => e.AccaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD4_DATE");

                entity.Property(e => e.AccaUd4Id).HasColumnName("ACCA_UD4_ID");

                entity.Property(e => e.AccaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD4_NUMERIC");

                entity.Property(e => e.AccaUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD4_TEXT");

                entity.Property(e => e.AccaUd5Bit).HasColumnName("ACCA_UD5_BIT");

                entity.Property(e => e.AccaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD5_DATE");

                entity.Property(e => e.AccaUd5Id).HasColumnName("ACCA_UD5_ID");

                entity.Property(e => e.AccaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD5_NUMERIC");

                entity.Property(e => e.AccaUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD5_TEXT");

                entity.Property(e => e.AccaUd6Bit).HasColumnName("ACCA_UD6_BIT");

                entity.Property(e => e.AccaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD6_DATE");

                entity.Property(e => e.AccaUd6Id).HasColumnName("ACCA_UD6_ID");

                entity.Property(e => e.AccaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD6_NUMERIC");

                entity.Property(e => e.AccaUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD6_TEXT");

                entity.Property(e => e.AccaUd7Bit).HasColumnName("ACCA_UD7_BIT");

                entity.Property(e => e.AccaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD7_DATE");

                entity.Property(e => e.AccaUd7Id).HasColumnName("ACCA_UD7_ID");

                entity.Property(e => e.AccaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD7_NUMERIC");

                entity.Property(e => e.AccaUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD7_TEXT");

                entity.Property(e => e.AccaUd8Bit).HasColumnName("ACCA_UD8_BIT");

                entity.Property(e => e.AccaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD8_DATE");

                entity.Property(e => e.AccaUd8Id).HasColumnName("ACCA_UD8_ID");

                entity.Property(e => e.AccaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD8_NUMERIC");

                entity.Property(e => e.AccaUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD8_TEXT");

                entity.Property(e => e.AccaUd9Bit).HasColumnName("ACCA_UD9_BIT");

                entity.Property(e => e.AccaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD9_DATE");

                entity.Property(e => e.AccaUd9Id).HasColumnName("ACCA_UD9_ID");

                entity.Property(e => e.AccaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD9_NUMERIC");

                entity.Property(e => e.AccaUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD9_TEXT");

                entity.Property(e => e.ActDeleted).HasColumnName("ACT_DELETED");

                entity.Property(e => e.ActExternal)
                    .HasMaxLength(255)
                    .HasColumnName("ACT_EXTERNAL");

                entity.Property(e => e.ActId).HasColumnName("ACT_ID");

                entity.Property(e => e.ActImport).HasColumnName("ACT_IMPORT");

                entity.Property(e => e.ActReadOnly).HasColumnName("ACT_READ_ONLY");

                entity.Property(e => e.ActivityType)
                    .HasMaxLength(50)
                    .HasColumnName("ACTIVITY_TYPE");

                entity.Property(e => e.BillingInformation)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_INFORMATION");

                entity.Property(e => e.Complete).HasColumnName("COMPLETE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DateCompleted)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_COMPLETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.DueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DUE_DATE");

                entity.Property(e => e.Duration)
                    .HasMaxLength(50)
                    .HasColumnName("DURATION");

                entity.Property(e => e.Exported).HasColumnName("EXPORTED");

                entity.Property(e => e.MacId).HasColumnName("MAC_ID");

                entity.Property(e => e.McrId).HasColumnName("MCR_ID");

                entity.Property(e => e.NtIdOutlook).HasColumnName("NT_ID_OUTLOOK");

                entity.Property(e => e.OpId).HasColumnName("OP_ID");

                entity.Property(e => e.OpaUd10Bit).HasColumnName("OPA_UD10_BIT");

                entity.Property(e => e.OpaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD10_DATE");

                entity.Property(e => e.OpaUd10Id).HasColumnName("OPA_UD10_ID");

                entity.Property(e => e.OpaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD10_NUMERIC");

                entity.Property(e => e.OpaUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD10_TEXT");

                entity.Property(e => e.OpaUd1Bit).HasColumnName("OPA_UD1_BIT");

                entity.Property(e => e.OpaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD1_DATE");

                entity.Property(e => e.OpaUd1Id).HasColumnName("OPA_UD1_ID");

                entity.Property(e => e.OpaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD1_NUMERIC");

                entity.Property(e => e.OpaUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD1_TEXT");

                entity.Property(e => e.OpaUd2Bit).HasColumnName("OPA_UD2_BIT");

                entity.Property(e => e.OpaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD2_DATE");

                entity.Property(e => e.OpaUd2Id).HasColumnName("OPA_UD2_ID");

                entity.Property(e => e.OpaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD2_NUMERIC");

                entity.Property(e => e.OpaUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD2_TEXT");

                entity.Property(e => e.OpaUd3Bit).HasColumnName("OPA_UD3_BIT");

                entity.Property(e => e.OpaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD3_DATE");

                entity.Property(e => e.OpaUd3Id).HasColumnName("OPA_UD3_ID");

                entity.Property(e => e.OpaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD3_NUMERIC");

                entity.Property(e => e.OpaUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD3_TEXT");

                entity.Property(e => e.OpaUd4Bit).HasColumnName("OPA_UD4_BIT");

                entity.Property(e => e.OpaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD4_DATE");

                entity.Property(e => e.OpaUd4Id).HasColumnName("OPA_UD4_ID");

                entity.Property(e => e.OpaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD4_NUMERIC");

                entity.Property(e => e.OpaUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD4_TEXT");

                entity.Property(e => e.OpaUd5Bit).HasColumnName("OPA_UD5_BIT");

                entity.Property(e => e.OpaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD5_DATE");

                entity.Property(e => e.OpaUd5Id).HasColumnName("OPA_UD5_ID");

                entity.Property(e => e.OpaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD5_NUMERIC");

                entity.Property(e => e.OpaUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD5_TEXT");

                entity.Property(e => e.OpaUd6Bit).HasColumnName("OPA_UD6_BIT");

                entity.Property(e => e.OpaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD6_DATE");

                entity.Property(e => e.OpaUd6Id).HasColumnName("OPA_UD6_ID");

                entity.Property(e => e.OpaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD6_NUMERIC");

                entity.Property(e => e.OpaUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD6_TEXT");

                entity.Property(e => e.OpaUd7Bit).HasColumnName("OPA_UD7_BIT");

                entity.Property(e => e.OpaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD7_DATE");

                entity.Property(e => e.OpaUd7Id).HasColumnName("OPA_UD7_ID");

                entity.Property(e => e.OpaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD7_NUMERIC");

                entity.Property(e => e.OpaUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD7_TEXT");

                entity.Property(e => e.OpaUd8Bit).HasColumnName("OPA_UD8_BIT");

                entity.Property(e => e.OpaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD8_DATE");

                entity.Property(e => e.OpaUd8Id).HasColumnName("OPA_UD8_ID");

                entity.Property(e => e.OpaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD8_NUMERIC");

                entity.Property(e => e.OpaUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD8_TEXT");

                entity.Property(e => e.OpaUd9Bit).HasColumnName("OPA_UD9_BIT");

                entity.Property(e => e.OpaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD9_DATE");

                entity.Property(e => e.OpaUd9Id).HasColumnName("OPA_UD9_ID");

                entity.Property(e => e.OpaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD9_NUMERIC");

                entity.Property(e => e.OpaUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD9_TEXT");

                entity.Property(e => e.Owner)
                    .HasMaxLength(255)
                    .HasColumnName("OWNER");

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.PercentComplete).HasColumnName("PERCENT_COMPLETE");

                entity.Property(e => e.PjId).HasColumnName("PJ_ID");

                entity.Property(e => e.PjaUd10Bit).HasColumnName("PJA_UD10_BIT");

                entity.Property(e => e.PjaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD10_DATE");

                entity.Property(e => e.PjaUd10Id).HasColumnName("PJA_UD10_ID");

                entity.Property(e => e.PjaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD10_NUMERIC");

                entity.Property(e => e.PjaUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD10_TEXT");

                entity.Property(e => e.PjaUd1Bit).HasColumnName("PJA_UD1_BIT");

                entity.Property(e => e.PjaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD1_DATE");

                entity.Property(e => e.PjaUd1Id).HasColumnName("PJA_UD1_ID");

                entity.Property(e => e.PjaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD1_NUMERIC");

                entity.Property(e => e.PjaUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD1_TEXT");

                entity.Property(e => e.PjaUd2Bit).HasColumnName("PJA_UD2_BIT");

                entity.Property(e => e.PjaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD2_DATE");

                entity.Property(e => e.PjaUd2Id).HasColumnName("PJA_UD2_ID");

                entity.Property(e => e.PjaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD2_NUMERIC");

                entity.Property(e => e.PjaUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD2_TEXT");

                entity.Property(e => e.PjaUd3Bit).HasColumnName("PJA_UD3_BIT");

                entity.Property(e => e.PjaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD3_DATE");

                entity.Property(e => e.PjaUd3Id).HasColumnName("PJA_UD3_ID");

                entity.Property(e => e.PjaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD3_NUMERIC");

                entity.Property(e => e.PjaUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD3_TEXT");

                entity.Property(e => e.PjaUd4Bit).HasColumnName("PJA_UD4_BIT");

                entity.Property(e => e.PjaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD4_DATE");

                entity.Property(e => e.PjaUd4Id).HasColumnName("PJA_UD4_ID");

                entity.Property(e => e.PjaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD4_NUMERIC");

                entity.Property(e => e.PjaUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD4_TEXT");

                entity.Property(e => e.PjaUd5Bit).HasColumnName("PJA_UD5_BIT");

                entity.Property(e => e.PjaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD5_DATE");

                entity.Property(e => e.PjaUd5Id).HasColumnName("PJA_UD5_ID");

                entity.Property(e => e.PjaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD5_NUMERIC");

                entity.Property(e => e.PjaUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD5_TEXT");

                entity.Property(e => e.PjaUd6Bit).HasColumnName("PJA_UD6_BIT");

                entity.Property(e => e.PjaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD6_DATE");

                entity.Property(e => e.PjaUd6Id).HasColumnName("PJA_UD6_ID");

                entity.Property(e => e.PjaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD6_NUMERIC");

                entity.Property(e => e.PjaUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD6_TEXT");

                entity.Property(e => e.PjaUd7Bit).HasColumnName("PJA_UD7_BIT");

                entity.Property(e => e.PjaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD7_DATE");

                entity.Property(e => e.PjaUd7Id).HasColumnName("PJA_UD7_ID");

                entity.Property(e => e.PjaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD7_NUMERIC");

                entity.Property(e => e.PjaUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD7_TEXT");

                entity.Property(e => e.PjaUd8Bit).HasColumnName("PJA_UD8_BIT");

                entity.Property(e => e.PjaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD8_DATE");

                entity.Property(e => e.PjaUd8Id).HasColumnName("PJA_UD8_ID");

                entity.Property(e => e.PjaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD8_NUMERIC");

                entity.Property(e => e.PjaUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD8_TEXT");

                entity.Property(e => e.PjaUd9Bit).HasColumnName("PJA_UD9_BIT");

                entity.Property(e => e.PjaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD9_DATE");

                entity.Property(e => e.PjaUd9Id).HasColumnName("PJA_UD9_ID");

                entity.Property(e => e.PjaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD9_NUMERIC");

                entity.Property(e => e.PjaUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD9_TEXT");

                entity.Property(e => e.Priority).HasColumnName("PRIORITY");

                entity.Property(e => e.Private).HasColumnName("PRIVATE");

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.Reminder).HasColumnName("REMINDER");

                entity.Property(e => e.ReminderAlerted).HasColumnName("REMINDER_ALERTED");

                entity.Property(e => e.ReminderMinutes).HasColumnName("REMINDER_MINUTES");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.Sensitivity).HasColumnName("SENSITIVITY");

                entity.Property(e => e.ShowOnCalendar).HasColumnName("SHOW_ON_CALENDAR");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("START_DATE");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.StgId).HasColumnName("STG_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.SyncUpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYNC_UPDATED_DATE");

                entity.Property(e => e.Type).HasColumnName("TYPE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");
            });

            modelBuilder.Entity<GvvDropDown>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("gvvDropDowns");

                entity.Property(e => e.DrId).HasColumnName("DR_ID");

                entity.Property(e => e.FieldLabel).HasColumnName("FIELD_LABEL");

                entity.Property(e => e.ScreenLabel)
                    .HasMaxLength(255)
                    .HasColumnName("SCREEN_LABEL");
            });

            modelBuilder.Entity<GvvGetAllHighlightRule>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("gvvGetAllHighlightRules");

                entity.Property(e => e.Colour)
                    .HasMaxLength(10)
                    .HasColumnName("COLOUR");

                entity.Property(e => e.Comparator)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COMPARATOR");

                entity.Property(e => e.FieldType).HasColumnName("FIELD_TYPE");

                entity.Property(e => e.LfdId).HasColumnName("LFD_ID");

                entity.Property(e => e.LogicalOperator)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("LOGICAL_OPERATOR")
                    .UseCollation("Latin1_General_CI_AS");

                entity.Property(e => e.LogicalOperatorId).HasColumnName("LOGICAL_OPERATOR_ID");

                entity.Property(e => e.LogicalOperatorSystemName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("LOGICAL_OPERATOR_SYSTEM_NAME")
                    .UseCollation("Latin1_General_CI_AS");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("NAME");

                entity.Property(e => e.RuleId).HasColumnName("RULE_ID");

                entity.Property(e => e.SortOrder).HasColumnName("SORT_ORDER");

                entity.Property(e => e.TimeSystemName)
                    .HasMaxLength(255)
                    .HasColumnName("TIME_SYSTEM_NAME")
                    .UseCollation("Latin1_General_CI_AS");

                entity.Property(e => e.TimeUnitId).HasColumnName("TIME_UNIT_ID");
            });

            modelBuilder.Entity<GvvGetTimeObjectsByParentId>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("gvvGetTimeObjectsByParentId");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ParentId).HasColumnName("parentId");
            });

            modelBuilder.Entity<GvvLegacyField>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("gvvLegacyFields");

                entity.Property(e => e.ActionLegId).HasColumnName("ACTION_LEG_ID");

                entity.Property(e => e.CanBeGloballySearched).HasColumnName("CAN_BE_GLOBALLY_SEARCHED");

                entity.Property(e => e.CanBeGroupedBy).HasColumnName("CAN_BE_GROUPED_BY");

                entity.Property(e => e.CurrencySymbolColumn)
                    .HasMaxLength(255)
                    .HasColumnName("CURRENCY_SYMBOL_COLUMN");

                entity.Property(e => e.DataType).HasColumnName("DATA_TYPE");

                entity.Property(e => e.DefaultDisplayType).HasColumnName("DEFAULT_DISPLAY_TYPE");

                entity.Property(e => e.DefaultLabel)
                    .HasMaxLength(255)
                    .HasColumnName("DEFAULT_LABEL");

                entity.Property(e => e.DrId).HasColumnName("DR_ID");

                entity.Property(e => e.EditibilityLevel).HasColumnName("EDITIBILITY_LEVEL");

                entity.Property(e => e.EditibilityTeamId).HasColumnName("EDITIBILITY_TEAM_ID");

                entity.Property(e => e.GloballySearchable).HasColumnName("GLOBALLY_SEARCHABLE");

                entity.Property(e => e.IsAdmin).HasColumnName("IS_ADMIN");

                entity.Property(e => e.IsConvertedToInteger).HasColumnName("IS_CONVERTED_TO_INTEGER");

                entity.Property(e => e.IsCritical).HasColumnName("IS_CRITICAL");

                entity.Property(e => e.IsExtension).HasColumnName("IS_EXTENSION");

                entity.Property(e => e.IsGeocoded).HasColumnName("IS_GEOCODED");

                entity.Property(e => e.IsHidden).HasColumnName("IS_HIDDEN");

                entity.Property(e => e.IsKey).HasColumnName("IS_KEY");

                entity.Property(e => e.IsMandatory).HasColumnName("IS_MANDATORY");

                entity.Property(e => e.IsReadonly).HasColumnName("IS_READONLY");

                entity.Property(e => e.IsReadonlyAfterSave).HasColumnName("IS_READONLY_AFTER_SAVE");

                entity.Property(e => e.IsSecure).HasColumnName("IS_SECURE");

                entity.Property(e => e.IsShortCode).HasColumnName("IS_SHORT_CODE");

                entity.Property(e => e.IsSummary).HasColumnName("IS_SUMMARY");

                entity.Property(e => e.IsUtc).HasColumnName("IS_UTC");

                entity.Property(e => e.ItemFieldLabelColumn)
                    .HasMaxLength(255)
                    .HasColumnName("ITEM_FIELD_LABEL_COLUMN");

                entity.Property(e => e.LangId).HasColumnName("LANG_ID");

                entity.Property(e => e.LegId).HasColumnName("LEG_ID");

                entity.Property(e => e.LfdId).HasColumnName("LFD_ID");

                entity.Property(e => e.NewitemPickerLegId).HasColumnName("NEWITEM_PICKER_LEG_ID");

                entity.Property(e => e.OriginalName)
                    .HasMaxLength(255)
                    .HasColumnName("ORIGINAL_NAME");

                entity.Property(e => e.ParentDropId).HasColumnName("PARENT_DROP_ID");

                entity.Property(e => e.PickerLegId).HasColumnName("PICKER_LEG_ID");

                entity.Property(e => e.TimeUnitIsTimeColumnName)
                    .HasMaxLength(100)
                    .HasColumnName("TIME_UNIT_IS_TIME_COLUMN_NAME");

                entity.Property(e => e.VisibilityLevel).HasColumnName("VISIBILITY_LEVEL");

                entity.Property(e => e.VisibilityTeamId).HasColumnName("VISIBILITY_TEAM_ID");

                entity.Property(e => e.XmlFilename)
                    .HasMaxLength(255)
                    .HasColumnName("XML_FILENAME");
            });

            modelBuilder.Entity<GvvLegacyInfoForDesign>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("gvvLegacyInfoForDesigns");

                entity.Property(e => e.DesignId).HasColumnName("DESIGN_ID");

                entity.Property(e => e.GlobalSearchFunction)
                    .HasMaxLength(100)
                    .HasColumnName("GLOBAL_SEARCH_FUNCTION");

                entity.Property(e => e.GlobalSearchPrimaryKeyColumn)
                    .HasMaxLength(100)
                    .HasColumnName("GLOBAL_SEARCH_PRIMARY_KEY_COLUMN");

                entity.Property(e => e.GlobalSearchPrimaryKeyLabelColumn)
                    .HasMaxLength(255)
                    .HasColumnName("GLOBAL_SEARCH_PRIMARY_KEY_LABEL_COLUMN");

                entity.Property(e => e.GlobalSearchSubDataColumn)
                    .HasMaxLength(50)
                    .HasColumnName("GLOBAL_SEARCH_SUB_DATA_COLUMN");

                entity.Property(e => e.IsAdmin).HasColumnName("IS_ADMIN");

                entity.Property(e => e.IsExtension).HasColumnName("IS_EXTENSION");

                entity.Property(e => e.IsLeadObject).HasColumnName("IS_LEAD_OBJECT");

                entity.Property(e => e.ItemFieldLabelColumn)
                    .HasMaxLength(255)
                    .HasColumnName("ITEM_FIELD_LABEL_COLUMN");

                entity.Property(e => e.LegId).HasColumnName("LEG_ID");

                entity.Property(e => e.LegacyType).HasColumnName("LEGACY_TYPE");

                entity.Property(e => e.ListObjectFilename)
                    .HasMaxLength(255)
                    .HasColumnName("LIST_OBJECT_FILENAME");

                entity.Property(e => e.ListObjectRef).HasColumnName("LIST_OBJECT_REF");

                entity.Property(e => e.PrimaryKeyColumn)
                    .HasMaxLength(100)
                    .HasColumnName("PRIMARY_KEY_COLUMN");

                entity.Property(e => e.ShortCodePrefix)
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX");

                entity.Property(e => e.XmlFilename)
                    .HasMaxLength(255)
                    .HasColumnName("XML_FILENAME");
            });

            modelBuilder.Entity<GvvProductTarget>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("gvvProductTargets");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.ProductTargetName)
                    .HasMaxLength(255)
                    .HasColumnName("PRODUCT_TARGET_NAME");

                entity.Property(e => e.TardId).HasColumnName("TARD_ID");
            });

            modelBuilder.Entity<GvvTag>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("gvvTags");

                entity.Property(e => e.Accounts).HasColumnName("ACCOUNTS");

                entity.Property(e => e.Activities).HasColumnName("ACTIVITIES");

                entity.Property(e => e.Appointments).HasColumnName("APPOINTMENTS");

                entity.Property(e => e.Campaigns).HasColumnName("CAMPAIGNS");

                entity.Property(e => e.Colour)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("COLOUR")
                    .IsFixedLength(true);

                entity.Property(e => e.Contacts).HasColumnName("CONTACTS");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Email).HasColumnName("EMAIL");

                entity.Property(e => e.Notes).HasColumnName("NOTES");

                entity.Property(e => e.Opportunities).HasColumnName("OPPORTUNITIES");

                entity.Property(e => e.Products).HasColumnName("PRODUCTS");

                entity.Property(e => e.Profiles).HasColumnName("PROFILES");

                entity.Property(e => e.Projects).HasColumnName("PROJECTS");

                entity.Property(e => e.Propagate).HasColumnName("PROPAGATE");

                entity.Property(e => e.Quotes).HasColumnName("QUOTES");

                entity.Property(e => e.Seminars).HasColumnName("SEMINARS");

                entity.Property(e => e.Tag)
                    .HasMaxLength(25)
                    .HasColumnName("TAG");

                entity.Property(e => e.TagId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("TAG_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.Users).HasColumnName("USERS");
            });

            modelBuilder.Entity<GvvToDoListSecurity>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("gvvToDoListSecurity");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcaId).HasColumnName("ACA_ID");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccaId).HasColumnName("ACCA_ID");

                entity.Property(e => e.ActDeleted).HasColumnName("ACT_DELETED");

                entity.Property(e => e.ActId).HasColumnName("ACT_ID");

                entity.Property(e => e.ActivitySummary)
                    .HasMaxLength(255)
                    .HasColumnName("ACTIVITY_SUMMARY");

                entity.Property(e => e.ActivityType)
                    .HasMaxLength(50)
                    .HasColumnName("ACTIVITY_TYPE");

                entity.Property(e => e.Complete).HasColumnName("COMPLETE");

                entity.Property(e => e.DueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DUE_DATE");

                entity.Property(e => e.MacId).HasColumnName("MAC_ID");

                entity.Property(e => e.OpId).HasColumnName("OP_ID");

                entity.Property(e => e.OpaId).HasColumnName("OPA_ID");

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.PjId).HasColumnName("PJ_ID");

                entity.Property(e => e.PjaId).HasColumnName("PJA_ID");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE");

                entity.Property(e => e.SecurityGroup)
                    .HasMaxLength(255)
                    .HasColumnName("SECURITY_GROUP");

                entity.Property(e => e.SecurityId).HasColumnName("SECURITY_ID");

                entity.Property(e => e.SecurityObject)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SECURITY_OBJECT");

                entity.Property(e => e.SecurityOwner).HasColumnName("SECURITY_OWNER");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");

                entity.Property(e => e.UsIdSupport).HasColumnName("US_ID_SUPPORT");

                entity.Property(e => e.UsName)
                    .HasMaxLength(255)
                    .HasColumnName("US_NAME");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");

                entity.Property(e => e.UsgName)
                    .HasMaxLength(255)
                    .HasColumnName("USG_NAME");
            });

            modelBuilder.Entity<GvvUserAccessOption>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("gvvUserAccessOptions");

                entity.Property(e => e.AcoId).HasColumnName("ACO_ID");

                entity.Property(e => e.AllowDelete).HasColumnName("ALLOW_DELETE");

                entity.Property(e => e.AllowEdit).HasColumnName("ALLOW_EDIT");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UsId).HasColumnName("US_ID");
            });

            modelBuilder.Entity<GvvUserAccessOptionsLabelExport>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("gvvUserAccessOptionsLabelExport");

                entity.Property(e => e.AcoId).HasColumnName("ACO_ID");

                entity.Property(e => e.Label)
                    .HasMaxLength(255)
                    .HasColumnName("LABEL");

                entity.Property(e => e.LabelPlural)
                    .HasMaxLength(255)
                    .HasColumnName("LABEL_PLURAL");

                entity.Property(e => e.LangId).HasColumnName("LANG_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");
            });

            modelBuilder.Entity<GvvUserSelect>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("gvvUserSelect");

                entity.Property(e => e.AccessAdmin).HasColumnName("ACCESS_ADMIN");

                entity.Property(e => e.AccessEnabled).HasColumnName("ACCESS_ENABLED");

                entity.Property(e => e.AcoTeamId).HasColumnName("ACO_TEAM_ID");

                entity.Property(e => e.AddressLookupDetails)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_LOOKUP_DETAILS");

                entity.Property(e => e.Admin).HasColumnName("ADMIN");

                entity.Property(e => e.CalendarDuration).HasColumnName("CALENDAR_DURATION");

                entity.Property(e => e.CalendarPeriod).HasColumnName("CALENDAR_PERIOD");

                entity.Property(e => e.CalendarView).HasColumnName("CALENDAR_VIEW");

                entity.Property(e => e.CultureCode)
                    .HasMaxLength(10)
                    .HasColumnName("CULTURE_CODE");

                entity.Property(e => e.CurId).HasColumnName("CUR_ID");

                entity.Property(e => e.DocumentStorageView).HasColumnName("DOCUMENT_STORAGE_VIEW");

                entity.Property(e => e.DstId).HasColumnName("DST_ID");

                entity.Property(e => e.EmailAddress)
                    .HasMaxLength(255)
                    .HasColumnName("EMAIL_ADDRESS");

                entity.Property(e => e.EmailScanContacts).HasColumnName("EMAIL_SCAN_CONTACTS");

                entity.Property(e => e.HybridDefaultMode).HasColumnName("HYBRID_DEFAULT_MODE");

                entity.Property(e => e.HybridEnabled).HasColumnName("HYBRID_ENABLED");

                entity.Property(e => e.IsActionCentrePinned).HasColumnName("IS_ACTION_CENTRE_PINNED");

                entity.Property(e => e.IsMenuExpanded).HasColumnName("IS_MENU_EXPANDED");

                entity.Property(e => e.LangId).HasColumnName("LANG_ID");

                entity.Property(e => e.LicenceType).HasColumnName("LICENCE_TYPE");

                entity.Property(e => e.MappingEnabled).HasColumnName("MAPPING_ENABLED");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TimeId)
                    .HasMaxLength(255)
                    .HasColumnName("TIME_ID");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.Username)
                    .HasMaxLength(100)
                    .HasColumnName("USERNAME");
            });

            modelBuilder.Entity<GvvUserTargetDefinition>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("gvvUserTargetDefinitions");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.TardId).HasColumnName("TARD_ID");

                entity.Property(e => e.UserTargetName)
                    .HasMaxLength(255)
                    .HasColumnName("USER_TARGET_NAME");
            });

            modelBuilder.Entity<GvvUsersListLicenceExceeded>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("gvvUsersListLicenceExceeded");

                entity.Property(e => e.AName)
                    .HasMaxLength(255)
                    .HasColumnName("A_NAME");

                entity.Property(e => e.ARef)
                    .HasMaxLength(255)
                    .HasColumnName("A_REF");

                entity.Property(e => e.AccessAdmin).HasColumnName("ACCESS_ADMIN");

                entity.Property(e => e.AccessEnabled).HasColumnName("ACCESS_ENABLED");

                entity.Property(e => e.AcoTeamId).HasColumnName("ACO_TEAM_ID");

                entity.Property(e => e.AddressLookupDetails)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_LOOKUP_DETAILS");

                entity.Property(e => e.Admin).HasColumnName("ADMIN");

                entity.Property(e => e.BName)
                    .HasMaxLength(255)
                    .HasColumnName("B_NAME");

                entity.Property(e => e.BRef)
                    .HasMaxLength(255)
                    .HasColumnName("B_REF");

                entity.Property(e => e.CName)
                    .HasMaxLength(255)
                    .HasColumnName("C_NAME");

                entity.Property(e => e.CRef)
                    .HasMaxLength(255)
                    .HasColumnName("C_REF");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CsIdLatest).HasColumnName("CS_ID_LATEST");

                entity.Property(e => e.CsLatestDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CS_LATEST_DATE");

                entity.Property(e => e.CtId).HasColumnName("CT_ID");

                entity.Property(e => e.CultureCode)
                    .HasMaxLength(10)
                    .HasColumnName("CULTURE_CODE");

                entity.Property(e => e.CurId).HasColumnName("CUR_ID");

                entity.Property(e => e.DateFormat)
                    .HasMaxLength(1)
                    .HasColumnName("DATE_FORMAT");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.Email).HasColumnName("EMAIL");

                entity.Property(e => e.EmailAddress)
                    .HasMaxLength(255)
                    .HasColumnName("EMAIL_ADDRESS");

                entity.Property(e => e.EmailScanAppointments).HasColumnName("EMAIL_SCAN_APPOINTMENTS");

                entity.Property(e => e.EmailScanContacts).HasColumnName("EMAIL_SCAN_CONTACTS");

                entity.Property(e => e.EmailScanDetails)
                    .HasMaxLength(512)
                    .HasColumnName("EMAIL_SCAN_DETAILS");

                entity.Property(e => e.EmailScanEmails).HasColumnName("EMAIL_SCAN_EMAILS");

                entity.Property(e => e.EmailScanExclusions)
                    .HasMaxLength(1024)
                    .HasColumnName("EMAIL_SCAN_EXCLUSIONS");

                entity.Property(e => e.EmailScanFolders)
                    .HasMaxLength(1024)
                    .HasColumnName("EMAIL_SCAN_FOLDERS");

                entity.Property(e => e.EmailScanMaxSensitivity).HasColumnName("EMAIL_SCAN_MAX_SENSITIVITY");

                entity.Property(e => e.EmailScanTasks).HasColumnName("EMAIL_SCAN_TASKS");

                entity.Property(e => e.EnableServerDocProd).HasColumnName("ENABLE_SERVER_DOC_PROD");

                entity.Property(e => e.EsteiroidentSid).HasColumnName("ESTEIROIDENT_SID");

                entity.Property(e => e.ExchangeServer)
                    .HasMaxLength(255)
                    .HasColumnName("EXCHANGE_SERVER");

                entity.Property(e => e.Exchangeid)
                    .HasMaxLength(255)
                    .HasColumnName("EXCHANGEID");

                entity.Property(e => e.Fname)
                    .HasMaxLength(50)
                    .HasColumnName("FNAME");

                entity.Property(e => e.HashedPwd)
                    .HasMaxLength(255)
                    .HasColumnName("HASHED_PWD");

                entity.Property(e => e.Home).HasColumnName("HOME");

                entity.Property(e => e.HomeName)
                    .HasMaxLength(255)
                    .HasColumnName("HOME_NAME");

                entity.Property(e => e.HomeRef)
                    .HasMaxLength(255)
                    .HasColumnName("HOME_REF");

                entity.Property(e => e.HybridDefaultMode).HasColumnName("HYBRID_DEFAULT_MODE");

                entity.Property(e => e.HybridEnabled).HasColumnName("HYBRID_ENABLED");

                entity.Property(e => e.IsActionCentrePinned).HasColumnName("IS_ACTION_CENTRE_PINNED");

                entity.Property(e => e.IsMenuExpanded).HasColumnName("IS_MENU_EXPANDED");

                entity.Property(e => e.Lang)
                    .HasMaxLength(32)
                    .HasColumnName("LANG");

                entity.Property(e => e.LangId).HasColumnName("LANG_ID");

                entity.Property(e => e.LastScanned)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_SCANNED");

                entity.Property(e => e.LicenceType).HasColumnName("LICENCE_TYPE");

                entity.Property(e => e.LicenceTypeName)
                    .HasMaxLength(255)
                    .HasColumnName("LICENCE_TYPE_NAME");

                entity.Property(e => e.LicenceTypeNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("LICENCE_TYPE_NAME_HLIGHT");

                entity.Property(e => e.LivechatEmail)
                    .HasMaxLength(255)
                    .HasColumnName("LIVECHAT_EMAIL");

                entity.Property(e => e.Lname)
                    .HasMaxLength(50)
                    .HasColumnName("LNAME");

                entity.Property(e => e.Manager).HasColumnName("MANAGER");

                entity.Property(e => e.MapsAccess).HasColumnName("MAPS_ACCESS");

                entity.Property(e => e.Mname)
                    .HasMaxLength(50)
                    .HasColumnName("MNAME");

                entity.Property(e => e.MonthlySalesTarget)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("MONTHLY_SALES_TARGET");

                entity.Property(e => e.NoAccess).HasColumnName("NO_ACCESS");

                entity.Property(e => e.NtAccount)
                    .HasMaxLength(100)
                    .HasColumnName("NT_ACCOUNT");

                entity.Property(e => e.NumberFormat)
                    .HasMaxLength(25)
                    .HasColumnName("NUMBER_FORMAT");

                entity.Property(e => e.PhoneCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_COUNTRY_CODE");

                entity.Property(e => e.PhoneIddCode)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_IDD_CODE");

                entity.Property(e => e.PhoneNddCode)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_NDD_CODE");

                entity.Property(e => e.PhoneOutsideLineCode)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_OUTSIDE_LINE_CODE");

                entity.Property(e => e.PhoneSettings)
                    .HasMaxLength(500)
                    .HasColumnName("PHONE_SETTINGS");

                entity.Property(e => e.PrivateEmail).HasColumnName("PRIVATE_EMAIL");

                entity.Property(e => e.RootUser).HasColumnName("ROOT_USER");

                entity.Property(e => e.Sales).HasColumnName("SALES");

                entity.Property(e => e.SetIdPhone).HasColumnName("SET_ID_PHONE");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShowOnAcManager).HasColumnName("SHOW_ON_AC_MANAGER");

                entity.Property(e => e.ShowOnCalendar).HasColumnName("SHOW_ON_CALENDAR");

                entity.Property(e => e.ShowOnSupport).HasColumnName("SHOW_ON_SUPPORT");

                entity.Property(e => e.ShowOnUsers).HasColumnName("SHOW_ON_USERS");

                entity.Property(e => e.SimpleViewMenu).HasColumnName("SIMPLE_VIEW_MENU");

                entity.Property(e => e.SingleWindow).HasColumnName("SINGLE_WINDOW");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TemplateFolder)
                    .HasMaxLength(255)
                    .HasColumnName("TEMPLATE_FOLDER");

                entity.Property(e => e.TimeDiff).HasColumnName("TIME_DIFF");

                entity.Property(e => e.TimeZone)
                    .HasMaxLength(255)
                    .HasColumnName("TIME_ZONE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsCulture).HasColumnName("US_CULTURE");

                entity.Property(e => e.UsDeleted).HasColumnName("US_DELETED");

                entity.Property(e => e.UsExternal)
                    .HasMaxLength(255)
                    .HasColumnName("US_EXTERNAL");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsIdDeleted).HasColumnName("US_ID_DELETED");

                entity.Property(e => e.UsUd1)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD1");

                entity.Property(e => e.UsUd10)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD10");

                entity.Property(e => e.UsUd10Bit).HasColumnName("US_UD10_BIT");

                entity.Property(e => e.UsUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD10_DATE");

                entity.Property(e => e.UsUd10Id).HasColumnName("US_UD10_ID");

                entity.Property(e => e.UsUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD10_ID_NAME");

                entity.Property(e => e.UsUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd10Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD10_NUMERIC");

                entity.Property(e => e.UsUd11)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD11");

                entity.Property(e => e.UsUd11Bit).HasColumnName("US_UD11_BIT");

                entity.Property(e => e.UsUd12)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD12");

                entity.Property(e => e.UsUd12Bit).HasColumnName("US_UD12_BIT");

                entity.Property(e => e.UsUd13)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD13");

                entity.Property(e => e.UsUd13Bit).HasColumnName("US_UD13_BIT");

                entity.Property(e => e.UsUd14)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD14");

                entity.Property(e => e.UsUd14Bit).HasColumnName("US_UD14_BIT");

                entity.Property(e => e.UsUd15)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD15");

                entity.Property(e => e.UsUd15Bit).HasColumnName("US_UD15_BIT");

                entity.Property(e => e.UsUd16Bit).HasColumnName("US_UD16_BIT");

                entity.Property(e => e.UsUd17Bit).HasColumnName("US_UD17_BIT");

                entity.Property(e => e.UsUd18Bit).HasColumnName("US_UD18_BIT");

                entity.Property(e => e.UsUd19Bit).HasColumnName("US_UD19_BIT");

                entity.Property(e => e.UsUd1Bit).HasColumnName("US_UD1_BIT");

                entity.Property(e => e.UsUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD1_DATE");

                entity.Property(e => e.UsUd1Id).HasColumnName("US_UD1_ID");

                entity.Property(e => e.UsUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD1_ID_NAME");

                entity.Property(e => e.UsUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd1Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD1_NUMERIC");

                entity.Property(e => e.UsUd2)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD2");

                entity.Property(e => e.UsUd20Bit).HasColumnName("US_UD20_BIT");

                entity.Property(e => e.UsUd21Bit).HasColumnName("US_UD21_BIT");

                entity.Property(e => e.UsUd22Bit).HasColumnName("US_UD22_BIT");

                entity.Property(e => e.UsUd23Bit).HasColumnName("US_UD23_BIT");

                entity.Property(e => e.UsUd24Bit).HasColumnName("US_UD24_BIT");

                entity.Property(e => e.UsUd2Bit).HasColumnName("US_UD2_BIT");

                entity.Property(e => e.UsUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD2_DATE");

                entity.Property(e => e.UsUd2Id).HasColumnName("US_UD2_ID");

                entity.Property(e => e.UsUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD2_ID_NAME");

                entity.Property(e => e.UsUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd2Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD2_NUMERIC");

                entity.Property(e => e.UsUd3)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD3");

                entity.Property(e => e.UsUd3Bit).HasColumnName("US_UD3_BIT");

                entity.Property(e => e.UsUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD3_DATE");

                entity.Property(e => e.UsUd3Id).HasColumnName("US_UD3_ID");

                entity.Property(e => e.UsUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD3_ID_NAME");

                entity.Property(e => e.UsUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd3Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD3_NUMERIC");

                entity.Property(e => e.UsUd4)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD4");

                entity.Property(e => e.UsUd4Bit).HasColumnName("US_UD4_BIT");

                entity.Property(e => e.UsUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD4_DATE");

                entity.Property(e => e.UsUd4Id).HasColumnName("US_UD4_ID");

                entity.Property(e => e.UsUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD4_ID_NAME");

                entity.Property(e => e.UsUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd4Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD4_NUMERIC");

                entity.Property(e => e.UsUd5)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD5");

                entity.Property(e => e.UsUd5Bit).HasColumnName("US_UD5_BIT");

                entity.Property(e => e.UsUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD5_DATE");

                entity.Property(e => e.UsUd5Id).HasColumnName("US_UD5_ID");

                entity.Property(e => e.UsUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD5_ID_NAME");

                entity.Property(e => e.UsUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd5Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD5_NUMERIC");

                entity.Property(e => e.UsUd6)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD6");

                entity.Property(e => e.UsUd6Bit).HasColumnName("US_UD6_BIT");

                entity.Property(e => e.UsUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD6_DATE");

                entity.Property(e => e.UsUd6Id).HasColumnName("US_UD6_ID");

                entity.Property(e => e.UsUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD6_ID_NAME");

                entity.Property(e => e.UsUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd6Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD6_NUMERIC");

                entity.Property(e => e.UsUd7)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD7");

                entity.Property(e => e.UsUd7Bit).HasColumnName("US_UD7_BIT");

                entity.Property(e => e.UsUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD7_DATE");

                entity.Property(e => e.UsUd7Id).HasColumnName("US_UD7_ID");

                entity.Property(e => e.UsUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD7_ID_NAME");

                entity.Property(e => e.UsUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd7Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD7_NUMERIC");

                entity.Property(e => e.UsUd8)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD8");

                entity.Property(e => e.UsUd8Bit).HasColumnName("US_UD8_BIT");

                entity.Property(e => e.UsUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD8_DATE");

                entity.Property(e => e.UsUd8Id).HasColumnName("US_UD8_ID");

                entity.Property(e => e.UsUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD8_ID_NAME");

                entity.Property(e => e.UsUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd8Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD8_NUMERIC");

                entity.Property(e => e.UsUd9)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD9");

                entity.Property(e => e.UsUd9Bit).HasColumnName("US_UD9_BIT");

                entity.Property(e => e.UsUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD9_DATE");

                entity.Property(e => e.UsUd9Id).HasColumnName("US_UD9_ID");

                entity.Property(e => e.UsUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD9_ID_NAME");

                entity.Property(e => e.UsUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd9Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD9_NUMERIC");

                entity.Property(e => e.UseWordMailMerge).HasColumnName("USE_WORD_MAIL_MERGE");

                entity.Property(e => e.UserDepartment).HasMaxLength(128);

                entity.Property(e => e.UserDirectPhone).HasMaxLength(32);

                entity.Property(e => e.UserGroupName)
                    .HasMaxLength(255)
                    .HasColumnName("USER_GROUP_NAME");

                entity.Property(e => e.UserJobTitle).HasMaxLength(128);

                entity.Property(e => e.UserMobileTelephone).HasMaxLength(32);

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");
            });

            modelBuilder.Entity<Header>(entity =>
            {
                entity.ToTable("HEADERS", "Portal");

                entity.Property(e => e.HeaderId)
                    .ValueGeneratedNever()
                    .HasColumnName("HEADER_ID");

                entity.Property(e => e.ColumnLayoutId).HasColumnName("COLUMN_LAYOUT_ID");

                entity.Property(e => e.HeaderName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnName("HEADER_NAME")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<HiddenDataAttribute>(entity =>
            {
                entity.HasKey(e => e.HdId);

                entity.ToTable("HIDDEN_DATA_ATTRIBUTES");

                entity.Property(e => e.HdId)
                    .ValueGeneratedNever()
                    .HasColumnName("HD_ID");

                entity.Property(e => e.Attribute)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("ATTRIBUTE");

                entity.Property(e => e.Column)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("COLUMN");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");
            });

            modelBuilder.Entity<HiddenFieldDataAttribute>(entity =>
            {
                entity.HasKey(e => e.HdId);

                entity.ToTable("HIDDEN_FIELD_DATA_ATTRIBUTES");

                entity.Property(e => e.HdId)
                    .ValueGeneratedNever()
                    .HasColumnName("HD_ID");

                entity.Property(e => e.Attribute)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("ATTRIBUTE");

                entity.Property(e => e.LfdId).HasColumnName("LFD_ID");
            });

            modelBuilder.Entity<Hotfix>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("HOTFIXES");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.HotId).HasColumnName("HOT_ID");

                entity.Property(e => e.Title)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("TITLE");
            });

            modelBuilder.Entity<Import>(entity =>
            {
                entity.HasKey(e => e.ImId)
                    .HasName("PK_IMPORT");

                entity.ToTable("IMPORTS");

                entity.Property(e => e.ImId)
                    .HasColumnName("IM_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.AcImId).HasColumnName("AC_IM_ID");

                entity.Property(e => e.Count)
                    .HasMaxLength(10)
                    .HasColumnName("COUNT")
                    .IsFixedLength(true);

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.ImSource)
                    .HasMaxLength(255)
                    .HasColumnName("IM_SOURCE");

                entity.Property(e => e.Importspec)
                    .HasMaxLength(32)
                    .HasColumnName("IMPORTSPEC");

                entity.Property(e => e.Lastimport)
                    .HasColumnType("datetime")
                    .HasColumnName("LASTIMPORT");

                entity.Property(e => e.Sourcefile)
                    .HasMaxLength(255)
                    .HasColumnName("SOURCEFILE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<ImportContactJob>(entity =>
            {
                entity.HasKey(e => e.JobId);

                entity.ToTable("IMPORT_CONTACT_JOBS");

                entity.HasIndex(e => new { e.CreatedDateUtc, e.UsId }, "IX__IMPORT_CONTACT_JOBS__CREATED_US_ID__INCLS");

                entity.Property(e => e.JobId).HasColumnName("JOB_ID");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.Attempts).HasColumnName("ATTEMPTS");

                entity.Property(e => e.BatchId).HasColumnName("BATCH_ID");

                entity.Property(e => e.CreatedDateUtc)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE_UTC");

                entity.Property(e => e.LcId).HasColumnName("LC_ID");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Sync).HasColumnName("SYNC");

                entity.Property(e => e.ThirdpartyId)
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasColumnName("THIRDPARTY_ID");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.HasOne(d => d.Ac)
                    .WithMany(p => p.ImportContactJobs)
                    .HasForeignKey(d => d.AcId)
                    .HasConstraintName("FK_IMPORT_CONTACT_JOBS_ACCOUNTS");

                entity.HasOne(d => d.Lc)
                    .WithMany(p => p.ImportContactJobs)
                    .HasForeignKey(d => d.LcId)
                    .HasConstraintName("FK_IMPORT_CONTACT_JOBS_LM_LISTCONTROL");

                entity.HasOne(d => d.Us)
                    .WithMany(p => p.ImportContactJobs)
                    .HasForeignKey(d => d.UsId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_IMPORT_CONTACT_JOBS_IMPORT_CONTACT_JOBS");
            });

            modelBuilder.Entity<ImportQueue>(entity =>
            {
                entity.HasKey(e => e.ImId);

                entity.ToTable("IMPORT_QUEUE");

                entity.Property(e => e.ImId)
                    .HasColumnName("IM_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.ImDeleted).HasColumnName("IM_DELETED");

                entity.Property(e => e.ProcessedRows).HasColumnName("PROCESSED_ROWS");

                entity.Property(e => e.RowsAdded).HasColumnName("ROWS_ADDED");

                entity.Property(e => e.RowsFailed).HasColumnName("ROWS_FAILED");

                entity.Property(e => e.RowsUpdated).HasColumnName("ROWS_UPDATED");

                entity.Property(e => e.Spec)
                    .IsRequired()
                    .HasColumnType("image")
                    .HasColumnName("SPEC");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("START_DATE");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.StatusUpdated)
                    .HasColumnType("datetime")
                    .HasColumnName("STATUS_UPDATED");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TotalRows).HasColumnName("TOTAL_ROWS");
            });

            modelBuilder.Entity<IntAccountingTransactionHistory>(entity =>
            {
                entity.HasKey(e => e.ThId);

                entity.ToTable("IntAccountingTransactionHistory");

                entity.HasIndex(e => e.ShortCode, "IX__IntAccountingTransactionHistory__SHORT_CODE");

                entity.Property(e => e.ThId)
                    .ValueGeneratedNever()
                    .HasColumnName("TH_ID");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.BillingAddress)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_ADDRESS");

                entity.Property(e => e.BillingCity)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_CITY");

                entity.Property(e => e.BillingCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_COUNTRY_CODE");

                entity.Property(e => e.BillingEmailAddress)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_EMAIL_ADDRESS");

                entity.Property(e => e.BillingName)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_NAME");

                entity.Property(e => e.BillingPhoneNumber)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_PHONE_NUMBER");

                entity.Property(e => e.BillingPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_POSTAL_CODE");

                entity.Property(e => e.BillingRegion)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_REGION");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Currency)
                    .HasMaxLength(255)
                    .HasColumnName("CURRENCY");

                entity.Property(e => e.CustomerId)
                    .HasMaxLength(255)
                    .HasColumnName("CUSTOMER_ID");

                entity.Property(e => e.CustomerOrderNumber)
                    .HasMaxLength(255)
                    .HasColumnName("CUSTOMER_ORDER_NUMBER");

                entity.Property(e => e.Deleted).HasColumnName("DELETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.FneId).HasColumnName("FNE_ID");

                entity.Property(e => e.FreightMethodId)
                    .HasMaxLength(255)
                    .HasColumnName("FREIGHT_METHOD_ID");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.OpqId).HasColumnName("OPQ_ID");

                entity.Property(e => e.OutstandingBalance)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OUTSTANDING_BALANCE");

                entity.Property(e => e.PaymentType)
                    .HasMaxLength(255)
                    .HasColumnName("PAYMENT_TYPE");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", true);

                entity.Property(e => e.ShippingAddress)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_ADDRESS");

                entity.Property(e => e.ShippingCity)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_CITY");

                entity.Property(e => e.ShippingCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_COUNTRY_CODE");

                entity.Property(e => e.ShippingEmailAddress)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_EMAIL_ADDRESS");

                entity.Property(e => e.ShippingFirstName)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_FIRST_NAME");

                entity.Property(e => e.ShippingLastName)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_LAST_NAME");

                entity.Property(e => e.ShippingName)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_NAME");

                entity.Property(e => e.ShippingPhoneNumber)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_PHONE_NUMBER");

                entity.Property(e => e.ShippingPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_POSTAL_CODE");

                entity.Property(e => e.ShippingRegion)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_REGION");

                entity.Property(e => e.ShippingTaxValue)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SHIPPING_TAX_VALUE");

                entity.Property(e => e.ShippingTitle)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_TITLE");

                entity.Property(e => e.ShippingValue)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SHIPPING_VALUE");

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'ATH-')");

                entity.Property(e => e.Source)
                    .IsRequired()
                    .HasMaxLength(60)
                    .HasColumnName("SOURCE");

                entity.Property(e => e.ThUd1Bit).HasColumnName("TH_UD1_BIT");

                entity.Property(e => e.ThUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TH_UD1_DATE");

                entity.Property(e => e.ThUd1Id).HasColumnName("TH_UD1_ID");

                entity.Property(e => e.ThUd1Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("TH_UD1_NUMERIC");

                entity.Property(e => e.ThUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("TH_UD1_TEXT");

                entity.Property(e => e.ThUd2Bit).HasColumnName("TH_UD2_BIT");

                entity.Property(e => e.ThUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TH_UD2_DATE");

                entity.Property(e => e.ThUd2Id).HasColumnName("TH_UD2_ID");

                entity.Property(e => e.ThUd2Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("TH_UD2_NUMERIC");

                entity.Property(e => e.ThUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("TH_UD2_TEXT");

                entity.Property(e => e.ThUd3Bit).HasColumnName("TH_UD3_BIT");

                entity.Property(e => e.ThUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TH_UD3_DATE");

                entity.Property(e => e.ThUd3Id).HasColumnName("TH_UD3_ID");

                entity.Property(e => e.ThUd3Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("TH_UD3_NUMERIC");

                entity.Property(e => e.ThUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("TH_UD3_TEXT");

                entity.Property(e => e.ThUd4Bit).HasColumnName("TH_UD4_BIT");

                entity.Property(e => e.ThUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TH_UD4_DATE");

                entity.Property(e => e.ThUd4Id).HasColumnName("TH_UD4_ID");

                entity.Property(e => e.ThUd4Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("TH_UD4_NUMERIC");

                entity.Property(e => e.ThUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("TH_UD4_TEXT");

                entity.Property(e => e.ThUd5Bit).HasColumnName("TH_UD5_BIT");

                entity.Property(e => e.ThUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TH_UD5_DATE");

                entity.Property(e => e.ThUd5Id).HasColumnName("TH_UD5_ID");

                entity.Property(e => e.ThUd5Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("TH_UD5_NUMERIC");

                entity.Property(e => e.ThUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("TH_UD5_TEXT");

                entity.Property(e => e.TotalTaxValue)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("TOTAL_TAX_VALUE");

                entity.Property(e => e.TrackingNumber)
                    .HasMaxLength(255)
                    .HasColumnName("TRACKING_NUMBER");

                entity.Property(e => e.TrackingUrl)
                    .HasMaxLength(255)
                    .HasColumnName("TRACKING_URL");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("TRANSACTION_DATE");

                entity.Property(e => e.TransactionDueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("TRANSACTION_DUE_DATE");

                entity.Property(e => e.TransactionId)
                    .HasMaxLength(255)
                    .HasColumnName("TRANSACTION_ID");

                entity.Property(e => e.TransactionReference)
                    .HasMaxLength(255)
                    .HasColumnName("TRANSACTION_REFERENCE");

                entity.Property(e => e.TransactionStatus)
                    .HasMaxLength(255)
                    .HasColumnName("TRANSACTION_STATUS");

                entity.Property(e => e.TransactionTotal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("TRANSACTION_TOTAL");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(255)
                    .HasColumnName("TRANSACTION_TYPE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.HasOne(d => d.Ac)
                    .WithMany(p => p.IntAccountingTransactionHistoryAcs)
                    .HasForeignKey(d => d.AcId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__IntAccounting__AC_ID__734F82A2");

                entity.HasOne(d => d.Obj)
                    .WithMany(p => p.IntAccountingTransactionHistoryObjs)
                    .HasForeignKey(d => d.ObjId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__IntAccounting__OBJ_I__7443A6DB");
            });

            modelBuilder.Entity<IntAccountingTransactionHistoryLine>(entity =>
            {
                entity.HasKey(e => e.ThlId);

                entity.HasIndex(e => e.ShortCode, "IX__IntAccountingTransactionHistoryLines__SHORT_CODE");

                entity.Property(e => e.ThlId)
                    .ValueGeneratedNever()
                    .HasColumnName("THL_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Deleted).HasColumnName("DELETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Description)
                    .HasMaxLength(255)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.DiscountAmount)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("DISCOUNT_AMOUNT");

                entity.Property(e => e.FreeTextItem)
                    .HasMaxLength(255)
                    .HasColumnName("FREE_TEXT_ITEM");

                entity.Property(e => e.FreightMethodId)
                    .HasMaxLength(255)
                    .HasColumnName("FREIGHT_METHOD_ID");

                entity.Property(e => e.LineTaxValue)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("LINE_TAX_VALUE");

                entity.Property(e => e.LineValue)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("LINE_VALUE");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", true);

                entity.Property(e => e.ProductName)
                    .HasMaxLength(255)
                    .HasColumnName("PRODUCT_NAME");

                entity.Property(e => e.Quantity)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("QUANTITY");

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'ATL-')");

                entity.Property(e => e.ShortDescription)
                    .HasMaxLength(255)
                    .HasColumnName("SHORT_DESCRIPTION");

                entity.Property(e => e.Sku)
                    .HasMaxLength(255)
                    .HasColumnName("SKU");

                entity.Property(e => e.SundryId)
                    .HasMaxLength(255)
                    .HasColumnName("SUNDRY_ID");

                entity.Property(e => e.ThId).HasColumnName("TH_ID");

                entity.Property(e => e.ThlUd1Bit).HasColumnName("THL_UD1_BIT");

                entity.Property(e => e.ThlUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("THL_UD1_DATE");

                entity.Property(e => e.ThlUd1Id).HasColumnName("THL_UD1_ID");

                entity.Property(e => e.ThlUd1Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("THL_UD1_NUMERIC");

                entity.Property(e => e.ThlUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("THL_UD1_TEXT");

                entity.Property(e => e.ThlUd2Bit).HasColumnName("THL_UD2_BIT");

                entity.Property(e => e.ThlUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("THL_UD2_DATE");

                entity.Property(e => e.ThlUd2Id).HasColumnName("THL_UD2_ID");

                entity.Property(e => e.ThlUd2Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("THL_UD2_NUMERIC");

                entity.Property(e => e.ThlUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("THL_UD2_TEXT");

                entity.Property(e => e.ThlUd3Bit).HasColumnName("THL_UD3_BIT");

                entity.Property(e => e.ThlUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("THL_UD3_DATE");

                entity.Property(e => e.ThlUd3Id).HasColumnName("THL_UD3_ID");

                entity.Property(e => e.ThlUd3Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("THL_UD3_NUMERIC");

                entity.Property(e => e.ThlUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("THL_UD3_TEXT");

                entity.Property(e => e.ThlUd4Bit).HasColumnName("THL_UD4_BIT");

                entity.Property(e => e.ThlUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("THL_UD4_DATE");

                entity.Property(e => e.ThlUd4Id).HasColumnName("THL_UD4_ID");

                entity.Property(e => e.ThlUd4Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("THL_UD4_NUMERIC");

                entity.Property(e => e.ThlUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("THL_UD4_TEXT");

                entity.Property(e => e.ThlUd5Bit).HasColumnName("THL_UD5_BIT");

                entity.Property(e => e.ThlUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("THL_UD5_DATE");

                entity.Property(e => e.ThlUd5Id).HasColumnName("THL_UD5_ID");

                entity.Property(e => e.ThlUd5Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("THL_UD5_NUMERIC");

                entity.Property(e => e.ThlUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("THL_UD5_TEXT");

                entity.Property(e => e.UnitPrice)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("UNIT_PRICE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.HasOne(d => d.Th)
                    .WithMany(p => p.IntAccountingTransactionHistoryLines)
                    .HasForeignKey(d => d.ThId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__IntAccountingLine__T__77201386");
            });

            modelBuilder.Entity<IntAnagramDespatch>(entity =>
            {
                entity.HasKey(e => e.AngDpId);

                entity.HasIndex(e => e.ShortCode, "IX__IntAnagramDespatches__SHORT_CODE");

                entity.Property(e => e.AngDpId)
                    .ValueGeneratedNever()
                    .HasColumnName("ANG_DP_ID");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AngDpDeleted).HasColumnName("ANG_DP_DELETED");

                entity.Property(e => e.AngDpUd1)
                    .HasMaxLength(255)
                    .HasColumnName("ANG_DP_UD1");

                entity.Property(e => e.AngDpUd10)
                    .HasMaxLength(255)
                    .HasColumnName("ANG_DP_UD10");

                entity.Property(e => e.AngDpUd10Bit).HasColumnName("ANG_DP_UD10_BIT");

                entity.Property(e => e.AngDpUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ANG_DP_UD10_DATE");

                entity.Property(e => e.AngDpUd10Id).HasColumnName("ANG_DP_UD10_ID");

                entity.Property(e => e.AngDpUd10IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ANG_DP_UD10_ID_HLIGHT");

                entity.Property(e => e.AngDpUd10Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ANG_DP_UD10_NUMERIC");

                entity.Property(e => e.AngDpUd1Bit).HasColumnName("ANG_DP_UD1_BIT");

                entity.Property(e => e.AngDpUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ANG_DP_UD1_DATE");

                entity.Property(e => e.AngDpUd1Id).HasColumnName("ANG_DP_UD1_ID");

                entity.Property(e => e.AngDpUd1IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ANG_DP_UD1_ID_HLIGHT");

                entity.Property(e => e.AngDpUd1Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ANG_DP_UD1_NUMERIC");

                entity.Property(e => e.AngDpUd2)
                    .HasMaxLength(255)
                    .HasColumnName("ANG_DP_UD2");

                entity.Property(e => e.AngDpUd2Bit).HasColumnName("ANG_DP_UD2_BIT");

                entity.Property(e => e.AngDpUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ANG_DP_UD2_DATE");

                entity.Property(e => e.AngDpUd2Id).HasColumnName("ANG_DP_UD2_ID");

                entity.Property(e => e.AngDpUd2IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ANG_DP_UD2_ID_HLIGHT");

                entity.Property(e => e.AngDpUd2Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ANG_DP_UD2_NUMERIC");

                entity.Property(e => e.AngDpUd3)
                    .HasMaxLength(255)
                    .HasColumnName("ANG_DP_UD3");

                entity.Property(e => e.AngDpUd3Bit).HasColumnName("ANG_DP_UD3_BIT");

                entity.Property(e => e.AngDpUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ANG_DP_UD3_DATE");

                entity.Property(e => e.AngDpUd3Id).HasColumnName("ANG_DP_UD3_ID");

                entity.Property(e => e.AngDpUd3IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ANG_DP_UD3_ID_HLIGHT");

                entity.Property(e => e.AngDpUd3Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ANG_DP_UD3_NUMERIC");

                entity.Property(e => e.AngDpUd4)
                    .HasMaxLength(255)
                    .HasColumnName("ANG_DP_UD4");

                entity.Property(e => e.AngDpUd4Bit).HasColumnName("ANG_DP_UD4_BIT");

                entity.Property(e => e.AngDpUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ANG_DP_UD4_DATE");

                entity.Property(e => e.AngDpUd4Id).HasColumnName("ANG_DP_UD4_ID");

                entity.Property(e => e.AngDpUd4IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ANG_DP_UD4_ID_HLIGHT");

                entity.Property(e => e.AngDpUd4Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ANG_DP_UD4_NUMERIC");

                entity.Property(e => e.AngDpUd5)
                    .HasMaxLength(255)
                    .HasColumnName("ANG_DP_UD5");

                entity.Property(e => e.AngDpUd5Bit).HasColumnName("ANG_DP_UD5_BIT");

                entity.Property(e => e.AngDpUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ANG_DP_UD5_DATE");

                entity.Property(e => e.AngDpUd5Id).HasColumnName("ANG_DP_UD5_ID");

                entity.Property(e => e.AngDpUd5IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ANG_DP_UD5_ID_HLIGHT");

                entity.Property(e => e.AngDpUd5Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ANG_DP_UD5_NUMERIC");

                entity.Property(e => e.AngDpUd6)
                    .HasMaxLength(255)
                    .HasColumnName("ANG_DP_UD6");

                entity.Property(e => e.AngDpUd6Bit).HasColumnName("ANG_DP_UD6_BIT");

                entity.Property(e => e.AngDpUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ANG_DP_UD6_DATE");

                entity.Property(e => e.AngDpUd6Id).HasColumnName("ANG_DP_UD6_ID");

                entity.Property(e => e.AngDpUd6IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ANG_DP_UD6_ID_HLIGHT");

                entity.Property(e => e.AngDpUd6Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ANG_DP_UD6_NUMERIC");

                entity.Property(e => e.AngDpUd7)
                    .HasMaxLength(255)
                    .HasColumnName("ANG_DP_UD7");

                entity.Property(e => e.AngDpUd7Bit).HasColumnName("ANG_DP_UD7_BIT");

                entity.Property(e => e.AngDpUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ANG_DP_UD7_DATE");

                entity.Property(e => e.AngDpUd7Id).HasColumnName("ANG_DP_UD7_ID");

                entity.Property(e => e.AngDpUd7IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ANG_DP_UD7_ID_HLIGHT");

                entity.Property(e => e.AngDpUd7Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ANG_DP_UD7_NUMERIC");

                entity.Property(e => e.AngDpUd8)
                    .HasMaxLength(255)
                    .HasColumnName("ANG_DP_UD8");

                entity.Property(e => e.AngDpUd8Bit).HasColumnName("ANG_DP_UD8_BIT");

                entity.Property(e => e.AngDpUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ANG_DP_UD8_DATE");

                entity.Property(e => e.AngDpUd8Id).HasColumnName("ANG_DP_UD8_ID");

                entity.Property(e => e.AngDpUd8IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ANG_DP_UD8_ID_HLIGHT");

                entity.Property(e => e.AngDpUd8Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ANG_DP_UD8_NUMERIC");

                entity.Property(e => e.AngDpUd9)
                    .HasMaxLength(255)
                    .HasColumnName("ANG_DP_UD9");

                entity.Property(e => e.AngDpUd9Bit).HasColumnName("ANG_DP_UD9_BIT");

                entity.Property(e => e.AngDpUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ANG_DP_UD9_DATE");

                entity.Property(e => e.AngDpUd9Id).HasColumnName("ANG_DP_UD9_ID");

                entity.Property(e => e.AngDpUd9IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ANG_DP_UD9_ID_HLIGHT");

                entity.Property(e => e.AngDpUd9Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ANG_DP_UD9_NUMERIC");

                entity.Property(e => e.AngTrId).HasColumnName("ANG_TR_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.ExternalReference)
                    .HasMaxLength(255)
                    .HasColumnName("EXTERNAL_REFERENCE");

                entity.Property(e => e.OpqId).HasColumnName("OPQ_ID");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", false);

                entity.Property(e => e.Reference)
                    .HasMaxLength(255)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'GTL-')");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.HasOne(d => d.Ac)
                    .WithMany(p => p.IntAnagramDespatches)
                    .HasForeignKey(d => d.AcId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_IntAnagramDespatches_ACCOUNTS");

                entity.HasOne(d => d.AngTr)
                    .WithMany(p => p.IntAnagramDespatches)
                    .HasForeignKey(d => d.AngTrId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_IntAnagramDespatches_IntAnagramTransactions");

                entity.HasOne(d => d.Opq)
                    .WithMany(p => p.IntAnagramDespatches)
                    .HasForeignKey(d => d.OpqId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_IntAnagramDespatches_OPPORTUNITIES_QUOTES");
            });

            modelBuilder.Entity<IntAnagramTransaction>(entity =>
            {
                entity.HasKey(e => e.AngTrId);

                entity.HasIndex(e => e.ShortCode, "IX__IntAnagramTransactions__SHORT_CODE");

                entity.Property(e => e.AngTrId)
                    .ValueGeneratedNever()
                    .HasColumnName("ANG_TR_ID");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AngTrDeleted).HasColumnName("ANG_TR_DELETED");

                entity.Property(e => e.AngTrUd1)
                    .HasMaxLength(255)
                    .HasColumnName("ANG_TR_UD1");

                entity.Property(e => e.AngTrUd10)
                    .HasMaxLength(255)
                    .HasColumnName("ANG_TR_UD10");

                entity.Property(e => e.AngTrUd10Bit).HasColumnName("ANG_TR_UD10_BIT");

                entity.Property(e => e.AngTrUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ANG_TR_UD10_DATE");

                entity.Property(e => e.AngTrUd10Id).HasColumnName("ANG_TR_UD10_ID");

                entity.Property(e => e.AngTrUd10IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ANG_TR_UD10_ID_HLIGHT");

                entity.Property(e => e.AngTrUd10Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ANG_TR_UD10_NUMERIC");

                entity.Property(e => e.AngTrUd1Bit).HasColumnName("ANG_TR_UD1_BIT");

                entity.Property(e => e.AngTrUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ANG_TR_UD1_DATE");

                entity.Property(e => e.AngTrUd1Id).HasColumnName("ANG_TR_UD1_ID");

                entity.Property(e => e.AngTrUd1IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ANG_TR_UD1_ID_HLIGHT");

                entity.Property(e => e.AngTrUd1Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ANG_TR_UD1_NUMERIC");

                entity.Property(e => e.AngTrUd2)
                    .HasMaxLength(255)
                    .HasColumnName("ANG_TR_UD2");

                entity.Property(e => e.AngTrUd2Bit).HasColumnName("ANG_TR_UD2_BIT");

                entity.Property(e => e.AngTrUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ANG_TR_UD2_DATE");

                entity.Property(e => e.AngTrUd2Id).HasColumnName("ANG_TR_UD2_ID");

                entity.Property(e => e.AngTrUd2IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ANG_TR_UD2_ID_HLIGHT");

                entity.Property(e => e.AngTrUd2Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ANG_TR_UD2_NUMERIC");

                entity.Property(e => e.AngTrUd3)
                    .HasMaxLength(255)
                    .HasColumnName("ANG_TR_UD3");

                entity.Property(e => e.AngTrUd3Bit).HasColumnName("ANG_TR_UD3_BIT");

                entity.Property(e => e.AngTrUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ANG_TR_UD3_DATE");

                entity.Property(e => e.AngTrUd3Id).HasColumnName("ANG_TR_UD3_ID");

                entity.Property(e => e.AngTrUd3IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ANG_TR_UD3_ID_HLIGHT");

                entity.Property(e => e.AngTrUd3Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ANG_TR_UD3_NUMERIC");

                entity.Property(e => e.AngTrUd4)
                    .HasMaxLength(255)
                    .HasColumnName("ANG_TR_UD4");

                entity.Property(e => e.AngTrUd4Bit).HasColumnName("ANG_TR_UD4_BIT");

                entity.Property(e => e.AngTrUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ANG_TR_UD4_DATE");

                entity.Property(e => e.AngTrUd4Id).HasColumnName("ANG_TR_UD4_ID");

                entity.Property(e => e.AngTrUd4IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ANG_TR_UD4_ID_HLIGHT");

                entity.Property(e => e.AngTrUd4Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ANG_TR_UD4_NUMERIC");

                entity.Property(e => e.AngTrUd5)
                    .HasMaxLength(255)
                    .HasColumnName("ANG_TR_UD5");

                entity.Property(e => e.AngTrUd5Bit).HasColumnName("ANG_TR_UD5_BIT");

                entity.Property(e => e.AngTrUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ANG_TR_UD5_DATE");

                entity.Property(e => e.AngTrUd5Id).HasColumnName("ANG_TR_UD5_ID");

                entity.Property(e => e.AngTrUd5IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ANG_TR_UD5_ID_HLIGHT");

                entity.Property(e => e.AngTrUd5Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ANG_TR_UD5_NUMERIC");

                entity.Property(e => e.AngTrUd6)
                    .HasMaxLength(255)
                    .HasColumnName("ANG_TR_UD6");

                entity.Property(e => e.AngTrUd6Bit).HasColumnName("ANG_TR_UD6_BIT");

                entity.Property(e => e.AngTrUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ANG_TR_UD6_DATE");

                entity.Property(e => e.AngTrUd6Id).HasColumnName("ANG_TR_UD6_ID");

                entity.Property(e => e.AngTrUd6IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ANG_TR_UD6_ID_HLIGHT");

                entity.Property(e => e.AngTrUd6Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ANG_TR_UD6_NUMERIC");

                entity.Property(e => e.AngTrUd7)
                    .HasMaxLength(255)
                    .HasColumnName("ANG_TR_UD7");

                entity.Property(e => e.AngTrUd7Bit).HasColumnName("ANG_TR_UD7_BIT");

                entity.Property(e => e.AngTrUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ANG_TR_UD7_DATE");

                entity.Property(e => e.AngTrUd7Id).HasColumnName("ANG_TR_UD7_ID");

                entity.Property(e => e.AngTrUd7IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ANG_TR_UD7_ID_HLIGHT");

                entity.Property(e => e.AngTrUd7Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ANG_TR_UD7_NUMERIC");

                entity.Property(e => e.AngTrUd8)
                    .HasMaxLength(255)
                    .HasColumnName("ANG_TR_UD8");

                entity.Property(e => e.AngTrUd8Bit).HasColumnName("ANG_TR_UD8_BIT");

                entity.Property(e => e.AngTrUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ANG_TR_UD8_DATE");

                entity.Property(e => e.AngTrUd8Id).HasColumnName("ANG_TR_UD8_ID");

                entity.Property(e => e.AngTrUd8IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ANG_TR_UD8_ID_HLIGHT");

                entity.Property(e => e.AngTrUd8Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ANG_TR_UD8_NUMERIC");

                entity.Property(e => e.AngTrUd9)
                    .HasMaxLength(255)
                    .HasColumnName("ANG_TR_UD9");

                entity.Property(e => e.AngTrUd9Bit).HasColumnName("ANG_TR_UD9_BIT");

                entity.Property(e => e.AngTrUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ANG_TR_UD9_DATE");

                entity.Property(e => e.AngTrUd9Id).HasColumnName("ANG_TR_UD9_ID");

                entity.Property(e => e.AngTrUd9IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ANG_TR_UD9_ID_HLIGHT");

                entity.Property(e => e.AngTrUd9Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ANG_TR_UD9_NUMERIC");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.ExternalReference)
                    .HasMaxLength(255)
                    .HasColumnName("EXTERNAL_REFERENCE");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", true);

                entity.Property(e => e.Reference)
                    .HasMaxLength(255)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'GTH-')");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.HasOne(d => d.Ac)
                    .WithMany(p => p.IntAnagramTransactions)
                    .HasForeignKey(d => d.AcId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_IntAnagramTransactions_ACCOUNTS");
            });

            modelBuilder.Entity<IntNavisionTransactionHistory>(entity =>
            {
                entity.HasKey(e => e.NavThId);

                entity.ToTable("IntNavisionTransactionHistory");

                entity.HasIndex(e => e.ShortCode, "IX__IntNavisionTransactionHistory__SHORT_CODE");

                entity.Property(e => e.NavThId)
                    .ValueGeneratedNever()
                    .HasColumnName("NAV_TH_ID");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AppliesToDocNo)
                    .HasMaxLength(255)
                    .HasColumnName("APPLIES_TO_DOC_NO");

                entity.Property(e => e.AppliesToDocType)
                    .HasMaxLength(255)
                    .HasColumnName("APPLIES_TO_DOC_TYPE");

                entity.Property(e => e.BillToAddress)
                    .HasMaxLength(255)
                    .HasColumnName("BILL_TO_ADDRESS");

                entity.Property(e => e.BillToAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("BILL_TO_ADDRESS_2");

                entity.Property(e => e.BillToCity)
                    .HasMaxLength(255)
                    .HasColumnName("BILL_TO_CITY");

                entity.Property(e => e.BillToContact)
                    .HasMaxLength(255)
                    .HasColumnName("BILL_TO_CONTACT");

                entity.Property(e => e.BillToContactNo)
                    .HasMaxLength(255)
                    .HasColumnName("BILL_TO_CONTACT_NO");

                entity.Property(e => e.BillToCounty)
                    .HasMaxLength(255)
                    .HasColumnName("BILL_TO_COUNTY");

                entity.Property(e => e.BillToCustomerNo)
                    .HasMaxLength(255)
                    .HasColumnName("BILL_TO_CUSTOMER_NO");

                entity.Property(e => e.BillToName)
                    .HasMaxLength(255)
                    .HasColumnName("BILL_TO_NAME");

                entity.Property(e => e.BillToPostCode)
                    .HasMaxLength(255)
                    .HasColumnName("BILL_TO_POST_CODE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CreditCardNo)
                    .HasMaxLength(255)
                    .HasColumnName("CREDIT_CARD_NO");

                entity.Property(e => e.CurrencyCode)
                    .HasMaxLength(255)
                    .HasColumnName("CURRENCY_CODE");

                entity.Property(e => e.Deleted).HasColumnName("DELETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.DirectDebitMandateId)
                    .HasMaxLength(255)
                    .HasColumnName("DIRECT_DEBIT_MANDATE_ID");

                entity.Property(e => e.DocumentDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DOCUMENT_DATE");

                entity.Property(e => e.DocumentExchangeStatus)
                    .HasMaxLength(255)
                    .HasColumnName("DOCUMENT_EXCHANGE_STATUS");

                entity.Property(e => e.DueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DUE_DATE");

                entity.Property(e => e.Eu3PartyTrade).HasColumnName("EU_3_PARTY_TRADE");

                entity.Property(e => e.ExternalDocumentNo)
                    .HasMaxLength(255)
                    .HasColumnName("EXTERNAL_DOCUMENT_NO");

                entity.Property(e => e.FneId).HasColumnName("FNE_ID");

                entity.Property(e => e.LocationCode)
                    .HasMaxLength(255)
                    .HasColumnName("LOCATION_CODE");

                entity.Property(e => e.NavKey)
                    .HasMaxLength(255)
                    .HasColumnName("NAV_KEY");

                entity.Property(e => e.NavNo)
                    .HasMaxLength(255)
                    .HasColumnName("NAV_NO");

                entity.Property(e => e.NavThUd1Bit).HasColumnName("NAV_TH_UD1_BIT");

                entity.Property(e => e.NavThUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("NAV_TH_UD1_DATE");

                entity.Property(e => e.NavThUd1Id).HasColumnName("NAV_TH_UD1_ID");

                entity.Property(e => e.NavThUd1Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("NAV_TH_UD1_NUMERIC");

                entity.Property(e => e.NavThUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("NAV_TH_UD1_TEXT");

                entity.Property(e => e.NavThUd2Bit).HasColumnName("NAV_TH_UD2_BIT");

                entity.Property(e => e.NavThUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("NAV_TH_UD2_DATE");

                entity.Property(e => e.NavThUd2Id).HasColumnName("NAV_TH_UD2_ID");

                entity.Property(e => e.NavThUd2Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("NAV_TH_UD2_NUMERIC");

                entity.Property(e => e.NavThUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("NAV_TH_UD2_TEXT");

                entity.Property(e => e.NavThUd3Bit).HasColumnName("NAV_TH_UD3_BIT");

                entity.Property(e => e.NavThUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("NAV_TH_UD3_DATE");

                entity.Property(e => e.NavThUd3Id).HasColumnName("NAV_TH_UD3_ID");

                entity.Property(e => e.NavThUd3Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("NAV_TH_UD3_NUMERIC");

                entity.Property(e => e.NavThUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("NAV_TH_UD3_TEXT");

                entity.Property(e => e.NavThUd4Bit).HasColumnName("NAV_TH_UD4_BIT");

                entity.Property(e => e.NavThUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("NAV_TH_UD4_DATE");

                entity.Property(e => e.NavThUd4Id).HasColumnName("NAV_TH_UD4_ID");

                entity.Property(e => e.NavThUd4Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("NAV_TH_UD4_NUMERIC");

                entity.Property(e => e.NavThUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("NAV_TH_UD4_TEXT");

                entity.Property(e => e.NavThUd5Bit).HasColumnName("NAV_TH_UD5_BIT");

                entity.Property(e => e.NavThUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("NAV_TH_UD5_DATE");

                entity.Property(e => e.NavThUd5Id).HasColumnName("NAV_TH_UD5_ID");

                entity.Property(e => e.NavThUd5Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("NAV_TH_UD5_NUMERIC");

                entity.Property(e => e.NavThUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("NAV_TH_UD5_TEXT");

                entity.Property(e => e.NoPrinted).HasColumnName("NO_PRINTED");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.OpqId).HasColumnName("OPQ_ID");

                entity.Property(e => e.OrderNo)
                    .HasMaxLength(255)
                    .HasColumnName("ORDER_NO");

                entity.Property(e => e.PaymentDiscountPercent)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PAYMENT_DISCOUNT_PERCENT");

                entity.Property(e => e.PaymentMethodCode)
                    .HasMaxLength(255)
                    .HasColumnName("PAYMENT_METHOD_CODE");

                entity.Property(e => e.PaymentTermsCode)
                    .HasMaxLength(255)
                    .HasColumnName("PAYMENT_TERMS_CODE");

                entity.Property(e => e.PmtDiscountDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PMT_DISCOUNT_DATE");

                entity.Property(e => e.PostingDate)
                    .HasColumnType("datetime")
                    .HasColumnName("POSTING_DATE");

                entity.Property(e => e.PreAssignedNo)
                    .HasMaxLength(255)
                    .HasColumnName("PRE_ASSIGNED_NO");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", true);

                entity.Property(e => e.QuoteNo)
                    .HasMaxLength(255)
                    .HasColumnName("QUOTE_NO");

                entity.Property(e => e.ResponsibilityCenter)
                    .HasMaxLength(255)
                    .HasColumnName("RESPONSIBILITY_CENTER");

                entity.Property(e => e.SalespersonCode)
                    .HasMaxLength(255)
                    .HasColumnName("SALESPERSON_CODE");

                entity.Property(e => e.SellToAddress)
                    .HasMaxLength(255)
                    .HasColumnName("SELL_TO_ADDRESS");

                entity.Property(e => e.SellToAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("SELL_TO_ADDRESS_2");

                entity.Property(e => e.SellToCity)
                    .HasMaxLength(255)
                    .HasColumnName("SELL_TO_CITY");

                entity.Property(e => e.SellToContact)
                    .HasMaxLength(255)
                    .HasColumnName("SELL_TO_CONTACT");

                entity.Property(e => e.SellToContactNo)
                    .HasMaxLength(255)
                    .HasColumnName("SELL_TO_CONTACT_NO");

                entity.Property(e => e.SellToCounty)
                    .HasMaxLength(255)
                    .HasColumnName("SELL_TO_COUNTY");

                entity.Property(e => e.SellToCustomerName)
                    .HasMaxLength(255)
                    .HasColumnName("SELL_TO_CUSTOMER_NAME");

                entity.Property(e => e.SellToCustomerNo)
                    .HasMaxLength(255)
                    .HasColumnName("SELL_TO_CUSTOMER_NO");

                entity.Property(e => e.SellToPostCode)
                    .HasMaxLength(255)
                    .HasColumnName("SELL_TO_POST_CODE");

                entity.Property(e => e.ShipToAddress)
                    .HasMaxLength(255)
                    .HasColumnName("SHIP_TO_ADDRESS");

                entity.Property(e => e.ShipToAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("SHIP_TO_ADDRESS_2");

                entity.Property(e => e.ShipToCity)
                    .HasMaxLength(255)
                    .HasColumnName("SHIP_TO_CITY");

                entity.Property(e => e.ShipToCode)
                    .HasMaxLength(255)
                    .HasColumnName("SHIP_TO_CODE");

                entity.Property(e => e.ShipToContact)
                    .HasMaxLength(255)
                    .HasColumnName("SHIP_TO_CONTACT");

                entity.Property(e => e.ShipToCounty)
                    .HasMaxLength(255)
                    .HasColumnName("SHIP_TO_COUNTY");

                entity.Property(e => e.ShipToName)
                    .HasMaxLength(255)
                    .HasColumnName("SHIP_TO_NAME");

                entity.Property(e => e.ShipToPostCode)
                    .HasMaxLength(255)
                    .HasColumnName("SHIP_TO_POST_CODE");

                entity.Property(e => e.ShipmentDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SHIPMENT_DATE");

                entity.Property(e => e.ShipmentMethodCode)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPMENT_METHOD_CODE");

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'NTH-')");

                entity.Property(e => e.ShortcutDimension1Code)
                    .HasMaxLength(255)
                    .HasColumnName("SHORTCUT_DIMENSION_1_CODE");

                entity.Property(e => e.ShortcutDimension2Code)
                    .HasMaxLength(255)
                    .HasColumnName("SHORTCUT_DIMENSION_2_CODE");

                entity.Property(e => e.Source)
                    .IsRequired()
                    .HasMaxLength(60)
                    .HasColumnName("SOURCE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.HasOne(d => d.Ac)
                    .WithMany(p => p.IntNavisionTransactionHistoryAcs)
                    .HasForeignKey(d => d.AcId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__IntNavisi__AC_ID__734F82A2");

                entity.HasOne(d => d.Obj)
                    .WithMany(p => p.IntNavisionTransactionHistoryObjs)
                    .HasForeignKey(d => d.ObjId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__IntNavisi__OBJ_I__7443A6DB");
            });

            modelBuilder.Entity<IntNavisionTransactionHistoryLine>(entity =>
            {
                entity.HasKey(e => e.NavThlId);

                entity.HasIndex(e => e.ShortCode, "IX__IntNavisionTransactionHistoryLines__SHORT_CODE");

                entity.Property(e => e.NavThlId)
                    .ValueGeneratedNever()
                    .HasColumnName("NAV_THL_ID");

                entity.Property(e => e.AllowInvoiceDisc).HasColumnName("ALLOW_INVOICE_DISC");

                entity.Property(e => e.ApplFromItemEntry).HasColumnName("APPL_FROM_ITEM_ENTRY");

                entity.Property(e => e.ApplToItemEntry).HasColumnName("APPL_TO_ITEM_ENTRY");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CrossReferenceNo)
                    .HasMaxLength(255)
                    .HasColumnName("CROSS_REFERENCE_NO");

                entity.Property(e => e.DeferralCode)
                    .HasMaxLength(255)
                    .HasColumnName("DEFERRAL_CODE");

                entity.Property(e => e.Deleted).HasColumnName("DELETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Description)
                    .HasMaxLength(255)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.IcPartnerCode)
                    .HasMaxLength(255)
                    .HasColumnName("IC_PARTNER_CODE");

                entity.Property(e => e.JobNo)
                    .HasMaxLength(255)
                    .HasColumnName("JOB_NO");

                entity.Property(e => e.LineAmount)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("LINE_AMOUNT");

                entity.Property(e => e.LineDiscountAmount)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("LINE_DISCOUNT_AMOUNT");

                entity.Property(e => e.LineDiscountPercent)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("LINE_DISCOUNT_PERCENT");

                entity.Property(e => e.NavKey)
                    .HasMaxLength(255)
                    .HasColumnName("NAV_KEY");

                entity.Property(e => e.NavNo)
                    .HasMaxLength(255)
                    .HasColumnName("NAV_NO");

                entity.Property(e => e.NavThId).HasColumnName("NAV_TH_ID");

                entity.Property(e => e.NavThlUd1Bit).HasColumnName("NAV_THL_UD1_BIT");

                entity.Property(e => e.NavThlUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("NAV_THL_UD1_DATE");

                entity.Property(e => e.NavThlUd1Id).HasColumnName("NAV_THL_UD1_ID");

                entity.Property(e => e.NavThlUd1Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("NAV_THL_UD1_NUMERIC");

                entity.Property(e => e.NavThlUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("NAV_THL_UD1_TEXT");

                entity.Property(e => e.NavThlUd2Bit).HasColumnName("NAV_THL_UD2_BIT");

                entity.Property(e => e.NavThlUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("NAV_THL_UD2_DATE");

                entity.Property(e => e.NavThlUd2Id).HasColumnName("NAV_THL_UD2_ID");

                entity.Property(e => e.NavThlUd2Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("NAV_THL_UD2_NUMERIC");

                entity.Property(e => e.NavThlUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("NAV_THL_UD2_TEXT");

                entity.Property(e => e.NavThlUd3Bit).HasColumnName("NAV_THL_UD3_BIT");

                entity.Property(e => e.NavThlUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("NAV_THL_UD3_DATE");

                entity.Property(e => e.NavThlUd3Id).HasColumnName("NAV_THL_UD3_ID");

                entity.Property(e => e.NavThlUd3Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("NAV_THL_UD3_NUMERIC");

                entity.Property(e => e.NavThlUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("NAV_THL_UD3_TEXT");

                entity.Property(e => e.NavThlUd4Bit).HasColumnName("NAV_THL_UD4_BIT");

                entity.Property(e => e.NavThlUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("NAV_THL_UD4_DATE");

                entity.Property(e => e.NavThlUd4Id).HasColumnName("NAV_THL_UD4_ID");

                entity.Property(e => e.NavThlUd4Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("NAV_THL_UD4_NUMERIC");

                entity.Property(e => e.NavThlUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("NAV_THL_UD4_TEXT");

                entity.Property(e => e.NavThlUd5Bit).HasColumnName("NAV_THL_UD5_BIT");

                entity.Property(e => e.NavThlUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("NAV_THL_UD5_DATE");

                entity.Property(e => e.NavThlUd5Id).HasColumnName("NAV_THL_UD5_ID");

                entity.Property(e => e.NavThlUd5Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("NAV_THL_UD5_NUMERIC");

                entity.Property(e => e.NavThlUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("NAV_THL_UD5_TEXT");

                entity.Property(e => e.NavType)
                    .HasMaxLength(255)
                    .HasColumnName("NAV_TYPE");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", true);

                entity.Property(e => e.Quantity)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("QUANTITY");

                entity.Property(e => e.ReturnReasonCode)
                    .HasMaxLength(255)
                    .HasColumnName("RETURN_REASON_CODE");

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'NTL-')");

                entity.Property(e => e.ShortcutDimension1Code)
                    .HasMaxLength(255)
                    .HasColumnName("SHORTCUT_DIMENSION_1_CODE");

                entity.Property(e => e.ShortcutDimension2Code)
                    .HasMaxLength(255)
                    .HasColumnName("SHORTCUT_DIMENSION_2_CODE");

                entity.Property(e => e.UnitCostLcy)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("UNIT_COST_LCY");

                entity.Property(e => e.UnitOfMeasure)
                    .HasMaxLength(255)
                    .HasColumnName("UNIT_OF_MEASURE");

                entity.Property(e => e.UnitOfMeasureCode)
                    .HasMaxLength(255)
                    .HasColumnName("UNIT_OF_MEASURE_CODE");

                entity.Property(e => e.UnitPrice)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("UNIT_PRICE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.VariantCode)
                    .HasMaxLength(255)
                    .HasColumnName("VARIANT_CODE");

                entity.HasOne(d => d.NavTh)
                    .WithMany(p => p.IntNavisionTransactionHistoryLineNavThs)
                    .HasForeignKey(d => d.NavThId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__IntNavisi__NAV_T__77201386");

                entity.HasOne(d => d.Obj)
                    .WithMany(p => p.IntNavisionTransactionHistoryLineObjs)
                    .HasForeignKey(d => d.ObjId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__IntNavisi__OBJ_I__781437BF");
            });

            modelBuilder.Entity<IntWinManTransactionHistory>(entity =>
            {
                entity.HasKey(e => e.WinThId);

                entity.ToTable("IntWinManTransactionHistory");

                entity.HasIndex(e => e.ShortCode, "IX__IntWinManTransactionHistory__SHORT_CODE");

                entity.Property(e => e.WinThId)
                    .ValueGeneratedNever()
                    .HasColumnName("WIN_TH_ID");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.BillingAddress)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_ADDRESS");

                entity.Property(e => e.BillingCity)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_CITY");

                entity.Property(e => e.BillingCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_COUNTRY_CODE");

                entity.Property(e => e.BillingEmailAddress)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_EMAIL_ADDRESS");

                entity.Property(e => e.BillingName)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_NAME");

                entity.Property(e => e.BillingPhoneNumber)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_PHONE_NUMBER");

                entity.Property(e => e.BillingPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_POSTAL_CODE");

                entity.Property(e => e.BillingRegion)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_REGION");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Currency)
                    .HasMaxLength(255)
                    .HasColumnName("CURRENCY");

                entity.Property(e => e.CustomerContact)
                    .HasMaxLength(255)
                    .HasColumnName("CUSTOMER_CONTACT");

                entity.Property(e => e.CustomerGuid)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("CUSTOMER_GUID");

                entity.Property(e => e.CustomerOrderNumber)
                    .HasMaxLength(255)
                    .HasColumnName("CUSTOMER_ORDER_NUMBER");

                entity.Property(e => e.Deleted).HasColumnName("DELETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.FneId).HasColumnName("FNE_ID");

                entity.Property(e => e.FreightMethodId)
                    .HasMaxLength(255)
                    .HasColumnName("FREIGHT_METHOD_ID");

                entity.Property(e => e.InvoiceDate)
                    .HasColumnType("datetime")
                    .HasColumnName("INVOICE_DATE");

                entity.Property(e => e.InvoiceDueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("INVOICE_DUE_DATE");

                entity.Property(e => e.InvoiceId)
                    .HasMaxLength(255)
                    .HasColumnName("INVOICE_ID");

                entity.Property(e => e.InvoiceStatus)
                    .HasMaxLength(255)
                    .HasColumnName("INVOICE_STATUS");

                entity.Property(e => e.InvoiceTotal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("INVOICE_TOTAL");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.OpqId).HasColumnName("OPQ_ID");

                entity.Property(e => e.OrderDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ORDER_DATE");

                entity.Property(e => e.OrderStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ORDER_STATUS");

                entity.Property(e => e.OutstandingBalance)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OUTSTANDING_BALANCE");

                entity.Property(e => e.PaymentType)
                    .HasMaxLength(255)
                    .HasColumnName("PAYMENT_TYPE");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", false);

                entity.Property(e => e.QuoteDate)
                    .HasColumnType("datetime")
                    .HasColumnName("QUOTE_DATE");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(255)
                    .HasColumnName("QUOTE_ID");

                entity.Property(e => e.QuoteStatus)
                    .HasMaxLength(255)
                    .HasColumnName("QUOTE_STATUS");

                entity.Property(e => e.SalesOrderId)
                    .HasMaxLength(255)
                    .HasColumnName("SALES_ORDER_ID");

                entity.Property(e => e.ShippingAddress)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_ADDRESS");

                entity.Property(e => e.ShippingCity)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_CITY");

                entity.Property(e => e.ShippingCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_COUNTRY_CODE");

                entity.Property(e => e.ShippingEmailAddress)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_EMAIL_ADDRESS");

                entity.Property(e => e.ShippingFirstName)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_FIRST_NAME");

                entity.Property(e => e.ShippingLastName)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_LAST_NAME");

                entity.Property(e => e.ShippingName)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_NAME");

                entity.Property(e => e.ShippingPhoneNumber)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_PHONE_NUMBER");

                entity.Property(e => e.ShippingPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_POSTAL_CODE");

                entity.Property(e => e.ShippingRegion)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_REGION");

                entity.Property(e => e.ShippingTaxValue)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SHIPPING_TAX_VALUE");

                entity.Property(e => e.ShippingTitle)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_TITLE");

                entity.Property(e => e.ShippingValue)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SHIPPING_VALUE");

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'WTH-')");

                entity.Property(e => e.Source)
                    .IsRequired()
                    .HasMaxLength(60)
                    .HasColumnName("SOURCE");

                entity.Property(e => e.TotalOrderValue)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("TOTAL_ORDER_VALUE");

                entity.Property(e => e.TotalQuoteValue)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("TOTAL_QUOTE_VALUE");

                entity.Property(e => e.TotalTaxValue)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("TOTAL_TAX_VALUE");

                entity.Property(e => e.TrackingNumber)
                    .HasMaxLength(255)
                    .HasColumnName("TRACKING_NUMBER");

                entity.Property(e => e.TrackingUrl)
                    .HasMaxLength(255)
                    .HasColumnName("TRACKING_URL");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.WinThUd1Bit).HasColumnName("WIN_TH_UD1_BIT");

                entity.Property(e => e.WinThUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("WIN_TH_UD1_DATE");

                entity.Property(e => e.WinThUd1Id).HasColumnName("WIN_TH_UD1_ID");

                entity.Property(e => e.WinThUd1Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("WIN_TH_UD1_NUMERIC");

                entity.Property(e => e.WinThUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("WIN_TH_UD1_TEXT");

                entity.Property(e => e.WinThUd2Bit).HasColumnName("WIN_TH_UD2_BIT");

                entity.Property(e => e.WinThUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("WIN_TH_UD2_DATE");

                entity.Property(e => e.WinThUd2Id).HasColumnName("WIN_TH_UD2_ID");

                entity.Property(e => e.WinThUd2Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("WIN_TH_UD2_NUMERIC");

                entity.Property(e => e.WinThUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("WIN_TH_UD2_TEXT");

                entity.Property(e => e.WinThUd3Bit).HasColumnName("WIN_TH_UD3_BIT");

                entity.Property(e => e.WinThUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("WIN_TH_UD3_DATE");

                entity.Property(e => e.WinThUd3Id).HasColumnName("WIN_TH_UD3_ID");

                entity.Property(e => e.WinThUd3Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("WIN_TH_UD3_NUMERIC");

                entity.Property(e => e.WinThUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("WIN_TH_UD3_TEXT");

                entity.Property(e => e.WinThUd4Bit).HasColumnName("WIN_TH_UD4_BIT");

                entity.Property(e => e.WinThUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("WIN_TH_UD4_DATE");

                entity.Property(e => e.WinThUd4Id).HasColumnName("WIN_TH_UD4_ID");

                entity.Property(e => e.WinThUd4Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("WIN_TH_UD4_NUMERIC");

                entity.Property(e => e.WinThUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("WIN_TH_UD4_TEXT");

                entity.Property(e => e.WinThUd5Bit).HasColumnName("WIN_TH_UD5_BIT");

                entity.Property(e => e.WinThUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("WIN_TH_UD5_DATE");

                entity.Property(e => e.WinThUd5Id).HasColumnName("WIN_TH_UD5_ID");

                entity.Property(e => e.WinThUd5Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("WIN_TH_UD5_NUMERIC");

                entity.Property(e => e.WinThUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("WIN_TH_UD5_TEXT");

                entity.HasOne(d => d.Ac)
                    .WithMany(p => p.IntWinManTransactionHistoryAcs)
                    .HasForeignKey(d => d.AcId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__IntWinman__AC_ID__734F82A2");

                entity.HasOne(d => d.Obj)
                    .WithMany(p => p.IntWinManTransactionHistoryObjs)
                    .HasForeignKey(d => d.ObjId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__IntWinman__OBJ_I__7443A6DB");
            });

            modelBuilder.Entity<IntWinmanTransactionHistoryLine>(entity =>
            {
                entity.HasKey(e => e.WinThlId);

                entity.HasIndex(e => e.ShortCode, "IX__IntWinmanTransactionHistoryLines__SHORT_CODE");

                entity.Property(e => e.WinThlId)
                    .ValueGeneratedNever()
                    .HasColumnName("WIN_THL_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Deleted).HasColumnName("DELETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Description)
                    .HasMaxLength(255)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.DiscountAmount)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("DISCOUNT_AMOUNT");

                entity.Property(e => e.FreeTextItem)
                    .HasMaxLength(255)
                    .HasColumnName("FREE_TEXT_ITEM");

                entity.Property(e => e.FreightMethodId)
                    .HasMaxLength(255)
                    .HasColumnName("FREIGHT_METHOD_ID");

                entity.Property(e => e.LineTaxValue)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("LINE_TAX_VALUE");

                entity.Property(e => e.LineValue)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("LINE_VALUE");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", true);

                entity.Property(e => e.ProductName)
                    .HasMaxLength(255)
                    .HasColumnName("PRODUCT_NAME");

                entity.Property(e => e.Quantity)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("QUANTITY");

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'WTL-')");

                entity.Property(e => e.ShortDescription)
                    .HasMaxLength(255)
                    .HasColumnName("SHORT_DESCRIPTION");

                entity.Property(e => e.Sku)
                    .HasMaxLength(255)
                    .HasColumnName("SKU");

                entity.Property(e => e.SundryId)
                    .HasMaxLength(255)
                    .HasColumnName("SUNDRY_ID");

                entity.Property(e => e.UnitPrice)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("UNIT_PRICE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.WinThId).HasColumnName("WIN_TH_ID");

                entity.Property(e => e.WinThlUd1Bit).HasColumnName("WIN_THL_UD1_BIT");

                entity.Property(e => e.WinThlUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("WIN_THL_UD1_DATE");

                entity.Property(e => e.WinThlUd1Id).HasColumnName("WIN_THL_UD1_ID");

                entity.Property(e => e.WinThlUd1Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("WIN_THL_UD1_NUMERIC");

                entity.Property(e => e.WinThlUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("WIN_THL_UD1_TEXT");

                entity.Property(e => e.WinThlUd2Bit).HasColumnName("WIN_THL_UD2_BIT");

                entity.Property(e => e.WinThlUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("WIN_THL_UD2_DATE");

                entity.Property(e => e.WinThlUd2Id).HasColumnName("WIN_THL_UD2_ID");

                entity.Property(e => e.WinThlUd2Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("WIN_THL_UD2_NUMERIC");

                entity.Property(e => e.WinThlUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("WIN_THL_UD2_TEXT");

                entity.Property(e => e.WinThlUd3Bit).HasColumnName("WIN_THL_UD3_BIT");

                entity.Property(e => e.WinThlUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("WIN_THL_UD3_DATE");

                entity.Property(e => e.WinThlUd3Id).HasColumnName("WIN_THL_UD3_ID");

                entity.Property(e => e.WinThlUd3Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("WIN_THL_UD3_NUMERIC");

                entity.Property(e => e.WinThlUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("WIN_THL_UD3_TEXT");

                entity.Property(e => e.WinThlUd4Bit).HasColumnName("WIN_THL_UD4_BIT");

                entity.Property(e => e.WinThlUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("WIN_THL_UD4_DATE");

                entity.Property(e => e.WinThlUd4Id).HasColumnName("WIN_THL_UD4_ID");

                entity.Property(e => e.WinThlUd4Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("WIN_THL_UD4_NUMERIC");

                entity.Property(e => e.WinThlUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("WIN_THL_UD4_TEXT");

                entity.Property(e => e.WinThlUd5Bit).HasColumnName("WIN_THL_UD5_BIT");

                entity.Property(e => e.WinThlUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("WIN_THL_UD5_DATE");

                entity.Property(e => e.WinThlUd5Id).HasColumnName("WIN_THL_UD5_ID");

                entity.Property(e => e.WinThlUd5Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("WIN_THL_UD5_NUMERIC");

                entity.Property(e => e.WinThlUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("WIN_THL_UD5_TEXT");

                entity.HasOne(d => d.WinTh)
                    .WithMany(p => p.IntWinmanTransactionHistoryLines)
                    .HasForeignKey(d => d.WinThId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__IntWinManLine__WIN_T__77201386");
            });

            modelBuilder.Entity<IntXeroTransactionHistory>(entity =>
            {
                entity.HasKey(e => e.XeroThId);

                entity.ToTable("IntXeroTransactionHistory");

                entity.HasIndex(e => e.ShortCode, "IX__IntXeroTransactionHistory__SHORT_CODE");

                entity.Property(e => e.XeroThId)
                    .ValueGeneratedNever()
                    .HasColumnName("XERO_TH_ID");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AmountCredited)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("AMOUNT_CREDITED");

                entity.Property(e => e.AmountDue)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("AMOUNT_DUE");

                entity.Property(e => e.AmountPaid)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("AMOUNT_PAID");

                entity.Property(e => e.BrandingThemeId)
                    .HasMaxLength(255)
                    .HasColumnName("BRANDING_THEME_ID");

                entity.Property(e => e.CisDeduction)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("CIS_DEDUCTION");

                entity.Property(e => e.ContactId)
                    .HasMaxLength(255)
                    .HasColumnName("CONTACT_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CurrencyCode)
                    .HasMaxLength(255)
                    .HasColumnName("CURRENCY_CODE");

                entity.Property(e => e.CurrencyRate)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("CURRENCY_RATE");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE");

                entity.Property(e => e.Deleted).HasColumnName("DELETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.DueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DUE_DATE");

                entity.Property(e => e.ExpectedPaymentDate)
                    .HasColumnType("datetime")
                    .HasColumnName("EXPECTED_PAYMENT_DATE");

                entity.Property(e => e.FneId).HasColumnName("FNE_ID");

                entity.Property(e => e.FullyPaidOnDate)
                    .HasColumnType("datetime")
                    .HasColumnName("FULLY_PAID_ON_DATE");

                entity.Property(e => e.HasAttachments).HasColumnName("HAS_ATTACHMENTS");

                entity.Property(e => e.InvoiceId)
                    .HasMaxLength(255)
                    .HasColumnName("INVOICE_ID");

                entity.Property(e => e.InvoiceNumber)
                    .HasMaxLength(255)
                    .HasColumnName("INVOICE_NUMBER");

                entity.Property(e => e.LineAmountTypes)
                    .HasMaxLength(255)
                    .HasColumnName("LINE_AMOUNT_TYPES");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.OpqId).HasColumnName("OPQ_ID");

                entity.Property(e => e.PlannedPaymentDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PLANNED_PAYMENT_DATE");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", true);

                entity.Property(e => e.Reference)
                    .HasMaxLength(255)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.SentToContact).HasColumnName("SENT_TO_CONTACT");

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'XTH-')");

                entity.Property(e => e.Status)
                    .HasMaxLength(255)
                    .HasColumnName("STATUS");

                entity.Property(e => e.Subtotal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SUBTOTAL");

                entity.Property(e => e.Total)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("TOTAL");

                entity.Property(e => e.TotalDiscount)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("TOTAL_DISCOUNT");

                entity.Property(e => e.TotalTax)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("TOTAL_TAX");

                entity.Property(e => e.Type)
                    .HasMaxLength(255)
                    .HasColumnName("TYPE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UpdatedDateUtc)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE_UTC");

                entity.Property(e => e.Url)
                    .HasMaxLength(255)
                    .HasColumnName("URL");

                entity.Property(e => e.XeroThNumber)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("XERO_TH_NUMBER");

                entity.Property(e => e.XeroThUd1Bit).HasColumnName("XERO_TH_UD1_BIT");

                entity.Property(e => e.XeroThUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("XERO_TH_UD1_DATE");

                entity.Property(e => e.XeroThUd1Id).HasColumnName("XERO_TH_UD1_ID");

                entity.Property(e => e.XeroThUd1Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("XERO_TH_UD1_NUMERIC");

                entity.Property(e => e.XeroThUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("XERO_TH_UD1_TEXT");

                entity.Property(e => e.XeroThUd2Bit).HasColumnName("XERO_TH_UD2_BIT");

                entity.Property(e => e.XeroThUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("XERO_TH_UD2_DATE");

                entity.Property(e => e.XeroThUd2Id).HasColumnName("XERO_TH_UD2_ID");

                entity.Property(e => e.XeroThUd2Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("XERO_TH_UD2_NUMERIC");

                entity.Property(e => e.XeroThUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("XERO_TH_UD2_TEXT");

                entity.Property(e => e.XeroThUd3Bit).HasColumnName("XERO_TH_UD3_BIT");

                entity.Property(e => e.XeroThUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("XERO_TH_UD3_DATE");

                entity.Property(e => e.XeroThUd3Id).HasColumnName("XERO_TH_UD3_ID");

                entity.Property(e => e.XeroThUd3Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("XERO_TH_UD3_NUMERIC");

                entity.Property(e => e.XeroThUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("XERO_TH_UD3_TEXT");

                entity.Property(e => e.XeroThUd4Bit).HasColumnName("XERO_TH_UD4_BIT");

                entity.Property(e => e.XeroThUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("XERO_TH_UD4_DATE");

                entity.Property(e => e.XeroThUd4Id).HasColumnName("XERO_TH_UD4_ID");

                entity.Property(e => e.XeroThUd4Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("XERO_TH_UD4_NUMERIC");

                entity.Property(e => e.XeroThUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("XERO_TH_UD4_TEXT");

                entity.Property(e => e.XeroThUd5Bit).HasColumnName("XERO_TH_UD5_BIT");

                entity.Property(e => e.XeroThUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("XERO_TH_UD5_DATE");

                entity.Property(e => e.XeroThUd5Id).HasColumnName("XERO_TH_UD5_ID");

                entity.Property(e => e.XeroThUd5Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("XERO_TH_UD5_NUMERIC");

                entity.Property(e => e.XeroThUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("XERO_TH_UD5_TEXT");

                entity.HasOne(d => d.Ac)
                    .WithMany(p => p.IntXeroTransactionHistoryAcs)
                    .HasForeignKey(d => d.AcId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__IntXero__AC_ID__D399203E");

                entity.HasOne(d => d.Obj)
                    .WithMany(p => p.IntXeroTransactionHistoryObjs)
                    .HasForeignKey(d => d.ObjId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__IntXero__OBJ_I__461B3038");
            });

            modelBuilder.Entity<IntXeroTransactionHistoryLine>(entity =>
            {
                entity.HasKey(e => e.XeroThlId);

                entity.HasIndex(e => e.ShortCode, "IX__IntXeroTransactionHistoryLines__SHORT_CODE");

                entity.Property(e => e.XeroThlId)
                    .ValueGeneratedNever()
                    .HasColumnName("XERO_THL_ID");

                entity.Property(e => e.AccountCode)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_CODE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Deleted).HasColumnName("DELETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Description)
                    .HasMaxLength(255)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.DiscountAmount)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("DISCOUNT_AMOUNT");

                entity.Property(e => e.DiscountRate)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("DISCOUNT_RATE");

                entity.Property(e => e.ItemCode)
                    .HasMaxLength(255)
                    .HasColumnName("ITEM_CODE");

                entity.Property(e => e.LineAmount)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("LINE_AMOUNT");

                entity.Property(e => e.LineItemId)
                    .HasMaxLength(255)
                    .HasColumnName("LINE_ITEM_ID");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", true);

                entity.Property(e => e.Quantity)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("QUANTITY");

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'XTL-')");

                entity.Property(e => e.TaxAmount)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("TAX_AMOUNT");

                entity.Property(e => e.TaxType)
                    .HasMaxLength(255)
                    .HasColumnName("TAX_TYPE");

                entity.Property(e => e.UnitAmount)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("UNIT_AMOUNT");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.XeroThId).HasColumnName("XERO_TH_ID");

                entity.Property(e => e.XeroThlUd1Bit).HasColumnName("XERO_THL_UD1_BIT");

                entity.Property(e => e.XeroThlUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("XERO_THL_UD1_DATE");

                entity.Property(e => e.XeroThlUd1Id).HasColumnName("XERO_THL_UD1_ID");

                entity.Property(e => e.XeroThlUd1Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("XERO_THL_UD1_NUMERIC");

                entity.Property(e => e.XeroThlUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("XERO_THL_UD1_TEXT");

                entity.Property(e => e.XeroThlUd2Bit).HasColumnName("XERO_THL_UD2_BIT");

                entity.Property(e => e.XeroThlUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("XERO_THL_UD2_DATE");

                entity.Property(e => e.XeroThlUd2Id).HasColumnName("XERO_THL_UD2_ID");

                entity.Property(e => e.XeroThlUd2Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("XERO_THL_UD2_NUMERIC");

                entity.Property(e => e.XeroThlUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("XERO_THL_UD2_TEXT");

                entity.Property(e => e.XeroThlUd3Bit).HasColumnName("XERO_THL_UD3_BIT");

                entity.Property(e => e.XeroThlUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("XERO_THL_UD3_DATE");

                entity.Property(e => e.XeroThlUd3Id).HasColumnName("XERO_THL_UD3_ID");

                entity.Property(e => e.XeroThlUd3Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("XERO_THL_UD3_NUMERIC");

                entity.Property(e => e.XeroThlUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("XERO_THL_UD3_TEXT");

                entity.Property(e => e.XeroThlUd4Bit).HasColumnName("XERO_THL_UD4_BIT");

                entity.Property(e => e.XeroThlUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("XERO_THL_UD4_DATE");

                entity.Property(e => e.XeroThlUd4Id).HasColumnName("XERO_THL_UD4_ID");

                entity.Property(e => e.XeroThlUd4Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("XERO_THL_UD4_NUMERIC");

                entity.Property(e => e.XeroThlUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("XERO_THL_UD4_TEXT");

                entity.Property(e => e.XeroThlUd5Bit).HasColumnName("XERO_THL_UD5_BIT");

                entity.Property(e => e.XeroThlUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("XERO_THL_UD5_DATE");

                entity.Property(e => e.XeroThlUd5Id).HasColumnName("XERO_THL_UD5_ID");

                entity.Property(e => e.XeroThlUd5Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("XERO_THL_UD5_NUMERIC");

                entity.Property(e => e.XeroThlUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("XERO_THL_UD5_TEXT");

                entity.HasOne(d => d.Obj)
                    .WithMany(p => p.IntXeroTransactionHistoryLineObjs)
                    .HasForeignKey(d => d.ObjId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__IntXero__OBJ_I__69F79347");

                entity.HasOne(d => d.XeroTh)
                    .WithMany(p => p.IntXeroTransactionHistoryLineXeroThs)
                    .HasForeignKey(d => d.XeroThId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__IntXero__XERO_T__6C7E8A92");
            });

            modelBuilder.Entity<Integration>(entity =>
            {
                entity.HasKey(e => e.SiId);

                entity.ToTable("INTEGRATIONS");

                entity.Property(e => e.SiId)
                    .ValueGeneratedNever()
                    .HasColumnName("SI_ID");

                entity.Property(e => e.AllowProfiling)
                    .HasColumnName("ALLOW_PROFILING")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.AuthClientId)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("AUTH_CLIENT_ID");

                entity.Property(e => e.AuthClientSecret)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("AUTH_CLIENT_SECRET");

                entity.Property(e => e.BaseUri)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("BASE_URI")
                    .HasDefaultValueSql("(N'https://yoururl.com')");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.DependenciesInstalled).HasColumnName("DEPENDENCIES_INSTALLED");

                entity.Property(e => e.DisabledByUpgrade).HasColumnName("DISABLED_BY_UPGRADE");

                entity.Property(e => e.Enabled).HasColumnName("ENABLED");

                entity.Property(e => e.FneId).HasColumnName("FNE_ID");

                entity.Property(e => e.IdentityServerClientId)
                    .HasMaxLength(255)
                    .HasColumnName("IDENTITY_SERVER_CLIENT_ID");

                entity.Property(e => e.InstalledVersion)
                    .HasMaxLength(50)
                    .HasColumnName("INSTALLED_VERSION");

                entity.Property(e => e.IntegrationCategory)
                    .HasMaxLength(50)
                    .HasColumnName("INTEGRATION_CATEGORY");

                entity.Property(e => e.IntegrationType)
                    .HasColumnName("INTEGRATION_TYPE")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.IsUpdating).HasColumnName("IS_UPDATING");

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .HasColumnName("NAME");

                entity.Property(e => e.RequiresIdentityServer).HasColumnName("REQUIRES_IDENTITY_SERVER");

                entity.Property(e => e.RequiresPostInstallStep).HasColumnName("REQUIRES_POST_INSTALL_STEP");

                entity.Property(e => e.SitId).HasColumnName("SIT_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UserProfiling)
                    .HasColumnName("USER_PROFILING")
                    .HasDefaultValueSql("((0))");

                entity.HasOne(d => d.IntegrationThirdPartyCompany)
                    .WithMany(p => p.Integrations)
                    .HasForeignKey(d => d.IntegrationThirdPartyCompanyId)
                    .HasConstraintName("FK__INTEGRATIONS__IntegrationThirdPartyCompanyId__INTEGRATION_THIRD_PARTY_COMPANY_IDS__IntegrationThirdPartyCompanyId");
            });

            modelBuilder.Entity<IntegrationDefinition>(entity =>
            {
                entity.HasKey(e => e.IdefId)
                    .HasName("PK_INTEGRATION_DEFINITION");

                entity.ToTable("INTEGRATION_DEFINITIONS");

                entity.Property(e => e.IdefId)
                    .ValueGeneratedNever()
                    .HasColumnName("IDEF_ID");

                entity.Property(e => e.Definition)
                    .IsRequired()
                    .HasColumnName("DEFINITION");

                entity.Property(e => e.Version)
                    .HasMaxLength(50)
                    .HasColumnName("VERSION");
            });

            modelBuilder.Entity<IntegrationId>(entity =>
            {
                entity.HasKey(e => e.IiId);

                entity.ToTable("INTEGRATION_IDS");

                entity.HasIndex(e => e.ObjId, "IX_INTEGRATION_IDS_OBJ_ID")
                    .HasFillFactor((byte)80);

                entity.Property(e => e.IiId)
                    .ValueGeneratedNever()
                    .HasColumnName("II_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.FneId).HasColumnName("FNE_ID");

                entity.Property(e => e.IiDeleted).HasColumnName("II_DELETED");

                entity.Property(e => e.IiDeletedByObject).HasColumnName("II_DELETED_BY_OBJECT");

                entity.Property(e => e.IntegrationId1)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("INTEGRATION_ID");

                entity.Property(e => e.IntegrationName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("INTEGRATION_NAME");

                entity.Property(e => e.IntegrationType)
                    .HasMaxLength(255)
                    .HasColumnName("INTEGRATION_TYPE");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.Secondary).HasColumnName("SECONDARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.HasOne(d => d.Fne)
                    .WithMany(p => p.IntegrationIds)
                    .HasForeignKey(d => d.FneId)
                    .HasConstraintName("FK_INTEGRATION_IDS_FINANCIAL_ENTITIES");
            });

            modelBuilder.Entity<IntegrationObjectMapping>(entity =>
            {
                entity.HasKey(e => e.IomId)
                    .HasName("PK_INTEGRATION_MAPPINGS");

                entity.ToTable("INTEGRATION_OBJECT_MAPPINGS");

                entity.Property(e => e.IomId)
                    .ValueGeneratedNever()
                    .HasColumnName("IOM_ID");

                entity.Property(e => e.GvObjectName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("GV_OBJECT_NAME");

                entity.Property(e => e.IntegrationObjectName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("INTEGRATION_OBJECT_NAME");
            });

            modelBuilder.Entity<IntegrationObjectMapping1>(entity =>
            {
                entity.HasKey(e => e.IomId)
                    .HasName("PK_INTEGRATION_MAPPINGS");

                entity.ToTable("INTEGRATION_OBJECT_MAPPINGS", "install");

                entity.Property(e => e.IomId)
                    .ValueGeneratedNever()
                    .HasColumnName("IOM_ID");

                entity.Property(e => e.GvObjectName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("GV_OBJECT_NAME")
                    .UseCollation("Latin1_General_CI_AS");

                entity.Property(e => e.IntegrationObjectName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("INTEGRATION_OBJECT_NAME")
                    .UseCollation("Latin1_General_CI_AS");
            });

            modelBuilder.Entity<IntegrationThirdPartyCompanyId>(entity =>
            {
                entity.HasKey(e => e.IntegrationThirdPartyCompanyId1)
                    .HasName("PK__INTEGRATION_THIRD_PARTY_COMPANY_IDS");

                entity.ToTable("INTEGRATION_THIRD_PARTY_COMPANY_IDS");

                entity.Property(e => e.IntegrationThirdPartyCompanyId1).HasColumnName("IntegrationThirdPartyCompanyId");

                entity.Property(e => e.ExternalCompanyId)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.ExternalCompanyName)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.HasOne(d => d.Integration)
                    .WithMany(p => p.IntegrationThirdPartyCompanyIds)
                    .HasForeignKey(d => d.IntegrationId)
                    .HasConstraintName("FK__INTEGRATION_THIRD_PARTY_COMPANY_IDS__IntegrationId__INTEGRATIONS__SI_ID");
            });

            modelBuilder.Entity<IntegrationsMapping>(entity =>
            {
                entity.HasKey(e => e.SimmId)
                    .HasName("PK_INTEGRATION__MAPPINGS");

                entity.ToTable("INTEGRATIONS_MAPPINGS");

                entity.Property(e => e.SimmId)
                    .ValueGeneratedNever()
                    .HasColumnName("SIMM_ID");

                entity.Property(e => e.GvField)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("GV_FIELD");

                entity.Property(e => e.GvType)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("GV_TYPE");

                entity.Property(e => e.SimId).HasColumnName("SIM_ID");

                entity.Property(e => e.SubMapping)
                    .HasMaxLength(100)
                    .HasColumnName("SUB_MAPPING");

                entity.Property(e => e.TpField)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("TP_FIELD");
            });

            modelBuilder.Entity<IntegrationsModule>(entity =>
            {
                entity.HasKey(e => e.SimId);

                entity.ToTable("INTEGRATIONS_MODULES");

                entity.Property(e => e.SimId)
                    .ValueGeneratedNever()
                    .HasColumnName("SIM_ID");

                entity.Property(e => e.AlertFilename).HasColumnName("ALERT_FILENAME");

                entity.Property(e => e.DisabledByUpgrade).HasColumnName("DISABLED_BY_UPGRADE");

                entity.Property(e => e.DropSyncFieldName)
                    .HasMaxLength(50)
                    .HasColumnName("DROP_SYNC_FIELD_NAME");

                entity.Property(e => e.Enabled).HasColumnName("ENABLED");

                entity.Property(e => e.RetrievalPeriodType).HasColumnName("RETRIEVAL_PERIOD_TYPE");

                entity.Property(e => e.RetrievalPeriodValue).HasColumnName("RETRIEVAL_PERIOD_VALUE");

                entity.Property(e => e.RunFrequencyType).HasColumnName("RUN_FREQUENCY_TYPE");

                entity.Property(e => e.RunFrequencyValue).HasColumnName("RUN_FREQUENCY_VALUE");

                entity.Property(e => e.SiId).HasColumnName("SI_ID");

                entity.Property(e => e.SimtId).HasColumnName("SIMT_ID");

                entity.HasOne(d => d.Si)
                    .WithMany(p => p.IntegrationsModules)
                    .HasForeignKey(d => d.SiId)
                    .HasConstraintName("FK_IntegrationsModules_Integrations");
            });

            modelBuilder.Entity<IntegrationsProfile>(entity =>
            {
                entity.HasKey(e => e.SipId);

                entity.ToTable("INTEGRATIONS_PROFILES");

                entity.Property(e => e.SipId)
                    .ValueGeneratedNever()
                    .HasColumnName("SIP_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Deleted).HasColumnName("DELETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .HasColumnName("NAME");

                entity.Property(e => e.SiId).HasColumnName("SI_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<IntegrationsProfilesSetting>(entity =>
            {
                entity.HasKey(e => e.SipsId);

                entity.ToTable("INTEGRATIONS_PROFILES_SETTINGS");

                entity.Property(e => e.SipsId)
                    .ValueGeneratedNever()
                    .HasColumnName("SIPS_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Settingkey)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("SETTINGKEY");

                entity.Property(e => e.Settingtype).HasColumnName("SETTINGTYPE");

                entity.Property(e => e.Settingvalue)
                    .HasMaxLength(255)
                    .HasColumnName("SETTINGVALUE");

                entity.Property(e => e.SiId).HasColumnName("SI_ID");

                entity.Property(e => e.SipId).HasColumnName("SIP_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<IntegrationsProfilesUser>(entity =>
            {
                entity.HasKey(e => e.SipuId);

                entity.ToTable("INTEGRATIONS_PROFILES_USERS");

                entity.Property(e => e.SipuId)
                    .ValueGeneratedNever()
                    .HasColumnName("SIPU_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Deleted).HasColumnName("DELETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Enabled).HasColumnName("ENABLED");

                entity.Property(e => e.SiId).HasColumnName("SI_ID");

                entity.Property(e => e.SipId).HasColumnName("SIP_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");
            });

            modelBuilder.Entity<IntegrationsProfilesUsersSetting>(entity =>
            {
                entity.HasKey(e => e.SipusId);

                entity.ToTable("INTEGRATIONS_PROFILES_USERS_SETTINGS");

                entity.Property(e => e.SipusId)
                    .ValueGeneratedNever()
                    .HasColumnName("SIPUS_ID");

                entity.Property(e => e.Settingkey)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("SETTINGKEY");

                entity.Property(e => e.Settingtype).HasColumnName("SETTINGTYPE");

                entity.Property(e => e.Settingvalue)
                    .HasMaxLength(255)
                    .HasColumnName("SETTINGVALUE");

                entity.Property(e => e.SiId).HasColumnName("SI_ID");

                entity.Property(e => e.SipId).HasColumnName("SIP_ID");

                entity.Property(e => e.SipuId).HasColumnName("SIPU_ID");
            });

            modelBuilder.Entity<IntegrationsSetting>(entity =>
            {
                entity.HasKey(e => new { e.SetId, e.SiId });

                entity.ToTable("INTEGRATIONS_SETTINGS");

                entity.Property(e => e.SetId).HasColumnName("SET_ID");

                entity.Property(e => e.SiId).HasColumnName("SI_ID");

                entity.Property(e => e.Value)
                    .HasMaxLength(500)
                    .HasColumnName("VALUE");

                entity.HasOne(d => d.Si)
                    .WithMany(p => p.IntegrationsSettings)
                    .HasForeignKey(d => d.SiId)
                    .HasConstraintName("FK_INTEGRATIONS_SETTINGS__INTEGRATIONS");
            });

            modelBuilder.Entity<InternalDomain>(entity =>
            {
                entity.ToTable("INTERNAL_DOMAINS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.InternalDomain1)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("INTERNAL_DOMAIN")
                    .UseCollation("Latin1_General_CI_AS");
            });

            modelBuilder.Entity<ItMaguireImport>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("itMaguireImport");

                entity.Property(e => e.AcManager)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("AC_MANAGER");

                entity.Property(e => e.Address1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ADDRESS1");

                entity.Property(e => e.Address2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ADDRESS2");

                entity.Property(e => e.Address3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ADDRESS3");

                entity.Property(e => e.Address4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ADDRESS4");

                entity.Property(e => e.Business)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("BUSINESS");

                entity.Property(e => e.Companyname)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("COMPANYNAME");

                entity.Property(e => e.Employees)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("EMPLOYEES");

                entity.Property(e => e.Fax)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("FAX");

                entity.Property(e => e.Fdemail)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("FDEMAIL");

                entity.Property(e => e.Fdfirstname)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("FDFIRSTNAME");

                entity.Property(e => e.Fdjobtitle)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("FDJOBTITLE");

                entity.Property(e => e.Fdlastname)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("FDLASTNAME");

                entity.Property(e => e.Fdsalutation)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("FDSALUTATION");

                entity.Property(e => e.Hremail)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("HREMAIL");

                entity.Property(e => e.Hrfirstname)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("HRFIRSTNAME");

                entity.Property(e => e.Hrjobtitle)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("HRJOBTITLE");

                entity.Property(e => e.Hrlastname)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("HRLASTNAME");

                entity.Property(e => e.Hrsalutation)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("HRSALUTATION");

                entity.Property(e => e.ImId).HasColumnName("IM_ID");

                entity.Property(e => e.ItMagId).HasColumnName("itMAG_ID");

                entity.Property(e => e.Itemail)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ITEMAIL");

                entity.Property(e => e.Itfirstname)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ITFIRSTNAME");

                entity.Property(e => e.Itjobtitle)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ITJOBTITLE");

                entity.Property(e => e.Itlastname)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ITLASTNAME");

                entity.Property(e => e.Itsalutation)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ITSALUTATION");

                entity.Property(e => e.Mdemail)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("MDEMAIL");

                entity.Property(e => e.Mdfirstname)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("MDFIRSTNAME");

                entity.Property(e => e.Mdjobtitle)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("MDJOBTITLE");

                entity.Property(e => e.Mdlastname)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("MDLASTNAME");

                entity.Property(e => e.Mdsalutation)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("MDSALUTATION");

                entity.Property(e => e.Mkemail)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("MKEMAIL");

                entity.Property(e => e.Mkfirstname)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("MKFIRSTNAME");

                entity.Property(e => e.Mkjobtitle)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("MKJOBTITLE");

                entity.Property(e => e.Mklastname)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("MKLASTNAME");

                entity.Property(e => e.Mksalutation)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("MKSALUTATION");

                entity.Property(e => e.Phone)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("PHONE");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.Result)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("RESULT");
            });

            modelBuilder.Entity<ItemAvatar>(entity =>
            {
                entity.HasKey(e => e.ObjId)
                    .IsClustered(false);

                entity.Property(e => e.ObjId)
                    .ValueGeneratedNever()
                    .HasColumnName("OBJ_ID");

                entity.Property(e => e.AvatarFilename)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("AVATAR_FILENAME");
            });

            modelBuilder.Entity<ItemHighlightRule>(entity =>
            {
                entity.HasKey(e => e.RuleId);

                entity.ToTable("ITEM_HIGHLIGHT_RULES");

                entity.Property(e => e.RuleId)
                    .ValueGeneratedNever()
                    .HasColumnName("RULE_ID");

                entity.Property(e => e.Colour)
                    .HasMaxLength(10)
                    .HasColumnName("COLOUR");

                entity.Property(e => e.Comparator)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COMPARATOR");

                entity.Property(e => e.LfdId).HasColumnName("LFD_ID");

                entity.Property(e => e.LogicalOperatorId).HasColumnName("LOGICAL_OPERATOR_ID");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("NAME");

                entity.Property(e => e.SortOrder).HasColumnName("SORT_ORDER");

                entity.Property(e => e.TimeUnitId).HasColumnName("TIME_UNIT_ID");
            });

            modelBuilder.Entity<IvCorrespondenceSecurity>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("ivCORRESPONDENCE_SECURITY");

                entity.Property(e => e.CoId).HasColumnName("CO_ID");

                entity.Property(e => e.Countbig).HasColumnName("COUNTBIG");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");
            });

            modelBuilder.Entity<IvSec>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("ivSec");

                entity.Property(e => e.Countbig).HasColumnName("COUNTBIG");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.UsId).HasColumnName("US_ID");
            });

            modelBuilder.Entity<Job>(entity =>
            {
                entity.ToTable("JOBS");

                entity.HasIndex(e => e.JobTypeId, "IX_JOBS_JOB_TYPE_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.ObjId, "IX_JOBS_OBJ_ID")
                    .HasFillFactor((byte)80);

                entity.Property(e => e.JobId)
                    .ValueGeneratedNever()
                    .HasColumnName("JOB_ID");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.Command)
                    .HasMaxLength(255)
                    .HasColumnName("COMMAND");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.FneId).HasColumnName("FNE_ID");

                entity.Property(e => e.JobDeleted).HasColumnName("JOB_DELETED");

                entity.Property(e => e.JobTypeId).HasColumnName("JOB_TYPE_ID");

                entity.Property(e => e.Jobstatus).HasColumnName("JOBSTATUS");

                entity.Property(e => e.ObjId)
                    .HasMaxLength(50)
                    .HasColumnName("OBJ_ID");

                entity.Property(e => e.ObjectType)
                    .HasMaxLength(50)
                    .HasColumnName("OBJECT_TYPE");

                entity.Property(e => e.Result)
                    .HasMaxLength(255)
                    .HasColumnName("RESULT");

                entity.Property(e => e.RunAfter)
                    .HasColumnType("datetime")
                    .HasColumnName("RUN_AFTER");

                entity.Property(e => e.RunDate)
                    .HasColumnType("datetime")
                    .HasColumnName("RUN_DATE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.HasOne(d => d.Fne)
                    .WithMany(p => p.Jobs)
                    .HasForeignKey(d => d.FneId)
                    .HasConstraintName("FK_JOBS_FINANCIAL_ENTITIES");
            });

            modelBuilder.Entity<JobsType>(entity =>
            {
                entity.HasKey(e => e.JobTypeId);

                entity.ToTable("JOBS_TYPES");

                entity.Property(e => e.JobTypeId)
                    .ValueGeneratedNever()
                    .HasColumnName("JOB_TYPE_ID");

                entity.Property(e => e.Action)
                    .HasMaxLength(50)
                    .HasColumnName("ACTION");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(32)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");
            });

            modelBuilder.Entity<JobsType1>(entity =>
            {
                entity.HasKey(e => e.JobTypeId);

                entity.ToTable("JOBS_TYPES", "install");

                entity.Property(e => e.JobTypeId)
                    .ValueGeneratedNever()
                    .HasColumnName("JOB_TYPE_ID");

                entity.Property(e => e.Action)
                    .HasMaxLength(50)
                    .HasColumnName("ACTION")
                    .UseCollation("Latin1_General_CI_AS");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY")
                    .UseCollation("Latin1_General_CI_AS");
            });

            modelBuilder.Entity<LabelImport>(entity =>
            {
                entity.HasKey(e => e.LliId);

                entity.ToTable("LABEL_IMPORT");

                entity.Property(e => e.LliId)
                    .ValueGeneratedNever()
                    .HasColumnName("LLI_ID");

                entity.Property(e => e.ImportFileId).HasColumnName("IMPORT_FILE_ID");

                entity.Property(e => e.Label)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("LABEL");

                entity.Property(e => e.LabelId).HasColumnName("LABEL_ID");

                entity.Property(e => e.LabelType).HasColumnName("LABEL_TYPE");

                entity.Property(e => e.LangId).HasColumnName("LANG_ID");

                entity.Property(e => e.State).HasColumnName("STATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.HasOne(d => d.Lang)
                    .WithMany(p => p.LabelImports)
                    .HasForeignKey(d => d.LangId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_LABEL_IMPORT_LANGUAGES");
            });

            modelBuilder.Entity<Language>(entity =>
            {
                entity.HasKey(e => e.LangId);

                entity.ToTable("LANGUAGES");

                entity.Property(e => e.LangId)
                    .ValueGeneratedNever()
                    .HasColumnName("LANG_ID");

                entity.Property(e => e.Description)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnName("DESCRIPTION");
            });

            modelBuilder.Entity<Licence>(entity =>
            {
                entity.HasKey(e => e.LicId);

                entity.ToTable("LICENCES");

                entity.Property(e => e.LicId)
                    .ValueGeneratedNever()
                    .HasColumnName("LIC_ID");

                entity.Property(e => e.LicData)
                    .IsRequired()
                    .HasColumnName("LIC_DATA");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<Link>(entity =>
            {
                entity.HasKey(e => e.LnkId);

                entity.ToTable("LINKS");

                entity.HasIndex(e => e.CreatedDate, "IX_LINKS_CREATED_DATE")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.RefIdFrom, "IX_LINKS_REF_ID_FROM")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.RefIdTo, "IX_LINKS_REF_ID_TO")
                    .HasFillFactor((byte)80);

                entity.Property(e => e.LnkId)
                    .ValueGeneratedNever()
                    .HasColumnName("LNK_ID");

                entity.Property(e => e.AcIdFrom).HasColumnName("AC_ID_FROM");

                entity.Property(e => e.AcIdTo).HasColumnName("AC_ID_TO");

                entity.Property(e => e.Autolink).HasColumnName("AUTOLINK");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.FromSummary)
                    .HasMaxLength(100)
                    .HasColumnName("FROM_SUMMARY");

                entity.Property(e => e.LinkType).HasColumnName("LINK_TYPE");

                entity.Property(e => e.LnkDeleted).HasColumnName("LNK_DELETED");

                entity.Property(e => e.PairId).HasColumnName("PAIR_ID");

                entity.Property(e => e.RefIdFrom).HasColumnName("REF_ID_FROM");

                entity.Property(e => e.RefIdTo).HasColumnName("REF_ID_TO");

                entity.Property(e => e.RelationshipFrom).HasColumnName("RELATIONSHIP_FROM");

                entity.Property(e => e.RelationshipTo).HasColumnName("RELATIONSHIP_TO");

                entity.Property(e => e.ToSummary)
                    .HasMaxLength(100)
                    .HasColumnName("TO_SUMMARY");

                entity.Property(e => e.TypeFrom)
                    .HasMaxLength(50)
                    .HasColumnName("TYPE_FROM");

                entity.Property(e => e.TypeTo)
                    .HasMaxLength(50)
                    .HasColumnName("TYPE_TO");

                entity.HasOne(d => d.Pair)
                    .WithMany(p => p.InversePair)
                    .HasForeignKey(d => d.PairId)
                    .HasConstraintName("FK_LINKS_LINKS");
            });

            modelBuilder.Entity<ListField>(entity =>
            {
                entity.ToTable("LIST_FIELDS", "Portal");

                entity.Property(e => e.ListFieldId)
                    .ValueGeneratedNever()
                    .HasColumnName("LIST_FIELD_ID");

                entity.Property(e => e.AreaId).HasColumnName("AREA_ID");

                entity.Property(e => e.DatabaseColumn)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("DATABASE_COLUMN");

                entity.Property(e => e.DisplayFilter)
                    .HasMaxLength(500)
                    .HasColumnName("DISPLAY_FILTER");

                entity.Property(e => e.FieldId).HasColumnName("FIELD_ID");

                entity.Property(e => e.Filter)
                    .HasMaxLength(500)
                    .HasColumnName("FILTER");

                entity.Property(e => e.ListField1)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("LIST_FIELD");

                entity.Property(e => e.Order).HasColumnName("ORDER");

                entity.Property(e => e.PageId).HasColumnName("PAGE_ID");

                entity.Property(e => e.SortBy).HasColumnName("SORT_BY");
            });

            modelBuilder.Entity<LmCallLog>(entity =>
            {
                entity.HasKey(e => e.ClmId);

                entity.ToTable("LM_CALL_LOG");

                entity.Property(e => e.ClmId)
                    .ValueGeneratedNever()
                    .HasColumnName("CLM_ID");

                entity.Property(e => e.CallDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CALL_DATE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CsId).HasColumnName("CS_ID");

                entity.Property(e => e.Duration).HasColumnName("DURATION");

                entity.Property(e => e.Incomming).HasColumnName("INCOMMING");

                entity.Property(e => e.Number)
                    .HasMaxLength(255)
                    .HasColumnName("NUMBER");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.HasOne(d => d.Cs)
                    .WithMany(p => p.LmCallLogs)
                    .HasForeignKey(d => d.CsId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_LM_CALL_LOG_LM_CONTACT_SPINE");

                entity.HasOne(d => d.Us)
                    .WithMany(p => p.LmCallLogs)
                    .HasForeignKey(d => d.UsId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_LM_CALL_LOG_USERS");
            });

            modelBuilder.Entity<LmContactSpine>(entity =>
            {
                entity.HasKey(e => e.CsId);

                entity.ToTable("LM_CONTACT_SPINE");

                entity.HasIndex(e => e.CallbackDate, "IX_LM_CONTACT_SPINE_CALLBACK_DATE")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.CreatedDate, "IX_LM_CONTACT_SPINE_CREATED_DATE")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.LastactionById, "IX_LM_CONTACT_SPINE_LASTACTION_BY_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.LastactionDate, "IX_LM_CONTACT_SPINE_LASTACTION_DATE")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.LcId, "IX_LM_CONTACT_SPINE_LC_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.Summary, "IX_LM_CONTACT_SPINE_SUMMARY");

                entity.HasIndex(e => e.UpdatedDate, "IX_LM_CONTACT_SPINE_UPDATED_DATE")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.UsgIdOwner, "IX_LM_CONTACT_SPINE_USG_ID_OWNER")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.UsIdOwner, "IX_LM_CONTACT_SPINE_US_ID_OWNER")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.AccId, "IX__LMCS__ACC_ID");

                entity.Property(e => e.CsId).HasColumnName("CS_ID");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AssignedBy)
                    .HasMaxLength(100)
                    .HasColumnName("ASSIGNED_BY");

                entity.Property(e => e.AssignedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ASSIGNED_DATE");

                entity.Property(e => e.BatchId).HasColumnName("BATCH_ID");

                entity.Property(e => e.CallbackDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CALLBACK_DATE");

                entity.Property(e => e.CompanyAddress1)
                    .HasMaxLength(100)
                    .HasColumnName("COMPANY_ADDRESS1");

                entity.Property(e => e.CompanyAddress2)
                    .HasMaxLength(100)
                    .HasColumnName("COMPANY_ADDRESS2");

                entity.Property(e => e.CompanyAddress3)
                    .HasMaxLength(100)
                    .HasColumnName("COMPANY_ADDRESS3");

                entity.Property(e => e.CompanyCountry)
                    .HasMaxLength(100)
                    .HasColumnName("COMPANY_COUNTRY");

                entity.Property(e => e.CompanyCounty)
                    .HasMaxLength(100)
                    .HasColumnName("COMPANY_COUNTY");

                entity.Property(e => e.CompanyFax)
                    .HasMaxLength(25)
                    .HasColumnName("COMPANY_FAX");

                entity.Property(e => e.CompanyLongestword)
                    .HasMaxLength(100)
                    .HasColumnName("COMPANY_LONGESTWORD");

                entity.Property(e => e.CompanyName)
                    .HasMaxLength(100)
                    .HasColumnName("COMPANY_NAME");

                entity.Property(e => e.CompanyPhone)
                    .HasMaxLength(25)
                    .HasColumnName("COMPANY_PHONE");

                entity.Property(e => e.CompanyPhoneDd)
                    .HasMaxLength(10)
                    .HasColumnName("COMPANY_PHONE_DD");

                entity.Property(e => e.CompanyPostcode)
                    .HasMaxLength(10)
                    .HasColumnName("COMPANY_POSTCODE");

                entity.Property(e => e.CompanyPostcodeDd)
                    .HasMaxLength(10)
                    .HasColumnName("COMPANY_POSTCODE_DD");

                entity.Property(e => e.CompanySoundex)
                    .HasMaxLength(5)
                    .HasColumnName("COMPANY_SOUNDEX");

                entity.Property(e => e.CompanyTown)
                    .HasMaxLength(100)
                    .HasColumnName("COMPANY_TOWN");

                entity.Property(e => e.CompanyWebdomain)
                    .HasMaxLength(255)
                    .HasColumnName("COMPANY_WEBDOMAIN");

                entity.Property(e => e.CompanyWebdomainDd)
                    .HasMaxLength(255)
                    .HasColumnName("COMPANY_WEBDOMAIN_DD");

                entity.Property(e => e.ConnectOptIn).HasColumnName("CONNECT_OPT_IN");

                entity.Property(e => e.ConnectOptInDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CONNECT_OPT_IN_DATE");

                entity.Property(e => e.ContactEmail)
                    .HasMaxLength(100)
                    .HasColumnName("CONTACT_EMAIL");

                entity.Property(e => e.ContactEmailDd)
                    .HasMaxLength(100)
                    .HasColumnName("CONTACT_EMAIL_DD");

                entity.Property(e => e.ContactFirstname)
                    .HasMaxLength(100)
                    .HasColumnName("CONTACT_FIRSTNAME");

                entity.Property(e => e.ContactFirstnameSoundex)
                    .HasMaxLength(5)
                    .HasColumnName("CONTACT_FIRSTNAME_SOUNDEX");

                entity.Property(e => e.ContactJobtitle)
                    .HasMaxLength(100)
                    .HasColumnName("CONTACT_JOBTITLE");

                entity.Property(e => e.ContactLastname)
                    .HasMaxLength(100)
                    .HasColumnName("CONTACT_LASTNAME");

                entity.Property(e => e.ContactLastnameSoundex)
                    .HasMaxLength(5)
                    .HasColumnName("CONTACT_LASTNAME_SOUNDEX");

                entity.Property(e => e.ContactMobile)
                    .HasMaxLength(25)
                    .HasColumnName("CONTACT_MOBILE");

                entity.Property(e => e.ContactMobileDd)
                    .HasMaxLength(10)
                    .HasColumnName("CONTACT_MOBILE_DD");

                entity.Property(e => e.ContactPhone)
                    .HasMaxLength(25)
                    .HasColumnName("CONTACT_PHONE");

                entity.Property(e => e.ContactPhoneDd)
                    .HasMaxLength(10)
                    .HasColumnName("CONTACT_PHONE_DD");

                entity.Property(e => e.ContactSoundex)
                    .HasMaxLength(5)
                    .HasColumnName("CONTACT_SOUNDEX");

                entity.Property(e => e.ContactTitle)
                    .HasMaxLength(25)
                    .HasColumnName("CONTACT_TITLE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(100)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CsDeleted).HasColumnName("CS_DELETED");

                entity.Property(e => e.CsDiscarded).HasColumnName("CS_DISCARDED");

                entity.Property(e => e.CsMigrated).HasColumnName("CS_MIGRATED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(100)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.DuplicateCount).HasColumnName("DUPLICATE_COUNT");

                entity.Property(e => e.DuplicateScore).HasColumnName("DUPLICATE_SCORE");

                entity.Property(e => e.Erased).HasColumnName("ERASED");

                entity.Property(e => e.ErasedBy)
                    .HasMaxLength(255)
                    .HasColumnName("ERASED_BY");

                entity.Property(e => e.ErasedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ERASED_DATE");

                entity.Property(e => e.FacebookImage)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_IMAGE");

                entity.Property(e => e.FacebookName)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_NAME");

                entity.Property(e => e.FacebookPrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_PRIVATE_ID");

                entity.Property(e => e.FacebookProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_PROFILE_URL");

                entity.Property(e => e.FacebookPublicId)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_PUBLIC_ID");

                entity.Property(e => e.GplusImage)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_IMAGE");

                entity.Property(e => e.GplusName)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_NAME");

                entity.Property(e => e.GplusPrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_PRIVATE_ID");

                entity.Property(e => e.GplusProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_PROFILE_URL");

                entity.Property(e => e.GplusPublicId)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_PUBLIC_ID");

                entity.Property(e => e.LastactionBy)
                    .HasMaxLength(100)
                    .HasColumnName("LASTACTION_BY");

                entity.Property(e => e.LastactionById).HasColumnName("LASTACTION_BY_ID");

                entity.Property(e => e.LastactionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LASTACTION_DATE");

                entity.Property(e => e.LcId).HasColumnName("LC_ID");

                entity.Property(e => e.LinkedinImage)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_IMAGE");

                entity.Property(e => e.LinkedinName)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_NAME");

                entity.Property(e => e.LinkedinPrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_PRIVATE_ID");

                entity.Property(e => e.LinkedinProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_PROFILE_URL");

                entity.Property(e => e.LinkedinPublicId)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_PUBLIC_ID");

                entity.Property(e => e.LsId).HasColumnName("LS_ID");

                entity.Property(e => e.MigratedBy)
                    .HasMaxLength(100)
                    .HasColumnName("MIGRATED_BY");

                entity.Property(e => e.MigratedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("MIGRATED_DATE");

                entity.Property(e => e.PendingUpgrade).HasColumnName("PENDING_UPGRADE");

                entity.Property(e => e.PotentialAccount)
                    .HasColumnName("POTENTIAL_ACCOUNT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PreferredContactEmail).HasColumnName("PREFERRED_CONTACT_EMAIL");

                entity.Property(e => e.PreferredContactFax).HasColumnName("PREFERRED_CONTACT_FAX");

                entity.Property(e => e.PreferredContactLetter).HasColumnName("PREFERRED_CONTACT_LETTER");

                entity.Property(e => e.PreferredContactPhone).HasColumnName("PREFERRED_CONTACT_PHONE");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[CS_ID]))", true);

                entity.Property(e => e.PrivacyNotified).HasColumnName("PRIVACY_NOTIFIED");

                entity.Property(e => e.PrivacyNotifiedBy)
                    .HasMaxLength(255)
                    .HasColumnName("PRIVACY_NOTIFIED_BY");

                entity.Property(e => e.PrivacyNotifiedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRIVACY_NOTIFIED_DATE");

                entity.Property(e => e.PrivacyNotifiedMethod)
                    .HasMaxLength(255)
                    .HasColumnName("PRIVACY_NOTIFIED_METHOD");

                entity.Property(e => e.RemovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("REMOVAL_DATE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'LED-')");

                entity.Property(e => e.Status)
                    .HasMaxLength(100)
                    .HasColumnName("STATUS");

                entity.Property(e => e.StatusId).HasColumnName("STATUS_ID");

                entity.Property(e => e.Summary)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TimeSpentSecs).HasColumnName("TIME_SPENT_SECS");

                entity.Property(e => e.Twitter1Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_IMAGE");

                entity.Property(e => e.Twitter1Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_NAME");

                entity.Property(e => e.Twitter1PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_PRIVATE_ID");

                entity.Property(e => e.Twitter1ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_PROFILE_URL");

                entity.Property(e => e.Twitter1PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_PUBLIC_ID");

                entity.Property(e => e.Twitter2Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_IMAGE");

                entity.Property(e => e.Twitter2Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_NAME");

                entity.Property(e => e.Twitter2PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_PRIVATE_ID");

                entity.Property(e => e.Twitter2ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_PROFILE_URL");

                entity.Property(e => e.Twitter2PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_PUBLIC_ID");

                entity.Property(e => e.Twitter3Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_IMAGE");

                entity.Property(e => e.Twitter3Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_NAME");

                entity.Property(e => e.Twitter3PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_PRIVATE_ID");

                entity.Property(e => e.Twitter3ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_PROFILE_URL");

                entity.Property(e => e.Twitter3PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_PUBLIC_ID");

                entity.Property(e => e.Twitter4Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_IMAGE");

                entity.Property(e => e.Twitter4Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_NAME");

                entity.Property(e => e.Twitter4PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_PRIVATE_ID");

                entity.Property(e => e.Twitter4ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_PROFILE_URL");

                entity.Property(e => e.Twitter4PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_PUBLIC_ID");

                entity.Property(e => e.Twitter5Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_IMAGE");

                entity.Property(e => e.Twitter5Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_NAME");

                entity.Property(e => e.Twitter5PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_PRIVATE_ID");

                entity.Property(e => e.Twitter5ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_PROFILE_URL");

                entity.Property(e => e.Twitter5PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_PUBLIC_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(100)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsIdOwner).HasColumnName("US_ID_OWNER");

                entity.Property(e => e.UsgIdOwner).HasColumnName("USG_ID_OWNER");

                entity.HasOne(d => d.Ac)
                    .WithMany(p => p.LmContactSpines)
                    .HasForeignKey(d => d.AcId)
                    .HasConstraintName("FK_LM_CONTACT_SPINE_ACCOUNTS");

                entity.HasOne(d => d.Acc)
                    .WithMany(p => p.LmContactSpines)
                    .HasForeignKey(d => d.AccId)
                    .HasConstraintName("FK_LM_CONTACT_SPINE_ACCOUNTS_CONTACTS");

                entity.HasOne(d => d.UsIdOwnerNavigation)
                    .WithMany(p => p.LmContactSpines)
                    .HasForeignKey(d => d.UsIdOwner)
                    .HasConstraintName("FK_LM_CONTACT_SPINE_USERS");

                entity.HasOne(d => d.UsgIdOwnerNavigation)
                    .WithMany(p => p.LmContactSpines)
                    .HasForeignKey(d => d.UsgIdOwner)
                    .HasConstraintName("FK_LM_CONTACT_SPINE_USERS_GROUPS");
            });

            modelBuilder.Entity<LmDeduplicationItem>(entity =>
            {
                entity.HasKey(e => e.DiId)
                    .HasName("PK__LM_DEDUP__03ED35FCB8528593");

                entity.ToTable("LM_DEDUPLICATION_ITEMS");

                entity.Property(e => e.DiId).HasColumnName("DI_ID");

                entity.Property(e => e.CsId).HasColumnName("CS_ID");

                entity.Property(e => e.DdId).HasColumnName("DD_ID");

                entity.HasOne(d => d.Cs)
                    .WithMany(p => p.LmDeduplicationItems)
                    .HasForeignKey(d => d.CsId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_LM_DEDUPLICATION_ITEMS_LM_CONTACT_SPINE");

                entity.HasOne(d => d.Dd)
                    .WithMany(p => p.LmDeduplicationItems)
                    .HasForeignKey(d => d.DdId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_LM_DEDUPLICATION_ITEMS_LM_DEDUPLICATION_QUEUE");
            });

            modelBuilder.Entity<LmDeduplicationQueue>(entity =>
            {
                entity.HasKey(e => e.DdId)
                    .HasName("PK__DEDUPLIC__9AF5538C7E24AA9F");

                entity.ToTable("LM_DEDUPLICATION_QUEUE");

                entity.Property(e => e.DdId).HasColumnName("DD_ID");

                entity.Property(e => e.ActualStart)
                    .HasColumnType("datetime")
                    .HasColumnName("ACTUAL_START");

                entity.Property(e => e.BulkDeduplication)
                    .HasColumnName("BULK_DEDUPLICATION")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CompletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("COMPLETED_TIME");

                entity.Property(e => e.CsId).HasColumnName("CS_ID");

                entity.Property(e => e.DdStatus)
                    .HasColumnName("DD_STATUS")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ErrorCount)
                    .HasColumnName("ERROR_COUNT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.FailedMessage)
                    .HasMaxLength(255)
                    .HasColumnName("FAILED_MESSAGE");

                entity.Property(e => e.LastBatchId).HasColumnName("LAST_BATCH_ID");

                entity.Property(e => e.LastRuleId).HasColumnName("LAST_RULE_ID");

                entity.Property(e => e.LcId).HasColumnName("LC_ID");

                entity.Property(e => e.PackageName)
                    .HasMaxLength(255)
                    .HasColumnName("PACKAGE_NAME");

                entity.Property(e => e.RecalcOnly).HasColumnName("RECALC_ONLY");

                entity.Property(e => e.ScheduledStart)
                    .HasColumnType("datetime")
                    .HasColumnName("SCHEDULED_START")
                    .HasDefaultValueSql("(getdate())");

                entity.HasOne(d => d.Cs)
                    .WithMany(p => p.LmDeduplicationQueues)
                    .HasForeignKey(d => d.CsId)
                    .HasConstraintName("FK_LM_DEDUPLICATION_QUEUE_LM_CONTACT_SPINE");
            });

            modelBuilder.Entity<LmDuplicateEntity>(entity =>
            {
                entity.HasKey(e => e.DeId);

                entity.ToTable("LM_DUPLICATE_ENTITIES");

                entity.HasIndex(e => new { e.CsId1, e.RuleId }, "IX_LM_DUPLICATE_ENTITIES_CS_ID_1_RULE_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => new { e.CsId2, e.RuleId }, "IX_LM_DUPLICATE_ENTITIES_CS_ID_2_RULE_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => new { e.LcId1, e.LcId2 }, "IX_LM_DUPLICATE_ENTITIES_LC_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.RuleId, "IX_LM_DUPLICATE_ENTITIES_RULE_ID")
                    .HasFillFactor((byte)80);

                entity.Property(e => e.DeId).HasColumnName("DE_ID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CsId1).HasColumnName("CS_ID_1");

                entity.Property(e => e.CsId2).HasColumnName("CS_ID_2");

                entity.Property(e => e.DdId).HasColumnName("DD_ID");

                entity.Property(e => e.DuplicateNarrative)
                    .HasMaxLength(50)
                    .HasColumnName("DUPLICATE_NARRATIVE");

                entity.Property(e => e.DuplicateRule)
                    .HasMaxLength(30)
                    .HasColumnName("DUPLICATE_RULE");

                entity.Property(e => e.DuplicateScore).HasColumnName("DUPLICATE_SCORE");

                entity.Property(e => e.LcId1).HasColumnName("LC_ID_1");

                entity.Property(e => e.LcId2).HasColumnName("LC_ID_2");

                entity.Property(e => e.RuleId).HasColumnName("RULE_ID");

                entity.HasOne(d => d.CsId1Navigation)
                    .WithMany(p => p.LmDuplicateEntityCsId1Navigations)
                    .HasForeignKey(d => d.CsId1)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_LM_DUPLICATE_ENTITIES_CS1");

                entity.HasOne(d => d.CsId2Navigation)
                    .WithMany(p => p.LmDuplicateEntityCsId2Navigations)
                    .HasForeignKey(d => d.CsId2)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_LM_DUPLICATE_ENTITIES_CS2");

                entity.HasOne(d => d.Dd)
                    .WithMany(p => p.LmDuplicateEntities)
                    .HasForeignKey(d => d.DdId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_LM_DUPLICATE_ENTITIES_LM_DEDUPLICATION_QUEUE");
            });

            modelBuilder.Entity<LmGuid>(entity =>
            {
                entity.HasKey(e => e.LmgCsId);

                entity.ToTable("LM_GUID");

                entity.Property(e => e.LmgCsId)
                    .ValueGeneratedNever()
                    .HasColumnName("LMG_CS_ID");

                entity.Property(e => e.LmgCsGuid).HasColumnName("LMG_CS_GUID");
            });

            modelBuilder.Entity<LmImport>(entity =>
            {
                entity.HasKey(e => e.PiId);

                entity.ToTable("LM_IMPORTS");

                entity.Property(e => e.PiId).HasColumnName("PI_ID");

                entity.Property(e => e.CreateMenu).HasColumnName("CREATE_MENU");

                entity.Property(e => e.DedupeDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DEDUPE_DATE");

                entity.Property(e => e.DedupePackage)
                    .HasMaxLength(100)
                    .HasColumnName("DEDUPE_PACKAGE");

                entity.Property(e => e.Delimiter)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("DELIMITER")
                    .HasDefaultValueSql("('\"')")
                    .IsFixedLength(true);

                entity.Property(e => e.DropTable).HasColumnName("DROP_TABLE");

                entity.Property(e => e.FilePath)
                    .HasMaxLength(255)
                    .HasColumnName("FILE_PATH");

                entity.Property(e => e.HasHeader)
                    .IsRequired()
                    .HasColumnName("HAS_HEADER")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("IMPORT_DATE")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ImportSource).HasColumnName("IMPORT_SOURCE");

                entity.Property(e => e.ImportType).HasColumnName("IMPORT_TYPE");

                entity.Property(e => e.Isupdate).HasColumnName("ISUPDATE");

                entity.Property(e => e.Label)
                    .HasMaxLength(255)
                    .HasColumnName("LABEL");

                entity.Property(e => e.LayoutName)
                    .HasMaxLength(255)
                    .HasColumnName("LAYOUT_NAME");

                entity.Property(e => e.MatchKey)
                    .HasMaxLength(255)
                    .HasColumnName("MATCH_KEY");

                entity.Property(e => e.NumColumns).HasColumnName("NUM_COLUMNS");

                entity.Property(e => e.NumberOfFiles).HasColumnName("NUMBER_OF_FILES");

                entity.Property(e => e.ObjectName)
                    .HasMaxLength(255)
                    .HasColumnName("OBJECT_NAME");

                entity.Property(e => e.OrigPiId).HasColumnName("ORIG_PI_ID");

                entity.Property(e => e.RecordsComplete).HasColumnName("RECORDS_COMPLETE");

                entity.Property(e => e.RecordsTotal).HasColumnName("RECORDS_TOTAL");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TableName)
                    .HasMaxLength(255)
                    .HasColumnName("TABLE_NAME");

                entity.Property(e => e.TextQualifier)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("TEXT_QUALIFIER")
                    .HasDefaultValueSql("(',')")
                    .IsFixedLength(true);

                entity.Property(e => e.UpdateDelete)
                    .HasMaxLength(10)
                    .HasColumnName("UPDATE_DELETE")
                    .IsFixedLength(true);

                entity.Property(e => e.UpdateInsert)
                    .HasMaxLength(10)
                    .HasColumnName("UPDATE_INSERT")
                    .IsFixedLength(true);

                entity.Property(e => e.UpdateUpdate)
                    .HasMaxLength(10)
                    .HasColumnName("UPDATE_UPDATE")
                    .IsFixedLength(true);

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsName)
                    .HasMaxLength(255)
                    .HasColumnName("US_NAME");

                entity.HasOne(d => d.Us)
                    .WithMany(p => p.LmImports)
                    .HasForeignKey(d => d.UsId)
                    .HasConstraintName("FK_LM_IMPORTS_USERS");
            });

            modelBuilder.Entity<LmImportMapping>(entity =>
            {
                entity.HasKey(e => e.PimId);

                entity.ToTable("LM_IMPORT_MAPPINGS");

                entity.Property(e => e.PimId).HasColumnName("PIM_ID");

                entity.Property(e => e.ColumnName)
                    .HasMaxLength(255)
                    .HasColumnName("COLUMN_NAME");

                entity.Property(e => e.Created)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DataTableOrd)
                    .HasColumnName("DATA_TABLE_ORD")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.DataType)
                    .HasMaxLength(255)
                    .HasColumnName("DATA_TYPE");

                entity.Property(e => e.Deleted)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED");

                entity.Property(e => e.FileFieldName)
                    .HasMaxLength(255)
                    .HasColumnName("FILE_FIELD_NAME");

                entity.Property(e => e.FileOrdinal)
                    .HasColumnName("FILE_ORDINAL")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.GvTargetField)
                    .HasMaxLength(255)
                    .HasColumnName("GV_TARGET_FIELD");

                entity.Property(e => e.Include)
                    .IsRequired()
                    .HasColumnName("INCLUDE")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Label)
                    .HasMaxLength(255)
                    .HasColumnName("LABEL");

                entity.Property(e => e.ObjectName)
                    .HasMaxLength(255)
                    .HasColumnName("OBJECT_NAME");

                entity.Property(e => e.PiId).HasColumnName("PI_ID");

                entity.Property(e => e.Updated)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED");

                entity.HasOne(d => d.Pi)
                    .WithMany(p => p.LmImportMappings)
                    .HasForeignKey(d => d.PiId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_LM_IMPORT_MAPPINGS_LM_IMPORTS");
            });

            modelBuilder.Entity<LmLink>(entity =>
            {
                entity.HasKey(e => e.LmlId);

                entity.ToTable("LM_LINKS");

                entity.Property(e => e.LmlId).HasColumnName("LML_ID");

                entity.Property(e => e.LmlCreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("LML_CREATED_BY");

                entity.Property(e => e.LmlCreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LML_CREATED_DATE");

                entity.Property(e => e.LmlCsIdFrom).HasColumnName("LML_CS_ID_FROM");

                entity.Property(e => e.LmlCsIdTo).HasColumnName("LML_CS_ID_TO");

                entity.Property(e => e.LmlDeleted).HasColumnName("LML_DELETED");

                entity.Property(e => e.LmlRelationship)
                    .HasMaxLength(255)
                    .HasColumnName("LML_RELATIONSHIP");
            });

            modelBuilder.Entity<LmListcontrol>(entity =>
            {
                entity.HasKey(e => e.LcId);

                entity.ToTable("LM_LISTCONTROL");

                entity.Property(e => e.LcId).HasColumnName("LC_ID");

                entity.Property(e => e.CClaimed).HasColumnName("C_CLAIMED");

                entity.Property(e => e.CFailed).HasColumnName("C_FAILED");

                entity.Property(e => e.CPromoted).HasColumnName("C_PROMOTED");

                entity.Property(e => e.CSucceeded).HasColumnName("C_SUCCEEDED");

                entity.Property(e => e.CTotal).HasColumnName("C_TOTAL");

                entity.Property(e => e.CWorkingTotal).HasColumnName("C_WORKING_TOTAL");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DedupePackage)
                    .HasMaxLength(255)
                    .HasColumnName("DEDUPE_PACKAGE");

                entity.Property(e => e.DedupeStatus).HasColumnName("DEDUPE_STATUS");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.LcDeleted).HasColumnName("LC_DELETED");

                entity.Property(e => e.LcListtype).HasColumnName("LC_LISTTYPE");

                entity.Property(e => e.LeadAllocationMode).HasColumnName("LEAD_ALLOCATION_MODE");

                entity.Property(e => e.ListLayoutname)
                    .HasMaxLength(255)
                    .HasColumnName("LIST_LAYOUTNAME");

                entity.Property(e => e.ListObjectname)
                    .HasMaxLength(255)
                    .HasColumnName("LIST_OBJECTNAME");

                entity.Property(e => e.ListOpen).HasColumnName("LIST_OPEN");

                entity.Property(e => e.ListTablename)
                    .HasMaxLength(255)
                    .HasColumnName("LIST_TABLENAME");

                entity.Property(e => e.LlId)
                    .HasColumnName("LL_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.PiId).HasColumnName("PI_ID");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[LC_ID]))", true);

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'LEL-')");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UpgradeMode).HasColumnName("UPGRADE_MODE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.Version).HasColumnName("VERSION");

                entity.HasOne(d => d.Pi)
                    .WithMany(p => p.LmListcontrols)
                    .HasForeignKey(d => d.PiId)
                    .HasConstraintName("FK_LM_LISTCONTROL_LM_IMPORTS");

                entity.HasOne(d => d.Us)
                    .WithMany(p => p.LmListcontrols)
                    .HasForeignKey(d => d.UsId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_LM_LISTCONTROL_USID");
            });

            modelBuilder.Entity<LmMailRun>(entity =>
            {
                entity.HasKey(e => e.LmrId);

                entity.ToTable("LM_MAIL_RUN");

                entity.Property(e => e.LmrId)
                    .ValueGeneratedNever()
                    .HasColumnName("LMR_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.GvConnectUploaded).HasColumnName("GV_CONNECT_UPLOADED");

                entity.Property(e => e.GvConnectUploadedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("GV_CONNECT_UPLOADED_DATE");

                entity.Property(e => e.GvConnectUploadedMsg)
                    .HasMaxLength(255)
                    .HasColumnName("GV_CONNECT_UPLOADED_MSG");

                entity.Property(e => e.GvcBounceCount).HasColumnName("GVC_BOUNCE_COUNT");

                entity.Property(e => e.GvcClickThruCount).HasColumnName("GVC_CLICK_THRU_COUNT");

                entity.Property(e => e.GvcForwardCount).HasColumnName("GVC_FORWARD_COUNT");

                entity.Property(e => e.GvcReadCount).HasColumnName("GVC_READ_COUNT");

                entity.Property(e => e.GvcRepliedCount).HasColumnName("GVC_REPLIED_COUNT");

                entity.Property(e => e.GvcSentCount).HasColumnName("GVC_SENT_COUNT");

                entity.Property(e => e.GvcUnsubAllCount).HasColumnName("GVC_UNSUB_ALL_COUNT");

                entity.Property(e => e.GvcUnsubThisCount).HasColumnName("GVC_UNSUB_THIS_COUNT");

                entity.Property(e => e.GvcUploadedCount).HasColumnName("GVC_UPLOADED_COUNT");

                entity.Property(e => e.LcId).HasColumnName("LC_ID");

                entity.Property(e => e.LsId).HasColumnName("LS_ID");

                entity.Property(e => e.MailRunType).HasColumnName("MAIL_RUN_TYPE");

                entity.Property(e => e.Owner).HasColumnName("OWNER");

                entity.Property(e => e.RecipientFilter)
                    .HasMaxLength(2000)
                    .HasColumnName("RECIPIENT_FILTER");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.HasOne(d => d.Lc)
                    .WithMany(p => p.LmMailRuns)
                    .HasForeignKey(d => d.LcId)
                    .HasConstraintName("FK_LM_MAIL_RUN_LM_LISTCONTROL");
            });

            modelBuilder.Entity<LmMailRunClickdatum>(entity =>
            {
                entity.HasKey(e => e.LmrcId);

                entity.ToTable("LM_MAIL_RUN_CLICKDATA");

                entity.Property(e => e.LmrcId)
                    .ValueGeneratedNever()
                    .HasColumnName("LMRC_ID");

                entity.Property(e => e.CsId).HasColumnName("CS_ID");

                entity.Property(e => e.DateClicked)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_CLICKED");

                entity.Property(e => e.LmrId).HasColumnName("LMR_ID");

                entity.Property(e => e.LmrrId).HasColumnName("LMRR_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Url)
                    .HasMaxLength(255)
                    .HasColumnName("URL");

                entity.HasOne(d => d.Cs)
                    .WithMany(p => p.LmMailRunClickdata)
                    .HasForeignKey(d => d.CsId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_LM_MAIL_RUN_CLICKDATA_LM_CONTACT_SPINE");

                entity.HasOne(d => d.Lmr)
                    .WithMany(p => p.LmMailRunClickdata)
                    .HasForeignKey(d => d.LmrId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_LM_MAIL_RUN_CLICKDATA_LM_MAIL_RUN");

                entity.HasOne(d => d.Lmrr)
                    .WithMany(p => p.LmMailRunClickdata)
                    .HasForeignKey(d => d.LmrrId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_LM_MAIL_RUN_CLICKDATA_LM_MAIL_RUN_RECIPIENT");
            });

            modelBuilder.Entity<LmMailRunRecipient>(entity =>
            {
                entity.HasKey(e => e.LmrrId);

                entity.ToTable("LM_MAIL_RUN_RECIPIENT");

                entity.HasIndex(e => e.CsId, "IX_MAIL_RUN_RECIPIENT_CS_ID")
                    .HasFillFactor((byte)80);

                entity.Property(e => e.LmrrId)
                    .ValueGeneratedNever()
                    .HasColumnName("LMRR_ID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CsId).HasColumnName("CS_ID");

                entity.Property(e => e.GvcBounceCode)
                    .HasMaxLength(20)
                    .HasColumnName("GVC_BOUNCE_CODE");

                entity.Property(e => e.GvcBounceFlag).HasColumnName("GVC_BOUNCE_FLAG");

                entity.Property(e => e.GvcBounceText)
                    .HasMaxLength(255)
                    .HasColumnName("GVC_BOUNCE_TEXT");

                entity.Property(e => e.GvcClickThruDate)
                    .HasColumnType("datetime")
                    .HasColumnName("GVC_CLICK_THRU_DATE");

                entity.Property(e => e.GvcClickThruFlag).HasColumnName("GVC_CLICK_THRU_FLAG");

                entity.Property(e => e.GvcForwardCount).HasColumnName("GVC_FORWARD_COUNT");

                entity.Property(e => e.GvcForwardDate)
                    .HasColumnType("datetime")
                    .HasColumnName("GVC_FORWARD_DATE");

                entity.Property(e => e.GvcForwardFlag).HasColumnName("GVC_FORWARD_FLAG");

                entity.Property(e => e.GvcLinksClickedCount).HasColumnName("GVC_LINKS_CLICKED_COUNT");

                entity.Property(e => e.GvcReadDate)
                    .HasColumnType("datetime")
                    .HasColumnName("GVC_READ_DATE");

                entity.Property(e => e.GvcReadFlag).HasColumnName("GVC_READ_FLAG");

                entity.Property(e => e.GvcRepliedCount).HasColumnName("GVC_REPLIED_COUNT");

                entity.Property(e => e.GvcRepliedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("GVC_REPLIED_DATE");

                entity.Property(e => e.GvcRepliedFlag).HasColumnName("GVC_REPLIED_FLAG");

                entity.Property(e => e.GvcSentDate)
                    .HasColumnType("datetime")
                    .HasColumnName("GVC_SENT_DATE");

                entity.Property(e => e.GvcSentFlag).HasColumnName("GVC_SENT_FLAG");

                entity.Property(e => e.GvcUnsubAll).HasColumnName("GVC_UNSUB_ALL");

                entity.Property(e => e.GvcUnsubDate)
                    .HasColumnType("datetime")
                    .HasColumnName("GVC_UNSUB_DATE");

                entity.Property(e => e.GvcUnsubThis).HasColumnName("GVC_UNSUB_THIS");

                entity.Property(e => e.LmrId).HasColumnName("LMR_ID");

                entity.HasOne(d => d.Cs)
                    .WithMany(p => p.LmMailRunRecipients)
                    .HasForeignKey(d => d.CsId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_LM_MAIL_RUN_RECIPIENT_LM_CONTACT_SPINE");

                entity.HasOne(d => d.Lmr)
                    .WithMany(p => p.LmMailRunRecipients)
                    .HasForeignKey(d => d.LmrId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_LM_MAIL_RUN_RECIPIENT_LM_MAIL_RUN");
            });

            modelBuilder.Entity<LmNote>(entity =>
            {
                entity.HasKey(e => e.PnId)
                    .HasName("PK_LM_PROSPECT_NOTES");

                entity.ToTable("LM_NOTES");

                entity.HasIndex(e => e.CsId, "IX_LM_NOTES_CS_ID")
                    .HasFillFactor((byte)80);

                entity.Property(e => e.PnId).HasColumnName("PN_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedById).HasColumnName("CREATED_BY_ID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CsId).HasColumnName("CS_ID");

                entity.Property(e => e.IsPhoneNote).HasColumnName("IS_PHONE_NOTE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Text)
                    .HasMaxLength(4000)
                    .HasColumnName("TEXT");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedById).HasColumnName("UPDATED_BY_ID");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.HasOne(d => d.Cs)
                    .WithMany(p => p.LmNotes)
                    .HasForeignKey(d => d.CsId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_LM_PROSPECT_NOTES_CSID");
            });

            modelBuilder.Entity<LmUpdateImportMapping>(entity =>
            {
                entity.HasKey(e => e.UimId);

                entity.ToTable("LM_UPDATE_IMPORT_MAPPINGS");

                entity.Property(e => e.UimId).HasColumnName("UIM_ID");

                entity.Property(e => e.ControlColumn).HasColumnName("CONTROL_COLUMN");

                entity.Property(e => e.FileFieldOrd).HasColumnName("FILE_FIELD_ORD");

                entity.Property(e => e.ImportId).HasColumnName("IMPORT_ID");

                entity.Property(e => e.Include).HasColumnName("INCLUDE");

                entity.Property(e => e.LeadsImportMapping).HasColumnName("LEADS_IMPORT_MAPPING");

                entity.Property(e => e.MatchKey).HasColumnName("MATCH_KEY");

                entity.HasOne(d => d.Import)
                    .WithMany(p => p.LmUpdateImportMappings)
                    .HasForeignKey(d => d.ImportId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_LM_UPDATE_IMPORT_MAPPINGS_LM_IMPORTS");
            });

            modelBuilder.Entity<LogicalOperator>(entity =>
            {
                entity.ToTable("LOGICAL_OPERATORS");

                entity.Property(e => e.LogicalOperatorId)
                    .ValueGeneratedNever()
                    .HasColumnName("LOGICAL_OPERATOR_ID");

                entity.Property(e => e.FieldType).HasColumnName("FIELD_TYPE");

                entity.Property(e => e.IsMinus).HasColumnName("IS_MINUS");

                entity.Property(e => e.LogicalOperator1)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("LOGICAL_OPERATOR")
                    .UseCollation("Latin1_General_CI_AS");

                entity.Property(e => e.SystemName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("SYSTEM_NAME")
                    .UseCollation("Latin1_General_CI_AS");
            });

            modelBuilder.Entity<MailCampaign>(entity =>
            {
                entity.HasKey(e => e.MacId)
                    .HasName("PK_BULK_MAIL");

                entity.ToTable("MAIL_CAMPAIGNS");

                entity.HasIndex(e => e.CreatedDate, "IX_MAIL_CAMPAIGNS_CREATED_DATE")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.ShortCode, "IX__MAIL_CAMPAIGNS__SHORT_CODE");

                entity.Property(e => e.MacId)
                    .HasColumnName("MAC_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.AccaDueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_DUE_DATE");

                entity.Property(e => e.AccaOwner).HasColumnName("ACCA_OWNER");

                entity.Property(e => e.AccaStage).HasColumnName("ACCA_STAGE");

                entity.Property(e => e.AccaStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_START_DATE");

                entity.Property(e => e.ConnectOptInType).HasColumnName("CONNECT_OPT_IN_TYPE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DefaultRecipient)
                    .HasMaxLength(255)
                    .HasColumnName("DEFAULT_RECIPIENT");

                entity.Property(e => e.DefaultSalutation)
                    .HasMaxLength(128)
                    .HasColumnName("DEFAULT_SALUTATION");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.MacActivities).HasColumnName("MAC_ACTIVITIES");

                entity.Property(e => e.MacBody).HasColumnName("MAC_BODY");

                entity.Property(e => e.MacCost)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("MAC_COST");

                entity.Property(e => e.MacDeleted).HasColumnName("MAC_DELETED");

                entity.Property(e => e.MacDonor).HasColumnName("MAC_DONOR");

                entity.Property(e => e.MacExternal)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_EXTERNAL");

                entity.Property(e => e.MacMedium).HasColumnName("MAC_MEDIUM");

                entity.Property(e => e.MacMediumFilter).HasColumnName("MAC_MEDIUM_FILTER");

                entity.Property(e => e.MacOwner).HasColumnName("MAC_OWNER");

                entity.Property(e => e.MacQuery).HasColumnName("MAC_QUERY");

                entity.Property(e => e.MacStage).HasColumnName("MAC_STAGE");

                entity.Property(e => e.MacStatus).HasColumnName("MAC_STATUS");

                entity.Property(e => e.MacSubject)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_SUBJECT");

                entity.Property(e => e.MacTarget).HasColumnName("MAC_TARGET");

                entity.Property(e => e.MacTemplate)
                    .HasMaxLength(1000)
                    .HasColumnName("MAC_TEMPLATE");

                entity.Property(e => e.MacType).HasColumnName("MAC_TYPE");

                entity.Property(e => e.MacUd1)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_UD1");

                entity.Property(e => e.MacUd10)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_UD10");

                entity.Property(e => e.MacUd10Bit).HasColumnName("MAC_UD10_BIT");

                entity.Property(e => e.MacUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MAC_UD10_DATE");

                entity.Property(e => e.MacUd10Id).HasColumnName("MAC_UD10_ID");

                entity.Property(e => e.MacUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MAC_UD10_NUMERIC");

                entity.Property(e => e.MacUd11Bit).HasColumnName("MAC_UD11_BIT");

                entity.Property(e => e.MacUd12Bit).HasColumnName("MAC_UD12_BIT");

                entity.Property(e => e.MacUd13Bit).HasColumnName("MAC_UD13_BIT");

                entity.Property(e => e.MacUd14Bit).HasColumnName("MAC_UD14_BIT");

                entity.Property(e => e.MacUd15Bit).HasColumnName("MAC_UD15_BIT");

                entity.Property(e => e.MacUd16Bit).HasColumnName("MAC_UD16_BIT");

                entity.Property(e => e.MacUd17Bit).HasColumnName("MAC_UD17_BIT");

                entity.Property(e => e.MacUd18Bit).HasColumnName("MAC_UD18_BIT");

                entity.Property(e => e.MacUd19Bit).HasColumnName("MAC_UD19_BIT");

                entity.Property(e => e.MacUd1Bit).HasColumnName("MAC_UD1_BIT");

                entity.Property(e => e.MacUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MAC_UD1_DATE");

                entity.Property(e => e.MacUd1Id).HasColumnName("MAC_UD1_ID");

                entity.Property(e => e.MacUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MAC_UD1_NUMERIC");

                entity.Property(e => e.MacUd2)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_UD2");

                entity.Property(e => e.MacUd20Bit).HasColumnName("MAC_UD20_BIT");

                entity.Property(e => e.MacUd21Bit).HasColumnName("MAC_UD21_BIT");

                entity.Property(e => e.MacUd22Bit).HasColumnName("MAC_UD22_BIT");

                entity.Property(e => e.MacUd23Bit).HasColumnName("MAC_UD23_BIT");

                entity.Property(e => e.MacUd24Bit).HasColumnName("MAC_UD24_BIT");

                entity.Property(e => e.MacUd2Bit).HasColumnName("MAC_UD2_BIT");

                entity.Property(e => e.MacUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MAC_UD2_DATE");

                entity.Property(e => e.MacUd2Id).HasColumnName("MAC_UD2_ID");

                entity.Property(e => e.MacUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MAC_UD2_NUMERIC");

                entity.Property(e => e.MacUd3)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_UD3");

                entity.Property(e => e.MacUd3Bit).HasColumnName("MAC_UD3_BIT");

                entity.Property(e => e.MacUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MAC_UD3_DATE");

                entity.Property(e => e.MacUd3Id).HasColumnName("MAC_UD3_ID");

                entity.Property(e => e.MacUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MAC_UD3_NUMERIC");

                entity.Property(e => e.MacUd4)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_UD4");

                entity.Property(e => e.MacUd4Bit).HasColumnName("MAC_UD4_BIT");

                entity.Property(e => e.MacUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MAC_UD4_DATE");

                entity.Property(e => e.MacUd4Id).HasColumnName("MAC_UD4_ID");

                entity.Property(e => e.MacUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MAC_UD4_NUMERIC");

                entity.Property(e => e.MacUd5)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_UD5");

                entity.Property(e => e.MacUd5Bit).HasColumnName("MAC_UD5_BIT");

                entity.Property(e => e.MacUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MAC_UD5_DATE");

                entity.Property(e => e.MacUd5Id).HasColumnName("MAC_UD5_ID");

                entity.Property(e => e.MacUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MAC_UD5_NUMERIC");

                entity.Property(e => e.MacUd6)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_UD6");

                entity.Property(e => e.MacUd6Bit).HasColumnName("MAC_UD6_BIT");

                entity.Property(e => e.MacUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MAC_UD6_DATE");

                entity.Property(e => e.MacUd6Id).HasColumnName("MAC_UD6_ID");

                entity.Property(e => e.MacUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MAC_UD6_NUMERIC");

                entity.Property(e => e.MacUd7)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_UD7");

                entity.Property(e => e.MacUd7Bit).HasColumnName("MAC_UD7_BIT");

                entity.Property(e => e.MacUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MAC_UD7_DATE");

                entity.Property(e => e.MacUd7Id).HasColumnName("MAC_UD7_ID");

                entity.Property(e => e.MacUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MAC_UD7_NUMERIC");

                entity.Property(e => e.MacUd8)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_UD8");

                entity.Property(e => e.MacUd8Bit).HasColumnName("MAC_UD8_BIT");

                entity.Property(e => e.MacUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MAC_UD8_DATE");

                entity.Property(e => e.MacUd8Id).HasColumnName("MAC_UD8_ID");

                entity.Property(e => e.MacUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MAC_UD8_NUMERIC");

                entity.Property(e => e.MacUd9)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_UD9");

                entity.Property(e => e.MacUd9Bit).HasColumnName("MAC_UD9_BIT");

                entity.Property(e => e.MacUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MAC_UD9_DATE");

                entity.Property(e => e.MacUd9Id).HasColumnName("MAC_UD9_ID");

                entity.Property(e => e.MacUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MAC_UD9_NUMERIC");

                entity.Property(e => e.MacUdInfo).HasColumnName("MAC_UD_INFO");

                entity.Property(e => e.MacUdMoreInfo).HasColumnName("MAC_UD_MORE_INFO");

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", true);

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.RunDate)
                    .HasColumnType("datetime")
                    .HasColumnName("RUN_DATE");

                entity.Property(e => e.ScheduledDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SCHEDULED_DATE");

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'CMP-')");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");
            });

            modelBuilder.Entity<MailCampaignsAccount>(entity =>
            {
                entity.HasKey(e => e.MacacId);

                entity.ToTable("MAIL_CAMPAIGNS_ACCOUNTS");

                entity.HasIndex(e => e.AcId, "IX_MAIL_CAMPAIGNS_ACCOUNTS_AC_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.CreatedDate, "IX_MAIL_CAMPAIGNS_ACCOUNTS_CREATED_DATE")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.MacId, "IX_MAIL_CAMPAIGNS_ACCOUNTS_MAC_ID")
                    .HasFillFactor((byte)80);

                entity.Property(e => e.MacacId)
                    .HasColumnName("MACAC_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.MacId).HasColumnName("MAC_ID");

                entity.Property(e => e.McrId).HasColumnName("MCR_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.HasOne(d => d.Ac)
                    .WithMany(p => p.MailCampaignsAccounts)
                    .HasForeignKey(d => d.AcId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_MAIL_CAMPAIGNS_ACCOUNTS_ACCOUNTS");

                entity.HasOne(d => d.Mac)
                    .WithMany(p => p.MailCampaignsAccounts)
                    .HasForeignKey(d => d.MacId)
                    .HasConstraintName("FK_MAIL_CAMPAIGNS_ACCOUNTS_MAIL_CAMPAIGNS");

                entity.HasOne(d => d.Mcr)
                    .WithMany(p => p.MailCampaignsAccounts)
                    .HasForeignKey(d => d.McrId)
                    .HasConstraintName("FK_MAIL_CAMPAIGNS_ACCOUNTS_MAIL_CAMPAIGNS_RUNS");
            });

            modelBuilder.Entity<MailCampaignsAttachment>(entity =>
            {
                entity.HasKey(e => e.MacaId);

                entity.ToTable("MAIL_CAMPAIGNS_ATTACHMENTS");

                entity.HasIndex(e => e.MacId, "IX_MAIL_CAMPAIGNS_ATTACHMENTS_MAC_ID")
                    .HasFillFactor((byte)80);

                entity.Property(e => e.MacaId)
                    .ValueGeneratedNever()
                    .HasColumnName("MACA_ID");

                entity.Property(e => e.Body)
                    .HasColumnType("image")
                    .HasColumnName("BODY");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.MacId).HasColumnName("MAC_ID");

                entity.Property(e => e.MacaDeleted).HasColumnName("MACA_DELETED");

                entity.Property(e => e.Path)
                    .HasMaxLength(255)
                    .HasColumnName("PATH");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Type)
                    .HasMaxLength(50)
                    .HasColumnName("TYPE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.HasOne(d => d.Mac)
                    .WithMany(p => p.MailCampaignsAttachments)
                    .HasForeignKey(d => d.MacId)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_MAIL_CAMPAIGNS_ATTACHMENTS_MAIL_CAMPAIGNS");
            });

            modelBuilder.Entity<MailCampaignsContactsSent>(entity =>
            {
                entity.HasKey(e => e.IMaccsId);

                entity.ToTable("MAIL_CAMPAIGNS_CONTACTS_SENT");

                entity.HasIndex(e => e.AccId, "IX_MAIL_CAMPAIGNS_CONTACTS_SENT_ACC_ID")
                    .HasFillFactor((byte)50);

                entity.HasIndex(e => e.AcId, "IX_MAIL_CAMPAIGNS_CONTACTS_SENT_AC_ID")
                    .HasFillFactor((byte)50);

                entity.HasIndex(e => e.MaccsId, "IX_MAIL_CAMPAIGNS_CONTACTS_SENT_MACCS_ID")
                    .HasFillFactor((byte)50);

                entity.HasIndex(e => e.MacId, "IX_MAIL_CAMPAIGNS_CONTACTS_SENT_MAC_ID")
                    .HasFillFactor((byte)50);

                entity.HasIndex(e => e.McrId, "IX_MAIL_CAMPAIGNS_CONTACTS_SENT_MCR_ID")
                    .HasFillFactor((byte)50);

                entity.Property(e => e.IMaccsId).HasColumnName("I_MACCS_ID");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_NAME");

                entity.Property(e => e.BusinessAddressCity).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressCountry).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressState).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.BusinessFaxNumber).HasMaxLength(255);

                entity.Property(e => e.BusinessTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Department).HasMaxLength(255);

                entity.Property(e => e.Email1Address).HasMaxLength(255);

                entity.Property(e => e.Email2Address).HasMaxLength(255);

                entity.Property(e => e.Email3Address).HasMaxLength(255);

                entity.Property(e => e.Fax1)
                    .HasMaxLength(255)
                    .HasColumnName("FAX_1");

                entity.Property(e => e.FirstName).HasMaxLength(255);

                entity.Property(e => e.FullName).HasMaxLength(255);

                entity.Property(e => e.GvcBounceCode)
                    .HasMaxLength(20)
                    .HasColumnName("GVC_BOUNCE_CODE");

                entity.Property(e => e.GvcBounceFlag).HasColumnName("GVC_BOUNCE_FLAG");

                entity.Property(e => e.GvcBounceText)
                    .HasMaxLength(255)
                    .HasColumnName("GVC_BOUNCE_TEXT");

                entity.Property(e => e.GvcClickedThruDate)
                    .HasColumnType("datetime")
                    .HasColumnName("GVC_CLICKED_THRU_DATE");

                entity.Property(e => e.GvcClickedThruFlag).HasColumnName("GVC_CLICKED_THRU_FLAG");

                entity.Property(e => e.GvcForwardCount).HasColumnName("GVC_FORWARD_COUNT");

                entity.Property(e => e.GvcForwardDate)
                    .HasColumnType("datetime")
                    .HasColumnName("GVC_FORWARD_DATE");

                entity.Property(e => e.GvcForwardFlag).HasColumnName("GVC_FORWARD_FLAG");

                entity.Property(e => e.GvcReadDate)
                    .HasColumnType("datetime")
                    .HasColumnName("GVC_READ_DATE");

                entity.Property(e => e.GvcReadFlag).HasColumnName("GVC_READ_FLAG");

                entity.Property(e => e.GvcRepliedCount).HasColumnName("GVC_REPLIED_COUNT");

                entity.Property(e => e.GvcRepliedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("GVC_REPLIED_DATE");

                entity.Property(e => e.GvcRepliedFlag).HasColumnName("GVC_REPLIED_FLAG");

                entity.Property(e => e.GvcSentDate)
                    .HasColumnType("datetime")
                    .HasColumnName("GVC_SENT_DATE");

                entity.Property(e => e.GvcSentFlag).HasColumnName("GVC_SENT_FLAG");

                entity.Property(e => e.GvcUnsubAll).HasColumnName("GVC_UNSUB_ALL");

                entity.Property(e => e.GvcUnsubDate)
                    .HasColumnType("datetime")
                    .HasColumnName("GVC_UNSUB_DATE");

                entity.Property(e => e.GvcUnsubThis).HasColumnName("GVC_UNSUB_THIS");

                entity.Property(e => e.HomeAddressCity).HasMaxLength(255);

                entity.Property(e => e.HomeAddressCountry).HasMaxLength(255);

                entity.Property(e => e.HomeAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.HomeAddressState).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.HomeFaxNumber).HasMaxLength(255);

                entity.Property(e => e.HomeTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.JobTitle).HasMaxLength(255);

                entity.Property(e => e.LastName).HasMaxLength(255);

                entity.Property(e => e.MacId).HasColumnName("MAC_ID");

                entity.Property(e => e.MaccsId)
                    .HasColumnName("MACCS_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.ManagerName).HasMaxLength(255);

                entity.Property(e => e.McrId).HasColumnName("MCR_ID");

                entity.Property(e => e.MiddleName).HasMaxLength(255);

                entity.Property(e => e.Phone1)
                    .HasMaxLength(255)
                    .HasColumnName("PHONE_1");

                entity.Property(e => e.Title).HasMaxLength(255);

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsName)
                    .HasMaxLength(255)
                    .HasColumnName("US_NAME");

                entity.Property(e => e.WebPage).HasMaxLength(255);

                entity.HasOne(d => d.Mac)
                    .WithMany(p => p.MailCampaignsContactsSents)
                    .HasForeignKey(d => d.MacId)
                    .HasConstraintName("FK_MAIL_CAMPAIGNS_CONTACTS_SENT_MAIL_CAMPAIGNS");
            });

            modelBuilder.Entity<MailCampaignsContactsSentClick>(entity =>
            {
                entity.HasKey(e => e.MaccscId);

                entity.ToTable("MAIL_CAMPAIGNS_CONTACTS_SENT_CLICKS");

                entity.Property(e => e.MaccscId)
                    .ValueGeneratedNever()
                    .HasColumnName("MACCSC_ID");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.DateClicked)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_CLICKED");

                entity.Property(e => e.IMaccsId).HasColumnName("I_MACCS_ID");

                entity.Property(e => e.MaccsId).HasColumnName("MACCS_ID");

                entity.Property(e => e.RsaId).HasColumnName("RSA_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Url)
                    .HasMaxLength(255)
                    .HasColumnName("URL");

                entity.HasOne(d => d.Ac)
                    .WithMany(p => p.MailCampaignsContactsSentClicks)
                    .HasForeignKey(d => d.AcId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_MAIL_CAMPAIGNS_CONTACTS_SENT_CLICKS_ACCOUNTS");

                entity.HasOne(d => d.Acc)
                    .WithMany(p => p.MailCampaignsContactsSentClicks)
                    .HasForeignKey(d => d.AccId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_MAIL_CAMPAIGNS_CONTACTS_SENT_CLICKS_ACCOUNTS_CONTACTS");

                entity.HasOne(d => d.IMaccs)
                    .WithMany(p => p.MailCampaignsContactsSentClicks)
                    .HasForeignKey(d => d.IMaccsId)
                    .HasConstraintName("FK_MAIL_CAMPAIGNS_CONTACTS_SENT_CLICKS_MAIL_CAMPAIGNS_CONTACTS_SENT");
            });

            modelBuilder.Entity<MailCampaignsContactsSentDatum>(entity =>
            {
                entity.HasKey(e => e.IMaccsdId);

                entity.ToTable("MAIL_CAMPAIGNS_CONTACTS_SENT_DATA");

                entity.Property(e => e.IMaccsdId).HasColumnName("I_MACCSD_ID");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.AccName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_NAME");

                entity.Property(e => e.BusinessAddressCity).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressCountry).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressState).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.BusinessFaxNumber).HasMaxLength(255);

                entity.Property(e => e.BusinessTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Department).HasMaxLength(255);

                entity.Property(e => e.Email1Address).HasMaxLength(255);

                entity.Property(e => e.Email2Address).HasMaxLength(255);

                entity.Property(e => e.Email3Address).HasMaxLength(255);

                entity.Property(e => e.Fax1)
                    .HasMaxLength(255)
                    .HasColumnName("FAX_1");

                entity.Property(e => e.FirstName).HasMaxLength(255);

                entity.Property(e => e.FullName).HasMaxLength(255);

                entity.Property(e => e.HomeAddressCity).HasMaxLength(255);

                entity.Property(e => e.HomeAddressCountry).HasMaxLength(255);

                entity.Property(e => e.HomeAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.HomeAddressState).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.HomeFaxNumber).HasMaxLength(255);

                entity.Property(e => e.HomeTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.IMaccsId).HasColumnName("I_MACCS_ID");

                entity.Property(e => e.JobTitle).HasMaxLength(255);

                entity.Property(e => e.LastName).HasMaxLength(255);

                entity.Property(e => e.ManagerName).HasMaxLength(255);

                entity.Property(e => e.MiddleName).HasMaxLength(255);

                entity.Property(e => e.Phone1)
                    .HasMaxLength(255)
                    .HasColumnName("PHONE_1");

                entity.Property(e => e.Title).HasMaxLength(255);

                entity.Property(e => e.UsName)
                    .HasMaxLength(255)
                    .HasColumnName("US_NAME");

                entity.Property(e => e.WebPage).HasMaxLength(255);
            });

            modelBuilder.Entity<MailCampaignsContactsUnsent>(entity =>
            {
                entity.HasKey(e => e.MaccuId);

                entity.ToTable("MAIL_CAMPAIGNS_CONTACTS_UNSENT");

                entity.HasIndex(e => e.AccId, "IX_MAIL_CAMPAIGNS_CONTACTS_UNSENT_ACC_ID")
                    .HasFillFactor((byte)50);

                entity.HasIndex(e => e.AcId, "IX_MAIL_CAMPAIGNS_CONTACTS_UNSENT_AC_ID")
                    .HasFillFactor((byte)50);

                entity.HasIndex(e => new { e.MaccuId, e.AcId, e.AccId }, "IX_MAIL_CAMPAIGNS_CONTACTS_UNSENT_MACCU_AC_ACC")
                    .HasFillFactor((byte)50);

                entity.HasIndex(e => e.MacId, "IX_MAIL_CAMPAIGNS_CONTACTS_UNSENT_MAC_ID")
                    .HasFillFactor((byte)50);

                entity.HasIndex(e => e.McsId, "IX_MAIL_CAMPAIGNS_CONTACTS_UNSENT_MCS_ID")
                    .HasFillFactor((byte)50);

                entity.Property(e => e.MaccuId)
                    .HasColumnName("MACCU_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.Add)
                    .HasColumnName("ADD")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Forced).HasColumnName("FORCED");

                entity.Property(e => e.GvcUnsubThis).HasColumnName("GVC_UNSUB_THIS");

                entity.Property(e => e.IsNew).HasColumnName("IS_NEW");

                entity.Property(e => e.MacId).HasColumnName("MAC_ID");

                entity.Property(e => e.McsId).HasColumnName("MCS_ID");

                entity.Property(e => e.Removed).HasColumnName("REMOVED");

                entity.Property(e => e.SembId).HasColumnName("SEMB_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.HasOne(d => d.Mac)
                    .WithMany(p => p.MailCampaignsContactsUnsents)
                    .HasForeignKey(d => d.MacId)
                    .HasConstraintName("FK_MAIL_CAMPAIGNS_CONTACTS_UNSENT_MAIL_CAMPAIGNS");
            });

            modelBuilder.Entity<MailCampaignsRun>(entity =>
            {
                entity.HasKey(e => e.McrId);

                entity.ToTable("MAIL_CAMPAIGNS_RUNS");

                entity.HasIndex(e => e.MacId, "IX_MAIL_CAMPAIGNS_RUNS_MAC_ID")
                    .HasFillFactor((byte)80);

                entity.Property(e => e.McrId)
                    .ValueGeneratedNever()
                    .HasColumnName("MCR_ID");

                entity.Property(e => e.AccaDueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_DUE_DATE");

                entity.Property(e => e.AccaOwner).HasColumnName("ACCA_OWNER");

                entity.Property(e => e.AccaStage).HasColumnName("ACCA_STAGE");

                entity.Property(e => e.AccaStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_START_DATE");

                entity.Property(e => e.ConnectOptInType).HasColumnName("CONNECT_OPT_IN_TYPE");

                entity.Property(e => e.Csv).HasColumnName("CSV");

                entity.Property(e => e.GvConnect).HasColumnName("GV_CONNECT");

                entity.Property(e => e.GvConnectUploaded).HasColumnName("GV_CONNECT_UPLOADED");

                entity.Property(e => e.GvConnectUploadedBy)
                    .HasMaxLength(255)
                    .HasColumnName("GV_CONNECT_UPLOADED_BY");

                entity.Property(e => e.GvConnectUploadedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("GV_CONNECT_UPLOADED_DATE");

                entity.Property(e => e.GvConnectUploadedId).HasColumnName("GV_CONNECT_UPLOADED_ID");

                entity.Property(e => e.GvConnectUploadedMsg)
                    .HasMaxLength(255)
                    .HasColumnName("GV_CONNECT_UPLOADED_MSG");

                entity.Property(e => e.MacId).HasColumnName("MAC_ID");

                entity.Property(e => e.MacMedium).HasColumnName("MAC_MEDIUM");

                entity.Property(e => e.MacStage).HasColumnName("MAC_STAGE");

                entity.Property(e => e.MacType).HasColumnName("MAC_TYPE");

                entity.Property(e => e.NewOnly).HasColumnName("NEW_ONLY");

                entity.Property(e => e.PendingActivities).HasColumnName("PENDING_ACTIVITIES");

                entity.Property(e => e.RunBy)
                    .HasMaxLength(255)
                    .HasColumnName("RUN_BY");

                entity.Property(e => e.RunDate)
                    .HasColumnType("datetime")
                    .HasColumnName("RUN_DATE");

                entity.Property(e => e.SendCount).HasColumnName("SEND_COUNT");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");

                entity.HasOne(d => d.Mac)
                    .WithMany(p => p.MailCampaignsRuns)
                    .HasForeignKey(d => d.MacId)
                    .HasConstraintName("FK_MAIL_CAMPAIGNS_RUNS_MAIL_CAMPAIGNS");
            });

            modelBuilder.Entity<MailCampaignsSource>(entity =>
            {
                entity.HasKey(e => e.McsId);

                entity.ToTable("MAIL_CAMPAIGNS_SOURCES");

                entity.HasIndex(e => e.MacId, "IX_MAIL_CAMPAIGNS_SOURCES_MAC_ID")
                    .HasFillFactor((byte)80);

                entity.Property(e => e.McsId)
                    .ValueGeneratedNever()
                    .HasColumnName("MCS_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.LastRefresh)
                    .HasColumnType("datetime")
                    .HasColumnName("Last_Refresh");

                entity.Property(e => e.MacId).HasColumnName("MAC_ID");

                entity.Property(e => e.ManualAdd).HasColumnName("Manual_Add");

                entity.Property(e => e.ManualDelete).HasColumnName("Manual_Delete");

                entity.Property(e => e.OldId).HasColumnName("OLD_ID");

                entity.Property(e => e.SourceQuery).HasColumnName("SOURCE_QUERY");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.HasOne(d => d.Mac)
                    .WithMany(p => p.MailCampaignsSources)
                    .HasForeignKey(d => d.MacId)
                    .HasConstraintName("FK_MAIL_CAMPAIGNS_SOURCES_MAIL_CAMPAIGNS");
            });

            modelBuilder.Entity<MarketingCampaign>(entity =>
            {
                entity.HasKey(e => e.McaId);

                entity.ToTable("MARKETING_CAMPAIGN");

                entity.HasIndex(e => e.SitId, "IX_MARKETING_CAMPAIGN_SIT_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.ShortCode, "IX__MARKETING_CAMPAIGN__SHORT_CODE");

                entity.Property(e => e.McaId)
                    .HasColumnName("MCA_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.CBookings)
                    .HasColumnName("C_BOOKINGS")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CBookingsConfirmed)
                    .HasColumnName("C_BOOKINGS_CONFIRMED")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CBookingsOpenVal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("C_BOOKINGS_OPEN_VAL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CBookingsWonVal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("C_BOOKINGS_WON_VAL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CCompleteAct).HasColumnName("C_COMPLETE_ACT");

                entity.Property(e => e.CCompleteAppointments).HasColumnName("C_COMPLETE_APPOINTMENTS");

                entity.Property(e => e.CCostVal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("C_COST_VAL");

                entity.Property(e => e.CLostOpportunities).HasColumnName("C_LOST_OPPORTUNITIES");

                entity.Property(e => e.CLostVal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("C_LOST_VAL");

                entity.Property(e => e.COpenOpportunities).HasColumnName("C_OPEN_OPPORTUNITIES");

                entity.Property(e => e.COpenVal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("C_OPEN_VAL");

                entity.Property(e => e.CProfitVal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("C_PROFIT_VAL");

                entity.Property(e => e.CTltAppointments).HasColumnName("C_TLT_APPOINTMENTS");

                entity.Property(e => e.CTltOpportunities).HasColumnName("C_TLT_OPPORTUNITIES");

                entity.Property(e => e.CTotalAct).HasColumnName("C_TOTAL_ACT");

                entity.Property(e => e.CUniqueAct).HasColumnName("C_UNIQUE_ACT");

                entity.Property(e => e.CUnqAppointments).HasColumnName("C_UNQ_APPOINTMENTS");

                entity.Property(e => e.CWonOpportunities).HasColumnName("C_WON_OPPORTUNITIES");

                entity.Property(e => e.CWonVal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("C_WON_VAL");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Deleted).HasColumnName("DELETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.LastRunBy)
                    .HasMaxLength(255)
                    .HasColumnName("LAST_RUN_BY");

                entity.Property(e => e.LastRunDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_RUN_DATE");

                entity.Property(e => e.McaUd1)
                    .HasMaxLength(255)
                    .HasColumnName("MCA_UD1");

                entity.Property(e => e.McaUd10)
                    .HasMaxLength(255)
                    .HasColumnName("MCA_UD10");

                entity.Property(e => e.McaUd10Bit).HasColumnName("MCA_UD10_BIT");

                entity.Property(e => e.McaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MCA_UD10_DATE");

                entity.Property(e => e.McaUd10Id).HasColumnName("MCA_UD10_ID");

                entity.Property(e => e.McaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MCA_UD10_NUMERIC");

                entity.Property(e => e.McaUd11Bit).HasColumnName("MCA_UD11_BIT");

                entity.Property(e => e.McaUd12Bit).HasColumnName("MCA_UD12_BIT");

                entity.Property(e => e.McaUd13Bit).HasColumnName("MCA_UD13_BIT");

                entity.Property(e => e.McaUd14Bit).HasColumnName("MCA_UD14_BIT");

                entity.Property(e => e.McaUd15Bit).HasColumnName("MCA_UD15_BIT");

                entity.Property(e => e.McaUd16Bit).HasColumnName("MCA_UD16_BIT");

                entity.Property(e => e.McaUd17Bit).HasColumnName("MCA_UD17_BIT");

                entity.Property(e => e.McaUd18Bit).HasColumnName("MCA_UD18_BIT");

                entity.Property(e => e.McaUd19Bit).HasColumnName("MCA_UD19_BIT");

                entity.Property(e => e.McaUd1Bit).HasColumnName("MCA_UD1_BIT");

                entity.Property(e => e.McaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MCA_UD1_DATE");

                entity.Property(e => e.McaUd1Id).HasColumnName("MCA_UD1_ID");

                entity.Property(e => e.McaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MCA_UD1_NUMERIC");

                entity.Property(e => e.McaUd2)
                    .HasMaxLength(255)
                    .HasColumnName("MCA_UD2");

                entity.Property(e => e.McaUd20Bit).HasColumnName("MCA_UD20_BIT");

                entity.Property(e => e.McaUd21Bit).HasColumnName("MCA_UD21_BIT");

                entity.Property(e => e.McaUd22Bit).HasColumnName("MCA_UD22_BIT");

                entity.Property(e => e.McaUd23Bit).HasColumnName("MCA_UD23_BIT");

                entity.Property(e => e.McaUd24Bit).HasColumnName("MCA_UD24_BIT");

                entity.Property(e => e.McaUd2Bit).HasColumnName("MCA_UD2_BIT");

                entity.Property(e => e.McaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MCA_UD2_DATE");

                entity.Property(e => e.McaUd2Id).HasColumnName("MCA_UD2_ID");

                entity.Property(e => e.McaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MCA_UD2_NUMERIC");

                entity.Property(e => e.McaUd3)
                    .HasMaxLength(255)
                    .HasColumnName("MCA_UD3");

                entity.Property(e => e.McaUd3Bit).HasColumnName("MCA_UD3_BIT");

                entity.Property(e => e.McaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MCA_UD3_DATE");

                entity.Property(e => e.McaUd3Id).HasColumnName("MCA_UD3_ID");

                entity.Property(e => e.McaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MCA_UD3_NUMERIC");

                entity.Property(e => e.McaUd4)
                    .HasMaxLength(255)
                    .HasColumnName("MCA_UD4");

                entity.Property(e => e.McaUd4Bit).HasColumnName("MCA_UD4_BIT");

                entity.Property(e => e.McaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MCA_UD4_DATE");

                entity.Property(e => e.McaUd4Id).HasColumnName("MCA_UD4_ID");

                entity.Property(e => e.McaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MCA_UD4_NUMERIC");

                entity.Property(e => e.McaUd5)
                    .HasMaxLength(255)
                    .HasColumnName("MCA_UD5");

                entity.Property(e => e.McaUd5Bit).HasColumnName("MCA_UD5_BIT");

                entity.Property(e => e.McaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MCA_UD5_DATE");

                entity.Property(e => e.McaUd5Id).HasColumnName("MCA_UD5_ID");

                entity.Property(e => e.McaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MCA_UD5_NUMERIC");

                entity.Property(e => e.McaUd6)
                    .HasMaxLength(255)
                    .HasColumnName("MCA_UD6");

                entity.Property(e => e.McaUd6Bit).HasColumnName("MCA_UD6_BIT");

                entity.Property(e => e.McaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MCA_UD6_DATE");

                entity.Property(e => e.McaUd6Id).HasColumnName("MCA_UD6_ID");

                entity.Property(e => e.McaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MCA_UD6_NUMERIC");

                entity.Property(e => e.McaUd7)
                    .HasMaxLength(255)
                    .HasColumnName("MCA_UD7");

                entity.Property(e => e.McaUd7Bit).HasColumnName("MCA_UD7_BIT");

                entity.Property(e => e.McaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MCA_UD7_DATE");

                entity.Property(e => e.McaUd7Id).HasColumnName("MCA_UD7_ID");

                entity.Property(e => e.McaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MCA_UD7_NUMERIC");

                entity.Property(e => e.McaUd8)
                    .HasMaxLength(255)
                    .HasColumnName("MCA_UD8");

                entity.Property(e => e.McaUd8Bit).HasColumnName("MCA_UD8_BIT");

                entity.Property(e => e.McaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MCA_UD8_DATE");

                entity.Property(e => e.McaUd8Id).HasColumnName("MCA_UD8_ID");

                entity.Property(e => e.McaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MCA_UD8_NUMERIC");

                entity.Property(e => e.McaUd9)
                    .HasMaxLength(255)
                    .HasColumnName("MCA_UD9");

                entity.Property(e => e.McaUd9Bit).HasColumnName("MCA_UD9_BIT");

                entity.Property(e => e.McaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MCA_UD9_DATE");

                entity.Property(e => e.McaUd9Id).HasColumnName("MCA_UD9_ID");

                entity.Property(e => e.McaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MCA_UD9_NUMERIC");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", true);

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.SgId).HasColumnName("SG_ID");

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'CMC-')");

                entity.Property(e => e.SitId).HasColumnName("SIT_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Type).HasColumnName("TYPE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.HasOne(d => d.Sit)
                    .WithMany(p => p.MarketingCampaigns)
                    .HasForeignKey(d => d.SitId)
                    .HasConstraintName("FK_MARKETING_CAMPAIGN_SITES");

                entity.HasOne(d => d.Us)
                    .WithMany(p => p.MarketingCampaigns)
                    .HasForeignKey(d => d.UsId)
                    .HasConstraintName("FK_MARKETING_CAMPAIGN_USERS");
            });

            modelBuilder.Entity<MarketingCampaignStage>(entity =>
            {
                entity.HasKey(e => e.StgId);

                entity.ToTable("MARKETING_CAMPAIGN_STAGE");

                entity.HasIndex(e => e.ShortCode, "IX__MARKETING_CAMPAIGN_STAGE__SHORT_CODE");

                entity.HasIndex(e => e.StgId, "IX__MCS__STG_ID")
                    .IsUnique();

                entity.Property(e => e.StgId)
                    .HasColumnName("STG_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.ActAcManager).HasColumnName("ACT_AC_MANAGER");

                entity.Property(e => e.ActCreate).HasColumnName("ACT_CREATE");

                entity.Property(e => e.ActDueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ACT_DUE_DATE");

                entity.Property(e => e.ActOwner).HasColumnName("ACT_OWNER");

                entity.Property(e => e.ActStage).HasColumnName("ACT_STAGE");

                entity.Property(e => e.ActStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ACT_START_DATE");

                entity.Property(e => e.AutoAllrecp).HasColumnName("AUTO_ALLRECP");

                entity.Property(e => e.AutoDay).HasColumnName("AUTO_DAY");

                entity.Property(e => e.AutoEnd)
                    .HasColumnType("datetime")
                    .HasColumnName("AUTO_END");

                entity.Property(e => e.AutoFreq).HasColumnName("AUTO_FREQ");

                entity.Property(e => e.AutoLastSent)
                    .HasColumnType("datetime")
                    .HasColumnName("AUTO_LAST_SENT");

                entity.Property(e => e.AutoMonth).HasColumnName("AUTO_MONTH");

                entity.Property(e => e.AutoMstId).HasColumnName("AUTO_MST_ID");

                entity.Property(e => e.AutoStart)
                    .HasColumnType("datetime")
                    .HasColumnName("AUTO_START");

                entity.Property(e => e.AutoTemplate)
                    .HasMaxLength(255)
                    .HasColumnName("AUTO_TEMPLATE");

                entity.Property(e => e.AutoTime).HasColumnName("AUTO_TIME");

                entity.Property(e => e.AutoWeekDays).HasColumnName("AUTO_WEEK_DAYS");

                entity.Property(e => e.CBookings)
                    .HasColumnName("C_BOOKINGS")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CBookingsConfirmed)
                    .HasColumnName("C_BOOKINGS_CONFIRMED")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CBookingsOpenVal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("C_BOOKINGS_OPEN_VAL")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.CBookingsWonVal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("C_BOOKINGS_WON_VAL")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.CCompleteAct)
                    .HasColumnName("C_COMPLETE_ACT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CCompleteAppointments)
                    .HasColumnName("C_COMPLETE_APPOINTMENTS")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CCostVal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("C_COST_VAL")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.CLostOpportunities)
                    .HasColumnName("C_LOST_OPPORTUNITIES")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CLostVal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("C_LOST_VAL")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.COpenOpportunities)
                    .HasColumnName("C_OPEN_OPPORTUNITIES")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.COpenVal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("C_OPEN_VAL")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.CProfitVal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("C_PROFIT_VAL")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.CRuns)
                    .HasColumnName("C_RUNS")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CTltAppointments)
                    .HasColumnName("C_TLT_APPOINTMENTS")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CTltEmailsBounced)
                    .HasColumnName("C_TLT_EMAILS_BOUNCED")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CTltEmailsClicked)
                    .HasColumnName("C_TLT_EMAILS_CLICKED")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CTltEmailsDelivered)
                    .HasColumnName("C_TLT_EMAILS_DELIVERED")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CTltEmailsForwarded)
                    .HasColumnName("C_TLT_EMAILS_FORWARDED")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CTltEmailsOpened)
                    .HasColumnName("C_TLT_EMAILS_OPENED")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CTltEmailsReplied)
                    .HasColumnName("C_TLT_EMAILS_REPLIED")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CTltEmailsUnsuball)
                    .HasColumnName("C_TLT_EMAILS_UNSUBALL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CTltEmailsUnsubthis)
                    .HasColumnName("C_TLT_EMAILS_UNSUBTHIS")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CTltOpportunities)
                    .HasColumnName("C_TLT_OPPORTUNITIES")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CTotal)
                    .HasColumnName("C_TOTAL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CTotalAct)
                    .HasColumnName("C_TOTAL_ACT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CTotalSent)
                    .HasColumnName("C_TOTAL_SENT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CUniqueAct)
                    .HasColumnName("C_UNIQUE_ACT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CUniqueSent)
                    .HasColumnName("C_UNIQUE_SENT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CUnqAppointments)
                    .HasColumnName("C_UNQ_APPOINTMENTS")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CUnqEmailsBounced)
                    .HasColumnName("C_UNQ_EMAILS_BOUNCED")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CUnqEmailsClicked)
                    .HasColumnName("C_UNQ_EMAILS_CLICKED")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CUnqEmailsDelivered)
                    .HasColumnName("C_UNQ_EMAILS_DELIVERED")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CUnqEmailsForwarded)
                    .HasColumnName("C_UNQ_EMAILS_FORWARDED")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CUnqEmailsOpened)
                    .HasColumnName("C_UNQ_EMAILS_OPENED")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CUnqEmailsReplied)
                    .HasColumnName("C_UNQ_EMAILS_REPLIED")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CUnqEmailsUnsuball)
                    .HasColumnName("C_UNQ_EMAILS_UNSUBALL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CUnqEmailsUnsubthis)
                    .HasColumnName("C_UNQ_EMAILS_UNSUBTHIS")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CValid)
                    .HasColumnName("C_VALID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CValidEmail)
                    .HasColumnName("C_VALID_EMAIL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CValidFax)
                    .HasColumnName("C_VALID_FAX")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CValidLetter)
                    .HasColumnName("C_VALID_LETTER")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CValidMobile)
                    .HasColumnName("C_VALID_MOBILE")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CValidPhone)
                    .HasColumnName("C_VALID_PHONE")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CWonOpportunities)
                    .HasColumnName("C_WON_OPPORTUNITIES")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CWonVal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("C_WON_VAL")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.Closed).HasColumnName("CLOSED");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DefaultRecipient)
                    .HasMaxLength(255)
                    .HasColumnName("DEFAULT_RECIPIENT");

                entity.Property(e => e.DefaultSalutation)
                    .HasMaxLength(255)
                    .HasColumnName("DEFAULT_SALUTATION");

                entity.Property(e => e.Deleted).HasColumnName("DELETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.EmailBody)
                    .HasMaxLength(4000)
                    .HasColumnName("EMAIL_BODY");

                entity.Property(e => e.EmailSubject)
                    .HasMaxLength(100)
                    .HasColumnName("EMAIL_SUBJECT");

                entity.Property(e => e.IsAutomated).HasColumnName("IS_AUTOMATED");

                entity.Property(e => e.IsPrivacyNotified).HasColumnName("IS_PRIVACY_NOTIFIED");

                entity.Property(e => e.LastRefresh)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_REFRESH");

                entity.Property(e => e.LastRefreshBy)
                    .HasMaxLength(255)
                    .HasColumnName("LAST_REFRESH_BY");

                entity.Property(e => e.LastRunBy)
                    .HasMaxLength(255)
                    .HasColumnName("LAST_RUN_BY");

                entity.Property(e => e.LastRunDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_RUN_DATE");

                entity.Property(e => e.McaId).HasColumnName("MCA_ID");

                entity.Property(e => e.MediaType).HasColumnName("MEDIA_TYPE");

                entity.Property(e => e.OptInsOnly).HasColumnName("OPT_INS_ONLY");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", true);

                entity.Property(e => e.PrivacyNotificationReason)
                    .HasMaxLength(255)
                    .HasColumnName("PRIVACY_NOTIFICATION_REASON");

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.RunBy)
                    .HasMaxLength(255)
                    .HasColumnName("RUN_BY");

                entity.Property(e => e.RunDate)
                    .HasColumnType("datetime")
                    .HasColumnName("RUN_DATE");

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'STG-')");

                entity.Property(e => e.StageType).HasColumnName("STAGE_TYPE");

                entity.Property(e => e.Stale).HasColumnName("STALE");

                entity.Property(e => e.State).HasColumnName("STATE");

                entity.Property(e => e.StgIdParent).HasColumnName("STG_ID_PARENT");

                entity.Property(e => e.StgUd1)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD1");

                entity.Property(e => e.StgUd10)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD10");

                entity.Property(e => e.StgUd10Bit).HasColumnName("STG_UD10_BIT");

                entity.Property(e => e.StgUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("STG_UD10_DATE");

                entity.Property(e => e.StgUd10Id).HasColumnName("STG_UD10_ID");

                entity.Property(e => e.StgUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("STG_UD10_NUMERIC");

                entity.Property(e => e.StgUd11Bit).HasColumnName("STG_UD11_BIT");

                entity.Property(e => e.StgUd12Bit).HasColumnName("STG_UD12_BIT");

                entity.Property(e => e.StgUd13Bit).HasColumnName("STG_UD13_BIT");

                entity.Property(e => e.StgUd14Bit).HasColumnName("STG_UD14_BIT");

                entity.Property(e => e.StgUd15Bit).HasColumnName("STG_UD15_BIT");

                entity.Property(e => e.StgUd16Bit).HasColumnName("STG_UD16_BIT");

                entity.Property(e => e.StgUd17Bit).HasColumnName("STG_UD17_BIT");

                entity.Property(e => e.StgUd18Bit).HasColumnName("STG_UD18_BIT");

                entity.Property(e => e.StgUd19Bit).HasColumnName("STG_UD19_BIT");

                entity.Property(e => e.StgUd1Bit).HasColumnName("STG_UD1_BIT");

                entity.Property(e => e.StgUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("STG_UD1_DATE");

                entity.Property(e => e.StgUd1Id).HasColumnName("STG_UD1_ID");

                entity.Property(e => e.StgUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("STG_UD1_NUMERIC");

                entity.Property(e => e.StgUd2)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD2");

                entity.Property(e => e.StgUd20Bit).HasColumnName("STG_UD20_BIT");

                entity.Property(e => e.StgUd21Bit).HasColumnName("STG_UD21_BIT");

                entity.Property(e => e.StgUd22Bit).HasColumnName("STG_UD22_BIT");

                entity.Property(e => e.StgUd23Bit).HasColumnName("STG_UD23_BIT");

                entity.Property(e => e.StgUd24Bit).HasColumnName("STG_UD24_BIT");

                entity.Property(e => e.StgUd2Bit).HasColumnName("STG_UD2_BIT");

                entity.Property(e => e.StgUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("STG_UD2_DATE");

                entity.Property(e => e.StgUd2Id).HasColumnName("STG_UD2_ID");

                entity.Property(e => e.StgUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("STG_UD2_NUMERIC");

                entity.Property(e => e.StgUd3)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD3");

                entity.Property(e => e.StgUd3Bit).HasColumnName("STG_UD3_BIT");

                entity.Property(e => e.StgUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("STG_UD3_DATE");

                entity.Property(e => e.StgUd3Id).HasColumnName("STG_UD3_ID");

                entity.Property(e => e.StgUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("STG_UD3_NUMERIC");

                entity.Property(e => e.StgUd4)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD4");

                entity.Property(e => e.StgUd4Bit).HasColumnName("STG_UD4_BIT");

                entity.Property(e => e.StgUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("STG_UD4_DATE");

                entity.Property(e => e.StgUd4Id).HasColumnName("STG_UD4_ID");

                entity.Property(e => e.StgUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("STG_UD4_NUMERIC");

                entity.Property(e => e.StgUd5)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD5");

                entity.Property(e => e.StgUd5Bit).HasColumnName("STG_UD5_BIT");

                entity.Property(e => e.StgUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("STG_UD5_DATE");

                entity.Property(e => e.StgUd5Id).HasColumnName("STG_UD5_ID");

                entity.Property(e => e.StgUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("STG_UD5_NUMERIC");

                entity.Property(e => e.StgUd6)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD6");

                entity.Property(e => e.StgUd6Bit).HasColumnName("STG_UD6_BIT");

                entity.Property(e => e.StgUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("STG_UD6_DATE");

                entity.Property(e => e.StgUd6Id).HasColumnName("STG_UD6_ID");

                entity.Property(e => e.StgUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("STG_UD6_NUMERIC");

                entity.Property(e => e.StgUd7)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD7");

                entity.Property(e => e.StgUd7Bit).HasColumnName("STG_UD7_BIT");

                entity.Property(e => e.StgUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("STG_UD7_DATE");

                entity.Property(e => e.StgUd7Id).HasColumnName("STG_UD7_ID");

                entity.Property(e => e.StgUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("STG_UD7_NUMERIC");

                entity.Property(e => e.StgUd8)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD8");

                entity.Property(e => e.StgUd8Bit).HasColumnName("STG_UD8_BIT");

                entity.Property(e => e.StgUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("STG_UD8_DATE");

                entity.Property(e => e.StgUd8Id).HasColumnName("STG_UD8_ID");

                entity.Property(e => e.StgUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("STG_UD8_NUMERIC");

                entity.Property(e => e.StgUd9)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD9");

                entity.Property(e => e.StgUd9Bit).HasColumnName("STG_UD9_BIT");

                entity.Property(e => e.StgUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("STG_UD9_DATE");

                entity.Property(e => e.StgUd9Id).HasColumnName("STG_UD9_ID");

                entity.Property(e => e.StgUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("STG_UD9_NUMERIC");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TemplateName)
                    .HasMaxLength(500)
                    .HasColumnName("TEMPLATE_NAME");

                entity.Property(e => e.Type).HasColumnName("TYPE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.HasOne(d => d.Mca)
                    .WithMany(p => p.MarketingCampaignStages)
                    .HasForeignKey(d => d.McaId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_MARKETING_CAMPAIGN_STAGE_MARKETING_CAMPAIGN");

                entity.HasOne(d => d.StgIdParentNavigation)
                    .WithMany(p => p.InverseStgIdParentNavigation)
                    .HasForeignKey(d => d.StgIdParent)
                    .HasConstraintName("FK_MARKETING_CAMPAIGN_STAGE_PARENT_STAGE");

                entity.HasOne(d => d.Us)
                    .WithMany(p => p.MarketingCampaignStages)
                    .HasForeignKey(d => d.UsId)
                    .HasConstraintName("FK_MARKETING_CAMPAIGN_STAGE_USERS");
            });

            modelBuilder.Entity<MarketingCampaignStageMessage>(entity =>
            {
                entity.HasKey(e => e.SocmesId);

                entity.ToTable("MARKETING_CAMPAIGN_STAGE_MESSAGE");

                entity.Property(e => e.SocmesId)
                    .ValueGeneratedNever()
                    .HasColumnName("SOCMES_ID");

                entity.Property(e => e.ActualRunDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ACTUAL_RUN_DATE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.McsrId).HasColumnName("MCSR_ID");

                entity.Property(e => e.MessageLong).HasColumnName("MESSAGE_LONG");

                entity.Property(e => e.MessageShort)
                    .HasMaxLength(200)
                    .HasColumnName("MESSAGE_SHORT");

                entity.Property(e => e.ScheduledRunDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SCHEDULED_RUN_DATE");

                entity.Property(e => e.SocmesDeleted).HasColumnName("SOCMES_DELETED");

                entity.Property(e => e.State).HasColumnName("STATE");

                entity.Property(e => e.StgId).HasColumnName("STG_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.HasOne(d => d.Mcsr)
                    .WithMany(p => p.MarketingCampaignStageMessages)
                    .HasForeignKey(d => d.McsrId)
                    .HasConstraintName("FK_MARKETING_CAMPAIGN_STAGE_MESSAGE_MARKETING_CAMPAIGN_STAGE_RUN");

                entity.HasOne(d => d.Stg)
                    .WithMany(p => p.MarketingCampaignStageMessages)
                    .HasForeignKey(d => d.StgId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_MARKETING_CAMPAIGN_STAGE_MESSAGE_MARKETING_CAMPAIGN_STAGE");
            });

            modelBuilder.Entity<MarketingCampaignStageMessageSender>(entity =>
            {
                entity.HasKey(e => e.SocsendId);

                entity.ToTable("MARKETING_CAMPAIGN_STAGE_MESSAGE_SENDER");

                entity.Property(e => e.SocsendId)
                    .ValueGeneratedNever()
                    .HasColumnName("SOCSEND_ID");

                entity.Property(e => e.CClicks).HasColumnName("C_CLICKS");

                entity.Property(e => e.Complete).HasColumnName("COMPLETE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.RunDate)
                    .HasColumnType("datetime")
                    .HasColumnName("RUN_DATE");

                entity.Property(e => e.RunErrMsg)
                    .HasMaxLength(500)
                    .HasColumnName("RUN_ERR_MSG");

                entity.Property(e => e.SocId).HasColumnName("SOC_ID");

                entity.Property(e => e.SocmesId).HasColumnName("SOCMES_ID");

                entity.Property(e => e.SubAccountId)
                    .HasMaxLength(255)
                    .HasColumnName("SUB_ACCOUNT_ID");

                entity.Property(e => e.SubAccountName)
                    .HasMaxLength(255)
                    .HasColumnName("SUB_ACCOUNT_NAME");

                entity.Property(e => e.ThirdPartyId)
                    .HasMaxLength(100)
                    .HasColumnName("THIRD_PARTY_ID");

                entity.Property(e => e.ThirdPartyUrl)
                    .HasMaxLength(255)
                    .HasColumnName("THIRD_PARTY_URL");

                entity.HasOne(d => d.Soc)
                    .WithMany(p => p.MarketingCampaignStageMessageSenders)
                    .HasForeignKey(d => d.SocId)
                    .HasConstraintName("FK_MARKETING_CAMPAIGN_STAGE_MESSAGE_SENDER_MARKETING_CAMPAIGN_STAGE_MESSAGE_SENDER");

                entity.HasOne(d => d.Socmes)
                    .WithMany(p => p.MarketingCampaignStageMessageSenders)
                    .HasForeignKey(d => d.SocmesId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_MARKETING_CAMPAIGN_STAGE_MESSAGE_SENDER_MARKETING_CAMPAIGN_STAGE_MESSAGE");
            });

            modelBuilder.Entity<MarketingCampaignStageRecipient>(entity =>
            {
                entity.HasKey(e => e.MtrId)
                    .HasName("PK_MARKETING_CAMPAIGN_STAGE_RECIPIENTS");

                entity.ToTable("MARKETING_CAMPAIGN_STAGE_RECIPIENT");

                entity.Property(e => e.MtrId).HasColumnName("MTR_ID");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.CsId).HasColumnName("CS_ID");

                entity.Property(e => e.EmailInvalidReason)
                    .HasColumnName("EMAIL_INVALID_REASON")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.FaxInvalidReason)
                    .HasColumnName("FAX_INVALID_REASON")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.LetterInvalidReason)
                    .HasColumnName("LETTER_INVALID_REASON")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PhoneInvalidReason)
                    .HasColumnName("PHONE_INVALID_REASON")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Rownum)
                    .HasColumnName("ROWNUM")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SmsInvalidReason)
                    .HasColumnName("SMS_INVALID_REASON")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SrcId).HasColumnName("SRC_ID");

                entity.Property(e => e.StgId).HasColumnName("STG_ID");

                entity.Property(e => e.ValidEmail)
                    .HasColumnName("VALID_EMAIL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ValidFax)
                    .HasColumnName("VALID_FAX")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ValidLetter)
                    .HasColumnName("VALID_LETTER")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ValidPhone)
                    .HasColumnName("VALID_PHONE")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ValidSms)
                    .HasColumnName("VALID_SMS")
                    .HasDefaultValueSql("((0))");

                entity.HasOne(d => d.Ac)
                    .WithMany(p => p.MarketingCampaignStageRecipients)
                    .HasForeignKey(d => d.AcId)
                    .HasConstraintName("FK_MARKETING_CAMPAIGN_STAGE_RECIPIENT_ACCOUNTS");

                entity.HasOne(d => d.Src)
                    .WithMany(p => p.MarketingCampaignStageRecipients)
                    .HasForeignKey(d => d.SrcId)
                    .HasConstraintName("FK_MARKETING_CAMPAIGN_STAGE_RECIPIENT_MARKETING_SOURCE");

                entity.HasOne(d => d.Stg)
                    .WithMany(p => p.MarketingCampaignStageRecipients)
                    .HasForeignKey(d => d.StgId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_MARKETING_CAMPAIGN_STAGE_RECIPIENT_MARKETING_CAMPAIGN_STAGE");
            });

            modelBuilder.Entity<MarketingCampaignStageRule>(entity =>
            {
                entity.HasKey(e => e.StgrulId);

                entity.ToTable("MARKETING_CAMPAIGN_STAGE_RULE");

                entity.Property(e => e.StgrulId)
                    .ValueGeneratedNever()
                    .HasColumnName("STGRUL_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.FollowupOpt).HasColumnName("FOLLOWUP_OPT");

                entity.Property(e => e.MajorFollowupOpt).HasColumnName("MAJOR_FOLLOWUP_OPT");

                entity.Property(e => e.StgId).HasColumnName("STG_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.Value)
                    .HasMaxLength(4000)
                    .HasColumnName("VALUE");
            });

            modelBuilder.Entity<MarketingCampaignStageRun>(entity =>
            {
                entity.HasKey(e => e.McsrId);

                entity.ToTable("MARKETING_CAMPAIGN_STAGE_RUN");

                entity.Property(e => e.McsrId)
                    .ValueGeneratedNever()
                    .HasColumnName("MCSR_ID");

                entity.Property(e => e.ActAcManager).HasColumnName("ACT_AC_MANAGER");

                entity.Property(e => e.ActCreate).HasColumnName("ACT_CREATE");

                entity.Property(e => e.ActDueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ACT_DUE_DATE");

                entity.Property(e => e.ActOwner).HasColumnName("ACT_OWNER");

                entity.Property(e => e.ActStage).HasColumnName("ACT_STAGE");

                entity.Property(e => e.ActStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ACT_START_DATE");

                entity.Property(e => e.CCompleteAppointments).HasColumnName("C_COMPLETE_APPOINTMENTS");

                entity.Property(e => e.CSent).HasColumnName("C_SENT");

                entity.Property(e => e.CTltAppointments).HasColumnName("C_TLT_APPOINTMENTS");

                entity.Property(e => e.CTltEmailsBounced).HasColumnName("C_TLT_EMAILS_BOUNCED");

                entity.Property(e => e.CTltEmailsClicked).HasColumnName("C_TLT_EMAILS_CLICKED");

                entity.Property(e => e.CTltEmailsDelivered).HasColumnName("C_TLT_EMAILS_DELIVERED");

                entity.Property(e => e.CTltEmailsOpened).HasColumnName("C_TLT_EMAILS_OPENED");

                entity.Property(e => e.CTltEmailsReplied).HasColumnName("C_TLT_EMAILS_REPLIED");

                entity.Property(e => e.CTltEmailsUnsuball).HasColumnName("C_TLT_EMAILS_UNSUBALL");

                entity.Property(e => e.CTltEmailsUnsubthis).HasColumnName("C_TLT_EMAILS_UNSUBTHIS");

                entity.Property(e => e.CTotal).HasColumnName("C_TOTAL");

                entity.Property(e => e.CUnqAppointments).HasColumnName("C_UNQ_APPOINTMENTS");

                entity.Property(e => e.CUnqEmailsBounced).HasColumnName("C_UNQ_EMAILS_BOUNCED");

                entity.Property(e => e.CUnqEmailsClicked).HasColumnName("C_UNQ_EMAILS_CLICKED");

                entity.Property(e => e.CUnqEmailsDelivered).HasColumnName("C_UNQ_EMAILS_DELIVERED");

                entity.Property(e => e.CUnqEmailsOpened).HasColumnName("C_UNQ_EMAILS_OPENED");

                entity.Property(e => e.CUnqEmailsReplied).HasColumnName("C_UNQ_EMAILS_REPLIED");

                entity.Property(e => e.CUnqEmailsUnsuball).HasColumnName("C_UNQ_EMAILS_UNSUBALL");

                entity.Property(e => e.CUnqEmailsUnsubthis).HasColumnName("C_UNQ_EMAILS_UNSUBTHIS");

                entity.Property(e => e.CValid).HasColumnName("C_VALID");

                entity.Property(e => e.DefaultRecipient)
                    .HasMaxLength(255)
                    .HasColumnName("DEFAULT_RECIPIENT");

                entity.Property(e => e.DefaultSalutation)
                    .HasMaxLength(255)
                    .HasColumnName("DEFAULT_SALUTATION");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.DocumentLetterJobCreated).HasColumnName("DOCUMENT_LETTER_JOB_CREATED");

                entity.Property(e => e.IsAutomated).HasColumnName("IS_AUTOMATED");

                entity.Property(e => e.McsrDeleted).HasColumnName("MCSR_DELETED");

                entity.Property(e => e.NewOnly).HasColumnName("NEW_ONLY");

                entity.Property(e => e.RunBy)
                    .HasMaxLength(255)
                    .HasColumnName("RUN_BY");

                entity.Property(e => e.RunDate)
                    .HasColumnType("datetime")
                    .HasColumnName("RUN_DATE");

                entity.Property(e => e.RunEnd)
                    .HasColumnType("datetime")
                    .HasColumnName("RUN_END");

                entity.Property(e => e.RunStart)
                    .HasColumnType("datetime")
                    .HasColumnName("RUN_START")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.RunState)
                    .HasColumnName("RUN_STATE")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.StartTime)
                    .HasColumnType("datetime")
                    .HasColumnName("START_TIME");

                entity.Property(e => e.StgId).HasColumnName("STG_ID");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.HasOne(d => d.Stg)
                    .WithMany(p => p.MarketingCampaignStageRuns)
                    .HasForeignKey(d => d.StgId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_MARKETING_CAMPAIGN_STAGE_RUN_MARKETING_CAMPAIGN_STAGE");

                entity.HasOne(d => d.Us)
                    .WithMany(p => p.MarketingCampaignStageRuns)
                    .HasForeignKey(d => d.UsId)
                    .HasConstraintName("FK_MARKETING_CAMPAIGN_STAGE_RUN_USERS");
            });

            modelBuilder.Entity<MarketingCampaignStageRunClick>(entity =>
            {
                entity.HasKey(e => e.MclId);

                entity.ToTable("MARKETING_CAMPAIGN_STAGE_RUN_CLICK");

                entity.Property(e => e.MclId).HasColumnName("MCL_ID");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.CsId).HasColumnName("CS_ID");

                entity.Property(e => e.DateClicked)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_CLICKED");

                entity.Property(e => e.McsrId).HasColumnName("MCSR_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Url)
                    .HasMaxLength(255)
                    .HasColumnName("URL");

                entity.HasOne(d => d.Mcsr)
                    .WithMany(p => p.MarketingCampaignStageRunClicks)
                    .HasForeignKey(d => d.McsrId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_MARKETING_CAMPAIGN_STAGE_RUN_CLICK_MARKETING_CAMPAIGN_STAGE_RUN");
            });

            modelBuilder.Entity<MarketingCampaignStageRunResult>(entity =>
            {
                entity.HasKey(e => e.McsrrId);

                entity.ToTable("MARKETING_CAMPAIGN_STAGE_RUN_RESULT");

                entity.HasIndex(e => e.McsrrGuid, "IX_MARKETING_CAMPAIGN_STAGE_RUN_RESULT")
                    .IsUnique();

                entity.HasIndex(e => new { e.McsrId, e.AccId }, "IX_MCSRR__MCSR_ID_ACC_ID");

                entity.HasIndex(e => new { e.McsrId, e.CsId }, "IX_MCSRR__MCSR_ID_CS_ID");

                entity.HasIndex(e => new { e.IsValid, e.McsrId, e.StgId }, "ix_IS_VALID_MCSR_ID_STG_IDIncludes");

                entity.Property(e => e.McsrrId).HasColumnName("MCSRR_ID");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.ActId).HasColumnName("ACT_ID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CsId).HasColumnName("CS_ID");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.EmailBounced).HasColumnName("EMAIL_BOUNCED");

                entity.Property(e => e.EmailBouncedCode)
                    .HasMaxLength(20)
                    .HasColumnName("EMAIL_BOUNCED_CODE");

                entity.Property(e => e.EmailBouncedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("EMAIL_BOUNCED_DATE");

                entity.Property(e => e.EmailClicked).HasColumnName("EMAIL_CLICKED");

                entity.Property(e => e.EmailClickedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("EMAIL_CLICKED_DATE");

                entity.Property(e => e.EmailDelivered).HasColumnName("EMAIL_DELIVERED");

                entity.Property(e => e.EmailDeliveredDate)
                    .HasColumnType("datetime")
                    .HasColumnName("EMAIL_DELIVERED_DATE");

                entity.Property(e => e.EmailForwarded).HasColumnName("EMAIL_FORWARDED");

                entity.Property(e => e.EmailForwardedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("EMAIL_FORWARDED_DATE");

                entity.Property(e => e.EmailInvalidReason).HasColumnName("EMAIL_INVALID_REASON");

                entity.Property(e => e.EmailOpened).HasColumnName("EMAIL_OPENED");

                entity.Property(e => e.EmailOpenedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("EMAIL_OPENED_DATE");

                entity.Property(e => e.EmailReplied).HasColumnName("EMAIL_REPLIED");

                entity.Property(e => e.EmailRepliedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("EMAIL_REPLIED_DATE");

                entity.Property(e => e.EmailUnsuball).HasColumnName("EMAIL_UNSUBALL");

                entity.Property(e => e.EmailUnsuballDate)
                    .HasColumnType("datetime")
                    .HasColumnName("EMAIL_UNSUBALL_DATE");

                entity.Property(e => e.EmailUnsubthis).HasColumnName("EMAIL_UNSUBTHIS");

                entity.Property(e => e.EmailUnsubthisDate)
                    .HasColumnType("datetime")
                    .HasColumnName("EMAIL_UNSUBTHIS_DATE");

                entity.Property(e => e.FaxInvalidReason).HasColumnName("FAX_INVALID_REASON");

                entity.Property(e => e.IsValid).HasColumnName("IS_VALID");

                entity.Property(e => e.LetterInvalidReason).HasColumnName("LETTER_INVALID_REASON");

                entity.Property(e => e.McsrId).HasColumnName("MCSR_ID");

                entity.Property(e => e.McsrrDeleted).HasColumnName("MCSRR_DELETED");

                entity.Property(e => e.McsrrGuid).HasColumnName("MCSRR_GUID");

                entity.Property(e => e.PhoneInvalidReason).HasColumnName("PHONE_INVALID_REASON");

                entity.Property(e => e.SmsInvalidReason).HasColumnName("SMS_INVALID_REASON");

                entity.Property(e => e.SrcId).HasColumnName("SRC_ID");

                entity.Property(e => e.StgId).HasColumnName("STG_ID");

                entity.Property(e => e.ValidEmail).HasColumnName("VALID_EMAIL");

                entity.Property(e => e.ValidFax).HasColumnName("VALID_FAX");

                entity.Property(e => e.ValidLetter).HasColumnName("VALID_LETTER");

                entity.Property(e => e.ValidPhone).HasColumnName("VALID_PHONE");

                entity.Property(e => e.ValidSms).HasColumnName("VALID_SMS");

                entity.HasOne(d => d.Ac)
                    .WithMany(p => p.MarketingCampaignStageRunResults)
                    .HasForeignKey(d => d.AcId)
                    .HasConstraintName("FK_MARKETING_CAMPAIGN_STAGE_RUN_RESULT_ACCOUNTS");

                entity.HasOne(d => d.Acc)
                    .WithMany(p => p.MarketingCampaignStageRunResults)
                    .HasForeignKey(d => d.AccId)
                    .HasConstraintName("FK_MARKETING_CAMPAIGN_STAGE_RUN_RESULT_ACCOUNTS_CONTACTS");

                entity.HasOne(d => d.Act)
                    .WithMany(p => p.MarketingCampaignStageRunResults)
                    .HasForeignKey(d => d.ActId)
                    .HasConstraintName("FK_MARKETING_CAMPAIGN_STAGE_RUN_RESULT_ACTIVITIES");

                entity.HasOne(d => d.Mcsr)
                    .WithMany(p => p.MarketingCampaignStageRunResults)
                    .HasForeignKey(d => d.McsrId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_MARKETING_CAMPAIGN_STAGE_RUN_RESULT_MARKETING_CAMPAIGN_STAGE_RUN");

                entity.HasOne(d => d.Src)
                    .WithMany(p => p.MarketingCampaignStageRunResults)
                    .HasForeignKey(d => d.SrcId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_MARKETING_CAMPAIGN_STAGE_RUN_RESULT_MARKETING_SOURCE");

                entity.HasOne(d => d.Stg)
                    .WithMany(p => p.MarketingCampaignStageRunResults)
                    .HasForeignKey(d => d.StgId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_MARKETING_CAMPAIGN_STAGE_RUN_RESULT_MARKETING_CAMPAIGN_STAGE");
            });

            modelBuilder.Entity<MarketingControlJob>(entity =>
            {
                entity.HasKey(e => e.JobId);

                entity.ToTable("MARKETING_CONTROL_JOBS");

                entity.HasIndex(e => e.JobState, "IX_MARKETING_CONTROL_JOBS__JOB_STATE__INCL_FLT")
                    .HasFilter("([JOB_STATE]=(0))");

                entity.Property(e => e.JobId).HasColumnName("JOB_ID");

                entity.Property(e => e.BlockActivities).HasColumnName("BLOCK_ACTIVITIES");

                entity.Property(e => e.CreatedDateUtc)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE_UTC");

                entity.Property(e => e.JobState).HasColumnName("JOB_STATE");

                entity.Property(e => e.JobType).HasColumnName("JOB_TYPE");

                entity.Property(e => e.NewRecipientsOnly).HasColumnName("NEW_RECIPIENTS_ONLY");

                entity.Property(e => e.ProcessEndUtc)
                    .HasColumnType("datetime")
                    .HasColumnName("PROCESS_END_UTC");

                entity.Property(e => e.ProcessStartUtc)
                    .HasColumnType("datetime")
                    .HasColumnName("PROCESS_START_UTC");

                entity.Property(e => e.RefreshParents).HasColumnName("REFRESH_PARENTS");

                entity.Property(e => e.RefreshSources).HasColumnName("REFRESH_SOURCES");

                entity.Property(e => e.RunId).HasColumnName("RUN_ID");

                entity.Property(e => e.SourceId).HasColumnName("SOURCE_ID");

                entity.Property(e => e.StageId).HasColumnName("STAGE_ID");

                entity.Property(e => e.StartDateTime)
                    .HasColumnType("datetime")
                    .HasColumnName("START_DATE_TIME");

                entity.Property(e => e.TemplatePath)
                    .HasMaxLength(2000)
                    .HasColumnName("TEMPLATE_PATH");

                entity.Property(e => e.UpdatedDateUtc)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE_UTC");

                entity.Property(e => e.UserId).HasColumnName("USER_ID");
            });

            modelBuilder.Entity<MarketingRecipientCount>(entity =>
            {
                entity.HasKey(e => e.MrcId);

                entity.ToTable("MARKETING_RECIPIENT_COUNTS");

                entity.Property(e => e.MrcId).HasColumnName("MRC_ID");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.CsId).HasColumnName("CS_ID");

                entity.Property(e => e.RunTimes).HasColumnName("RUN_TIMES");

                entity.Property(e => e.Type).HasColumnName("TYPE");
            });

            modelBuilder.Entity<MarketingSource>(entity =>
            {
                entity.HasKey(e => e.SrcId);

                entity.ToTable("MARKETING_SOURCE");

                entity.HasIndex(e => e.ShortCode, "IX__MARKETING_SOURCE__SHORT_CODE");

                entity.Property(e => e.SrcId)
                    .HasColumnName("SRC_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.CEmailsBounced).HasColumnName("C_EMAILS_BOUNCED");

                entity.Property(e => e.CEmailsClicked).HasColumnName("C_EMAILS_CLICKED");

                entity.Property(e => e.CEmailsDelivered).HasColumnName("C_EMAILS_DELIVERED");

                entity.Property(e => e.CEmailsForwarded).HasColumnName("C_EMAILS_FORWARDED");

                entity.Property(e => e.CEmailsOpened).HasColumnName("C_EMAILS_OPENED");

                entity.Property(e => e.CEmailsReplied).HasColumnName("C_EMAILS_REPLIED");

                entity.Property(e => e.CEmailsRunningtotal).HasColumnName("C_EMAILS_RUNNINGTOTAL");

                entity.Property(e => e.CExcludedContacts).HasColumnName("C_EXCLUDED_CONTACTS");

                entity.Property(e => e.CExcludedItems).HasColumnName("C_EXCLUDED_ITEMS");

                entity.Property(e => e.CFaxRunningtotal).HasColumnName("C_FAX_RUNNINGTOTAL");

                entity.Property(e => e.CIncludedContacts).HasColumnName("C_INCLUDED_CONTACTS");

                entity.Property(e => e.CIncludedItems).HasColumnName("C_INCLUDED_ITEMS");

                entity.Property(e => e.CLetterRunningtotal).HasColumnName("C_LETTER_RUNNINGTOTAL");

                entity.Property(e => e.CPhoneRunningtotal).HasColumnName("C_PHONE_RUNNINGTOTAL");

                entity.Property(e => e.CTimesSentEmail).HasColumnName("C_TIMES_SENT_EMAIL");

                entity.Property(e => e.CTimesSentFax).HasColumnName("C_TIMES_SENT_FAX");

                entity.Property(e => e.CTimesSentLetter).HasColumnName("C_TIMES_SENT_LETTER");

                entity.Property(e => e.CTimesSentPhone).HasColumnName("C_TIMES_SENT_PHONE");

                entity.Property(e => e.CTimesSentTotal).HasColumnName("C_TIMES_SENT_TOTAL");

                entity.Property(e => e.CTotal).HasColumnName("C_TOTAL");

                entity.Property(e => e.CValidEmail).HasColumnName("C_VALID_EMAIL");

                entity.Property(e => e.CValidFax).HasColumnName("C_VALID_FAX");

                entity.Property(e => e.CValidLetter).HasColumnName("C_VALID_LETTER");

                entity.Property(e => e.CValidPhone).HasColumnName("C_VALID_PHONE");

                entity.Property(e => e.CValidSms)
                    .HasColumnName("C_VALID_SMS")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Deleted).HasColumnName("DELETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Dormant).HasColumnName("DORMANT");

                entity.Property(e => e.DormantBy)
                    .HasMaxLength(10)
                    .HasColumnName("DORMANT_BY")
                    .IsFixedLength(true);

                entity.Property(e => e.DormantDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DORMANT_DATE");

                entity.Property(e => e.LastRefresh)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_REFRESH")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.LastRefreshBy)
                    .HasMaxLength(255)
                    .HasColumnName("LAST_REFRESH_BY");

                entity.Property(e => e.LastRuleChange)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_RULE_CHANGE");

                entity.Property(e => e.LastRuleChangeBy)
                    .HasMaxLength(255)
                    .HasColumnName("LAST_RULE_CHANGE_BY");

                entity.Property(e => e.PrefEmail).HasColumnName("PREF_EMAIL");

                entity.Property(e => e.PrefFax).HasColumnName("PREF_FAX");

                entity.Property(e => e.PrefLetter).HasColumnName("PREF_LETTER");

                entity.Property(e => e.PrefPhone).HasColumnName("PREF_PHONE");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", true);

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.SgId).HasColumnName("SG_ID");

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'SRC-')");

                entity.Property(e => e.SrcExternal)
                    .HasMaxLength(255)
                    .HasColumnName("SRC_EXTERNAL");

                entity.Property(e => e.SrcType).HasColumnName("SRC_TYPE");

                entity.Property(e => e.SrcUd1)
                    .HasMaxLength(255)
                    .HasColumnName("SRC_UD1");

                entity.Property(e => e.SrcUd10)
                    .HasMaxLength(255)
                    .HasColumnName("SRC_UD10");

                entity.Property(e => e.SrcUd10Bit).HasColumnName("SRC_UD10_BIT");

                entity.Property(e => e.SrcUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SRC_UD10_DATE");

                entity.Property(e => e.SrcUd10Id).HasColumnName("SRC_UD10_ID");

                entity.Property(e => e.SrcUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SRC_UD10_NUMERIC");

                entity.Property(e => e.SrcUd11Bit).HasColumnName("SRC_UD11_BIT");

                entity.Property(e => e.SrcUd12Bit).HasColumnName("SRC_UD12_BIT");

                entity.Property(e => e.SrcUd13Bit).HasColumnName("SRC_UD13_BIT");

                entity.Property(e => e.SrcUd14Bit).HasColumnName("SRC_UD14_BIT");

                entity.Property(e => e.SrcUd15Bit).HasColumnName("SRC_UD15_BIT");

                entity.Property(e => e.SrcUd16Bit).HasColumnName("SRC_UD16_BIT");

                entity.Property(e => e.SrcUd17Bit).HasColumnName("SRC_UD17_BIT");

                entity.Property(e => e.SrcUd18Bit).HasColumnName("SRC_UD18_BIT");

                entity.Property(e => e.SrcUd19Bit).HasColumnName("SRC_UD19_BIT");

                entity.Property(e => e.SrcUd1Bit).HasColumnName("SRC_UD1_BIT");

                entity.Property(e => e.SrcUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SRC_UD1_DATE");

                entity.Property(e => e.SrcUd1Id).HasColumnName("SRC_UD1_ID");

                entity.Property(e => e.SrcUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SRC_UD1_NUMERIC");

                entity.Property(e => e.SrcUd2)
                    .HasMaxLength(255)
                    .HasColumnName("SRC_UD2");

                entity.Property(e => e.SrcUd20Bit).HasColumnName("SRC_UD20_BIT");

                entity.Property(e => e.SrcUd21Bit).HasColumnName("SRC_UD21_BIT");

                entity.Property(e => e.SrcUd22Bit).HasColumnName("SRC_UD22_BIT");

                entity.Property(e => e.SrcUd23Bit).HasColumnName("SRC_UD23_BIT");

                entity.Property(e => e.SrcUd24Bit).HasColumnName("SRC_UD24_BIT");

                entity.Property(e => e.SrcUd2Bit).HasColumnName("SRC_UD2_BIT");

                entity.Property(e => e.SrcUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SRC_UD2_DATE");

                entity.Property(e => e.SrcUd2Id).HasColumnName("SRC_UD2_ID");

                entity.Property(e => e.SrcUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SRC_UD2_NUMERIC");

                entity.Property(e => e.SrcUd3)
                    .HasMaxLength(255)
                    .HasColumnName("SRC_UD3");

                entity.Property(e => e.SrcUd3Bit).HasColumnName("SRC_UD3_BIT");

                entity.Property(e => e.SrcUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SRC_UD3_DATE");

                entity.Property(e => e.SrcUd3Id).HasColumnName("SRC_UD3_ID");

                entity.Property(e => e.SrcUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SRC_UD3_NUMERIC");

                entity.Property(e => e.SrcUd4)
                    .HasMaxLength(255)
                    .HasColumnName("SRC_UD4");

                entity.Property(e => e.SrcUd4Bit).HasColumnName("SRC_UD4_BIT");

                entity.Property(e => e.SrcUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SRC_UD4_DATE");

                entity.Property(e => e.SrcUd4Id).HasColumnName("SRC_UD4_ID");

                entity.Property(e => e.SrcUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SRC_UD4_NUMERIC");

                entity.Property(e => e.SrcUd5)
                    .HasMaxLength(255)
                    .HasColumnName("SRC_UD5");

                entity.Property(e => e.SrcUd5Bit).HasColumnName("SRC_UD5_BIT");

                entity.Property(e => e.SrcUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SRC_UD5_DATE");

                entity.Property(e => e.SrcUd5Id).HasColumnName("SRC_UD5_ID");

                entity.Property(e => e.SrcUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SRC_UD5_NUMERIC");

                entity.Property(e => e.SrcUd6)
                    .HasMaxLength(255)
                    .HasColumnName("SRC_UD6");

                entity.Property(e => e.SrcUd6Bit).HasColumnName("SRC_UD6_BIT");

                entity.Property(e => e.SrcUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SRC_UD6_DATE");

                entity.Property(e => e.SrcUd6Id).HasColumnName("SRC_UD6_ID");

                entity.Property(e => e.SrcUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SRC_UD6_NUMERIC");

                entity.Property(e => e.SrcUd7)
                    .HasMaxLength(255)
                    .HasColumnName("SRC_UD7");

                entity.Property(e => e.SrcUd7Bit).HasColumnName("SRC_UD7_BIT");

                entity.Property(e => e.SrcUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SRC_UD7_DATE");

                entity.Property(e => e.SrcUd7Id).HasColumnName("SRC_UD7_ID");

                entity.Property(e => e.SrcUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SRC_UD7_NUMERIC");

                entity.Property(e => e.SrcUd8)
                    .HasMaxLength(255)
                    .HasColumnName("SRC_UD8");

                entity.Property(e => e.SrcUd8Bit).HasColumnName("SRC_UD8_BIT");

                entity.Property(e => e.SrcUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SRC_UD8_DATE");

                entity.Property(e => e.SrcUd8Id).HasColumnName("SRC_UD8_ID");

                entity.Property(e => e.SrcUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SRC_UD8_NUMERIC");

                entity.Property(e => e.SrcUd9)
                    .HasMaxLength(255)
                    .HasColumnName("SRC_UD9");

                entity.Property(e => e.SrcUd9Bit).HasColumnName("SRC_UD9_BIT");

                entity.Property(e => e.SrcUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SRC_UD9_DATE");

                entity.Property(e => e.SrcUd9Id).HasColumnName("SRC_UD9_ID");

                entity.Property(e => e.SrcUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SRC_UD9_NUMERIC");

                entity.Property(e => e.State).HasColumnName("STATE");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Type).HasColumnName("TYPE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.HasOne(d => d.Us)
                    .WithMany(p => p.MarketingSources)
                    .HasForeignKey(d => d.UsId)
                    .HasConstraintName("FK_MARKETING_SOURCE_USERS");
            });

            modelBuilder.Entity<MarketingSourceQuery>(entity =>
            {
                entity.HasKey(e => e.QueId);

                entity.ToTable("MARKETING_SOURCE_QUERY");

                entity.Property(e => e.QueId).HasColumnName("QUE_ID");

                entity.Property(e => e.QueryGvSerialised).HasColumnName("QUERY_GV_SERIALISED");

                entity.Property(e => e.QuerySql).HasColumnName("QUERY_SQL");

                entity.Property(e => e.RulId).HasColumnName("RUL_ID");

                entity.HasOne(d => d.Rul)
                    .WithMany(p => p.MarketingSourceQueries)
                    .HasForeignKey(d => d.RulId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_MARKETING_SOURCE_QUERY_MARKETING_SOURCE_RULE");
            });

            modelBuilder.Entity<MarketingSourceRecipient>(entity =>
            {
                entity.HasKey(e => e.MsrId);

                entity.ToTable("MARKETING_SOURCE_RECIPIENT");

                entity.HasIndex(e => e.SrcId, "IX_MSR__SRC_ID");

                entity.HasIndex(e => new { e.SrcId, e.Include }, "IX__MSR__SRC_ID_INCLUDE__INCLS");

                entity.Property(e => e.MsrId).HasColumnName("MSR_ID");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.CompiledIncluded).HasColumnName("COMPILED_INCLUDED");

                entity.Property(e => e.CsId).HasColumnName("CS_ID");

                entity.Property(e => e.EmailInvalidReason).HasColumnName("EMAIL_INVALID_REASON");

                entity.Property(e => e.FaxInvalidReason).HasColumnName("FAX_INVALID_REASON");

                entity.Property(e => e.Include)
                    .IsRequired()
                    .HasColumnName("INCLUDE")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.IsLead).HasColumnName("IS_LEAD");

                entity.Property(e => e.LetterInvalidReason).HasColumnName("LETTER_INVALID_REASON");

                entity.Property(e => e.PhoneInvalidReason).HasColumnName("PHONE_INVALID_REASON");

                entity.Property(e => e.RulId).HasColumnName("RUL_ID");

                entity.Property(e => e.SmsInvalidReason).HasColumnName("SMS_INVALID_REASON");

                entity.Property(e => e.SrcId).HasColumnName("SRC_ID");

                entity.Property(e => e.ValidEmail).HasColumnName("VALID_EMAIL");

                entity.Property(e => e.ValidFax).HasColumnName("VALID_FAX");

                entity.Property(e => e.ValidLetter).HasColumnName("VALID_LETTER");

                entity.Property(e => e.ValidPhone).HasColumnName("VALID_PHONE");

                entity.Property(e => e.ValidSms).HasColumnName("VALID_SMS");

                entity.HasOne(d => d.Ac)
                    .WithMany(p => p.MarketingSourceRecipients)
                    .HasForeignKey(d => d.AcId)
                    .HasConstraintName("FK_MARKETING_SOURCE_RECIPIENT_ACCOUNTS");

                entity.HasOne(d => d.Rul)
                    .WithMany(p => p.MarketingSourceRecipients)
                    .HasForeignKey(d => d.RulId)
                    .HasConstraintName("FK_MARKETING_SOURCE_RECIPIENT_MARKETING_SOURCE_RULE");
            });

            modelBuilder.Entity<MarketingSourceRule>(entity =>
            {
                entity.HasKey(e => e.RulId);

                entity.ToTable("MARKETING_SOURCE_RULE");

                entity.Property(e => e.RulId).HasColumnName("RUL_ID");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.CTotal).HasColumnName("C_TOTAL");

                entity.Property(e => e.CValidEmail).HasColumnName("C_VALID_EMAIL");

                entity.Property(e => e.CValidFax).HasColumnName("C_VALID_FAX");

                entity.Property(e => e.CValidLetter).HasColumnName("C_VALID_LETTER");

                entity.Property(e => e.CValidPhone).HasColumnName("C_VALID_PHONE");

                entity.Property(e => e.CValidSms).HasColumnName("C_VALID_SMS");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CsId).HasColumnName("CS_ID");

                entity.Property(e => e.DefaultToAccount).HasColumnName("DEFAULT_TO_ACCOUNT");

                entity.Property(e => e.Deleted).HasColumnName("DELETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.LastRefresh)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_REFRESH");

                entity.Property(e => e.LastRefreshBy)
                    .HasMaxLength(255)
                    .HasColumnName("LAST_REFRESH_BY");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.ObjType)
                    .HasMaxLength(50)
                    .HasColumnName("OBJ_TYPE");

                entity.Property(e => e.RuleOption).HasColumnName("RULE_OPTION");

                entity.Property(e => e.RuleType).HasColumnName("RULE_TYPE");

                entity.Property(e => e.SrcId).HasColumnName("SRC_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.HasOne(d => d.Acc)
                    .WithMany(p => p.MarketingSourceRules)
                    .HasForeignKey(d => d.AccId)
                    .HasConstraintName("FK_MARKETING_SOURCE_RULE_ACCOUNTS_CONTACTS");

                entity.HasOne(d => d.Src)
                    .WithMany(p => p.MarketingSourceRules)
                    .HasForeignKey(d => d.SrcId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_MARKETING_SOURCE_RULE_MARKETING_SOURCE");
            });

            modelBuilder.Entity<MarketingStageSource>(entity =>
            {
                entity.HasKey(e => new { e.StgId, e.SrcId });

                entity.ToTable("MARKETING_STAGE_SOURCE");

                entity.Property(e => e.StgId).HasColumnName("STG_ID");

                entity.Property(e => e.SrcId).HasColumnName("SRC_ID");

                entity.Property(e => e.Include)
                    .IsRequired()
                    .HasColumnName("INCLUDE")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Rank).HasColumnName("RANK");
            });

            modelBuilder.Entity<McMuid>(entity =>
            {
                entity.HasKey(e => e.McMuidId)
                    .IsClustered(false);

                entity.ToTable("MC_MUID");

                entity.Property(e => e.McMuidId)
                    .ValueGeneratedNever()
                    .HasColumnName("MC_MUID_ID");
            });

            modelBuilder.Entity<McMuidLink>(entity =>
            {
                entity.HasKey(e => new { e.McMuidId, e.DrId, e.DroId });

                entity.ToTable("MC_MUID_LINKS");

                entity.Property(e => e.McMuidId).HasColumnName("MC_MUID_ID");

                entity.Property(e => e.DrId).HasColumnName("DR_ID");

                entity.Property(e => e.DroId).HasColumnName("DRO_ID");
            });

            modelBuilder.Entity<McaBit>(entity =>
            {
                entity.ToTable("MCA_BIT");

                entity.Property(e => e.McaBitId)
                    .ValueGeneratedNever()
                    .HasColumnName("MCA_BIT_ID");

                entity.HasOne(d => d.McaBitNavigation)
                    .WithOne(p => p.McaBit)
                    .HasForeignKey<McaBit>(d => d.McaBitId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__MCA_BIT__MCA_BIT__28AF7DB4");
            });

            modelBuilder.Entity<McaDate>(entity =>
            {
                entity.ToTable("MCA_DATE");

                entity.Property(e => e.McaDateId)
                    .ValueGeneratedNever()
                    .HasColumnName("MCA_DATE_ID");

                entity.HasOne(d => d.McaDateNavigation)
                    .WithOne(p => p.McaDate)
                    .HasForeignKey<McaDate>(d => d.McaDateId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__MCA_DATE__MCA_DA__2B8BEA5F");
            });

            modelBuilder.Entity<McaNum>(entity =>
            {
                entity.ToTable("MCA_NUM");

                entity.Property(e => e.McaNumId)
                    .ValueGeneratedNever()
                    .HasColumnName("MCA_NUM_ID");

                entity.HasOne(d => d.McaNumNavigation)
                    .WithOne(p => p.McaNum)
                    .HasForeignKey<McaNum>(d => d.McaNumId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__MCA_NUM__MCA_NUM__3144C3B5");
            });

            modelBuilder.Entity<McaTxt>(entity =>
            {
                entity.ToTable("MCA_TXT");

                entity.Property(e => e.McaTxtId)
                    .ValueGeneratedNever()
                    .HasColumnName("MCA_TXT_ID");

                entity.HasOne(d => d.McaTxtNavigation)
                    .WithOne(p => p.McaTxt)
                    .HasForeignKey<McaTxt>(d => d.McaTxtId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__MCA_TXT__MCA_TXT__25D31109");
            });

            modelBuilder.Entity<McaUid>(entity =>
            {
                entity.ToTable("MCA_UID");

                entity.Property(e => e.McaUidId)
                    .ValueGeneratedNever()
                    .HasColumnName("MCA_UID_ID");

                entity.HasOne(d => d.McaUidNavigation)
                    .WithOne(p => p.McaUid)
                    .HasForeignKey<McaUid>(d => d.McaUidId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__MCA_UID__MCA_UID__2E68570A");
            });

            modelBuilder.Entity<McsMuid>(entity =>
            {
                entity.HasKey(e => e.McsMuidId)
                    .IsClustered(false);

                entity.ToTable("MCS_MUID");

                entity.Property(e => e.McsMuidId)
                    .ValueGeneratedNever()
                    .HasColumnName("MCS_MUID_ID");
            });

            modelBuilder.Entity<McsMuidLink>(entity =>
            {
                entity.HasKey(e => new { e.McsMuidId, e.DrId, e.DroId });

                entity.ToTable("MCS_MUID_LINKS");

                entity.Property(e => e.McsMuidId).HasColumnName("MCS_MUID_ID");

                entity.Property(e => e.DrId).HasColumnName("DR_ID");

                entity.Property(e => e.DroId).HasColumnName("DRO_ID");
            });

            modelBuilder.Entity<Menu>(entity =>
            {
                entity.HasKey(e => e.MenusId);

                entity.ToTable("MENUS", "Portal");

                entity.Property(e => e.MenusId)
                    .ValueGeneratedNever()
                    .HasColumnName("MENUS_ID");

                entity.Property(e => e.ColumnLayoutId).HasColumnName("COLUMN_LAYOUT_ID");

                entity.Property(e => e.MenusName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnName("MENUS_NAME")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<MenuGroup>(entity =>
            {
                entity.HasKey(e => e.MgrpId);

                entity.ToTable("MENU_GROUPS");

                entity.Property(e => e.MgrpId)
                    .ValueGeneratedNever()
                    .HasColumnName("MGRP_ID");

                entity.Property(e => e.AccessRights).HasColumnName("ACCESS_RIGHTS");

                entity.Property(e => e.Icon)
                    .HasMaxLength(255)
                    .HasColumnName("ICON");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");
            });

            modelBuilder.Entity<MenuGroupsSetting>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("MENU_GROUPS_SETTINGS");

                entity.Property(e => e.Hidden).HasColumnName("HIDDEN");

                entity.Property(e => e.MgrpId).HasColumnName("MGRP_ID");

                entity.Property(e => e.MgrpsId).HasColumnName("MGRPS_ID");

                entity.Property(e => e.Order).HasColumnName("ORDER");

                entity.Property(e => e.UsId).HasColumnName("US_ID");
            });

            modelBuilder.Entity<MenuItem>(entity =>
            {
                entity.HasKey(e => e.MitmId);

                entity.ToTable("MENU_ITEMS");

                entity.Property(e => e.MitmId)
                    .ValueGeneratedNever()
                    .HasColumnName("MITM_ID");

                entity.Property(e => e.AccessRights).HasColumnName("ACCESS_RIGHTS");

                entity.Property(e => e.MenuItemType).HasColumnName("MENU_ITEM_TYPE");

                entity.Property(e => e.MgrpId).HasColumnName("MGRP_ID");

                entity.Property(e => e.ReqId).HasColumnName("REQ_ID");

                entity.Property(e => e.TypeId).HasColumnName("TYPE_ID");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");
            });

            modelBuilder.Entity<MenuItemsSetting>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("MENU_ITEMS_SETTINGS");

                entity.Property(e => e.Hidden).HasColumnName("HIDDEN");

                entity.Property(e => e.MitmId).HasColumnName("MITM_ID");

                entity.Property(e => e.MitmsId).HasColumnName("MITMS_ID");

                entity.Property(e => e.Order).HasColumnName("ORDER");
            });

            modelBuilder.Entity<MenuOverlay>(entity =>
            {
                entity.ToTable("MENU_OVERLAYS", "files");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Content)
                    .IsRequired()
                    .HasColumnName("CONTENT");

                entity.Property(e => e.Lang)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("LANG");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("NAME");
            });

            modelBuilder.Entity<Migration>(entity =>
            {
                entity.HasKey(e => e.MigId);

                entity.ToTable("MIGRATIONS");

                entity.Property(e => e.MigId)
                    .ValueGeneratedNever()
                    .HasColumnName("MIG_ID");

                entity.Property(e => e.Filename)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("FILENAME")
                    .UseCollation("Latin1_General_CI_AS");

                entity.Property(e => e.Order).HasColumnName("ORDER");
            });

            modelBuilder.Entity<MigrationsState>(entity =>
            {
                entity.HasKey(e => e.MigId);

                entity.ToTable("MIGRATIONS_STATE");

                entity.Property(e => e.MigId)
                    .ValueGeneratedNever()
                    .HasColumnName("MIG_ID");

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("END_DATE");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("START_DATE");

                entity.Property(e => e.State).HasColumnName("STATE");
            });

            modelBuilder.Entity<Module>(entity =>
            {
                entity.ToTable("MODULES", "Portal");

                entity.Property(e => e.ModuleId)
                    .ValueGeneratedNever()
                    .HasColumnName("MODULE_ID");

                entity.Property(e => e.AreaType).HasColumnName("AREA_TYPE");

                entity.Property(e => e.Category).HasColumnName("CATEGORY");

                entity.Property(e => e.Enabled).HasColumnName("ENABLED");

                entity.Property(e => e.ModuleAlias)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("MODULE_ALIAS")
                    .UseCollation("Latin1_General_CI_AS");

                entity.Property(e => e.ModuleName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("MODULE_NAME")
                    .UseCollation("Latin1_General_CI_AS");

                entity.Property(e => e.RequiresSubscription).HasColumnName("REQUIRES_SUBSCRIPTION");
            });

            modelBuilder.Entity<MsMuid>(entity =>
            {
                entity.HasKey(e => e.MsMuidId)
                    .IsClustered(false);

                entity.ToTable("MS_MUID");

                entity.Property(e => e.MsMuidId)
                    .ValueGeneratedNever()
                    .HasColumnName("MS_MUID_ID");
            });

            modelBuilder.Entity<MsMuidLink>(entity =>
            {
                entity.HasKey(e => new { e.MsMuidId, e.DrId, e.DroId });

                entity.ToTable("MS_MUID_LINKS");

                entity.Property(e => e.MsMuidId).HasColumnName("MS_MUID_ID");

                entity.Property(e => e.DrId).HasColumnName("DR_ID");

                entity.Property(e => e.DroId).HasColumnName("DRO_ID");
            });

            modelBuilder.Entity<Note>(entity =>
            {
                entity.HasKey(e => e.NtId);

                entity.ToTable("NOTES");

                entity.HasIndex(e => e.AccId, "IX_NOTES_ACC_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.AcId, "IX_NOTES_AC_ID_INCLUDES")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.CreatedDate, "IX_NOTES_CREATED_DATE")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.ParentId, "IX_NOTES_PARENT_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.UsId, "IX_NOTES_US_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => new { e.AcaId, e.NtDeleted }, "IX__NOTES__ACA_ID_DELETED");

                entity.HasIndex(e => e.ShortCode, "IX__NOTES__SHORT_CODE");

                entity.Property(e => e.NtId)
                    .ValueGeneratedNever()
                    .HasColumnName("NT_ID");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcaId).HasColumnName("ACA_ID");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccaId).HasColumnName("ACCA_ID");

                entity.Property(e => e.AcpId).HasColumnName("ACP_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details)
                    .HasMaxLength(4000)
                    .HasColumnName("DETAILS");

                entity.Property(e => e.IsPhoneNote).HasColumnName("IS_PHONE_NOTE");

                entity.Property(e => e.IsSecure).HasColumnName("IS_SECURE");

                entity.Property(e => e.NoteType)
                    .HasMaxLength(30)
                    .HasColumnName("NOTE_TYPE");

                entity.Property(e => e.Notice).HasColumnName("NOTICE");

                entity.Property(e => e.NtDeleted).HasColumnName("NT_DELETED");

                entity.Property(e => e.NtEmpty).HasColumnName("NT_EMPTY");

                entity.Property(e => e.NtExternal)
                    .HasMaxLength(255)
                    .HasColumnName("NT_EXTERNAL");

                entity.Property(e => e.NtImport).HasColumnName("NT_IMPORT");

                entity.Property(e => e.OpId).HasColumnName("OP_ID");

                entity.Property(e => e.OpaId).HasColumnName("OPA_ID");

                entity.Property(e => e.OpcId).HasColumnName("OPC_ID");

                entity.Property(e => e.OpcaId).HasColumnName("OPCA_ID");

                entity.Property(e => e.OpcqId).HasColumnName("OPCQ_ID");

                entity.Property(e => e.OpqId).HasColumnName("OPQ_ID");

                entity.Property(e => e.OutlookNote).HasColumnName("OUTLOOK_NOTE");

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.PjId).HasColumnName("PJ_ID");

                entity.Property(e => e.PjaId).HasColumnName("PJA_ID");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", true);

                entity.Property(e => e.ReminderAlerted).HasColumnName("REMINDER_ALERTED");

                entity.Property(e => e.ReminderDate)
                    .HasColumnType("datetime")
                    .HasColumnName("REMINDER_DATE");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'NOT-')");

                entity.Property(e => e.ShowOnPortal).HasColumnName("SHOW_ON_PORTAL");

                entity.Property(e => e.SitId).HasColumnName("SIT_ID");

                entity.Property(e => e.Sticky).HasColumnName("STICKY");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsaId).HasColumnName("USA_ID");

                entity.HasOne(d => d.Ac)
                    .WithMany(p => p.Notes)
                    .HasForeignKey(d => d.AcId)
                    .HasConstraintName("FK_NOTES_ACCOUNTS");

                entity.HasOne(d => d.Acc)
                    .WithMany(p => p.Notes)
                    .HasForeignKey(d => d.AccId)
                    .HasConstraintName("FK_NOTES_ACCOUNTS_CONTACTS");

                entity.HasOne(d => d.Sit)
                    .WithMany(p => p.Notes)
                    .HasForeignKey(d => d.SitId)
                    .HasConstraintName("FK_NOTES_SITES");

                entity.HasOne(d => d.Us)
                    .WithMany(p => p.Notes)
                    .HasForeignKey(d => d.UsId)
                    .HasConstraintName("FK_NOTES_USERS");
            });

            modelBuilder.Entity<Number>(entity =>
            {
                entity.HasKey(e => e.Number1);

                entity.ToTable("NUMBERS");

                entity.Property(e => e.Number1)
                    .ValueGeneratedNever()
                    .HasColumnName("Number");
            });

            modelBuilder.Entity<ObjectsMember>(entity =>
            {
                entity.HasKey(e => e.OmId);

                entity.ToTable("OBJECTS_MEMBERS");

                entity.HasIndex(e => e.ObjId, "IX_OBJECTS_MEMBERS_OBJ_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => new { e.OmId, e.UsgId }, "IX_OBJECTS_MEMBERS_OM_ID_USG_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.UsgId, "IX_OBJECT_MEMBERS_HOTBAR_1")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => new { e.UsgId, e.ObjId }, "IX__OM__USG_ID_OBJ_ID");

                entity.Property(e => e.OmId)
                    .ValueGeneratedNever()
                    .HasColumnName("OM_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.Owner).HasColumnName("OWNER");

                entity.Property(e => e.Role).HasColumnName("ROLE");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");

                entity.HasOne(d => d.Usg)
                    .WithMany(p => p.ObjectsMembers)
                    .HasForeignKey(d => d.UsgId)
                    .HasConstraintName("FK_OBJECTS_MEMBERS_USERS_GROUPS");
            });

            modelBuilder.Entity<OpBit>(entity =>
            {
                entity.ToTable("OP_BIT");

                entity.Property(e => e.OpBitId)
                    .ValueGeneratedNever()
                    .HasColumnName("OP_BIT_ID");

                entity.HasOne(d => d.OpBitNavigation)
                    .WithOne(p => p.OpBit)
                    .HasForeignKey<OpBit>(d => d.OpBitId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__OP_BIT__OP_BIT_I__7DC51FAF");
            });

            modelBuilder.Entity<OpDate>(entity =>
            {
                entity.ToTable("OP_DATE");

                entity.Property(e => e.OpDateId)
                    .ValueGeneratedNever()
                    .HasColumnName("OP_DATE_ID");

                entity.HasOne(d => d.OpDateNavigation)
                    .WithOne(p => p.OpDate)
                    .HasForeignKey<OpDate>(d => d.OpDateId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__OP_DATE__OP_DATE__00A18C5A");
            });

            modelBuilder.Entity<OpMuid>(entity =>
            {
                entity.HasKey(e => e.OpMuidId)
                    .IsClustered(false);

                entity.ToTable("OP_MUID");

                entity.Property(e => e.OpMuidId)
                    .ValueGeneratedNever()
                    .HasColumnName("OP_MUID_ID");
            });

            modelBuilder.Entity<OpMuidLink>(entity =>
            {
                entity.HasKey(e => new { e.OpMuidId, e.DrId, e.DroId });

                entity.ToTable("OP_MUID_LINKS");

                entity.Property(e => e.OpMuidId).HasColumnName("OP_MUID_ID");

                entity.Property(e => e.DrId).HasColumnName("DR_ID");

                entity.Property(e => e.DroId).HasColumnName("DRO_ID");
            });

            modelBuilder.Entity<OpNum>(entity =>
            {
                entity.ToTable("OP_NUM");

                entity.Property(e => e.OpNumId)
                    .ValueGeneratedNever()
                    .HasColumnName("OP_NUM_ID");

                entity.HasOne(d => d.OpNumNavigation)
                    .WithOne(p => p.OpNum)
                    .HasForeignKey<OpNum>(d => d.OpNumId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__OP_NUM__OP_NUM_I__065A65B0");
            });

            modelBuilder.Entity<OpTxt>(entity =>
            {
                entity.ToTable("OP_TXT");

                entity.Property(e => e.OpTxtId)
                    .ValueGeneratedNever()
                    .HasColumnName("OP_TXT_ID");

                entity.HasOne(d => d.OpTxtNavigation)
                    .WithOne(p => p.OpTxt)
                    .HasForeignKey<OpTxt>(d => d.OpTxtId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__OP_TXT__OP_TXT_I__7AE8B304");
            });

            modelBuilder.Entity<OpUid>(entity =>
            {
                entity.ToTable("OP_UID");

                entity.Property(e => e.OpUidId)
                    .ValueGeneratedNever()
                    .HasColumnName("OP_UID_ID");

                entity.HasOne(d => d.OpUidNavigation)
                    .WithOne(p => p.OpUid)
                    .HasForeignKey<OpUid>(d => d.OpUidId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__OP_UID__OP_UID_I__037DF905");
            });

            modelBuilder.Entity<OpaBit>(entity =>
            {
                entity.ToTable("OPA_BIT");

                entity.Property(e => e.OpaBitId)
                    .ValueGeneratedNever()
                    .HasColumnName("OPA_BIT_ID");

                entity.HasOne(d => d.OpaBitNavigation)
                    .WithOne(p => p.OpaBit)
                    .HasForeignKey<OpaBit>(d => d.OpaBitId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__OPA_BIT__OPA_BIT__52DAC1AA");
            });

            modelBuilder.Entity<OpaDate>(entity =>
            {
                entity.ToTable("OPA_DATE");

                entity.Property(e => e.OpaDateId)
                    .ValueGeneratedNever()
                    .HasColumnName("OPA_DATE_ID");

                entity.HasOne(d => d.OpaDateNavigation)
                    .WithOne(p => p.OpaDate)
                    .HasForeignKey<OpaDate>(d => d.OpaDateId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__OPA_DATE__OPA_DA__55B72E55");
            });

            modelBuilder.Entity<OpaMuid>(entity =>
            {
                entity.HasKey(e => e.OpaMuidId)
                    .IsClustered(false);

                entity.ToTable("OPA_MUID");

                entity.Property(e => e.OpaMuidId)
                    .ValueGeneratedNever()
                    .HasColumnName("OPA_MUID_ID");
            });

            modelBuilder.Entity<OpaMuidLink>(entity =>
            {
                entity.HasKey(e => new { e.OpaMuidId, e.DrId, e.DroId });

                entity.ToTable("OPA_MUID_LINKS");

                entity.Property(e => e.OpaMuidId).HasColumnName("OPA_MUID_ID");

                entity.Property(e => e.DrId).HasColumnName("DR_ID");

                entity.Property(e => e.DroId).HasColumnName("DRO_ID");
            });

            modelBuilder.Entity<OpaNum>(entity =>
            {
                entity.ToTable("OPA_NUM");

                entity.Property(e => e.OpaNumId)
                    .ValueGeneratedNever()
                    .HasColumnName("OPA_NUM_ID");

                entity.HasOne(d => d.OpaNumNavigation)
                    .WithOne(p => p.OpaNum)
                    .HasForeignKey<OpaNum>(d => d.OpaNumId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__OPA_NUM__OPA_NUM__5B7007AB");
            });

            modelBuilder.Entity<OpaTxt>(entity =>
            {
                entity.ToTable("OPA_TXT");

                entity.Property(e => e.OpaTxtId)
                    .ValueGeneratedNever()
                    .HasColumnName("OPA_TXT_ID");

                entity.HasOne(d => d.OpaTxtNavigation)
                    .WithOne(p => p.OpaTxt)
                    .HasForeignKey<OpaTxt>(d => d.OpaTxtId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__OPA_TXT__OPA_TXT__4FFE54FF");
            });

            modelBuilder.Entity<OpaUid>(entity =>
            {
                entity.ToTable("OPA_UID");

                entity.Property(e => e.OpaUidId)
                    .ValueGeneratedNever()
                    .HasColumnName("OPA_UID_ID");

                entity.HasOne(d => d.OpaUidNavigation)
                    .WithOne(p => p.OpaUid)
                    .HasForeignKey<OpaUid>(d => d.OpaUidId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__OPA_UID__OPA_UID__58939B00");
            });

            modelBuilder.Entity<OpportunitiesQuote>(entity =>
            {
                entity.HasKey(e => e.OpqId)
                    .HasName("PK_OPP_QUOTES");

                entity.ToTable("OPPORTUNITIES_QUOTES");

                entity.HasIndex(e => e.AccId, "IX_OPPORTUNITIES_QUOTES_ACC_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.AcId, "IX_OPPORTUNITIES_QUOTES_AC_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.CreatedDate, "IX_OPPORTUNITIES_QUOTES_CREATED_DATE")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.OpId, "IX_OPPORTUNITIES_QUOTES_OP_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.ShortCode, "IX__OPPORTUNITIES_QUOTES__SHORT_CODE");

                entity.Property(e => e.OpqId)
                    .ValueGeneratedNever()
                    .HasColumnName("OPQ_ID");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.ActualClose)
                    .HasColumnType("datetime")
                    .HasColumnName("ACTUAL_CLOSE");

                entity.Property(e => e.AddToOpportunity)
                    .HasColumnName("ADD_TO_OPPORTUNITY")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Closed).HasColumnName("CLOSED");

                entity.Property(e => e.CostCarriage)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_CARRIAGE");

                entity.Property(e => e.CostItems)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_ITEMS");

                entity.Property(e => e.CostMisc)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_MISC");

                entity.Property(e => e.CostQuote)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_QUOTE");

                entity.Property(e => e.CostSub)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_SUB");

                entity.Property(e => e.CostTotal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_TOTAL");

                entity.Property(e => e.CostUpdatedSub)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_UPDATED_SUB");

                entity.Property(e => e.CostVat)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_VAT");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CurId).HasColumnName("CUR_ID");

                entity.Property(e => e.CurIdPriceList).HasColumnName("CUR_ID_PRICE_LIST");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.DiscountAccount).HasColumnName("DISCOUNT_ACCOUNT");

                entity.Property(e => e.DiscountItems).HasColumnName("DISCOUNT_ITEMS");

                entity.Property(e => e.EstimatedClose)
                    .HasColumnType("datetime")
                    .HasColumnName("ESTIMATED_CLOSE");

                entity.Property(e => e.ExchangeRate)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("EXCHANGE_RATE");

                entity.Property(e => e.Expires)
                    .HasColumnType("datetime")
                    .HasColumnName("EXPIRES");

                entity.Property(e => e.FneId).HasColumnName("FNE_ID");

                entity.Property(e => e.ForcedClose).HasColumnName("FORCED_CLOSE");

                entity.Property(e => e.Margin)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("MARGIN");

                entity.Property(e => e.MarginPercentage)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("MARGIN_PERCENTAGE");

                entity.Property(e => e.NumberOfItems).HasColumnName("NUMBER_OF_ITEMS");

                entity.Property(e => e.OpId).HasColumnName("OP_ID");

                entity.Property(e => e.OpqDeleted)
                    .HasColumnName("OPQ_DELETED")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.OpqNumber)
                    .HasMaxLength(20)
                    .HasColumnName("OPQ_NUMBER");

                entity.Property(e => e.OpqState).HasColumnName("OPQ_STATE");

                entity.Property(e => e.OpqType).HasColumnName("OPQ_TYPE");

                entity.Property(e => e.OpqUd1)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD1");

                entity.Property(e => e.OpqUd10)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD10");

                entity.Property(e => e.OpqUd10Bit).HasColumnName("OPQ_UD10_BIT");

                entity.Property(e => e.OpqUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_UD10_DATE");

                entity.Property(e => e.OpqUd10Id).HasColumnName("OPQ_UD10_ID");

                entity.Property(e => e.OpqUd10Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OPQ_UD10_NUMERIC");

                entity.Property(e => e.OpqUd11)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD11");

                entity.Property(e => e.OpqUd11Bit).HasColumnName("OPQ_UD11_BIT");

                entity.Property(e => e.OpqUd12)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD12");

                entity.Property(e => e.OpqUd12Bit).HasColumnName("OPQ_UD12_BIT");

                entity.Property(e => e.OpqUd13)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD13");

                entity.Property(e => e.OpqUd13Bit).HasColumnName("OPQ_UD13_BIT");

                entity.Property(e => e.OpqUd14)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD14");

                entity.Property(e => e.OpqUd14Bit).HasColumnName("OPQ_UD14_BIT");

                entity.Property(e => e.OpqUd15)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD15");

                entity.Property(e => e.OpqUd15Bit).HasColumnName("OPQ_UD15_BIT");

                entity.Property(e => e.OpqUd16Bit).HasColumnName("OPQ_UD16_BIT");

                entity.Property(e => e.OpqUd17Bit).HasColumnName("OPQ_UD17_BIT");

                entity.Property(e => e.OpqUd18Bit).HasColumnName("OPQ_UD18_BIT");

                entity.Property(e => e.OpqUd19Bit).HasColumnName("OPQ_UD19_BIT");

                entity.Property(e => e.OpqUd1Bit).HasColumnName("OPQ_UD1_BIT");

                entity.Property(e => e.OpqUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_UD1_DATE");

                entity.Property(e => e.OpqUd1Id).HasColumnName("OPQ_UD1_ID");

                entity.Property(e => e.OpqUd1Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OPQ_UD1_NUMERIC");

                entity.Property(e => e.OpqUd2)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD2");

                entity.Property(e => e.OpqUd20Bit).HasColumnName("OPQ_UD20_BIT");

                entity.Property(e => e.OpqUd21Bit).HasColumnName("OPQ_UD21_BIT");

                entity.Property(e => e.OpqUd22Bit).HasColumnName("OPQ_UD22_BIT");

                entity.Property(e => e.OpqUd23Bit).HasColumnName("OPQ_UD23_BIT");

                entity.Property(e => e.OpqUd24Bit).HasColumnName("OPQ_UD24_BIT");

                entity.Property(e => e.OpqUd2Bit).HasColumnName("OPQ_UD2_BIT");

                entity.Property(e => e.OpqUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_UD2_DATE");

                entity.Property(e => e.OpqUd2Id).HasColumnName("OPQ_UD2_ID");

                entity.Property(e => e.OpqUd2Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OPQ_UD2_NUMERIC");

                entity.Property(e => e.OpqUd3)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD3");

                entity.Property(e => e.OpqUd3Bit).HasColumnName("OPQ_UD3_BIT");

                entity.Property(e => e.OpqUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_UD3_DATE");

                entity.Property(e => e.OpqUd3Id).HasColumnName("OPQ_UD3_ID");

                entity.Property(e => e.OpqUd3Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OPQ_UD3_NUMERIC");

                entity.Property(e => e.OpqUd4)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD4");

                entity.Property(e => e.OpqUd4Bit).HasColumnName("OPQ_UD4_BIT");

                entity.Property(e => e.OpqUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_UD4_DATE");

                entity.Property(e => e.OpqUd4Id).HasColumnName("OPQ_UD4_ID");

                entity.Property(e => e.OpqUd4Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OPQ_UD4_NUMERIC");

                entity.Property(e => e.OpqUd5)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD5");

                entity.Property(e => e.OpqUd5Bit).HasColumnName("OPQ_UD5_BIT");

                entity.Property(e => e.OpqUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_UD5_DATE");

                entity.Property(e => e.OpqUd5Id).HasColumnName("OPQ_UD5_ID");

                entity.Property(e => e.OpqUd5Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OPQ_UD5_NUMERIC");

                entity.Property(e => e.OpqUd6)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD6");

                entity.Property(e => e.OpqUd6Bit).HasColumnName("OPQ_UD6_BIT");

                entity.Property(e => e.OpqUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_UD6_DATE");

                entity.Property(e => e.OpqUd6Id).HasColumnName("OPQ_UD6_ID");

                entity.Property(e => e.OpqUd6Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OPQ_UD6_NUMERIC");

                entity.Property(e => e.OpqUd7)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD7");

                entity.Property(e => e.OpqUd7Bit).HasColumnName("OPQ_UD7_BIT");

                entity.Property(e => e.OpqUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_UD7_DATE");

                entity.Property(e => e.OpqUd7Id).HasColumnName("OPQ_UD7_ID");

                entity.Property(e => e.OpqUd7Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OPQ_UD7_NUMERIC");

                entity.Property(e => e.OpqUd8)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD8");

                entity.Property(e => e.OpqUd8Bit).HasColumnName("OPQ_UD8_BIT");

                entity.Property(e => e.OpqUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_UD8_DATE");

                entity.Property(e => e.OpqUd8Id).HasColumnName("OPQ_UD8_ID");

                entity.Property(e => e.OpqUd8Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OPQ_UD8_NUMERIC");

                entity.Property(e => e.OpqUd9)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD9");

                entity.Property(e => e.OpqUd9Bit).HasColumnName("OPQ_UD9_BIT");

                entity.Property(e => e.OpqUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_UD9_DATE");

                entity.Property(e => e.OpqUd9Id).HasColumnName("OPQ_UD9_ID");

                entity.Property(e => e.OpqUd9Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OPQ_UD9_NUMERIC");

                entity.Property(e => e.Owner).HasColumnName("OWNER");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", true);

                entity.Property(e => e.Reference)
                    .HasMaxLength(255)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.Scheduled)
                    .HasColumnName("SCHEDULED")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SentStatus)
                    .HasMaxLength(50)
                    .HasColumnName("SENT_STATUS");

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'QUT-')");

                entity.Property(e => e.SitId).HasColumnName("SIT_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Template)
                    .HasMaxLength(50)
                    .HasColumnName("TEMPLATE");

                entity.Property(e => e.TimeTotal).HasColumnName("TIME_TOTAL");

                entity.Property(e => e.UnitsTotal).HasColumnName("UNITS_TOTAL");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.Value)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("VALUE")
                    .HasDefaultValueSql("((0))");

                entity.HasOne(d => d.Ac)
                    .WithMany(p => p.OpportunitiesQuotes)
                    .HasForeignKey(d => d.AcId)
                    .HasConstraintName("FK_OPPORTUNITIES_QUOTES_ACCOUNTS");

                entity.HasOne(d => d.Acc)
                    .WithMany(p => p.OpportunitiesQuotes)
                    .HasForeignKey(d => d.AccId)
                    .HasConstraintName("FK_OPPORTUNITIES_QUOTES_ACCOUNTS_CONTACTS");

                entity.HasOne(d => d.Fne)
                    .WithMany(p => p.OpportunitiesQuotes)
                    .HasForeignKey(d => d.FneId)
                    .HasConstraintName("FK_OPPORTUNITIES_QUOTES_FINANCIAL_ENTITIES");

                entity.HasOne(d => d.Op)
                    .WithMany(p => p.OpportunitiesQuotes)
                    .HasForeignKey(d => d.OpId)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_OPPORTUNITIES_QUOTES_OPPORTUNITIES");
            });

            modelBuilder.Entity<OpportunitiesQuotesDetail>(entity =>
            {
                entity.HasKey(e => e.OpqdId)
                    .HasName("PK_OPP_QUOTES_DETAILS");

                entity.ToTable("OPPORTUNITIES_QUOTES_DETAILS");

                entity.HasIndex(e => e.AcId, "IX_OPPORTUNITIES_QUOTES_DETAILS_AC_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.OpqId, "IX_OPPORTUNITIES_QUOTES_DETAILS_OPQ_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.OpId, "IX_OPPORTUNITIES_QUOTES_DETAILS_OP_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.PrId, "IX_OPPORTUNITIES_QUOTES_DETAILS_PR_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.ShortCode, "IX__OPPORTUNITIES_QUOTES_DETAILS__SHORT_CODE");

                entity.Property(e => e.OpqdId)
                    .ValueGeneratedNever()
                    .HasColumnName("OPQD_ID");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccountDiscount)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ACCOUNT_DISCOUNT")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.Closed).HasColumnName("CLOSED");

                entity.Property(e => e.Code)
                    .HasMaxLength(50)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cost)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.Discount).HasColumnName("DISCOUNT");

                entity.Property(e => e.Excludefromtotal).HasColumnName("EXCLUDEFROMTOTAL");

                entity.Property(e => e.GrandTotal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("GRAND_TOTAL")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.ListPriceTotal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("LIST_PRICE_TOTAL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Manufacturer)
                    .HasMaxLength(50)
                    .HasColumnName("MANUFACTURER");

                entity.Property(e => e.OpId).HasColumnName("OP_ID");

                entity.Property(e => e.OpqId).HasColumnName("OPQ_ID");

                entity.Property(e => e.OpqdDeleted)
                    .HasColumnName("OPQD_DELETED")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PrExternal)
                    .HasMaxLength(255)
                    .HasColumnName("PR_EXTERNAL");

                entity.Property(e => e.PrId).HasColumnName("PR_ID");

                entity.Property(e => e.PrUd10Bit).HasColumnName("PR_UD10_BIT");

                entity.Property(e => e.PrUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD10_DATE");

                entity.Property(e => e.PrUd10Id).HasColumnName("PR_UD10_ID");

                entity.Property(e => e.PrUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD10_NUMERIC");

                entity.Property(e => e.PrUd11Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD11_NUMERIC");

                entity.Property(e => e.PrUd12Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD12_NUMERIC");

                entity.Property(e => e.PrUd13Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD13_NUMERIC");

                entity.Property(e => e.PrUd14NumeriC)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD14_NUMERiC");

                entity.Property(e => e.PrUd15Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD15_NUMERIC");

                entity.Property(e => e.PrUd1Bit).HasColumnName("PR_UD1_BIT");

                entity.Property(e => e.PrUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD1_DATE");

                entity.Property(e => e.PrUd1Id).HasColumnName("PR_UD1_ID");

                entity.Property(e => e.PrUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD1_NUMERIC");

                entity.Property(e => e.PrUd2Bit).HasColumnName("PR_UD2_BIT");

                entity.Property(e => e.PrUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD2_DATE");

                entity.Property(e => e.PrUd2Id).HasColumnName("PR_UD2_ID");

                entity.Property(e => e.PrUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD2_NUMERIC");

                entity.Property(e => e.PrUd3Bit).HasColumnName("PR_UD3_BIT");

                entity.Property(e => e.PrUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD3_DATE");

                entity.Property(e => e.PrUd3Id).HasColumnName("PR_UD3_ID");

                entity.Property(e => e.PrUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD3_NUMERIC");

                entity.Property(e => e.PrUd4Bit).HasColumnName("PR_UD4_BIT");

                entity.Property(e => e.PrUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD4_DATE");

                entity.Property(e => e.PrUd4Id).HasColumnName("PR_UD4_ID");

                entity.Property(e => e.PrUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD4_NUMERIC");

                entity.Property(e => e.PrUd5Bit).HasColumnName("PR_UD5_BIT");

                entity.Property(e => e.PrUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD5_DATE");

                entity.Property(e => e.PrUd5Id).HasColumnName("PR_UD5_ID");

                entity.Property(e => e.PrUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD5_NUMERIC");

                entity.Property(e => e.PrUd6Bit).HasColumnName("PR_UD6_BIT");

                entity.Property(e => e.PrUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD6_DATE");

                entity.Property(e => e.PrUd6Id).HasColumnName("PR_UD6_ID");

                entity.Property(e => e.PrUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD6_NUMERIC");

                entity.Property(e => e.PrUd7Bit).HasColumnName("PR_UD7_BIT");

                entity.Property(e => e.PrUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD7_DATE");

                entity.Property(e => e.PrUd7Id).HasColumnName("PR_UD7_ID");

                entity.Property(e => e.PrUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD7_NUMERIC");

                entity.Property(e => e.PrUd8Bit).HasColumnName("PR_UD8_BIT");

                entity.Property(e => e.PrUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD8_DATE");

                entity.Property(e => e.PrUd8Id).HasColumnName("PR_UD8_ID");

                entity.Property(e => e.PrUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD8_NUMERIC");

                entity.Property(e => e.PrUd9Bit).HasColumnName("PR_UD9_BIT");

                entity.Property(e => e.PrUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD9_DATE");

                entity.Property(e => e.PrUd9Id).HasColumnName("PR_UD9_ID");

                entity.Property(e => e.PrUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD9_NUMERIC");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", true);

                entity.Property(e => e.Price)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PRICE");

                entity.Property(e => e.PriceDiscount)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PRICE_DISCOUNT");

                entity.Property(e => e.PriceFinal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PRICE_FINAL");

                entity.Property(e => e.ProductGroup)
                    .HasMaxLength(50)
                    .HasColumnName("PRODUCT_GROUP");

                entity.Property(e => e.Quantity)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("QUANTITY");

                entity.Property(e => e.RateWhenAdded).HasColumnName("RATE_WHEN_ADDED");

                entity.Property(e => e.RemainingTimeUnits)
                    .HasColumnName("REMAINING_TIME_UNITS")
                    .HasComputedColumnSql("([TIME_UNIT_VALUE_TOTAL]-[SPENT_TIME_UNITS])", true);

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'QIT-')");

                entity.Property(e => e.SortOrder).HasColumnName("SORT_ORDER");

                entity.Property(e => e.SpentTimeUnits).HasColumnName("SPENT_TIME_UNITS");

                entity.Property(e => e.SubTotal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SUB_TOTAL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Tax)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("TAX")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.TaxPercentage)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("TAX_PERCENTAGE");

                entity.Property(e => e.TimeUnitIsTime)
                    .IsRequired()
                    .HasColumnName("TIME_UNIT_IS_TIME")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TimeUnitValue).HasColumnName("TIME_UNIT_VALUE");

                entity.Property(e => e.TimeUnitValueTotal).HasColumnName("TIME_UNIT_VALUE_TOTAL");

                entity.Property(e => e.TxcId).HasColumnName("TXC_ID");

                entity.Property(e => e.Ud1)
                    .HasMaxLength(255)
                    .HasColumnName("UD1");

                entity.Property(e => e.Ud10)
                    .HasMaxLength(255)
                    .HasColumnName("UD10");

                entity.Property(e => e.Ud11)
                    .HasMaxLength(255)
                    .HasColumnName("UD11");

                entity.Property(e => e.Ud12)
                    .HasMaxLength(255)
                    .HasColumnName("UD12");

                entity.Property(e => e.Ud13)
                    .HasMaxLength(255)
                    .HasColumnName("UD13");

                entity.Property(e => e.Ud14)
                    .HasMaxLength(255)
                    .HasColumnName("UD14");

                entity.Property(e => e.Ud15)
                    .HasMaxLength(255)
                    .HasColumnName("UD15");

                entity.Property(e => e.Ud2)
                    .HasMaxLength(255)
                    .HasColumnName("UD2");

                entity.Property(e => e.Ud3)
                    .HasMaxLength(255)
                    .HasColumnName("UD3");

                entity.Property(e => e.Ud4)
                    .HasMaxLength(255)
                    .HasColumnName("UD4");

                entity.Property(e => e.Ud5)
                    .HasMaxLength(255)
                    .HasColumnName("UD5");

                entity.Property(e => e.Ud6)
                    .HasMaxLength(255)
                    .HasColumnName("UD6");

                entity.Property(e => e.Ud7)
                    .HasMaxLength(255)
                    .HasColumnName("UD7");

                entity.Property(e => e.Ud8)
                    .HasMaxLength(255)
                    .HasColumnName("UD8");

                entity.Property(e => e.Ud9)
                    .HasMaxLength(255)
                    .HasColumnName("UD9");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.HasOne(d => d.Ac)
                    .WithMany(p => p.OpportunitiesQuotesDetails)
                    .HasForeignKey(d => d.AcId)
                    .HasConstraintName("FK_OPPORTUNITIES_QUOTES_DETAILS_ACCOUNTS");

                entity.HasOne(d => d.Op)
                    .WithMany(p => p.OpportunitiesQuotesDetails)
                    .HasForeignKey(d => d.OpId)
                    .HasConstraintName("FK_OPPORTUNITIES_QUOTES_DETAILS_OPPORTUNITIES");

                entity.HasOne(d => d.Opq)
                    .WithMany(p => p.OpportunitiesQuotesDetails)
                    .HasForeignKey(d => d.OpqId)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_OPPORTUNITIES_QUOTES_DETAILS_OPPORTUNITIES_QUOTES");

                entity.HasOne(d => d.Pr)
                    .WithMany(p => p.OpportunitiesQuotesDetails)
                    .HasForeignKey(d => d.PrId)
                    .HasConstraintName("FK_OPPORTUNITIES_QUOTES_DETAILS_PRODUCTS");

                entity.HasOne(d => d.Txc)
                    .WithMany(p => p.OpportunitiesQuotesDetails)
                    .HasForeignKey(d => d.TxcId)
                    .HasConstraintName("FK__OPPORTUNITIES_QUOTES_DETAILS_TXC_ID__TAX_CODES_TXC_ID");
            });

            modelBuilder.Entity<OpportunitiesQuotesDetailsSchedule>(entity =>
            {
                entity.HasKey(e => e.OdsId);

                entity.ToTable("OPPORTUNITIES_QUOTES_DETAILS_SCHEDULE");

                entity.Property(e => e.OdsId)
                    .ValueGeneratedNever()
                    .HasColumnName("ODS_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Month).HasColumnName("MONTH");

                entity.Property(e => e.OpqdId).HasColumnName("OPQD_ID");

                entity.Property(e => e.Percent)
                    .HasColumnType("numeric(18, 5)")
                    .HasColumnName("PERCENT");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<Opportunity>(entity =>
            {
                entity.HasKey(e => e.OpId)
                    .HasName("PK_OPP_HEADERS");

                entity.ToTable("OPPORTUNITIES");

                entity.HasIndex(e => e.AccId, "IX_OPPORTUNITIES_ACC_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.AcId, "IX_OPPORTUNITIES_AC_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.CreatedDate, "IX_OPPORTUNITIES_CREATED_DATE")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.Owner, "IX_OPPORTUNITIES_OWNER")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.ShortCode, "IX__OPPORTUNITIES__SHORT_CODE");

                entity.Property(e => e.OpId)
                    .ValueGeneratedNever()
                    .HasColumnName("OP_ID");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.ActualClose)
                    .HasColumnType("datetime")
                    .HasColumnName("ACTUAL_CLOSE");

                entity.Property(e => e.ActualTime).HasColumnName("ACTUAL_TIME");

                entity.Property(e => e.ActualUnits).HasColumnName("ACTUAL_UNITS");

                entity.Property(e => e.AddToForecast)
                    .HasColumnName("ADD_TO_FORECAST")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Closed).HasColumnName("CLOSED");

                entity.Property(e => e.Competition)
                    .HasMaxLength(50)
                    .HasColumnName("COMPETITION");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CurId).HasColumnName("CUR_ID");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.Duration)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("DURATION");

                entity.Property(e => e.EstimatedClose)
                    .HasColumnType("datetime")
                    .HasColumnName("ESTIMATED_CLOSE");

                entity.Property(e => e.EstimatedTime).HasColumnName("ESTIMATED_TIME");

                entity.Property(e => e.EstimatedUnits).HasColumnName("ESTIMATED_UNITS");

                entity.Property(e => e.ForecastValue)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("FORECAST_VALUE");

                entity.Property(e => e.InterestedIn).HasColumnName("INTERESTED_IN");

                entity.Property(e => e.MacIdSource).HasColumnName("MAC_ID_SOURCE");

                entity.Property(e => e.Margin)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("MARGIN");

                entity.Property(e => e.MarginPercentage)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("MARGIN_PERCENTAGE");

                entity.Property(e => e.NextAction)
                    .HasMaxLength(50)
                    .HasColumnName("NEXT_ACTION");

                entity.Property(e => e.OpDeleted).HasColumnName("OP_DELETED");

                entity.Property(e => e.OpExternal)
                    .HasMaxLength(255)
                    .HasColumnName("OP_EXTERNAL");

                entity.Property(e => e.OpImport).HasColumnName("OP_IMPORT");

                entity.Property(e => e.OpNumber).HasColumnName("OP_NUMBER");

                entity.Property(e => e.OpState).HasColumnName("OP_STATE");

                entity.Property(e => e.OpUd1)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD1");

                entity.Property(e => e.OpUd10)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD10");

                entity.Property(e => e.OpUd10Bit).HasColumnName("OP_UD10_BIT");

                entity.Property(e => e.OpUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OP_UD10_DATE");

                entity.Property(e => e.OpUd10Id).HasColumnName("OP_UD10_ID");

                entity.Property(e => e.OpUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OP_UD10_NUMERIC");

                entity.Property(e => e.OpUd11)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD11");

                entity.Property(e => e.OpUd11Bit).HasColumnName("OP_UD11_BIT");

                entity.Property(e => e.OpUd12)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD12");

                entity.Property(e => e.OpUd12Bit).HasColumnName("OP_UD12_BIT");

                entity.Property(e => e.OpUd13)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD13");

                entity.Property(e => e.OpUd13Bit).HasColumnName("OP_UD13_BIT");

                entity.Property(e => e.OpUd14)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD14");

                entity.Property(e => e.OpUd14Bit).HasColumnName("OP_UD14_BIT");

                entity.Property(e => e.OpUd15)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD15");

                entity.Property(e => e.OpUd15Bit).HasColumnName("OP_UD15_BIT");

                entity.Property(e => e.OpUd16Bit).HasColumnName("OP_UD16_BIT");

                entity.Property(e => e.OpUd17Bit).HasColumnName("OP_UD17_BIT");

                entity.Property(e => e.OpUd18Bit).HasColumnName("OP_UD18_BIT");

                entity.Property(e => e.OpUd19Bit).HasColumnName("OP_UD19_BIT");

                entity.Property(e => e.OpUd1Bit).HasColumnName("OP_UD1_BIT");

                entity.Property(e => e.OpUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OP_UD1_DATE");

                entity.Property(e => e.OpUd1Id).HasColumnName("OP_UD1_ID");

                entity.Property(e => e.OpUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OP_UD1_NUMERIC");

                entity.Property(e => e.OpUd2)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD2");

                entity.Property(e => e.OpUd20Bit).HasColumnName("OP_UD20_BIT");

                entity.Property(e => e.OpUd21Bit).HasColumnName("OP_UD21_BIT");

                entity.Property(e => e.OpUd22Bit).HasColumnName("OP_UD22_BIT");

                entity.Property(e => e.OpUd23Bit).HasColumnName("OP_UD23_BIT");

                entity.Property(e => e.OpUd24Bit).HasColumnName("OP_UD24_BIT");

                entity.Property(e => e.OpUd2Bit).HasColumnName("OP_UD2_BIT");

                entity.Property(e => e.OpUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OP_UD2_DATE");

                entity.Property(e => e.OpUd2Id).HasColumnName("OP_UD2_ID");

                entity.Property(e => e.OpUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OP_UD2_NUMERIC");

                entity.Property(e => e.OpUd3)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD3");

                entity.Property(e => e.OpUd3Bit).HasColumnName("OP_UD3_BIT");

                entity.Property(e => e.OpUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OP_UD3_DATE");

                entity.Property(e => e.OpUd3Id).HasColumnName("OP_UD3_ID");

                entity.Property(e => e.OpUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OP_UD3_NUMERIC");

                entity.Property(e => e.OpUd4)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD4");

                entity.Property(e => e.OpUd4Bit).HasColumnName("OP_UD4_BIT");

                entity.Property(e => e.OpUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OP_UD4_DATE");

                entity.Property(e => e.OpUd4Id).HasColumnName("OP_UD4_ID");

                entity.Property(e => e.OpUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OP_UD4_NUMERIC");

                entity.Property(e => e.OpUd5)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD5");

                entity.Property(e => e.OpUd5Bit).HasColumnName("OP_UD5_BIT");

                entity.Property(e => e.OpUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OP_UD5_DATE");

                entity.Property(e => e.OpUd5Id).HasColumnName("OP_UD5_ID");

                entity.Property(e => e.OpUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OP_UD5_NUMERIC");

                entity.Property(e => e.OpUd6)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD6");

                entity.Property(e => e.OpUd6Bit).HasColumnName("OP_UD6_BIT");

                entity.Property(e => e.OpUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OP_UD6_DATE");

                entity.Property(e => e.OpUd6Id).HasColumnName("OP_UD6_ID");

                entity.Property(e => e.OpUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OP_UD6_NUMERIC");

                entity.Property(e => e.OpUd7)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD7");

                entity.Property(e => e.OpUd7Bit).HasColumnName("OP_UD7_BIT");

                entity.Property(e => e.OpUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OP_UD7_DATE");

                entity.Property(e => e.OpUd7Id).HasColumnName("OP_UD7_ID");

                entity.Property(e => e.OpUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OP_UD7_NUMERIC");

                entity.Property(e => e.OpUd8)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD8");

                entity.Property(e => e.OpUd8Bit).HasColumnName("OP_UD8_BIT");

                entity.Property(e => e.OpUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OP_UD8_DATE");

                entity.Property(e => e.OpUd8Id).HasColumnName("OP_UD8_ID");

                entity.Property(e => e.OpUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OP_UD8_NUMERIC");

                entity.Property(e => e.OpUd9)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD9");

                entity.Property(e => e.OpUd9Bit).HasColumnName("OP_UD9_BIT");

                entity.Property(e => e.OpUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OP_UD9_DATE");

                entity.Property(e => e.OpUd9Id).HasColumnName("OP_UD9_ID");

                entity.Property(e => e.OpUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OP_UD9_NUMERIC");

                entity.Property(e => e.Owner).HasColumnName("OWNER");

                entity.Property(e => e.Partner)
                    .HasMaxLength(50)
                    .HasColumnName("PARTNER");

                entity.Property(e => e.PotentialValue)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("POTENTIAL_VALUE");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", true);

                entity.Property(e => e.Probability)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("PROBABILITY")
                    .HasDefaultValueSql("((100))");

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.SgId).HasColumnName("SG_ID");

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'OPP-')");

                entity.Property(e => e.SitId).HasColumnName("SIT_ID");

                entity.Property(e => e.Source).HasColumnName("SOURCE");

                entity.Property(e => e.Stage).HasColumnName("STAGE");

                entity.Property(e => e.StgId).HasColumnName("STG_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Type)
                    .HasMaxLength(50)
                    .HasColumnName("TYPE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.HasOne(d => d.Ac)
                    .WithMany(p => p.Opportunities)
                    .HasForeignKey(d => d.AcId)
                    .HasConstraintName("FK_OPPORTUNITIES_ACCOUNTS");

                entity.HasOne(d => d.Acc)
                    .WithMany(p => p.Opportunities)
                    .HasForeignKey(d => d.AccId)
                    .HasConstraintName("FK_OPPORTUNITIES_ACCOUNTS_CONTACTS");

                entity.HasOne(d => d.MacIdSourceNavigation)
                    .WithMany(p => p.Opportunities)
                    .HasForeignKey(d => d.MacIdSource)
                    .HasConstraintName("FK_OPPORTUNITIES_MAIL_CAMPAIGNS");

                entity.HasOne(d => d.OwnerNavigation)
                    .WithMany(p => p.Opportunities)
                    .HasForeignKey(d => d.Owner)
                    .HasConstraintName("FK_OPPORTUNITIES_USERS");
            });

            modelBuilder.Entity<OpportunityProbability>(entity =>
            {
                entity.HasKey(e => e.OppId)
                    .HasName("PK__OPPORTUN__366B0A3C0A2D409A");

                entity.ToTable("OPPORTUNITY_PROBABILITIES");

                entity.Property(e => e.OppId)
                    .ValueGeneratedNever()
                    .HasColumnName("OPP_ID");

                entity.Property(e => e.Value).HasColumnName("VALUE");
            });

            modelBuilder.Entity<OpqBit>(entity =>
            {
                entity.ToTable("OPQ_BIT");

                entity.Property(e => e.OpqBitId)
                    .ValueGeneratedNever()
                    .HasColumnName("OPQ_BIT_ID");

                entity.HasOne(d => d.OpqBitNavigation)
                    .WithOne(p => p.OpqBit)
                    .HasForeignKey<OpqBit>(d => d.OpqBitId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__OPQ_BIT__OPQ_BIT__0C133F06");
            });

            modelBuilder.Entity<OpqDate>(entity =>
            {
                entity.ToTable("OPQ_DATE");

                entity.Property(e => e.OpqDateId)
                    .ValueGeneratedNever()
                    .HasColumnName("OPQ_DATE_ID");

                entity.HasOne(d => d.OpqDateNavigation)
                    .WithOne(p => p.OpqDate)
                    .HasForeignKey<OpqDate>(d => d.OpqDateId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__OPQ_DATE__OPQ_DA__0EEFABB1");
            });

            modelBuilder.Entity<OpqMuid>(entity =>
            {
                entity.HasKey(e => e.OpqMuidId)
                    .IsClustered(false);

                entity.ToTable("OPQ_MUID");

                entity.Property(e => e.OpqMuidId)
                    .ValueGeneratedNever()
                    .HasColumnName("OPQ_MUID_ID");
            });

            modelBuilder.Entity<OpqMuidLink>(entity =>
            {
                entity.HasKey(e => new { e.OpqMuidId, e.DrId, e.DroId });

                entity.ToTable("OPQ_MUID_LINKS");

                entity.Property(e => e.OpqMuidId).HasColumnName("OPQ_MUID_ID");

                entity.Property(e => e.DrId).HasColumnName("DR_ID");

                entity.Property(e => e.DroId).HasColumnName("DRO_ID");
            });

            modelBuilder.Entity<OpqNum>(entity =>
            {
                entity.ToTable("OPQ_NUM");

                entity.Property(e => e.OpqNumId)
                    .ValueGeneratedNever()
                    .HasColumnName("OPQ_NUM_ID");

                entity.HasOne(d => d.OpqNumNavigation)
                    .WithOne(p => p.OpqNum)
                    .HasForeignKey<OpqNum>(d => d.OpqNumId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__OPQ_NUM__OPQ_NUM__14A88507");
            });

            modelBuilder.Entity<OpqTxt>(entity =>
            {
                entity.ToTable("OPQ_TXT");

                entity.Property(e => e.OpqTxtId)
                    .ValueGeneratedNever()
                    .HasColumnName("OPQ_TXT_ID");

                entity.HasOne(d => d.OpqTxtNavigation)
                    .WithOne(p => p.OpqTxt)
                    .HasForeignKey<OpqTxt>(d => d.OpqTxtId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__OPQ_TXT__OPQ_TXT__0936D25B");
            });

            modelBuilder.Entity<OpqUid>(entity =>
            {
                entity.ToTable("OPQ_UID");

                entity.Property(e => e.OpqUidId)
                    .ValueGeneratedNever()
                    .HasColumnName("OPQ_UID_ID");

                entity.HasOne(d => d.OpqUidNavigation)
                    .WithOne(p => p.OpqUid)
                    .HasForeignKey<OpqUid>(d => d.OpqUidId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__OPQ_UID__OPQ_UID__11CC185C");
            });

            modelBuilder.Entity<Overviewitemoption>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OVERVIEWITEMOPTIONS");

                entity.HasIndex(e => e.AcoId, "IX_OVERVIEWITEMOPTIONS_ACO_ID")
                    .HasFillFactor((byte)80);

                entity.Property(e => e.AcoId).HasColumnName("ACO_ID");

                entity.Property(e => e.ClassExtension).HasMaxLength(100);

                entity.Property(e => e.DarkImage).HasMaxLength(128);

                entity.Property(e => e.ItemLinkFunction)
                    .HasMaxLength(50)
                    .HasColumnName("itemLinkFunction");

                entity.Property(e => e.ItemLinkParam)
                    .HasMaxLength(50)
                    .HasColumnName("itemLinkParam");

                entity.Property(e => e.ItemName).HasMaxLength(50);

                entity.Property(e => e.ItemNameRef).HasMaxLength(50);

                entity.Property(e => e.ItemOrder).HasColumnName("itemOrder");

                entity.Property(e => e.LightImage).HasMaxLength(128);

                entity.Property(e => e.NewLinkFunction)
                    .HasMaxLength(50)
                    .HasColumnName("newLinkFunction");

                entity.Property(e => e.NewLinkParam)
                    .HasMaxLength(50)
                    .HasColumnName("newLinkParam");

                entity.Property(e => e.OioId).HasColumnName("OIO_ID");

                entity.Property(e => e.OnclickFunction)
                    .HasMaxLength(50)
                    .HasColumnName("onclickFunction");

                entity.Property(e => e.OnclickParam)
                    .HasMaxLength(50)
                    .HasColumnName("onclickParam");

                entity.Property(e => e.RegionName).HasMaxLength(50);

                entity.Property(e => e.ScreenName).HasMaxLength(50);
            });

            modelBuilder.Entity<Page>(entity =>
            {
                entity.ToTable("PAGES", "Portal");

                entity.Property(e => e.PageId)
                    .ValueGeneratedNever()
                    .HasColumnName("PAGE_ID");

                entity.Property(e => e.AreaId).HasColumnName("AREA_ID");

                entity.Property(e => e.Created).HasColumnName("CREATED");

                entity.Property(e => e.Deleted).HasColumnName("DELETED");

                entity.Property(e => e.IsAreaRedirect).HasColumnName("IS_AREA_REDIRECT");

                entity.Property(e => e.IsHidden).HasColumnName("IS_HIDDEN");

                entity.Property(e => e.JsonPayload)
                    .IsRequired()
                    .HasColumnName("JSON_PAYLOAD");

                entity.Property(e => e.ModuleId).HasColumnName("MODULE_ID");

                entity.Property(e => e.Order).HasColumnName("ORDER");

                entity.Property(e => e.PageName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("PAGE_NAME");

                entity.Property(e => e.PageType).HasColumnName("PAGE_TYPE");

                entity.Property(e => e.RequiresDeleting).HasColumnName("REQUIRES_DELETING");

                entity.HasOne(d => d.Area)
                    .WithMany(p => p.Pages)
                    .HasForeignKey(d => d.AreaId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__PAGES__AREA_ID__AREAS__AREA_ID");

                entity.HasOne(d => d.Module)
                    .WithMany(p => p.Pages)
                    .HasForeignKey(d => d.ModuleId)
                    .HasConstraintName("FK__PAGES__MODULE_ID__4E202E2E");
            });

            modelBuilder.Entity<PageRole>(entity =>
            {
                entity.HasKey(e => e.SrId);

                entity.ToTable("PAGE_ROLES", "Portal");

                entity.Property(e => e.SrId)
                    .ValueGeneratedNever()
                    .HasColumnName("SR_ID");

                entity.Property(e => e.PageId).HasColumnName("PAGE_ID");

                entity.Property(e => e.RId).HasColumnName("R_ID");

                entity.HasOne(d => d.Page)
                    .WithMany(p => p.PageRoles)
                    .HasForeignKey(d => d.PageId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PAGE_ROLES_PAGES");

                entity.HasOne(d => d.RIdNavigation)
                    .WithMany(p => p.PageRoles)
                    .HasForeignKey(d => d.RId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PAGE_ROLES_ROLES");
            });

            modelBuilder.Entity<PageType>(entity =>
            {
                entity.HasKey(e => e.PageType1)
                    .HasName("PK_Portal.PAGE_TYPES");

                entity.ToTable("PAGE_TYPES", "Portal");

                entity.Property(e => e.PageType1)
                    .ValueGeneratedNever()
                    .HasColumnName("PAGE_TYPE");

                entity.Property(e => e.ContentAlias)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("CONTENT_ALIAS")
                    .UseCollation("Latin1_General_CI_AS");
            });

            modelBuilder.Entity<PageVersion>(entity =>
            {
                entity.HasKey(e => new { e.SpaceId, e.VersionId, e.PageId });

                entity.ToTable("PAGE_VERSIONS", "Portal");

                entity.Property(e => e.SpaceId).HasColumnName("SPACE_ID");

                entity.Property(e => e.VersionId).HasColumnName("VERSION_ID");

                entity.Property(e => e.PageId).HasColumnName("PAGE_ID");

                entity.Property(e => e.AreaId).HasColumnName("AREA_ID");

                entity.Property(e => e.IsHidden).HasColumnName("IS_HIDDEN");

                entity.Property(e => e.JsonPayload)
                    .IsRequired()
                    .HasColumnName("JSON_PAYLOAD");

                entity.Property(e => e.PageName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("PAGE_NAME");
            });

            modelBuilder.Entity<Paragraph>(entity =>
            {
                entity.HasKey(e => e.PaId);

                entity.ToTable("PARAGRAPHS");

                entity.Property(e => e.PaId)
                    .ValueGeneratedNever()
                    .HasColumnName("PA_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.PaDeleted).HasColumnName("PA_DELETED");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Tag)
                    .HasMaxLength(255)
                    .HasColumnName("TAG");

                entity.Property(e => e.Text)
                    .HasMaxLength(4000)
                    .HasColumnName("TEXT");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<PjBit>(entity =>
            {
                entity.ToTable("PJ_BIT");

                entity.Property(e => e.PjBitId)
                    .ValueGeneratedNever()
                    .HasColumnName("PJ_BIT_ID");

                entity.HasOne(d => d.PjBitNavigation)
                    .WithOne(p => p.PjBit)
                    .HasForeignKey<PjBit>(d => d.PjBitId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__PJ_BIT__PJ_BIT_I__6F770058");
            });

            modelBuilder.Entity<PjDate>(entity =>
            {
                entity.ToTable("PJ_DATE");

                entity.Property(e => e.PjDateId)
                    .ValueGeneratedNever()
                    .HasColumnName("PJ_DATE_ID");

                entity.HasOne(d => d.PjDateNavigation)
                    .WithOne(p => p.PjDate)
                    .HasForeignKey<PjDate>(d => d.PjDateId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__PJ_DATE__PJ_DATE__72536D03");
            });

            modelBuilder.Entity<PjMuid>(entity =>
            {
                entity.HasKey(e => e.PjMuidId)
                    .IsClustered(false);

                entity.ToTable("PJ_MUID");

                entity.Property(e => e.PjMuidId)
                    .ValueGeneratedNever()
                    .HasColumnName("PJ_MUID_ID");
            });

            modelBuilder.Entity<PjMuidLink>(entity =>
            {
                entity.HasKey(e => new { e.PjMuidId, e.DrId, e.DroId });

                entity.ToTable("PJ_MUID_LINKS");

                entity.Property(e => e.PjMuidId).HasColumnName("PJ_MUID_ID");

                entity.Property(e => e.DrId).HasColumnName("DR_ID");

                entity.Property(e => e.DroId).HasColumnName("DRO_ID");
            });

            modelBuilder.Entity<PjNum>(entity =>
            {
                entity.ToTable("PJ_NUM");

                entity.Property(e => e.PjNumId)
                    .ValueGeneratedNever()
                    .HasColumnName("PJ_NUM_ID");

                entity.HasOne(d => d.PjNumNavigation)
                    .WithOne(p => p.PjNum)
                    .HasForeignKey<PjNum>(d => d.PjNumId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__PJ_NUM__PJ_NUM_I__780C4659");
            });

            modelBuilder.Entity<PjTxt>(entity =>
            {
                entity.ToTable("PJ_TXT");

                entity.Property(e => e.PjTxtId)
                    .ValueGeneratedNever()
                    .HasColumnName("PJ_TXT_ID");

                entity.HasOne(d => d.PjTxtNavigation)
                    .WithOne(p => p.PjTxt)
                    .HasForeignKey<PjTxt>(d => d.PjTxtId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__PJ_TXT__PJ_TXT_I__6C9A93AD");
            });

            modelBuilder.Entity<PjUid>(entity =>
            {
                entity.ToTable("PJ_UID");

                entity.Property(e => e.PjUidId)
                    .ValueGeneratedNever()
                    .HasColumnName("PJ_UID_ID");

                entity.HasOne(d => d.PjUidNavigation)
                    .WithOne(p => p.PjUid)
                    .HasForeignKey<PjUid>(d => d.PjUidId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__PJ_UID__PJ_UID_I__752FD9AE");
            });

            modelBuilder.Entity<PjaBit>(entity =>
            {
                entity.ToTable("PJA_BIT");

                entity.Property(e => e.PjaBitId)
                    .ValueGeneratedNever()
                    .HasColumnName("PJA_BIT_ID");

                entity.HasOne(d => d.PjaBitNavigation)
                    .WithOne(p => p.PjaBit)
                    .HasForeignKey<PjaBit>(d => d.PjaBitId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__PJA_BIT__PJA_BIT__6128E101");
            });

            modelBuilder.Entity<PjaDate>(entity =>
            {
                entity.ToTable("PJA_DATE");

                entity.Property(e => e.PjaDateId)
                    .ValueGeneratedNever()
                    .HasColumnName("PJA_DATE_ID");

                entity.HasOne(d => d.PjaDateNavigation)
                    .WithOne(p => p.PjaDate)
                    .HasForeignKey<PjaDate>(d => d.PjaDateId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__PJA_DATE__PJA_DA__64054DAC");
            });

            modelBuilder.Entity<PjaMuid>(entity =>
            {
                entity.HasKey(e => e.PjaMuidId)
                    .IsClustered(false);

                entity.ToTable("PJA_MUID");

                entity.Property(e => e.PjaMuidId)
                    .ValueGeneratedNever()
                    .HasColumnName("PJA_MUID_ID");
            });

            modelBuilder.Entity<PjaMuidLink>(entity =>
            {
                entity.HasKey(e => new { e.PjaMuidId, e.DrId, e.DroId });

                entity.ToTable("PJA_MUID_LINKS");

                entity.Property(e => e.PjaMuidId).HasColumnName("PJA_MUID_ID");

                entity.Property(e => e.DrId).HasColumnName("DR_ID");

                entity.Property(e => e.DroId).HasColumnName("DRO_ID");
            });

            modelBuilder.Entity<PjaNum>(entity =>
            {
                entity.ToTable("PJA_NUM");

                entity.Property(e => e.PjaNumId)
                    .ValueGeneratedNever()
                    .HasColumnName("PJA_NUM_ID");

                entity.HasOne(d => d.PjaNumNavigation)
                    .WithOne(p => p.PjaNum)
                    .HasForeignKey<PjaNum>(d => d.PjaNumId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__PJA_NUM__PJA_NUM__69BE2702");
            });

            modelBuilder.Entity<PjaTxt>(entity =>
            {
                entity.ToTable("PJA_TXT");

                entity.Property(e => e.PjaTxtId)
                    .ValueGeneratedNever()
                    .HasColumnName("PJA_TXT_ID");

                entity.HasOne(d => d.PjaTxtNavigation)
                    .WithOne(p => p.PjaTxt)
                    .HasForeignKey<PjaTxt>(d => d.PjaTxtId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__PJA_TXT__PJA_TXT__5E4C7456");
            });

            modelBuilder.Entity<PjaUid>(entity =>
            {
                entity.ToTable("PJA_UID");

                entity.Property(e => e.PjaUidId)
                    .ValueGeneratedNever()
                    .HasColumnName("PJA_UID_ID");

                entity.HasOne(d => d.PjaUidNavigation)
                    .WithOne(p => p.PjaUid)
                    .HasForeignKey<PjaUid>(d => d.PjaUidId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__PJA_UID__PJA_UID__66E1BA57");
            });

            modelBuilder.Entity<PluginSetting>(entity =>
            {
                entity.HasKey(e => e.PlsId);

                entity.ToTable("PLUGIN_SETTINGS");

                entity.HasIndex(e => new { e.Plugin, e.Name }, "IX_PluginSettings_UniquePluginNameToKey")
                    .IsUnique();

                entity.Property(e => e.PlsId).HasColumnName("PLS_ID");

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .HasColumnName("NAME");

                entity.Property(e => e.Plugin)
                    .HasMaxLength(255)
                    .HasColumnName("PLUGIN");

                entity.Property(e => e.Value)
                    .HasMaxLength(255)
                    .HasColumnName("VALUE");
            });

            modelBuilder.Entity<PortalPageTemplateType>(entity =>
            {
                entity.HasKey(e => e.TemplateId)
                    .HasName("PK_INTEGRATION_TEMPLATE_TYPES");

                entity.ToTable("PORTAL_PAGE_TEMPLATE_TYPES");

                entity.Property(e => e.TemplateId)
                    .ValueGeneratedNever()
                    .HasColumnName("TEMPLATE_ID");

                entity.Property(e => e.TemplateAlias)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("TEMPLATE_ALIAS");

                entity.Property(e => e.TemplateName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("TEMPLATE_NAME");

                entity.Property(e => e.TemplateType).HasColumnName("TEMPLATE_TYPE");
            });

            modelBuilder.Entity<PortalVersion>(entity =>
            {
                entity.HasKey(e => e.VersionId);

                entity.ToTable("PORTAL_VERSIONS");

                entity.Property(e => e.VersionId).HasColumnName("VERSION_ID");

                entity.Property(e => e.IsLatestVersion).HasColumnName("IS_LATEST_VERSION");

                entity.Property(e => e.PublishedByUsId).HasColumnName("PUBLISHED_BY_US_ID");

                entity.Property(e => e.SpaceId).HasColumnName("SPACE_ID");

                entity.Property(e => e.VersionNumber).HasColumnName("VERSION_NUMBER");

                entity.HasOne(d => d.PublishedByUs)
                    .WithMany(p => p.PortalVersions)
                    .HasForeignKey(d => d.PublishedByUsId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__PORTAL_VERSIONS__PUBLISHED_BY_US_ID__USERS__US_ID");
            });

            modelBuilder.Entity<PortalVersion1>(entity =>
            {
                entity.HasKey(e => e.VersionId);

                entity.ToTable("PORTAL_VERSIONS", "Portal");

                entity.Property(e => e.VersionId).HasColumnName("VERSION_ID");

                entity.Property(e => e.IsLatestVersion).HasColumnName("IS_LATEST_VERSION");

                entity.Property(e => e.PublishedByUsId).HasColumnName("PUBLISHED_BY_US_ID");

                entity.Property(e => e.SpaceId).HasColumnName("SPACE_ID");

                entity.Property(e => e.VersionNumber).HasColumnName("VERSION_NUMBER");

                entity.HasOne(d => d.PublishedByUs)
                    .WithMany(p => p.PortalVersion1s)
                    .HasForeignKey(d => d.PublishedByUsId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__PORTAL_VERSIONS__PUBLISHED_BY_US_ID__USERS__US_ID");

                entity.HasOne(d => d.Space)
                    .WithMany(p => p.PortalVersion1s)
                    .HasForeignKey(d => d.SpaceId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__PORTAL_VERSIONS__SPACE_ID__SPACES__SPACE_ID");
            });

            modelBuilder.Entity<PrivacyLog>(entity =>
            {
                entity.HasKey(e => e.PrlId);

                entity.ToTable("PRIVACY_LOG");

                entity.Property(e => e.PrlId)
                    .ValueGeneratedNever()
                    .HasColumnName("PRL_ID");

                entity.Property(e => e.Completed).HasColumnName("COMPLETED");

                entity.Property(e => e.CompletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("COMPLETED_BY");

                entity.Property(e => e.CompletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("COMPLETED_DATE");

                entity.Property(e => e.CsId).HasColumnName("CS_ID");

                entity.Property(e => e.DropdownValue)
                    .HasMaxLength(255)
                    .HasColumnName("DROPDOWN_VALUE");

                entity.Property(e => e.EventDate)
                    .HasColumnType("datetime")
                    .HasColumnName("EVENT_DATE");

                entity.Property(e => e.EventType)
                    .HasMaxLength(255)
                    .HasColumnName("EVENT_TYPE");

                entity.Property(e => e.LcId).HasColumnName("LC_ID");

                entity.Property(e => e.Notification).HasColumnName("NOTIFICATION");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.PrlPrrId).HasColumnName("PRL_PRR_ID");

                entity.Property(e => e.PuId).HasColumnName("PU_ID");

                entity.Property(e => e.RemovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("REMOVAL_DATE");

                entity.Property(e => e.UserName)
                    .HasMaxLength(255)
                    .HasColumnName("USER_NAME");

                entity.HasOne(d => d.PrlPrr)
                    .WithMany(p => p.PrivacyLogs)
                    .HasForeignKey(d => d.PrlPrrId)
                    .HasConstraintName("FK_PRIVACY_LOG_PRIVACY_RULES");
            });

            modelBuilder.Entity<PrivacyRule>(entity =>
            {
                entity.HasKey(e => e.PrrId);

                entity.ToTable("PRIVACY_RULES");

                entity.Property(e => e.PrrId)
                    .ValueGeneratedNever()
                    .HasColumnName("PRR_ID");

                entity.Property(e => e.CreatedBy).HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy).HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.PrrActive).HasColumnName("PRR_ACTIVE");

                entity.Property(e => e.PrrDeleted).HasColumnName("PRR_DELETED");

                entity.Property(e => e.PrrNotification).HasColumnName("PRR_NOTIFICATION");

                entity.Property(e => e.PrrPuId).HasColumnName("PRR_PU_ID");

                entity.Property(e => e.PrrRuleDefinitionId)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("PRR_RULE_DEFINITION_ID");

                entity.Property(e => e.PrrRuleName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("PRR_RULE_NAME");

                entity.Property(e => e.PrrRuleTypeId).HasColumnName("PRR_RULE_TYPE_ID");

                entity.Property(e => e.UpdatedBy).HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.HasOne(d => d.PrrPu)
                    .WithMany(p => p.PrivacyRules)
                    .HasForeignKey(d => d.PrrPuId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PRIVACY_RULES_PRIVACY_RULES");
            });

            modelBuilder.Entity<PrivacyRulesDropsOption>(entity =>
            {
                entity.HasKey(e => e.PrrdoId);

                entity.ToTable("PRIVACY_RULES_DROPS_OPTIONS");

                entity.Property(e => e.PrrdoId)
                    .ValueGeneratedNever()
                    .HasColumnName("PRRDO_ID");

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.ParentSummary)
                    .HasMaxLength(10)
                    .HasColumnName("PARENT_SUMMARY")
                    .IsFixedLength(true);

                entity.Property(e => e.PrrdoDeleted).HasColumnName("PRRDO_DELETED");

                entity.Property(e => e.Summary)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Text)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("TEXT");

                entity.Property(e => e.Value)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("VALUE");
            });

            modelBuilder.Entity<PrivacyRulesOption>(entity =>
            {
                entity.HasKey(e => e.PrroId);

                entity.ToTable("PRIVACY_RULES_OPTIONS");

                entity.Property(e => e.PrroId)
                    .ValueGeneratedNever()
                    .HasColumnName("PRRO_ID");

                entity.Property(e => e.PrroOptionId).HasColumnName("PRRO_OPTION_ID");

                entity.Property(e => e.PrroPrrId).HasColumnName("PRRO_PRR_ID");

                entity.HasOne(d => d.PrroPrr)
                    .WithMany(p => p.PrivacyRulesOptions)
                    .HasForeignKey(d => d.PrroPrrId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PRIVACY_RULES_OPTIONS_PRIVACY_RULES");
            });

            modelBuilder.Entity<Process>(entity =>
            {
                entity.ToTable("Processes", "housekeeping");

                entity.Property(e => e.ProcessId).ValueGeneratedNever();

                entity.Property(e => e.LastRunUtcDateTime).HasColumnType("datetime");

                entity.Property(e => e.StoredProcedureName)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<Product>(entity =>
            {
                entity.HasKey(e => e.PrId);

                entity.ToTable("PRODUCTS");

                entity.HasIndex(e => e.CreatedDate, "IX_PRODUCTS_CREATED_DATE")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.PrgId, "IX_PRODUCTS_PRG_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.ShortCode, "IX__PRODUCTS__SHORT_CODE");

                entity.Property(e => e.PrId)
                    .HasColumnName("PR_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Code)
                    .HasMaxLength(255)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cost)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("COST");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.Discount)
                    .HasColumnName("DISCOUNT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.FneId).HasColumnName("FNE_ID");

                entity.Property(e => e.Manufacturer)
                    .HasMaxLength(50)
                    .HasColumnName("MANUFACTURER");

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .HasColumnName("NAME");

                entity.Property(e => e.PrDeleted).HasColumnName("PR_DELETED");

                entity.Property(e => e.PrExternal)
                    .HasMaxLength(255)
                    .HasColumnName("PR_EXTERNAL");

                entity.Property(e => e.PrImport).HasColumnName("PR_IMPORT");

                entity.Property(e => e.PrSelect).HasColumnName("PR_SELECT");

                entity.Property(e => e.PrUd1)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD1");

                entity.Property(e => e.PrUd10)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD10");

                entity.Property(e => e.PrUd10Bit).HasColumnName("PR_UD10_BIT");

                entity.Property(e => e.PrUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD10_DATE");

                entity.Property(e => e.PrUd10Id).HasColumnName("PR_UD10_ID");

                entity.Property(e => e.PrUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD10_NUMERIC");

                entity.Property(e => e.PrUd11)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD11");

                entity.Property(e => e.PrUd11Bit).HasColumnName("PR_UD11_BIT");

                entity.Property(e => e.PrUd12)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD12");

                entity.Property(e => e.PrUd12Bit).HasColumnName("PR_UD12_BIT");

                entity.Property(e => e.PrUd13)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD13");

                entity.Property(e => e.PrUd13Bit).HasColumnName("PR_UD13_BIT");

                entity.Property(e => e.PrUd14)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD14");

                entity.Property(e => e.PrUd14Bit).HasColumnName("PR_UD14_BIT");

                entity.Property(e => e.PrUd15)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD15");

                entity.Property(e => e.PrUd15Bit).HasColumnName("PR_UD15_BIT");

                entity.Property(e => e.PrUd16Bit).HasColumnName("PR_UD16_BIT");

                entity.Property(e => e.PrUd17Bit).HasColumnName("PR_UD17_BIT");

                entity.Property(e => e.PrUd18Bit).HasColumnName("PR_UD18_BIT");

                entity.Property(e => e.PrUd19Bit).HasColumnName("PR_UD19_BIT");

                entity.Property(e => e.PrUd1Bit).HasColumnName("PR_UD1_BIT");

                entity.Property(e => e.PrUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD1_DATE");

                entity.Property(e => e.PrUd1Id).HasColumnName("PR_UD1_ID");

                entity.Property(e => e.PrUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD1_NUMERIC");

                entity.Property(e => e.PrUd2)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD2");

                entity.Property(e => e.PrUd20Bit).HasColumnName("PR_UD20_BIT");

                entity.Property(e => e.PrUd21Bit).HasColumnName("PR_UD21_BIT");

                entity.Property(e => e.PrUd22Bit).HasColumnName("PR_UD22_BIT");

                entity.Property(e => e.PrUd23Bit).HasColumnName("PR_UD23_BIT");

                entity.Property(e => e.PrUd24Bit).HasColumnName("PR_UD24_BIT");

                entity.Property(e => e.PrUd2Bit).HasColumnName("PR_UD2_BIT");

                entity.Property(e => e.PrUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD2_DATE");

                entity.Property(e => e.PrUd2Id).HasColumnName("PR_UD2_ID");

                entity.Property(e => e.PrUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD2_NUMERIC");

                entity.Property(e => e.PrUd3)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD3");

                entity.Property(e => e.PrUd3Bit).HasColumnName("PR_UD3_BIT");

                entity.Property(e => e.PrUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD3_DATE");

                entity.Property(e => e.PrUd3Id).HasColumnName("PR_UD3_ID");

                entity.Property(e => e.PrUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD3_NUMERIC");

                entity.Property(e => e.PrUd4)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD4");

                entity.Property(e => e.PrUd4Bit).HasColumnName("PR_UD4_BIT");

                entity.Property(e => e.PrUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD4_DATE");

                entity.Property(e => e.PrUd4Id).HasColumnName("PR_UD4_ID");

                entity.Property(e => e.PrUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD4_NUMERIC");

                entity.Property(e => e.PrUd5)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD5");

                entity.Property(e => e.PrUd5Bit).HasColumnName("PR_UD5_BIT");

                entity.Property(e => e.PrUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD5_DATE");

                entity.Property(e => e.PrUd5Id).HasColumnName("PR_UD5_ID");

                entity.Property(e => e.PrUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD5_NUMERIC");

                entity.Property(e => e.PrUd6)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD6");

                entity.Property(e => e.PrUd6Bit).HasColumnName("PR_UD6_BIT");

                entity.Property(e => e.PrUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD6_DATE");

                entity.Property(e => e.PrUd6Id).HasColumnName("PR_UD6_ID");

                entity.Property(e => e.PrUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD6_NUMERIC");

                entity.Property(e => e.PrUd7)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD7");

                entity.Property(e => e.PrUd7Bit).HasColumnName("PR_UD7_BIT");

                entity.Property(e => e.PrUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD7_DATE");

                entity.Property(e => e.PrUd7Id).HasColumnName("PR_UD7_ID");

                entity.Property(e => e.PrUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD7_NUMERIC");

                entity.Property(e => e.PrUd8)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD8");

                entity.Property(e => e.PrUd8Bit).HasColumnName("PR_UD8_BIT");

                entity.Property(e => e.PrUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD8_DATE");

                entity.Property(e => e.PrUd8Id).HasColumnName("PR_UD8_ID");

                entity.Property(e => e.PrUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD8_NUMERIC");

                entity.Property(e => e.PrUd9)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD9");

                entity.Property(e => e.PrUd9Bit).HasColumnName("PR_UD9_BIT");

                entity.Property(e => e.PrUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD9_DATE");

                entity.Property(e => e.PrUd9Id).HasColumnName("PR_UD9_ID");

                entity.Property(e => e.PrUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD9_NUMERIC");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", true);

                entity.Property(e => e.PrgId).HasColumnName("PRG_ID");

                entity.Property(e => e.Price)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("PRICE");

                entity.Property(e => e.Quantity)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("QUANTITY")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'PRD-')");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Support)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("SUPPORT");

                entity.Property(e => e.TimeUnitIsTime)
                    .IsRequired()
                    .HasColumnName("TIME_UNIT_IS_TIME")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TimeUnitValue).HasColumnName("TIME_UNIT_VALUE");

                entity.Property(e => e.TxcId).HasColumnName("TXC_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.Vat)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("VAT");

                entity.HasOne(d => d.Fne)
                    .WithMany(p => p.Products)
                    .HasForeignKey(d => d.FneId)
                    .HasConstraintName("FK_PRODUCTS_FINANCIAL_ENTITIES");

                entity.HasOne(d => d.Prg)
                    .WithMany(p => p.Products)
                    .HasForeignKey(d => d.PrgId)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_PRODUCTS_PRODUCTS_GROUPS");

                entity.HasOne(d => d.Txc)
                    .WithMany(p => p.Products)
                    .HasForeignKey(d => d.TxcId)
                    .HasConstraintName("FK_PRODUCTS_TAX_CODES");
            });

            modelBuilder.Entity<ProductsCurrency>(entity =>
            {
                entity.HasKey(e => e.PrcId);

                entity.ToTable("PRODUCTS_CURRENCIES");

                entity.HasIndex(e => e.CurId, "IX_PRODUCTS_CURRENCIES_CUR_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.PrId, "IX_PRODUCTS_CURRENCIES_PR_ID")
                    .HasFillFactor((byte)80);

                entity.Property(e => e.PrcId)
                    .ValueGeneratedNever()
                    .HasColumnName("PRC_ID");

                entity.Property(e => e.Cost)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("COST");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CurId).HasColumnName("CUR_ID");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.FixedDiscountRate).HasColumnName("FIXED_DISCOUNT_RATE");

                entity.Property(e => e.PrId).HasColumnName("PR_ID");

                entity.Property(e => e.PrcDeleted).HasColumnName("PRC_DELETED");

                entity.Property(e => e.Price)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("PRICE");

                entity.Property(e => e.TxcIdFixed).HasColumnName("TXC_ID_FIXED");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.HasOne(d => d.Cur)
                    .WithMany(p => p.ProductsCurrencies)
                    .HasForeignKey(d => d.CurId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PRODUCTS_CURRENCIES_CURRENCIES");

                entity.HasOne(d => d.Pr)
                    .WithMany(p => p.ProductsCurrencies)
                    .HasForeignKey(d => d.PrId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PRODUCTS_CURRENCIES_PRODUCTS");
            });

            modelBuilder.Entity<ProductsGroup>(entity =>
            {
                entity.HasKey(e => e.PrgId)
                    .HasName("PK_PROD_GROUPS");

                entity.ToTable("PRODUCTS_GROUPS");

                entity.HasIndex(e => e.ShortCode, "IX__PRODUCTS_GROUPS__SHORT_CODE");

                entity.Property(e => e.PrgId)
                    .ValueGeneratedNever()
                    .HasColumnName("PRG_ID");

                entity.Property(e => e.Code)
                    .HasMaxLength(50)
                    .HasColumnName("CODE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.Discount).HasColumnName("DISCOUNT");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", true);

                entity.Property(e => e.PrgDeleted)
                    .HasColumnName("PRG_DELETED")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'PRG-')");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Type)
                    .HasMaxLength(50)
                    .HasColumnName("TYPE");

                entity.Property(e => e.Ud1)
                    .HasMaxLength(255)
                    .HasColumnName("UD1");

                entity.Property(e => e.Ud10)
                    .HasMaxLength(255)
                    .HasColumnName("UD10");

                entity.Property(e => e.Ud11)
                    .HasMaxLength(255)
                    .HasColumnName("UD11");

                entity.Property(e => e.Ud12)
                    .HasMaxLength(255)
                    .HasColumnName("UD12");

                entity.Property(e => e.Ud13)
                    .HasMaxLength(255)
                    .HasColumnName("UD13");

                entity.Property(e => e.Ud14)
                    .HasMaxLength(255)
                    .HasColumnName("UD14");

                entity.Property(e => e.Ud15)
                    .HasMaxLength(255)
                    .HasColumnName("UD15");

                entity.Property(e => e.Ud2)
                    .HasMaxLength(255)
                    .HasColumnName("UD2");

                entity.Property(e => e.Ud3)
                    .HasMaxLength(255)
                    .HasColumnName("UD3");

                entity.Property(e => e.Ud4)
                    .HasMaxLength(255)
                    .HasColumnName("UD4");

                entity.Property(e => e.Ud5)
                    .HasMaxLength(255)
                    .HasColumnName("UD5");

                entity.Property(e => e.Ud6)
                    .HasMaxLength(255)
                    .HasColumnName("UD6");

                entity.Property(e => e.Ud7)
                    .HasMaxLength(255)
                    .HasColumnName("UD7");

                entity.Property(e => e.Ud8)
                    .HasMaxLength(255)
                    .HasColumnName("UD8");

                entity.Property(e => e.Ud9)
                    .HasMaxLength(255)
                    .HasColumnName("UD9");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<ProductsSchedule>(entity =>
            {
                entity.HasKey(e => e.PrsId);

                entity.ToTable("PRODUCTS_SCHEDULE");

                entity.Property(e => e.PrsId)
                    .ValueGeneratedNever()
                    .HasColumnName("PRS_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Month).HasColumnName("MONTH");

                entity.Property(e => e.Percent)
                    .HasColumnType("numeric(18, 5)")
                    .HasColumnName("PERCENT");

                entity.Property(e => e.PrId).HasColumnName("PR_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.HasOne(d => d.Pr)
                    .WithMany(p => p.ProductsSchedules)
                    .HasForeignKey(d => d.PrId)
                    .HasConstraintName("FK_PRODUCTS_PRODUCTS_SCHEDULE");
            });

            modelBuilder.Entity<Project>(entity =>
            {
                entity.HasKey(e => e.PjId);

                entity.ToTable("PROJECTS");

                entity.HasIndex(e => e.AccId, "IX_PROJECTS_ACC_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.AcId, "IX_PROJECTS_AC_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.CreatedDate, "IX_PROJECTS_CREATED_DATE")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.Owner, "IX_PROJECTS_OWNER")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.SitId, "IX_PROJECTS_SIT_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.ShortCode, "IX__PROJECTS__SHORT_CODE");

                entity.Property(e => e.PjId)
                    .HasColumnName("PJ_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.ActualTime).HasColumnName("ACTUAL_TIME");

                entity.Property(e => e.ActualUnits).HasColumnName("ACTUAL_UNITS");

                entity.Property(e => e.CompletionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("COMPLETION_DATE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details)
                    .HasColumnName("DETAILS")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.EstimatedTime).HasColumnName("ESTIMATED_TIME");

                entity.Property(e => e.EstimatedUnits).HasColumnName("ESTIMATED_UNITS");

                entity.Property(e => e.NextAction).HasColumnName("NEXT_ACTION");

                entity.Property(e => e.OpId).HasColumnName("OP_ID");

                entity.Property(e => e.Owner).HasColumnName("OWNER");

                entity.Property(e => e.PjDeleted).HasColumnName("PJ_DELETED");

                entity.Property(e => e.PjExternal)
                    .HasMaxLength(255)
                    .HasColumnName("PJ_EXTERNAL");

                entity.Property(e => e.PjFlag).HasColumnName("PJ_FLAG");

                entity.Property(e => e.PjImport).HasColumnName("PJ_IMPORT");

                entity.Property(e => e.PjUd10Bit).HasColumnName("PJ_UD10_BIT");

                entity.Property(e => e.PjUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJ_UD10_DATE");

                entity.Property(e => e.PjUd10Id).HasColumnName("PJ_UD10_ID");

                entity.Property(e => e.PjUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJ_UD10_NUMERIC");

                entity.Property(e => e.PjUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJ_UD10_TEXT");

                entity.Property(e => e.PjUd11Bit).HasColumnName("PJ_UD11_BIT");

                entity.Property(e => e.PjUd12Bit).HasColumnName("PJ_UD12_BIT");

                entity.Property(e => e.PjUd13Bit).HasColumnName("PJ_UD13_BIT");

                entity.Property(e => e.PjUd14Bit).HasColumnName("PJ_UD14_BIT");

                entity.Property(e => e.PjUd15Bit).HasColumnName("PJ_UD15_BIT");

                entity.Property(e => e.PjUd16Bit).HasColumnName("PJ_UD16_BIT");

                entity.Property(e => e.PjUd17Bit).HasColumnName("PJ_UD17_BIT");

                entity.Property(e => e.PjUd18Bit).HasColumnName("PJ_UD18_BIT");

                entity.Property(e => e.PjUd19Bit).HasColumnName("PJ_UD19_BIT");

                entity.Property(e => e.PjUd1Bit).HasColumnName("PJ_UD1_BIT");

                entity.Property(e => e.PjUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJ_UD1_DATE");

                entity.Property(e => e.PjUd1Id).HasColumnName("PJ_UD1_ID");

                entity.Property(e => e.PjUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJ_UD1_NUMERIC");

                entity.Property(e => e.PjUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJ_UD1_TEXT");

                entity.Property(e => e.PjUd20Bit).HasColumnName("PJ_UD20_BIT");

                entity.Property(e => e.PjUd21Bit).HasColumnName("PJ_UD21_BIT");

                entity.Property(e => e.PjUd22Bit).HasColumnName("PJ_UD22_BIT");

                entity.Property(e => e.PjUd23Bit).HasColumnName("PJ_UD23_BIT");

                entity.Property(e => e.PjUd24Bit).HasColumnName("PJ_UD24_BIT");

                entity.Property(e => e.PjUd2Bit).HasColumnName("PJ_UD2_BIT");

                entity.Property(e => e.PjUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJ_UD2_DATE");

                entity.Property(e => e.PjUd2Id).HasColumnName("PJ_UD2_ID");

                entity.Property(e => e.PjUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJ_UD2_NUMERIC");

                entity.Property(e => e.PjUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJ_UD2_TEXT");

                entity.Property(e => e.PjUd3Bit).HasColumnName("PJ_UD3_BIT");

                entity.Property(e => e.PjUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJ_UD3_DATE");

                entity.Property(e => e.PjUd3Id).HasColumnName("PJ_UD3_ID");

                entity.Property(e => e.PjUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJ_UD3_NUMERIC");

                entity.Property(e => e.PjUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJ_UD3_TEXT");

                entity.Property(e => e.PjUd4Bit).HasColumnName("PJ_UD4_BIT");

                entity.Property(e => e.PjUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJ_UD4_DATE");

                entity.Property(e => e.PjUd4Id).HasColumnName("PJ_UD4_ID");

                entity.Property(e => e.PjUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJ_UD4_NUMERIC");

                entity.Property(e => e.PjUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJ_UD4_TEXT");

                entity.Property(e => e.PjUd5Bit).HasColumnName("PJ_UD5_BIT");

                entity.Property(e => e.PjUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJ_UD5_DATE");

                entity.Property(e => e.PjUd5Id).HasColumnName("PJ_UD5_ID");

                entity.Property(e => e.PjUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJ_UD5_NUMERIC");

                entity.Property(e => e.PjUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJ_UD5_TEXT");

                entity.Property(e => e.PjUd6Bit).HasColumnName("PJ_UD6_BIT");

                entity.Property(e => e.PjUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJ_UD6_DATE");

                entity.Property(e => e.PjUd6Id).HasColumnName("PJ_UD6_ID");

                entity.Property(e => e.PjUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJ_UD6_NUMERIC");

                entity.Property(e => e.PjUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJ_UD6_TEXT");

                entity.Property(e => e.PjUd7Bit).HasColumnName("PJ_UD7_BIT");

                entity.Property(e => e.PjUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJ_UD7_DATE");

                entity.Property(e => e.PjUd7Id).HasColumnName("PJ_UD7_ID");

                entity.Property(e => e.PjUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJ_UD7_NUMERIC");

                entity.Property(e => e.PjUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJ_UD7_TEXT");

                entity.Property(e => e.PjUd8Bit).HasColumnName("PJ_UD8_BIT");

                entity.Property(e => e.PjUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJ_UD8_DATE");

                entity.Property(e => e.PjUd8Id).HasColumnName("PJ_UD8_ID");

                entity.Property(e => e.PjUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJ_UD8_NUMERIC");

                entity.Property(e => e.PjUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJ_UD8_TEXT");

                entity.Property(e => e.PjUd9Bit).HasColumnName("PJ_UD9_BIT");

                entity.Property(e => e.PjUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJ_UD9_DATE");

                entity.Property(e => e.PjUd9Id).HasColumnName("PJ_UD9_ID");

                entity.Property(e => e.PjUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJ_UD9_NUMERIC");

                entity.Property(e => e.PjUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJ_UD9_TEXT");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", true);

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.SgId).HasColumnName("SG_ID");

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'PRJ-')");

                entity.Property(e => e.SitId).HasColumnName("SIT_ID");

                entity.Property(e => e.Stage).HasColumnName("STAGE");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("START_DATE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.Value)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("VALUE");

                entity.HasOne(d => d.Ac)
                    .WithMany(p => p.Projects)
                    .HasForeignKey(d => d.AcId)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_PROJECTS_ACCOUNTS");

                entity.HasOne(d => d.Acc)
                    .WithMany(p => p.Projects)
                    .HasForeignKey(d => d.AccId)
                    .HasConstraintName("FK_PROJECTS_ACCOUNTS_CONTACTS");

                entity.HasOne(d => d.OwnerNavigation)
                    .WithMany(p => p.Projects)
                    .HasForeignKey(d => d.Owner)
                    .HasConstraintName("FK_PROJECTS_USERS");

                entity.HasOne(d => d.Sit)
                    .WithMany(p => p.Projects)
                    .HasForeignKey(d => d.SitId)
                    .HasConstraintName("FK_PROJECTS_SITES");
            });

            modelBuilder.Entity<Purpose>(entity =>
            {
                entity.HasKey(e => e.PuId);

                entity.ToTable("PURPOSES");

                entity.HasIndex(e => e.ShortCode, "IX__PURPOSES__SHORT_CODE");

                entity.Property(e => e.PuId)
                    .ValueGeneratedNever()
                    .HasColumnName("PU_ID");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Duration).HasColumnName("DURATION");

                entity.Property(e => e.LawfulBasis).HasColumnName("LAWFUL_BASIS");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", true);

                entity.Property(e => e.PuDeleted).HasColumnName("PU_DELETED");

                entity.Property(e => e.PuUd1)
                    .HasMaxLength(255)
                    .HasColumnName("PU_UD1");

                entity.Property(e => e.PuUd10)
                    .HasMaxLength(255)
                    .HasColumnName("PU_UD10");

                entity.Property(e => e.PuUd10Bit).HasColumnName("PU_UD10_BIT");

                entity.Property(e => e.PuUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PU_UD10_DATE");

                entity.Property(e => e.PuUd10Id).HasColumnName("PU_UD10_ID");

                entity.Property(e => e.PuUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PU_UD10_NUMERIC");

                entity.Property(e => e.PuUd1Bit).HasColumnName("PU_UD1_BIT");

                entity.Property(e => e.PuUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PU_UD1_DATE");

                entity.Property(e => e.PuUd1Id).HasColumnName("PU_UD1_ID");

                entity.Property(e => e.PuUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PU_UD1_NUMERIC");

                entity.Property(e => e.PuUd2)
                    .HasMaxLength(255)
                    .HasColumnName("PU_UD2");

                entity.Property(e => e.PuUd2Bit).HasColumnName("PU_UD2_BIT");

                entity.Property(e => e.PuUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PU_UD2_DATE");

                entity.Property(e => e.PuUd2Id).HasColumnName("PU_UD2_ID");

                entity.Property(e => e.PuUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PU_UD2_NUMERIC");

                entity.Property(e => e.PuUd3)
                    .HasMaxLength(255)
                    .HasColumnName("PU_UD3");

                entity.Property(e => e.PuUd3Bit).HasColumnName("PU_UD3_BIT");

                entity.Property(e => e.PuUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PU_UD3_DATE");

                entity.Property(e => e.PuUd3Id).HasColumnName("PU_UD3_ID");

                entity.Property(e => e.PuUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PU_UD3_NUMERIC");

                entity.Property(e => e.PuUd4)
                    .HasMaxLength(255)
                    .HasColumnName("PU_UD4");

                entity.Property(e => e.PuUd4Bit).HasColumnName("PU_UD4_BIT");

                entity.Property(e => e.PuUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PU_UD4_DATE");

                entity.Property(e => e.PuUd4Id).HasColumnName("PU_UD4_ID");

                entity.Property(e => e.PuUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PU_UD4_NUMERIC");

                entity.Property(e => e.PuUd5)
                    .HasMaxLength(255)
                    .HasColumnName("PU_UD5");

                entity.Property(e => e.PuUd5Bit).HasColumnName("PU_UD5_BIT");

                entity.Property(e => e.PuUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PU_UD5_DATE");

                entity.Property(e => e.PuUd5Id).HasColumnName("PU_UD5_ID");

                entity.Property(e => e.PuUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PU_UD5_NUMERIC");

                entity.Property(e => e.PuUd6)
                    .HasMaxLength(255)
                    .HasColumnName("PU_UD6");

                entity.Property(e => e.PuUd6Bit).HasColumnName("PU_UD6_BIT");

                entity.Property(e => e.PuUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PU_UD6_DATE");

                entity.Property(e => e.PuUd6Id).HasColumnName("PU_UD6_ID");

                entity.Property(e => e.PuUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PU_UD6_NUMERIC");

                entity.Property(e => e.PuUd7)
                    .HasMaxLength(255)
                    .HasColumnName("PU_UD7");

                entity.Property(e => e.PuUd7Bit).HasColumnName("PU_UD7_BIT");

                entity.Property(e => e.PuUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PU_UD7_DATE");

                entity.Property(e => e.PuUd7Id).HasColumnName("PU_UD7_ID");

                entity.Property(e => e.PuUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PU_UD7_NUMERIC");

                entity.Property(e => e.PuUd8)
                    .HasMaxLength(255)
                    .HasColumnName("PU_UD8");

                entity.Property(e => e.PuUd8Bit).HasColumnName("PU_UD8_BIT");

                entity.Property(e => e.PuUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PU_UD8_DATE");

                entity.Property(e => e.PuUd8Id).HasColumnName("PU_UD8_ID");

                entity.Property(e => e.PuUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PU_UD8_NUMERIC");

                entity.Property(e => e.PuUd9)
                    .HasMaxLength(255)
                    .HasColumnName("PU_UD9");

                entity.Property(e => e.PuUd9Bit).HasColumnName("PU_UD9_BIT");

                entity.Property(e => e.PuUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PU_UD9_DATE");

                entity.Property(e => e.PuUd9Id).HasColumnName("PU_UD9_ID");

                entity.Property(e => e.PuUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PU_UD9_NUMERIC");

                entity.Property(e => e.RemovalDateMode).HasColumnName("REMOVAL_DATE_MODE");

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'PUR-')");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<Report>(entity =>
            {
                entity.HasKey(e => e.ReId);

                entity.ToTable("REPORTS");

                entity.HasIndex(e => e.RetId, "IX_REPORTS_RET_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.ReOwner, "IX_REPORTS_RE_OWNER")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.ReType, "IX_REPORTS_RE_TYPE")
                    .HasFillFactor((byte)80);

                entity.Property(e => e.ReId)
                    .HasColumnName("RE_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.AcoId).HasColumnName("ACO_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.ItemReport).HasColumnName("ITEM_REPORT");

                entity.Property(e => e.Layouthint)
                    .HasMaxLength(128)
                    .HasColumnName("LAYOUTHINT");

                entity.Property(e => e.NotLegacy).HasColumnName("NOT_LEGACY");

                entity.Property(e => e.NotSrs).HasColumnName("NOT_SRS");

                entity.Property(e => e.ObjectType)
                    .HasMaxLength(50)
                    .HasColumnName("OBJECT_TYPE");

                entity.Property(e => e.ReDeleted).HasColumnName("RE_DELETED");

                entity.Property(e => e.ReOwner).HasColumnName("RE_OWNER");

                entity.Property(e => e.ReQuery).HasColumnName("RE_QUERY");

                entity.Property(e => e.ReType).HasColumnName("RE_TYPE");

                entity.Property(e => e.ReportArea)
                    .HasMaxLength(255)
                    .HasColumnName("REPORT_AREA");

                entity.Property(e => e.RetId).HasColumnName("RET_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Summaryref)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARYREF");

                entity.Property(e => e.Summaryreftemp)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARYREFTEMP");

                entity.Property(e => e.SystemReport).HasColumnName("SYSTEM_REPORT");

                entity.Property(e => e.Temp).HasColumnName("TEMP");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.ValidChart).HasColumnName("VALID_CHART");

                entity.Property(e => e.Xmldef).HasColumnName("XMLDEF");

                entity.HasOne(d => d.ReOwnerNavigation)
                    .WithMany(p => p.Reports)
                    .HasForeignKey(d => d.ReOwner)
                    .HasConstraintName("FK_REPORTS_USERS");

                entity.HasOne(d => d.ReTypeNavigation)
                    .WithMany(p => p.Reports)
                    .HasForeignKey(d => d.ReType)
                    .HasConstraintName("FK_REPORTS_ACCOUNTS_GROUPS");

                entity.HasOne(d => d.Ret)
                    .WithMany(p => p.Reports)
                    .HasForeignKey(d => d.RetId)
                    .HasConstraintName("FK_REPORTS_REPORT_TYPES");
            });

            modelBuilder.Entity<ReportType>(entity =>
            {
                entity.HasKey(e => e.RetId);

                entity.ToTable("REPORT_TYPES");

                entity.Property(e => e.RetId)
                    .ValueGeneratedNever()
                    .HasColumnName("RET_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(32)
                    .UseCollation("Latin1_General_CI_AS");

                entity.Property(e => e.SystemReport).HasColumnName("SYSTEM_REPORT");
            });

            modelBuilder.Entity<Request>(entity =>
            {
                entity.HasKey(e => e.ReqId);

                entity.ToTable("REQUESTS");

                entity.HasIndex(e => e.ReqId, "IX__REQUESTS__REQ_ID");

                entity.Property(e => e.ReqId)
                    .HasColumnName("REQ_ID")
                    .HasDefaultValueSql("(newsequentialid())");

                entity.Property(e => e.DesignId).HasColumnName("DESIGN_ID");

                entity.Property(e => e.RequestData)
                    .IsRequired()
                    .HasColumnType("xml")
                    .HasColumnName("REQUEST_DATA");

                entity.Property(e => e.RequestType).HasColumnName("REQUEST_TYPE");
            });

            modelBuilder.Entity<RequestsDisplayId>(entity =>
            {
                entity.HasKey(e => e.DisplayId)
                    .HasName("PK__REQUESTS__D4788F484CE35490");

                entity.ToTable("REQUESTS_DISPLAY_IDS");

                entity.HasIndex(e => e.ReqId, "IX__REQUESTS_DISPLAY_IDS__REQ_ID_Includes");

                entity.Property(e => e.DisplayId).HasColumnName("DISPLAY_ID");

                entity.Property(e => e.ReqId).HasColumnName("REQ_ID");

                entity.HasOne(d => d.Req)
                    .WithMany(p => p.RequestsDisplayIds)
                    .HasForeignKey(d => d.ReqId)
                    .HasConstraintName("FK__REQUESTS___REQ_I__4CE2BC89");
            });

            modelBuilder.Entity<RequiredVersion>(entity =>
            {
                entity.HasKey(e => e.IntegrationId)
                    .HasName("PK_INTEGRATION_ID");

                entity.ToTable("REQUIRED_VERSIONS");

                entity.Property(e => e.IntegrationId)
                    .ValueGeneratedNever()
                    .HasColumnName("INTEGRATION_ID");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("ITEM")
                    .UseCollation("Latin1_General_CI_AS");

                entity.Property(e => e.RequiredVersion1)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("REQUIRED_VERSION")
                    .UseCollation("Latin1_General_CI_AS");
            });

            modelBuilder.Entity<Response>(entity =>
            {
                entity.HasKey(e => e.RspId)
                    .HasName("PK_RESPONSES#");

                entity.ToTable("RESPONSES");

                entity.Property(e => e.RspId)
                    .HasColumnName("RSP_ID")
                    .HasDefaultValueSql("(newsequentialid())");

                entity.Property(e => e.ResponseData)
                    .IsRequired()
                    .HasColumnType("xml")
                    .HasColumnName("RESPONSE_DATA");

                entity.Property(e => e.ResponseType)
                    .HasMaxLength(50)
                    .HasColumnName("RESPONSE_TYPE");
            });

            modelBuilder.Entity<Role>(entity =>
            {
                entity.HasKey(e => e.RId)
                    .HasName("PK__ROLES__CAFF413217D20DF2");

                entity.ToTable("ROLES", "Portal");

                entity.Property(e => e.RId)
                    .ValueGeneratedNever()
                    .HasColumnName("R_ID");

                entity.Property(e => e.DisplayName)
                    .HasMaxLength(255)
                    .HasColumnName("DISPLAY_NAME")
                    .UseCollation("Latin1_General_CI_AS");

                entity.Property(e => e.Mandatory).HasColumnName("MANDATORY");

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .HasColumnName("NAME")
                    .UseCollation("Latin1_General_CI_AS");

                entity.Property(e => e.Priority).HasColumnName("PRIORITY");

                entity.Property(e => e.TemplateId).HasColumnName("TEMPLATE_ID");

                entity.HasOne(d => d.Template)
                    .WithMany(p => p.Roles)
                    .HasForeignKey(d => d.TemplateId)
                    .HasConstraintName("FK__ROLES__TEMPLATE___26FB7415");
            });

            modelBuilder.Entity<RoleGroup>(entity =>
            {
                entity.HasKey(e => e.RgId)
                    .HasName("PK__ROLE_GRO__5AC212129A1B4117");

                entity.ToTable("ROLE_GROUPS", "Portal");

                entity.Property(e => e.RgId)
                    .ValueGeneratedNever()
                    .HasColumnName("RG_ID");

                entity.Property(e => e.GId).HasColumnName("G_ID");

                entity.Property(e => e.RId).HasColumnName("R_ID");

                entity.Property(e => e.SpaceId).HasColumnName("SPACE_ID");

                entity.HasOne(d => d.GIdNavigation)
                    .WithMany(p => p.RoleGroups)
                    .HasForeignKey(d => d.GId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ROLE_GROUPS__GI_D__4397B2C3");

                entity.HasOne(d => d.RIdNavigation)
                    .WithMany(p => p.RoleGroups)
                    .HasForeignKey(d => d.RId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ROLE_GROUPS__R_ID__42A38E8A");

                entity.HasOne(d => d.Space)
                    .WithMany(p => p.RoleGroups)
                    .HasForeignKey(d => d.SpaceId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ROLE_GROU__SPACE__448BD6FC");
            });

            modelBuilder.Entity<RoleGroupCollection>(entity =>
            {
                entity.HasKey(e => e.RgcId);

                entity.ToTable("ROLE_GROUP_COLLECTIONS", "Portal");

                entity.Property(e => e.RgcId)
                    .ValueGeneratedNever()
                    .HasColumnName("RGC_ID");

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .HasColumnName("NAME");
            });

            modelBuilder.Entity<RoleGroupCollectionsRole>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ROLE_GROUP_COLLECTIONS_ROLES", "Portal");

                entity.Property(e => e.RId).HasColumnName("R_ID");

                entity.Property(e => e.RgcId).HasColumnName("RGC_ID");

                entity.HasOne(d => d.RIdNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.RId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ROLE_GROUP_COLLECTIONS_ROLES_ROLES");

                entity.HasOne(d => d.Rgc)
                    .WithMany()
                    .HasForeignKey(d => d.RgcId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ROLE_GROUP_COLLECTIONS_ROLES_ROLE_GROUP_COLLECTIONS");
            });

            modelBuilder.Entity<ScanningExclusion>(entity =>
            {
                entity.ToTable("SCANNING_EXCLUSIONS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ScanningExclusion1)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("SCANNING_EXCLUSION")
                    .UseCollation("Latin1_General_CI_AS");
            });

            modelBuilder.Entity<Schedule>(entity =>
            {
                entity.HasKey(e => e.SchId)
                    .HasName("PK_Schedule_1");

                entity.ToTable("Schedule");

                entity.HasIndex(e => e.ShortCode, "IX__Schedule__SHORT_CODE");

                entity.Property(e => e.SchId)
                    .ValueGeneratedNever()
                    .HasColumnName("SCH_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Deleted).HasColumnName("DELETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", true);

                entity.Property(e => e.SchUd10Bit).HasColumnName("SCH_UD10_BIT");

                entity.Property(e => e.SchUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SCH_UD10_DATE");

                entity.Property(e => e.SchUd10Id).HasColumnName("SCH_UD10_ID");

                entity.Property(e => e.SchUd10Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SCH_UD10_NUMERIC");

                entity.Property(e => e.SchUd10Text)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SCH_UD10_TEXT");

                entity.Property(e => e.SchUd1Bit).HasColumnName("SCH_UD1_BIT");

                entity.Property(e => e.SchUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SCH_UD1_DATE");

                entity.Property(e => e.SchUd1Id).HasColumnName("SCH_UD1_ID");

                entity.Property(e => e.SchUd1Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SCH_UD1_NUMERIC");

                entity.Property(e => e.SchUd1Text)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SCH_UD1_TEXT");

                entity.Property(e => e.SchUd2Bit).HasColumnName("SCH_UD2_BIT");

                entity.Property(e => e.SchUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SCH_UD2_DATE");

                entity.Property(e => e.SchUd2Id).HasColumnName("SCH_UD2_ID");

                entity.Property(e => e.SchUd2Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SCH_UD2_NUMERIC");

                entity.Property(e => e.SchUd2Text)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SCH_UD2_TEXT");

                entity.Property(e => e.SchUd3Bit).HasColumnName("SCH_UD3_BIT");

                entity.Property(e => e.SchUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SCH_UD3_DATE");

                entity.Property(e => e.SchUd3Id).HasColumnName("SCH_UD3_ID");

                entity.Property(e => e.SchUd3Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SCH_UD3_NUMERIC");

                entity.Property(e => e.SchUd3Text)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SCH_UD3_TEXT");

                entity.Property(e => e.SchUd4Bit).HasColumnName("SCH_UD4_BIT");

                entity.Property(e => e.SchUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SCH_UD4_DATE");

                entity.Property(e => e.SchUd4Id).HasColumnName("SCH_UD4_ID");

                entity.Property(e => e.SchUd4Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SCH_UD4_NUMERIC");

                entity.Property(e => e.SchUd4Text)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SCH_UD4_TEXT");

                entity.Property(e => e.SchUd5Bit).HasColumnName("SCH_UD5_BIT");

                entity.Property(e => e.SchUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SCH_UD5_DATE");

                entity.Property(e => e.SchUd5Id).HasColumnName("SCH_UD5_ID");

                entity.Property(e => e.SchUd5Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SCH_UD5_NUMERIC");

                entity.Property(e => e.SchUd5Text)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SCH_UD5_TEXT");

                entity.Property(e => e.SchUd6Bit).HasColumnName("SCH_UD6_BIT");

                entity.Property(e => e.SchUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SCH_UD6_DATE");

                entity.Property(e => e.SchUd6Id).HasColumnName("SCH_UD6_ID");

                entity.Property(e => e.SchUd6Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SCH_UD6_NUMERIC");

                entity.Property(e => e.SchUd6Text)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SCH_UD6_TEXT");

                entity.Property(e => e.SchUd7Bit).HasColumnName("SCH_UD7_BIT");

                entity.Property(e => e.SchUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SCH_UD7_DATE");

                entity.Property(e => e.SchUd7Id).HasColumnName("SCH_UD7_ID");

                entity.Property(e => e.SchUd7Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SCH_UD7_NUMERIC");

                entity.Property(e => e.SchUd7Text)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SCH_UD7_TEXT");

                entity.Property(e => e.SchUd8Bit).HasColumnName("SCH_UD8_BIT");

                entity.Property(e => e.SchUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SCH_UD8_DATE");

                entity.Property(e => e.SchUd8Id).HasColumnName("SCH_UD8_ID");

                entity.Property(e => e.SchUd8Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SCH_UD8_NUMERIC");

                entity.Property(e => e.SchUd8Text)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SCH_UD8_TEXT");

                entity.Property(e => e.SchUd9Bit).HasColumnName("SCH_UD9_BIT");

                entity.Property(e => e.SchUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SCH_UD9_DATE");

                entity.Property(e => e.SchUd9Id).HasColumnName("SCH_UD9_ID");

                entity.Property(e => e.SchUd9Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SCH_UD9_NUMERIC");

                entity.Property(e => e.SchUd9Text)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SCH_UD9_TEXT");

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'SCH-')");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<ScheduleQuoteItemJob>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Action).HasColumnName("ACTION");

                entity.Property(e => e.Completed).HasColumnName("COMPLETED");

                entity.Property(e => e.CreatedBy).HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Deleted).HasColumnName("DELETED");

                entity.Property(e => e.DeletedBy).HasColumnName("DELETED_BY");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.OpqId).HasColumnName("OPQ_ID");

                entity.Property(e => e.Opqdid).HasColumnName("OPQDID");

                entity.Property(e => e.Status).HasColumnName("STATUS");
            });

            modelBuilder.Entity<ScheduledQuote>(entity =>
            {
                entity.HasKey(e => e.SchqId)
                    .HasName("PK__Schedule__DAFD1F042C6E5124");

                entity.Property(e => e.SchqId)
                    .ValueGeneratedNever()
                    .HasColumnName("SCHQ_ID");

                entity.Property(e => e.CreatedBy).HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.EstimatedClosed)
                    .HasColumnType("datetime")
                    .HasColumnName("ESTIMATED_CLOSED");

                entity.Property(e => e.InvoiceDate)
                    .HasColumnType("datetime")
                    .HasColumnName("INVOICE_DATE");

                entity.Property(e => e.OpqId).HasColumnName("OPQ_ID");

                entity.Property(e => e.SchId).HasColumnName("SCH_ID");

                entity.Property(e => e.UpdatedBy).HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.Wording).HasColumnName("WORDING");
            });

            modelBuilder.Entity<ScheduledQuotesChangeHistory>(entity =>
            {
                entity.HasKey(e => e.SqhId)
                    .HasName("PK__Schedule__1369A31A23073A15");

                entity.ToTable("ScheduledQuotesChangeHistory");

                entity.Property(e => e.SqhId)
                    .ValueGeneratedNever()
                    .HasColumnName("SQH_ID");

                entity.Property(e => e.CreatedBy).HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.OpqdId).HasColumnName("OPQD_ID");

                entity.Property(e => e.Quantity)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("QUANTITY");

                entity.Property(e => e.QuoteTotal)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("QUOTE_TOTAL");

                entity.Property(e => e.SchqId).HasColumnName("SCHQ_ID");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.UpdatedBy).HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<SecureFieldValue>(entity =>
            {
                entity.HasKey(e => new { e.ItemId, e.DatabaseColumn })
                    .IsClustered(false);

                entity.ToTable("SECURE_FIELD_VALUES");

                entity.Property(e => e.ItemId).HasColumnName("ITEM_ID");

                entity.Property(e => e.DatabaseColumn)
                    .HasMaxLength(50)
                    .HasColumnName("DATABASE_COLUMN");

                entity.Property(e => e.EncryptedValue).HasColumnName("ENCRYPTED_VALUE");
            });

            modelBuilder.Entity<SecureNotesDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SECURE_NOTES_DETAILS");

                entity.Property(e => e.EncryptedDetails)
                    .IsRequired()
                    .HasMaxLength(4000)
                    .HasColumnName("ENCRYPTED_DETAILS");

                entity.Property(e => e.NtId).HasColumnName("NT_ID");
            });

            modelBuilder.Entity<SecureNotesPermission>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SECURE_NOTES_PERMISSIONS");

                entity.Property(e => e.NoteId).HasColumnName("NOTE_ID");

                entity.Property(e => e.PermissionId).HasColumnName("PERMISSION_ID");

                entity.Property(e => e.PermissionType).HasColumnName("PERMISSION_TYPE");
            });

            modelBuilder.Entity<SemBit>(entity =>
            {
                entity.ToTable("SEM_BIT");

                entity.Property(e => e.SemBitId)
                    .ValueGeneratedNever()
                    .HasColumnName("SEM_BIT_ID");

                entity.HasOne(d => d.SemBitNavigation)
                    .WithOne(p => p.SemBit)
                    .HasForeignKey<SemBit>(d => d.SemBitId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__SEM_BIT__SEM_BIT__5399DBB9");
            });

            modelBuilder.Entity<SemDate>(entity =>
            {
                entity.ToTable("SEM_DATE");

                entity.Property(e => e.SemDateId)
                    .ValueGeneratedNever()
                    .HasColumnName("SEM_DATE_ID");

                entity.HasOne(d => d.SemDateNavigation)
                    .WithOne(p => p.SemDate)
                    .HasForeignKey<SemDate>(d => d.SemDateId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__SEM_DATE__SEM_DA__56764864");
            });

            modelBuilder.Entity<SemMuid>(entity =>
            {
                entity.HasKey(e => e.SemMuidId)
                    .IsClustered(false);

                entity.ToTable("SEM_MUID");

                entity.Property(e => e.SemMuidId)
                    .ValueGeneratedNever()
                    .HasColumnName("SEM_MUID_ID");
            });

            modelBuilder.Entity<SemMuidLink>(entity =>
            {
                entity.HasKey(e => new { e.SemMuidId, e.DrId, e.DroId });

                entity.ToTable("SEM_MUID_LINKS");

                entity.Property(e => e.SemMuidId).HasColumnName("SEM_MUID_ID");

                entity.Property(e => e.DrId).HasColumnName("DR_ID");

                entity.Property(e => e.DroId).HasColumnName("DRO_ID");
            });

            modelBuilder.Entity<SemNum>(entity =>
            {
                entity.ToTable("SEM_NUM");

                entity.Property(e => e.SemNumId)
                    .ValueGeneratedNever()
                    .HasColumnName("SEM_NUM_ID");

                entity.HasOne(d => d.SemNumNavigation)
                    .WithOne(p => p.SemNum)
                    .HasForeignKey<SemNum>(d => d.SemNumId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__SEM_NUM__SEM_NUM__5C2F21BA");
            });

            modelBuilder.Entity<SemTxt>(entity =>
            {
                entity.ToTable("SEM_TXT");

                entity.Property(e => e.SemTxtId)
                    .ValueGeneratedNever()
                    .HasColumnName("SEM_TXT_ID");

                entity.HasOne(d => d.SemTxtNavigation)
                    .WithOne(p => p.SemTxt)
                    .HasForeignKey<SemTxt>(d => d.SemTxtId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__SEM_TXT__SEM_TXT__50BD6F0E");
            });

            modelBuilder.Entity<SemUid>(entity =>
            {
                entity.ToTable("SEM_UID");

                entity.Property(e => e.SemUidId)
                    .ValueGeneratedNever()
                    .HasColumnName("SEM_UID_ID");

                entity.HasOne(d => d.SemUidNavigation)
                    .WithOne(p => p.SemUid)
                    .HasForeignKey<SemUid>(d => d.SemUidId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__SEM_UID__SEM_UID__5952B50F");
            });

            modelBuilder.Entity<SembBit>(entity =>
            {
                entity.ToTable("SEMB_BIT");

                entity.Property(e => e.SembBitId)
                    .ValueGeneratedNever()
                    .HasColumnName("SEMB_BIT_ID");

                entity.HasOne(d => d.SembBitNavigation)
                    .WithOne(p => p.SembBit)
                    .HasForeignKey<SembBit>(d => d.SembBitId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SEMB_BIT_SEMINARS_BOOKINGS");
            });

            modelBuilder.Entity<SembDate>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SEMB_DATE");

                entity.Property(e => e.SembDateId).HasColumnName("SEMB_DATE_ID");

                entity.HasOne(d => d.SembDateNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.SembDateId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SEMB_DATE_ID_SEMINARS_BOOKINGS");
            });

            modelBuilder.Entity<SembMuid>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SEMB_MUID");

                entity.Property(e => e.SembMuidId).HasColumnName("SEMB_MUID_ID");

                entity.HasOne(d => d.SembMuidNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.SembMuidId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SEMB_MUID_ID_SEMINARS_BOOKINGS");
            });

            modelBuilder.Entity<SembMuidLink>(entity =>
            {
                entity.HasKey(e => new { e.SembMuidId, e.DrId, e.DroId });

                entity.ToTable("SEMB_MUID_LINKS");

                entity.Property(e => e.SembMuidId).HasColumnName("SEMB_MUID_ID");

                entity.Property(e => e.DrId).HasColumnName("DR_ID");

                entity.Property(e => e.DroId).HasColumnName("DRO_ID");
            });

            modelBuilder.Entity<SembNum>(entity =>
            {
                entity.ToTable("SEMB_NUM");

                entity.Property(e => e.SembNumId)
                    .ValueGeneratedNever()
                    .HasColumnName("SEMB_NUM_ID");

                entity.HasOne(d => d.SembNumNavigation)
                    .WithOne(p => p.SembNum)
                    .HasForeignKey<SembNum>(d => d.SembNumId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SEMB_NUM_ID_SEMINARS_BOOKINGS");
            });

            modelBuilder.Entity<SembTxt>(entity =>
            {
                entity.ToTable("SEMB_TXT");

                entity.Property(e => e.SembTxtId)
                    .ValueGeneratedNever()
                    .HasColumnName("SEMB_TXT_ID");

                entity.HasOne(d => d.SembTxtNavigation)
                    .WithOne(p => p.SembTxt)
                    .HasForeignKey<SembTxt>(d => d.SembTxtId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SEMB_TXT_SEMINARS_BOOKINGS");
            });

            modelBuilder.Entity<SembUid>(entity =>
            {
                entity.ToTable("SEMB_UID");

                entity.Property(e => e.SembUidId)
                    .ValueGeneratedNever()
                    .HasColumnName("SEMB_UID_ID");

                entity.HasOne(d => d.SembUidNavigation)
                    .WithOne(p => p.SembUid)
                    .HasForeignKey<SembUid>(d => d.SembUidId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SEMB_UID_SEMINARS_BOOKINGS");
            });

            modelBuilder.Entity<SembaBit>(entity =>
            {
                entity.ToTable("SEMBA_BIT");

                entity.Property(e => e.SembaBitId)
                    .ValueGeneratedNever()
                    .HasColumnName("SEMBA_BIT_ID");

                entity.HasOne(d => d.SembaBitNavigation)
                    .WithOne(p => p.SembaBit)
                    .HasForeignKey<SembaBit>(d => d.SembaBitId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SEMBA_BIT_SEMINARS_BOOKINGS_ATTENDEES");
            });

            modelBuilder.Entity<SembaDate>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SEMBA_DATE");

                entity.Property(e => e.SembaDateId).HasColumnName("SEMBA_DATE_ID");

                entity.HasOne(d => d.SembaDateNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.SembaDateId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SEMBA_DATE_ID_SEMINARS_BOOKINGS_ATTENDEES");
            });

            modelBuilder.Entity<SembaMuid>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SEMBA_MUID");

                entity.Property(e => e.SembaMuidId).HasColumnName("SEMBA_MUID_ID");

                entity.HasOne(d => d.SembaMuidNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.SembaMuidId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SEMBA_MUID_ID_SEMINARS_BOOKINGS_ATTENDEES");
            });

            modelBuilder.Entity<SembaMuidLink>(entity =>
            {
                entity.HasKey(e => new { e.SembaMuidId, e.DrId, e.DroId });

                entity.ToTable("SEMBA_MUID_LINKS");

                entity.Property(e => e.SembaMuidId).HasColumnName("SEMBA_MUID_ID");

                entity.Property(e => e.DrId).HasColumnName("DR_ID");

                entity.Property(e => e.DroId).HasColumnName("DRO_ID");
            });

            modelBuilder.Entity<SembaNum>(entity =>
            {
                entity.ToTable("SEMBA_NUM");

                entity.Property(e => e.SembaNumId)
                    .ValueGeneratedNever()
                    .HasColumnName("SEMBA_NUM_ID");

                entity.HasOne(d => d.SembaNumNavigation)
                    .WithOne(p => p.SembaNum)
                    .HasForeignKey<SembaNum>(d => d.SembaNumId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SEMBA_NUM_ID_SEMINARS_BOOKINGS_ATTENDEES");
            });

            modelBuilder.Entity<SembaTxt>(entity =>
            {
                entity.ToTable("SEMBA_TXT");

                entity.Property(e => e.SembaTxtId)
                    .ValueGeneratedNever()
                    .HasColumnName("SEMBA_TXT_ID");

                entity.HasOne(d => d.SembaTxtNavigation)
                    .WithOne(p => p.SembaTxt)
                    .HasForeignKey<SembaTxt>(d => d.SembaTxtId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SEMBA_TXT_SEMINARS_BOOKINGS_ATTENDEES");
            });

            modelBuilder.Entity<SembaUid>(entity =>
            {
                entity.ToTable("SEMBA_UID");

                entity.Property(e => e.SembaUidId)
                    .ValueGeneratedNever()
                    .HasColumnName("SEMBA_UID_ID");

                entity.HasOne(d => d.SembaUidNavigation)
                    .WithOne(p => p.SembaUid)
                    .HasForeignKey<SembaUid>(d => d.SembaUidId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SEMBA_UID_SEMINARS_BOOKINGS_ATTENDEES");
            });

            modelBuilder.Entity<Seminar>(entity =>
            {
                entity.HasKey(e => e.SemId);

                entity.ToTable("SEMINARS");

                entity.HasIndex(e => e.CreatedDate, "IX_SEMINARS_CREATED_DATE")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.SitId, "IX_SEMINARS_SIT_ID");

                entity.HasIndex(e => e.ShortCode, "IX__SEMINARS__SHORT_CODE");

                entity.Property(e => e.SemId)
                    .HasColumnName("SEM_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.Address1)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_1");

                entity.Property(e => e.Address2)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_2");

                entity.Property(e => e.Address3)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_3");

                entity.Property(e => e.Country)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.County)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTY");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CurId).HasColumnName("CUR_ID");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details)
                    .HasColumnName("DETAILS")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.EarlyBirdDate)
                    .HasColumnType("datetime")
                    .HasColumnName("EARLY_BIRD_DATE");

                entity.Property(e => e.EarlyBirdDiscount)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("EARLY_BIRD_DISCOUNT");

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("END_DATE");

                entity.Property(e => e.EventbriteAnonAttendeeAcId).HasColumnName("EVENTBRITE_ANON_ATTENDEE_AC_ID");

                entity.Property(e => e.ExternalEventbriteId)
                    .HasMaxLength(255)
                    .HasColumnName("EXTERNAL_EVENTBRITE_ID");

                entity.Property(e => e.LcId).HasColumnName("LC_ID");

                entity.Property(e => e.McaId).HasColumnName("MCA_ID");

                entity.Property(e => e.Owner).HasColumnName("OWNER");

                entity.Property(e => e.Places).HasColumnName("PLACES");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(255)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", true);

                entity.Property(e => e.Price)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PRICE");

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.ReferenceSeed).HasColumnName("REFERENCE_SEED");

                entity.Property(e => e.SemDeleted).HasColumnName("SEM_DELETED");

                entity.Property(e => e.SemExternal)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_EXTERNAL");

                entity.Property(e => e.SemImport).HasColumnName("SEM_IMPORT");

                entity.Property(e => e.SemUd10Bit).HasColumnName("SEM_UD10_BIT");

                entity.Property(e => e.SemUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD10_DATE");

                entity.Property(e => e.SemUd10Id).HasColumnName("SEM_UD10_ID");

                entity.Property(e => e.SemUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD10_NUMERIC");

                entity.Property(e => e.SemUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD10_TEXT");

                entity.Property(e => e.SemUd11Bit).HasColumnName("SEM_UD11_BIT");

                entity.Property(e => e.SemUd12Bit).HasColumnName("SEM_UD12_BIT");

                entity.Property(e => e.SemUd13Bit).HasColumnName("SEM_UD13_BIT");

                entity.Property(e => e.SemUd14Bit).HasColumnName("SEM_UD14_BIT");

                entity.Property(e => e.SemUd15Bit).HasColumnName("SEM_UD15_BIT");

                entity.Property(e => e.SemUd16Bit).HasColumnName("SEM_UD16_BIT");

                entity.Property(e => e.SemUd17Bit).HasColumnName("SEM_UD17_BIT");

                entity.Property(e => e.SemUd18Bit).HasColumnName("SEM_UD18_BIT");

                entity.Property(e => e.SemUd19Bit).HasColumnName("SEM_UD19_BIT");

                entity.Property(e => e.SemUd1Bit).HasColumnName("SEM_UD1_BIT");

                entity.Property(e => e.SemUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD1_DATE");

                entity.Property(e => e.SemUd1Id).HasColumnName("SEM_UD1_ID");

                entity.Property(e => e.SemUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD1_NUMERIC");

                entity.Property(e => e.SemUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD1_TEXT");

                entity.Property(e => e.SemUd20Bit).HasColumnName("SEM_UD20_BIT");

                entity.Property(e => e.SemUd21Bit).HasColumnName("SEM_UD21_BIT");

                entity.Property(e => e.SemUd22Bit).HasColumnName("SEM_UD22_BIT");

                entity.Property(e => e.SemUd23Bit).HasColumnName("SEM_UD23_BIT");

                entity.Property(e => e.SemUd24Bit).HasColumnName("SEM_UD24_BIT");

                entity.Property(e => e.SemUd2Bit).HasColumnName("SEM_UD2_BIT");

                entity.Property(e => e.SemUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD2_DATE");

                entity.Property(e => e.SemUd2Id).HasColumnName("SEM_UD2_ID");

                entity.Property(e => e.SemUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD2_NUMERIC");

                entity.Property(e => e.SemUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD2_TEXT");

                entity.Property(e => e.SemUd3Bit).HasColumnName("SEM_UD3_BIT");

                entity.Property(e => e.SemUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD3_DATE");

                entity.Property(e => e.SemUd3Id).HasColumnName("SEM_UD3_ID");

                entity.Property(e => e.SemUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD3_NUMERIC");

                entity.Property(e => e.SemUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD3_TEXT");

                entity.Property(e => e.SemUd4Bit).HasColumnName("SEM_UD4_BIT");

                entity.Property(e => e.SemUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD4_DATE");

                entity.Property(e => e.SemUd4Id).HasColumnName("SEM_UD4_ID");

                entity.Property(e => e.SemUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD4_NUMERIC");

                entity.Property(e => e.SemUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD4_TEXT");

                entity.Property(e => e.SemUd5Bit).HasColumnName("SEM_UD5_BIT");

                entity.Property(e => e.SemUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD5_DATE");

                entity.Property(e => e.SemUd5Id).HasColumnName("SEM_UD5_ID");

                entity.Property(e => e.SemUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD5_NUMERIC");

                entity.Property(e => e.SemUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD5_TEXT");

                entity.Property(e => e.SemUd6Bit).HasColumnName("SEM_UD6_BIT");

                entity.Property(e => e.SemUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD6_DATE");

                entity.Property(e => e.SemUd6Id).HasColumnName("SEM_UD6_ID");

                entity.Property(e => e.SemUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD6_NUMERIC");

                entity.Property(e => e.SemUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD6_TEXT");

                entity.Property(e => e.SemUd7Bit).HasColumnName("SEM_UD7_BIT");

                entity.Property(e => e.SemUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD7_DATE");

                entity.Property(e => e.SemUd7Id).HasColumnName("SEM_UD7_ID");

                entity.Property(e => e.SemUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD7_NUMERIC");

                entity.Property(e => e.SemUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD7_TEXT");

                entity.Property(e => e.SemUd8Bit).HasColumnName("SEM_UD8_BIT");

                entity.Property(e => e.SemUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD8_DATE");

                entity.Property(e => e.SemUd8Id).HasColumnName("SEM_UD8_ID");

                entity.Property(e => e.SemUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD8_NUMERIC");

                entity.Property(e => e.SemUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD8_TEXT");

                entity.Property(e => e.SemUd9Bit).HasColumnName("SEM_UD9_BIT");

                entity.Property(e => e.SemUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD9_DATE");

                entity.Property(e => e.SemUd9Id).HasColumnName("SEM_UD9_ID");

                entity.Property(e => e.SemUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD9_NUMERIC");

                entity.Property(e => e.SemUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD9_TEXT");

                entity.Property(e => e.SgId).HasColumnName("SG_ID");

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'SEM-')");

                entity.Property(e => e.SitId).HasColumnName("SIT_ID");

                entity.Property(e => e.SourceDetails)
                    .HasMaxLength(255)
                    .HasColumnName("SOURCE_DETAILS");

                entity.Property(e => e.Stage).HasColumnName("STAGE");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("START_DATE");

                entity.Property(e => e.StgId).HasColumnName("STG_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TimeZone)
                    .HasMaxLength(255)
                    .HasColumnName("TIME_ZONE");

                entity.Property(e => e.Town)
                    .HasMaxLength(255)
                    .HasColumnName("TOWN");

                entity.Property(e => e.Type).HasColumnName("TYPE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.Url)
                    .HasMaxLength(255)
                    .HasColumnName("URL");

                entity.Property(e => e.Value)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("VALUE");

                entity.Property(e => e.ValueConfirmed)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("VALUE_CONFIRMED");

                entity.Property(e => e.ValueLost)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("VALUE_LOST");

                entity.Property(e => e.ValueOpen)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("VALUE_OPEN");

                entity.Property(e => e.ValueWon)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("VALUE_WON");

                entity.HasOne(d => d.Cur)
                    .WithMany(p => p.Seminars)
                    .HasForeignKey(d => d.CurId)
                    .HasConstraintName("FK_SEMINARS_CURRENCIES");

                entity.HasOne(d => d.Lc)
                    .WithMany(p => p.Seminars)
                    .HasForeignKey(d => d.LcId)
                    .HasConstraintName("FK_SEMINARS_LM_LISTCONTROL");

                entity.HasOne(d => d.Sit)
                    .WithMany(p => p.Seminars)
                    .HasForeignKey(d => d.SitId)
                    .HasConstraintName("FK_SEMINARS_SITES");
            });

            modelBuilder.Entity<SeminarsBooking>(entity =>
            {
                entity.HasKey(e => e.SembId);

                entity.ToTable("SEMINARS_BOOKINGS");

                entity.HasIndex(e => e.AcId, "IX_SEMINARS_BOOKINGS_AC_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.CreatedDate, "IX_SEMINARS_BOOKINGS_CREATED_DATE")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.SemId, "IX_SEMINARS_BOOKINGS_SEM_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.ShortCode, "IX__SEMINARS_BOOKINGS__SHORT_CODE");

                entity.Property(e => e.SembId)
                    .HasColumnName("SEMB_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.ActualClose)
                    .HasColumnType("datetime")
                    .HasColumnName("ACTUAL_CLOSE");

                entity.Property(e => e.Confirmed).HasColumnName("CONFIRMED");

                entity.Property(e => e.CostBooking)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_BOOKING");

                entity.Property(e => e.CostItems)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_ITEMS");

                entity.Property(e => e.CostSub)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_SUB");

                entity.Property(e => e.CostTotal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_TOTAL");

                entity.Property(e => e.CostUpdatedSub)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_UPDATED_SUB");

                entity.Property(e => e.CostVat)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_VAT");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CurId).HasColumnName("CUR_ID");

                entity.Property(e => e.CurIdPriceList).HasColumnName("CUR_ID_PRICE_LIST");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details)
                    .HasColumnName("DETAILS")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.DiscountAccount).HasColumnName("DISCOUNT_ACCOUNT");

                entity.Property(e => e.DiscountItems).HasColumnName("DISCOUNT_ITEMS");

                entity.Property(e => e.EstimatedClose)
                    .HasColumnType("datetime")
                    .HasColumnName("ESTIMATED_CLOSE");

                entity.Property(e => e.ExternalEventbriteId)
                    .HasMaxLength(255)
                    .HasColumnName("EXTERNAL_EVENTBRITE_ID");

                entity.Property(e => e.FneId).HasColumnName("FNE_ID");

                entity.Property(e => e.McaId).HasColumnName("MCA_ID");

                entity.Property(e => e.NumberOfItems).HasColumnName("NUMBER_OF_ITEMS");

                entity.Property(e => e.OriginalClosedWonDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ORIGINAL_CLOSED_WON_DATE");

                entity.Property(e => e.OriginalClosedWonTotal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ORIGINAL_CLOSED_WON_TOTAL");

                entity.Property(e => e.Owner).HasColumnName("OWNER");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", true);

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.ReferenceSeed).HasColumnName("REFERENCE_SEED");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.SembDeleted).HasColumnName("SEMB_DELETED");

                entity.Property(e => e.SembState).HasColumnName("SEMB_STATE");

                entity.Property(e => e.SembUd10Bit).HasColumnName("SEMB_UD10_BIT");

                entity.Property(e => e.SembUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD10_DATE");

                entity.Property(e => e.SembUd10Id).HasColumnName("SEMB_UD10_ID");

                entity.Property(e => e.SembUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD10_NUMERIC");

                entity.Property(e => e.SembUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD10_TEXT");

                entity.Property(e => e.SembUd11Bit).HasColumnName("SEMB_UD11_BIT");

                entity.Property(e => e.SembUd12Bit).HasColumnName("SEMB_UD12_BIT");

                entity.Property(e => e.SembUd13Bit).HasColumnName("SEMB_UD13_BIT");

                entity.Property(e => e.SembUd14Bit).HasColumnName("SEMB_UD14_BIT");

                entity.Property(e => e.SembUd15Bit).HasColumnName("SEMB_UD15_BIT");

                entity.Property(e => e.SembUd16Bit).HasColumnName("SEMB_UD16_BIT");

                entity.Property(e => e.SembUd17Bit).HasColumnName("SEMB_UD17_BIT");

                entity.Property(e => e.SembUd18Bit).HasColumnName("SEMB_UD18_BIT");

                entity.Property(e => e.SembUd19Bit).HasColumnName("SEMB_UD19_BIT");

                entity.Property(e => e.SembUd1Bit).HasColumnName("SEMB_UD1_BIT");

                entity.Property(e => e.SembUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD1_DATE");

                entity.Property(e => e.SembUd1Id).HasColumnName("SEMB_UD1_ID");

                entity.Property(e => e.SembUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD1_NUMERIC");

                entity.Property(e => e.SembUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD1_TEXT");

                entity.Property(e => e.SembUd20Bit).HasColumnName("SEMB_UD20_BIT");

                entity.Property(e => e.SembUd21Bit).HasColumnName("SEMB_UD21_BIT");

                entity.Property(e => e.SembUd22Bit).HasColumnName("SEMB_UD22_BIT");

                entity.Property(e => e.SembUd23Bit).HasColumnName("SEMB_UD23_BIT");

                entity.Property(e => e.SembUd24Bit).HasColumnName("SEMB_UD24_BIT");

                entity.Property(e => e.SembUd2Bit).HasColumnName("SEMB_UD2_BIT");

                entity.Property(e => e.SembUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD2_DATE");

                entity.Property(e => e.SembUd2Id).HasColumnName("SEMB_UD2_ID");

                entity.Property(e => e.SembUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD2_NUMERIC");

                entity.Property(e => e.SembUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD2_TEXT");

                entity.Property(e => e.SembUd3Bit).HasColumnName("SEMB_UD3_BIT");

                entity.Property(e => e.SembUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD3_DATE");

                entity.Property(e => e.SembUd3Id).HasColumnName("SEMB_UD3_ID");

                entity.Property(e => e.SembUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD3_NUMERIC");

                entity.Property(e => e.SembUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD3_TEXT");

                entity.Property(e => e.SembUd4Bit).HasColumnName("SEMB_UD4_BIT");

                entity.Property(e => e.SembUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD4_DATE");

                entity.Property(e => e.SembUd4Id).HasColumnName("SEMB_UD4_ID");

                entity.Property(e => e.SembUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD4_NUMERIC");

                entity.Property(e => e.SembUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD4_TEXT");

                entity.Property(e => e.SembUd5Bit).HasColumnName("SEMB_UD5_BIT");

                entity.Property(e => e.SembUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD5_DATE");

                entity.Property(e => e.SembUd5Id).HasColumnName("SEMB_UD5_ID");

                entity.Property(e => e.SembUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD5_NUMERIC");

                entity.Property(e => e.SembUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD5_TEXT");

                entity.Property(e => e.SembUd6Bit).HasColumnName("SEMB_UD6_BIT");

                entity.Property(e => e.SembUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD6_DATE");

                entity.Property(e => e.SembUd6Id).HasColumnName("SEMB_UD6_ID");

                entity.Property(e => e.SembUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD6_NUMERIC");

                entity.Property(e => e.SembUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD6_TEXT");

                entity.Property(e => e.SembUd7Bit).HasColumnName("SEMB_UD7_BIT");

                entity.Property(e => e.SembUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD7_DATE");

                entity.Property(e => e.SembUd7Id).HasColumnName("SEMB_UD7_ID");

                entity.Property(e => e.SembUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD7_NUMERIC");

                entity.Property(e => e.SembUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD7_TEXT");

                entity.Property(e => e.SembUd8Bit).HasColumnName("SEMB_UD8_BIT");

                entity.Property(e => e.SembUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD8_DATE");

                entity.Property(e => e.SembUd8Id).HasColumnName("SEMB_UD8_ID");

                entity.Property(e => e.SembUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD8_NUMERIC");

                entity.Property(e => e.SembUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD8_TEXT");

                entity.Property(e => e.SembUd9Bit).HasColumnName("SEMB_UD9_BIT");

                entity.Property(e => e.SembUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD9_DATE");

                entity.Property(e => e.SembUd9Id).HasColumnName("SEMB_UD9_ID");

                entity.Property(e => e.SembUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD9_NUMERIC");

                entity.Property(e => e.SembUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD9_TEXT");

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'SEB-')");

                entity.Property(e => e.StgId).HasColumnName("STG_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.Value)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("VALUE");

                entity.HasOne(d => d.Ac)
                    .WithMany(p => p.SeminarsBookings)
                    .HasForeignKey(d => d.AcId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SEMINARS_BOOKINGS_ACCOUNTS");

                entity.HasOne(d => d.Acc)
                    .WithMany(p => p.SeminarsBookings)
                    .HasForeignKey(d => d.AccId)
                    .HasConstraintName("FK_SEMINARS_BOOKINGS_ACCOUNTS_CONTACTS");

                entity.HasOne(d => d.Cur)
                    .WithMany(p => p.SeminarsBookings)
                    .HasForeignKey(d => d.CurId)
                    .HasConstraintName("FK_SEMINARS_BOOKINGS_CURRENCIES");

                entity.HasOne(d => d.Fne)
                    .WithMany(p => p.SeminarsBookings)
                    .HasForeignKey(d => d.FneId)
                    .HasConstraintName("FK_SEMINARS_BOOKINGS_FINANCIAL_ENTITIES");

                entity.HasOne(d => d.Sem)
                    .WithMany(p => p.SeminarsBookings)
                    .HasForeignKey(d => d.SemId)
                    .HasConstraintName("FK_SEMINARS_BOOKINGS_SEMINARS");
            });

            modelBuilder.Entity<SeminarsBookingsAttendee>(entity =>
            {
                entity.HasKey(e => e.SembaId);

                entity.ToTable("SEMINARS_BOOKINGS_ATTENDEES");

                entity.HasIndex(e => e.AcId, "IX_SEMINARS_BOOKINGS_ATTENDEES_AC_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.CreatedDate, "IX_SEMINARS_BOOKINGS_ATTENDEES_CREATED_DATE")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.SembId, "IX_SEMINARS_BOOKINGS_ATTENDEES_SEMB_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.SemId, "IX_SEMINARS_BOOKINGS_ATTENDEES_SEM_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.ShortCode, "IX__SEMINARS_BOOKINGS_ATTENDEES__SHORT_CODE");

                entity.Property(e => e.SembaId)
                    .HasColumnName("SEMBA_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CsId).HasColumnName("CS_ID");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details)
                    .HasColumnName("DETAILS")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ExternalEventbriteId)
                    .HasMaxLength(255)
                    .HasColumnName("EXTERNAL_EVENTBRITE_ID");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", true);

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.SembId).HasColumnName("SEMB_ID");

                entity.Property(e => e.SembaDeleted).HasColumnName("SEMBA_DELETED");

                entity.Property(e => e.SembaNumber).HasColumnName("SEMBA_NUMBER");

                entity.Property(e => e.SembaUd10Bit).HasColumnName("SEMBA_UD10_BIT");

                entity.Property(e => e.SembaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD10_DATE");

                entity.Property(e => e.SembaUd10Id).HasColumnName("SEMBA_UD10_ID");

                entity.Property(e => e.SembaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD10_NUMERIC");

                entity.Property(e => e.SembaUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD10_TEXT");

                entity.Property(e => e.SembaUd11Bit).HasColumnName("SEMBA_UD11_BIT");

                entity.Property(e => e.SembaUd12Bit).HasColumnName("SEMBA_UD12_BIT");

                entity.Property(e => e.SembaUd13Bit).HasColumnName("SEMBA_UD13_BIT");

                entity.Property(e => e.SembaUd14Bit).HasColumnName("SEMBA_UD14_BIT");

                entity.Property(e => e.SembaUd15Bit).HasColumnName("SEMBA_UD15_BIT");

                entity.Property(e => e.SembaUd16Bit).HasColumnName("SEMBA_UD16_BIT");

                entity.Property(e => e.SembaUd17Bit).HasColumnName("SEMBA_UD17_BIT");

                entity.Property(e => e.SembaUd18Bit).HasColumnName("SEMBA_UD18_BIT");

                entity.Property(e => e.SembaUd19Bit).HasColumnName("SEMBA_UD19_BIT");

                entity.Property(e => e.SembaUd1Bit).HasColumnName("SEMBA_UD1_BIT");

                entity.Property(e => e.SembaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD1_DATE");

                entity.Property(e => e.SembaUd1Id).HasColumnName("SEMBA_UD1_ID");

                entity.Property(e => e.SembaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD1_NUMERIC");

                entity.Property(e => e.SembaUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD1_TEXT");

                entity.Property(e => e.SembaUd20Bit).HasColumnName("SEMBA_UD20_BIT");

                entity.Property(e => e.SembaUd21Bit).HasColumnName("SEMBA_UD21_BIT");

                entity.Property(e => e.SembaUd22Bit).HasColumnName("SEMBA_UD22_BIT");

                entity.Property(e => e.SembaUd23Bit).HasColumnName("SEMBA_UD23_BIT");

                entity.Property(e => e.SembaUd24Bit).HasColumnName("SEMBA_UD24_BIT");

                entity.Property(e => e.SembaUd2Bit).HasColumnName("SEMBA_UD2_BIT");

                entity.Property(e => e.SembaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD2_DATE");

                entity.Property(e => e.SembaUd2Id).HasColumnName("SEMBA_UD2_ID");

                entity.Property(e => e.SembaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD2_NUMERIC");

                entity.Property(e => e.SembaUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD2_TEXT");

                entity.Property(e => e.SembaUd3Bit).HasColumnName("SEMBA_UD3_BIT");

                entity.Property(e => e.SembaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD3_DATE");

                entity.Property(e => e.SembaUd3Id).HasColumnName("SEMBA_UD3_ID");

                entity.Property(e => e.SembaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD3_NUMERIC");

                entity.Property(e => e.SembaUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD3_TEXT");

                entity.Property(e => e.SembaUd4Bit).HasColumnName("SEMBA_UD4_BIT");

                entity.Property(e => e.SembaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD4_DATE");

                entity.Property(e => e.SembaUd4Id).HasColumnName("SEMBA_UD4_ID");

                entity.Property(e => e.SembaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD4_NUMERIC");

                entity.Property(e => e.SembaUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD4_TEXT");

                entity.Property(e => e.SembaUd5Bit).HasColumnName("SEMBA_UD5_BIT");

                entity.Property(e => e.SembaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD5_DATE");

                entity.Property(e => e.SembaUd5Id).HasColumnName("SEMBA_UD5_ID");

                entity.Property(e => e.SembaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD5_NUMERIC");

                entity.Property(e => e.SembaUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD5_TEXT");

                entity.Property(e => e.SembaUd6Bit).HasColumnName("SEMBA_UD6_BIT");

                entity.Property(e => e.SembaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD6_DATE");

                entity.Property(e => e.SembaUd6Id).HasColumnName("SEMBA_UD6_ID");

                entity.Property(e => e.SembaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD6_NUMERIC");

                entity.Property(e => e.SembaUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD6_TEXT");

                entity.Property(e => e.SembaUd7Bit).HasColumnName("SEMBA_UD7_BIT");

                entity.Property(e => e.SembaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD7_DATE");

                entity.Property(e => e.SembaUd7Id).HasColumnName("SEMBA_UD7_ID");

                entity.Property(e => e.SembaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD7_NUMERIC");

                entity.Property(e => e.SembaUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD7_TEXT");

                entity.Property(e => e.SembaUd8Bit).HasColumnName("SEMBA_UD8_BIT");

                entity.Property(e => e.SembaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD8_DATE");

                entity.Property(e => e.SembaUd8Id).HasColumnName("SEMBA_UD8_ID");

                entity.Property(e => e.SembaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD8_NUMERIC");

                entity.Property(e => e.SembaUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD8_TEXT");

                entity.Property(e => e.SembaUd9Bit).HasColumnName("SEMBA_UD9_BIT");

                entity.Property(e => e.SembaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD9_DATE");

                entity.Property(e => e.SembaUd9Id).HasColumnName("SEMBA_UD9_ID");

                entity.Property(e => e.SembaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD9_NUMERIC");

                entity.Property(e => e.SembaUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD9_TEXT");

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'SBA-')");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.HasOne(d => d.Ac)
                    .WithMany(p => p.SeminarsBookingsAttendees)
                    .HasForeignKey(d => d.AcId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SEMINARS_BOOKINGS_ATTENDEES_ACCOUNTS");

                entity.HasOne(d => d.Acc)
                    .WithMany(p => p.SeminarsBookingsAttendees)
                    .HasForeignKey(d => d.AccId)
                    .HasConstraintName("FK_SEMINARS_BOOKINGS_ATTENDEES_ACCOUNTS_CONTACTS");

                entity.HasOne(d => d.Cs)
                    .WithMany(p => p.SeminarsBookingsAttendees)
                    .HasForeignKey(d => d.CsId)
                    .HasConstraintName("FK_SEMINARS_BOOKINGS_ATTENDEES_LM_CONTACT_SPINE");

                entity.HasOne(d => d.Sem)
                    .WithMany(p => p.SeminarsBookingsAttendees)
                    .HasForeignKey(d => d.SemId)
                    .HasConstraintName("FK_SEMINARS_BOOKINGS_ATTENDEES_SEMINARS");

                entity.HasOne(d => d.Semb)
                    .WithMany(p => p.SeminarsBookingsAttendees)
                    .HasForeignKey(d => d.SembId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SEMINARS_BOOKINGS_ATTENDEES_SEMINARS_BOOKINGS");
            });

            modelBuilder.Entity<SeminarsBookingsAttendeesAnswer>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SEMINARS_BOOKINGS_ATTENDEES_ANSWERS");

                entity.HasIndex(e => e.ShortCode, "IX__SEMINARS_BOOKINGS_ATTENDEES_ANSWERS__SHORT_CODE");

                entity.Property(e => e.Answer)
                    .HasMaxLength(255)
                    .HasColumnName("ANSWER");

                entity.Property(e => e.AnswerExtended).HasColumnName("ANSWER_EXTENDED");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", false);

                entity.Property(e => e.SbaaDeleted).HasColumnName("SBAA_DELETED");

                entity.Property(e => e.SbaaId).HasColumnName("SBAA_ID");

                entity.Property(e => e.SembId).HasColumnName("SEMB_ID");

                entity.Property(e => e.SembaId).HasColumnName("SEMBA_ID");

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'BAA-')");

                entity.Property(e => e.SqId).HasColumnName("SQ_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<SeminarsBookingsAttendeesSeminarsLink>(entity =>
            {
                entity.HasKey(e => e.SemaId);

                entity.ToTable("SEMINARS_BOOKINGS_ATTENDEES_SEMINARS_LINKS");

                entity.Property(e => e.SemaId)
                    .ValueGeneratedNever()
                    .HasColumnName("SEMA_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.SembId).HasColumnName("SEMB_ID");

                entity.Property(e => e.SembaId).HasColumnName("SEMBA_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.HasOne(d => d.Sem)
                    .WithMany(p => p.SeminarsBookingsAttendeesSeminarsLinks)
                    .HasForeignKey(d => d.SemId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SEMINARS_BOOKINGS_ATTENDEES_SEMINARS_LINKS_SEMINARS");

                entity.HasOne(d => d.Semb)
                    .WithMany(p => p.SeminarsBookingsAttendeesSeminarsLinks)
                    .HasForeignKey(d => d.SembId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SEMINARS_BOOKINGS_ATTENDEES_SEMINARS_LINKS_SEMINARS_BOOKINGS");

                entity.HasOne(d => d.Semba)
                    .WithMany(p => p.SeminarsBookingsAttendeesSeminarsLinks)
                    .HasForeignKey(d => d.SembaId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SEMINARS_BOOKINGS_ATTENDEES_SEMINARS_LINKS_SEMINARS_BOOKINGS_ATTENDEES");
            });

            modelBuilder.Entity<SeminarsBookingsProduct>(entity =>
            {
                entity.HasKey(e => e.SembprId);

                entity.ToTable("SEMINARS_BOOKINGS_PRODUCTS");

                entity.HasIndex(e => e.CreatedDate, "IX_SEMINARS_BOOKINGS_PRODUCTS_CREATED_DATE")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.SembId, "IX_SEMINARS_BOOKINGS_PRODUCTS_SEMB_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.SemId, "IX_SEMINARS_BOOKINGS_PRODUCTS_SEM_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.ShortCode, "IX__SEMINARS_BOOKINGS_PRODUCTS__SHORT_CODE");

                entity.Property(e => e.SembprId)
                    .HasColumnName("SEMBPR_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Code)
                    .HasMaxLength(50)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cost)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.Discount).HasColumnName("DISCOUNT");

                entity.Property(e => e.IsEventbriteTicket).HasColumnName("IS_EVENTBRITE_TICKET");

                entity.Property(e => e.Manufacturer)
                    .HasMaxLength(50)
                    .HasColumnName("MANUFACTURER");

                entity.Property(e => e.PrId).HasColumnName("PR_ID");

                entity.Property(e => e.PrUd1)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD1");

                entity.Property(e => e.PrUd10)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD10");

                entity.Property(e => e.PrUd10Bit).HasColumnName("PR_UD10_BIT");

                entity.Property(e => e.PrUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD10_DATE");

                entity.Property(e => e.PrUd10Id).HasColumnName("PR_UD10_ID");

                entity.Property(e => e.PrUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD10_NUMERIC");

                entity.Property(e => e.PrUd11)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD11");

                entity.Property(e => e.PrUd11Bit).HasColumnName("PR_UD11_BIT");

                entity.Property(e => e.PrUd12)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD12");

                entity.Property(e => e.PrUd12Bit).HasColumnName("PR_UD12_BIT");

                entity.Property(e => e.PrUd13)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD13");

                entity.Property(e => e.PrUd13Bit).HasColumnName("PR_UD13_BIT");

                entity.Property(e => e.PrUd14)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD14");

                entity.Property(e => e.PrUd14Bit).HasColumnName("PR_UD14_BIT");

                entity.Property(e => e.PrUd15)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD15");

                entity.Property(e => e.PrUd15Bit).HasColumnName("PR_UD15_BIT");

                entity.Property(e => e.PrUd16Bit).HasColumnName("PR_UD16_BIT");

                entity.Property(e => e.PrUd17Bit).HasColumnName("PR_UD17_BIT");

                entity.Property(e => e.PrUd18Bit).HasColumnName("PR_UD18_BIT");

                entity.Property(e => e.PrUd19Bit).HasColumnName("PR_UD19_BIT");

                entity.Property(e => e.PrUd1Bit).HasColumnName("PR_UD1_BIT");

                entity.Property(e => e.PrUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD1_DATE");

                entity.Property(e => e.PrUd1Id).HasColumnName("PR_UD1_ID");

                entity.Property(e => e.PrUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD1_NUMERIC");

                entity.Property(e => e.PrUd2)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD2");

                entity.Property(e => e.PrUd20Bit).HasColumnName("PR_UD20_BIT");

                entity.Property(e => e.PrUd21Bit).HasColumnName("PR_UD21_BIT");

                entity.Property(e => e.PrUd22Bit).HasColumnName("PR_UD22_BIT");

                entity.Property(e => e.PrUd23Bit).HasColumnName("PR_UD23_BIT");

                entity.Property(e => e.PrUd24Bit).HasColumnName("PR_UD24_BIT");

                entity.Property(e => e.PrUd2Bit).HasColumnName("PR_UD2_BIT");

                entity.Property(e => e.PrUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD2_DATE");

                entity.Property(e => e.PrUd2Id).HasColumnName("PR_UD2_ID");

                entity.Property(e => e.PrUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD2_NUMERIC");

                entity.Property(e => e.PrUd3)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD3");

                entity.Property(e => e.PrUd3Bit).HasColumnName("PR_UD3_BIT");

                entity.Property(e => e.PrUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD3_DATE");

                entity.Property(e => e.PrUd3Id).HasColumnName("PR_UD3_ID");

                entity.Property(e => e.PrUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD3_NUMERIC");

                entity.Property(e => e.PrUd4)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD4");

                entity.Property(e => e.PrUd4Bit).HasColumnName("PR_UD4_BIT");

                entity.Property(e => e.PrUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD4_DATE");

                entity.Property(e => e.PrUd4Id).HasColumnName("PR_UD4_ID");

                entity.Property(e => e.PrUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD4_NUMERIC");

                entity.Property(e => e.PrUd5)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD5");

                entity.Property(e => e.PrUd5Bit).HasColumnName("PR_UD5_BIT");

                entity.Property(e => e.PrUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD5_DATE");

                entity.Property(e => e.PrUd5Id).HasColumnName("PR_UD5_ID");

                entity.Property(e => e.PrUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD5_NUMERIC");

                entity.Property(e => e.PrUd6)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD6");

                entity.Property(e => e.PrUd6Bit).HasColumnName("PR_UD6_BIT");

                entity.Property(e => e.PrUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD6_DATE");

                entity.Property(e => e.PrUd6Id).HasColumnName("PR_UD6_ID");

                entity.Property(e => e.PrUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD6_NUMERIC");

                entity.Property(e => e.PrUd7)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD7");

                entity.Property(e => e.PrUd7Bit).HasColumnName("PR_UD7_BIT");

                entity.Property(e => e.PrUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD7_DATE");

                entity.Property(e => e.PrUd7Id).HasColumnName("PR_UD7_ID");

                entity.Property(e => e.PrUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD7_NUMERIC");

                entity.Property(e => e.PrUd8)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD8");

                entity.Property(e => e.PrUd8Bit).HasColumnName("PR_UD8_BIT");

                entity.Property(e => e.PrUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD8_DATE");

                entity.Property(e => e.PrUd8Id).HasColumnName("PR_UD8_ID");

                entity.Property(e => e.PrUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD8_NUMERIC");

                entity.Property(e => e.PrUd9)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD9");

                entity.Property(e => e.PrUd9Bit).HasColumnName("PR_UD9_BIT");

                entity.Property(e => e.PrUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD9_DATE");

                entity.Property(e => e.PrUd9Id).HasColumnName("PR_UD9_ID");

                entity.Property(e => e.PrUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD9_NUMERIC");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", true);

                entity.Property(e => e.Price)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PRICE");

                entity.Property(e => e.PriceDiscount)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PRICE_DISCOUNT");

                entity.Property(e => e.PriceFinal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PRICE_FINAL");

                entity.Property(e => e.ProductGroup)
                    .HasMaxLength(255)
                    .HasColumnName("PRODUCT_GROUP");

                entity.Property(e => e.Quantity)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("QUANTITY");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.SembId).HasColumnName("SEMB_ID");

                entity.Property(e => e.SembaId).HasColumnName("SEMBA_ID");

                entity.Property(e => e.SembprDeleted).HasColumnName("SEMBPR_DELETED");

                entity.Property(e => e.SemprId).HasColumnName("SEMPR_ID");

                entity.Property(e => e.SemsaId).HasColumnName("SEMSA_ID");

                entity.Property(e => e.SemsprId).HasColumnName("SEMSPR_ID");

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'BPR-')");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TaxPercentage)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("TAX_PERCENTAGE");

                entity.Property(e => e.TxcId).HasColumnName("TXC_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.HasOne(d => d.Pr)
                    .WithMany(p => p.SeminarsBookingsProducts)
                    .HasForeignKey(d => d.PrId)
                    .HasConstraintName("FK_SEMINARS_BOOKINGS_PRODUCTS_PRODUCTS");

                entity.HasOne(d => d.Sem)
                    .WithMany(p => p.SeminarsBookingsProducts)
                    .HasForeignKey(d => d.SemId)
                    .HasConstraintName("FK_SEMINARS_BOOKINGS_PRODUCTS_SEMINARS");

                entity.HasOne(d => d.Semb)
                    .WithMany(p => p.SeminarsBookingsProducts)
                    .HasForeignKey(d => d.SembId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SEMINARS_BOOKINGS_PRODUCTS_SEMINARS_BOOKINGS");

                entity.HasOne(d => d.Semsa)
                    .WithMany(p => p.SeminarsBookingsProducts)
                    .HasForeignKey(d => d.SemsaId)
                    .HasConstraintName("FK_SEMINARS_BOOKINGS_PRODUCTS_SEMINARS_SESSIONS_ATTENDEES");

                entity.HasOne(d => d.Semspr)
                    .WithMany(p => p.SeminarsBookingsProducts)
                    .HasForeignKey(d => d.SemsprId)
                    .HasConstraintName("FK_SEMINARS_BOOKINGS_PRODUCTS_SEMINARS_SESSIONS_PRODUCTS");

                entity.HasOne(d => d.Txc)
                    .WithMany(p => p.SeminarsBookingsProducts)
                    .HasForeignKey(d => d.TxcId)
                    .HasConstraintName("FK__SEMINARS_BOOKINGS_PRODUCTS_TXC_ID__TAX_CODES_TXC_ID");
            });

            modelBuilder.Entity<SeminarsProduct>(entity =>
            {
                entity.HasKey(e => e.SemprId);

                entity.ToTable("SEMINARS_PRODUCTS");

                entity.HasIndex(e => e.SemId, "IX_SEMINARS_PRODUCTS_SEM_ID")
                    .HasFillFactor((byte)80);

                entity.Property(e => e.SemprId)
                    .HasColumnName("SEMPR_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Code)
                    .HasMaxLength(50)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cost)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.Discount).HasColumnName("DISCOUNT");

                entity.Property(e => e.EarlyBirdDiscountable)
                    .IsRequired()
                    .HasColumnName("EARLY_BIRD_DISCOUNTABLE")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Manufacturer)
                    .HasMaxLength(50)
                    .HasColumnName("MANUFACTURER");

                entity.Property(e => e.PrId).HasColumnName("PR_ID");

                entity.Property(e => e.Price)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PRICE");

                entity.Property(e => e.PriceDiscount)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PRICE_DISCOUNT");

                entity.Property(e => e.PriceFinal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PRICE_FINAL");

                entity.Property(e => e.ProductGroup)
                    .HasMaxLength(50)
                    .HasColumnName("PRODUCT_GROUP");

                entity.Property(e => e.Quantity)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("QUANTITY");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TaxPercentage)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("TAX_PERCENTAGE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.HasOne(d => d.Pr)
                    .WithMany(p => p.SeminarsProducts)
                    .HasForeignKey(d => d.PrId)
                    .HasConstraintName("FK_SEMINARS_PRODUCTS_PRODUCTS");

                entity.HasOne(d => d.Sem)
                    .WithMany(p => p.SeminarsProducts)
                    .HasForeignKey(d => d.SemId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SEMINARS_PRODUCTS_SEMINARS");
            });

            modelBuilder.Entity<SeminarsQuestion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SEMINARS_QUESTIONS");

                entity.HasIndex(e => e.ShortCode, "IX__SEMINARS_QUESTIONS__SHORT_CODE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.GvQuestion)
                    .HasMaxLength(255)
                    .HasColumnName("GV_QUESTION");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", false);

                entity.Property(e => e.Question)
                    .HasMaxLength(255)
                    .HasColumnName("QUESTION");

                entity.Property(e => e.QuestionId)
                    .HasMaxLength(255)
                    .HasColumnName("QUESTION_ID");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'SQS-')");

                entity.Property(e => e.SqDeleted).HasColumnName("SQ_DELETED");

                entity.Property(e => e.SqId).HasColumnName("SQ_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<SeminarsSession>(entity =>
            {
                entity.HasKey(e => e.SemsId);

                entity.ToTable("SEMINARS_SESSIONS");

                entity.HasIndex(e => e.CreatedDate, "IX_SEMINARS_SESSIONS_CREATED_DATE")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.EndDate, "IX_SEMINARS_SESSIONS_END_DATE")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.SemId, "IX_SEMINARS_SESSIONS_SEM_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.SitId, "IX_SEMINARS_SESSIONS_SIT_ID");

                entity.HasIndex(e => e.StartDate, "IX_SEMINARS_SESSIONS_START_DATE")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.ShortCode, "IX__SEMINARS_SESSIONS__SHORT_CODE");

                entity.Property(e => e.SemsId)
                    .HasColumnName("SEMS_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Code)
                    .HasMaxLength(50)
                    .HasColumnName("CODE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details)
                    .HasColumnName("DETAILS")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("END_DATE");

                entity.Property(e => e.ExternalEventbriteId)
                    .HasMaxLength(255)
                    .HasColumnName("EXTERNAL_EVENTBRITE_ID");

                entity.Property(e => e.Location)
                    .HasMaxLength(255)
                    .HasColumnName("LOCATION");

                entity.Property(e => e.Places).HasColumnName("PLACES");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", true);

                entity.Property(e => e.Price)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PRICE");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.SemsDeleted).HasColumnName("SEMS_DELETED");

                entity.Property(e => e.SemsUd10Bit).HasColumnName("SEMS_UD10_BIT");

                entity.Property(e => e.SemsUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMS_UD10_DATE");

                entity.Property(e => e.SemsUd10Id).HasColumnName("SEMS_UD10_ID");

                entity.Property(e => e.SemsUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMS_UD10_NUMERIC");

                entity.Property(e => e.SemsUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD10_TEXT");

                entity.Property(e => e.SemsUd11Bit).HasColumnName("SEMS_UD11_BIT");

                entity.Property(e => e.SemsUd12Bit).HasColumnName("SEMS_UD12_BIT");

                entity.Property(e => e.SemsUd13Bit).HasColumnName("SEMS_UD13_BIT");

                entity.Property(e => e.SemsUd14Bit).HasColumnName("SEMS_UD14_BIT");

                entity.Property(e => e.SemsUd15Bit).HasColumnName("SEMS_UD15_BIT");

                entity.Property(e => e.SemsUd16Bit).HasColumnName("SEMS_UD16_BIT");

                entity.Property(e => e.SemsUd17Bit).HasColumnName("SEMS_UD17_BIT");

                entity.Property(e => e.SemsUd18Bit).HasColumnName("SEMS_UD18_BIT");

                entity.Property(e => e.SemsUd19Bit).HasColumnName("SEMS_UD19_BIT");

                entity.Property(e => e.SemsUd1Bit).HasColumnName("SEMS_UD1_BIT");

                entity.Property(e => e.SemsUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMS_UD1_DATE");

                entity.Property(e => e.SemsUd1Id).HasColumnName("SEMS_UD1_ID");

                entity.Property(e => e.SemsUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMS_UD1_NUMERIC");

                entity.Property(e => e.SemsUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD1_TEXT");

                entity.Property(e => e.SemsUd20Bit).HasColumnName("SEMS_UD20_BIT");

                entity.Property(e => e.SemsUd21Bit).HasColumnName("SEMS_UD21_BIT");

                entity.Property(e => e.SemsUd22Bit).HasColumnName("SEMS_UD22_BIT");

                entity.Property(e => e.SemsUd23Bit).HasColumnName("SEMS_UD23_BIT");

                entity.Property(e => e.SemsUd24Bit).HasColumnName("SEMS_UD24_BIT");

                entity.Property(e => e.SemsUd2Bit).HasColumnName("SEMS_UD2_BIT");

                entity.Property(e => e.SemsUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMS_UD2_DATE");

                entity.Property(e => e.SemsUd2Id).HasColumnName("SEMS_UD2_ID");

                entity.Property(e => e.SemsUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMS_UD2_NUMERIC");

                entity.Property(e => e.SemsUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD2_TEXT");

                entity.Property(e => e.SemsUd3Bit).HasColumnName("SEMS_UD3_BIT");

                entity.Property(e => e.SemsUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMS_UD3_DATE");

                entity.Property(e => e.SemsUd3Id).HasColumnName("SEMS_UD3_ID");

                entity.Property(e => e.SemsUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMS_UD3_NUMERIC");

                entity.Property(e => e.SemsUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD3_TEXT");

                entity.Property(e => e.SemsUd4Bit).HasColumnName("SEMS_UD4_BIT");

                entity.Property(e => e.SemsUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMS_UD4_DATE");

                entity.Property(e => e.SemsUd4Id).HasColumnName("SEMS_UD4_ID");

                entity.Property(e => e.SemsUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMS_UD4_NUMERIC");

                entity.Property(e => e.SemsUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD4_TEXT");

                entity.Property(e => e.SemsUd5Bit).HasColumnName("SEMS_UD5_BIT");

                entity.Property(e => e.SemsUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMS_UD5_DATE");

                entity.Property(e => e.SemsUd5Id).HasColumnName("SEMS_UD5_ID");

                entity.Property(e => e.SemsUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMS_UD5_NUMERIC");

                entity.Property(e => e.SemsUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD5_TEXT");

                entity.Property(e => e.SemsUd6Bit).HasColumnName("SEMS_UD6_BIT");

                entity.Property(e => e.SemsUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMS_UD6_DATE");

                entity.Property(e => e.SemsUd6Id).HasColumnName("SEMS_UD6_ID");

                entity.Property(e => e.SemsUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMS_UD6_NUMERIC");

                entity.Property(e => e.SemsUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD6_TEXT");

                entity.Property(e => e.SemsUd7Bit).HasColumnName("SEMS_UD7_BIT");

                entity.Property(e => e.SemsUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMS_UD7_DATE");

                entity.Property(e => e.SemsUd7Id).HasColumnName("SEMS_UD7_ID");

                entity.Property(e => e.SemsUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMS_UD7_NUMERIC");

                entity.Property(e => e.SemsUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD7_TEXT");

                entity.Property(e => e.SemsUd8Bit).HasColumnName("SEMS_UD8_BIT");

                entity.Property(e => e.SemsUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMS_UD8_DATE");

                entity.Property(e => e.SemsUd8Id).HasColumnName("SEMS_UD8_ID");

                entity.Property(e => e.SemsUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMS_UD8_NUMERIC");

                entity.Property(e => e.SemsUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD8_TEXT");

                entity.Property(e => e.SemsUd9Bit).HasColumnName("SEMS_UD9_BIT");

                entity.Property(e => e.SemsUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMS_UD9_DATE");

                entity.Property(e => e.SemsUd9Id).HasColumnName("SEMS_UD9_ID");

                entity.Property(e => e.SemsUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMS_UD9_NUMERIC");

                entity.Property(e => e.SemsUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD9_TEXT");

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'SES-')");

                entity.Property(e => e.SitId).HasColumnName("SIT_ID");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("START_DATE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.HasOne(d => d.Sem)
                    .WithMany(p => p.SeminarsSessions)
                    .HasForeignKey(d => d.SemId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SEMINARS_SESSIONS_SEMINARS");

                entity.HasOne(d => d.Sit)
                    .WithMany(p => p.SeminarsSessions)
                    .HasForeignKey(d => d.SitId)
                    .HasConstraintName("FK_SEMINARS_SESSIONS_SITES");
            });

            modelBuilder.Entity<SeminarsSessionsAttendee>(entity =>
            {
                entity.HasKey(e => e.SemsaId);

                entity.ToTable("SEMINARS_SESSIONS_ATTENDEES");

                entity.HasIndex(e => e.CreatedDate, "IX_SEMINARS_SESSIONS_ATTENDEES_CREATED_DATE")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.SembId, "IX_SEMINARS_SESSIONS_ATTENDEES_SEMB_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.SemsId, "IX_SEMINARS_SESSIONS_ATTENDEES_SEMS_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.SemId, "IX_SEMINARS_SESSIONS_ATTENDEES_SEM_ID")
                    .HasFillFactor((byte)80);

                entity.Property(e => e.SemsaId)
                    .HasColumnName("SEMSA_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.ExternalEventbriteId)
                    .HasMaxLength(255)
                    .HasColumnName("EXTERNAL_EVENTBRITE_ID");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.SembId).HasColumnName("SEMB_ID");

                entity.Property(e => e.SembaId).HasColumnName("SEMBA_ID");

                entity.Property(e => e.SemsId).HasColumnName("SEMS_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.HasOne(d => d.Sem)
                    .WithMany(p => p.SeminarsSessionsAttendees)
                    .HasForeignKey(d => d.SemId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SEMINARS_SESSIONS_ATTENDEES_SEMINARS");

                entity.HasOne(d => d.Semb)
                    .WithMany(p => p.SeminarsSessionsAttendees)
                    .HasForeignKey(d => d.SembId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SEMINARS_SESSIONS_ATTENDEES_SEMINARS_BOOKINGS");

                entity.HasOne(d => d.Semba)
                    .WithMany(p => p.SeminarsSessionsAttendees)
                    .HasForeignKey(d => d.SembaId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SEMINARS_SESSIONS_ATTENDEES_SEMINARS_BOOKINGS_ATTENDEES");

                entity.HasOne(d => d.Sems)
                    .WithMany(p => p.SeminarsSessionsAttendees)
                    .HasForeignKey(d => d.SemsId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SEMINARS_SESSIONS_ATTENDEES_SEMINARS_SESSIONS");
            });

            modelBuilder.Entity<SeminarsSessionsProduct>(entity =>
            {
                entity.HasKey(e => e.SemsprId);

                entity.ToTable("SEMINARS_SESSIONS_PRODUCTS");

                entity.HasIndex(e => e.SemId, "IX_SEMINARS_SESSIONS_PRODUCTS_SEM_ID")
                    .HasFillFactor((byte)80);

                entity.Property(e => e.SemsprId)
                    .HasColumnName("SEMSPR_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Code)
                    .HasMaxLength(50)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cost)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.Discount).HasColumnName("DISCOUNT");

                entity.Property(e => e.EarlyBirdDiscountable)
                    .IsRequired()
                    .HasColumnName("EARLY_BIRD_DISCOUNTABLE")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.ExternalEventbriteId)
                    .HasMaxLength(255)
                    .HasColumnName("EXTERNAL_EVENTBRITE_ID");

                entity.Property(e => e.IsEventbriteTicket).HasColumnName("IS_EVENTBRITE_TICKET");

                entity.Property(e => e.Manufacturer)
                    .HasMaxLength(50)
                    .HasColumnName("MANUFACTURER");

                entity.Property(e => e.PrId).HasColumnName("PR_ID");

                entity.Property(e => e.Price)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PRICE");

                entity.Property(e => e.PriceDiscount)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PRICE_DISCOUNT");

                entity.Property(e => e.PriceFinal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PRICE_FINAL");

                entity.Property(e => e.ProductGroup)
                    .HasMaxLength(50)
                    .HasColumnName("PRODUCT_GROUP");

                entity.Property(e => e.Quantity)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("QUANTITY");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.SemsId).HasColumnName("SEMS_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TaxPercentage)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("TAX_PERCENTAGE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.HasOne(d => d.Pr)
                    .WithMany(p => p.SeminarsSessionsProducts)
                    .HasForeignKey(d => d.PrId)
                    .HasConstraintName("FK_SEMINARS_SESSIONS_PRODUCTS_PRODUCTS");

                entity.HasOne(d => d.Sem)
                    .WithMany(p => p.SeminarsSessionsProducts)
                    .HasForeignKey(d => d.SemId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SEMINARS_SESSIONS_PRODUCTS_SEMINARS");

                entity.HasOne(d => d.Sems)
                    .WithMany(p => p.SeminarsSessionsProducts)
                    .HasForeignKey(d => d.SemsId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SEMINARS_SESSIONS_PRODUCTS_SEMINARS_SESSIONS");
            });

            modelBuilder.Entity<ServicesSchedule>(entity =>
            {
                entity.HasKey(e => e.ServiceScheduleItemId);

                entity.ToTable("ServicesSchedule");

                entity.Property(e => e.ServiceScheduleItemId)
                    .HasColumnName("ServiceScheduleItemID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsFixedLength(true);

                entity.Property(e => e.ProjectName).IsRequired();

                entity.Property(e => e.StartMethodLastRun).HasColumnType("datetime");

                entity.Property(e => e.StartMethodName)
                    .IsRequired()
                    .HasMaxLength(300);

                entity.Property(e => e.StopMethodLastRun).HasColumnType("datetime");

                entity.Property(e => e.StopMethodName).HasMaxLength(300);
            });

            modelBuilder.Entity<Session>(entity =>
            {
                entity.HasKey(e => e.SesId);

                entity.ToTable("SESSION");

                entity.Property(e => e.SesId)
                    .ValueGeneratedNever()
                    .HasColumnName("SES_ID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Hidden).HasColumnName("HIDDEN");

                entity.Property(e => e.Label)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("LABEL");

                entity.Property(e => e.LastActive)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_ACTIVE");

                entity.Property(e => e.SesiIdRoot).HasColumnName("SESI_ID_ROOT");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.HasOne(d => d.SesiIdRootNavigation)
                    .WithMany(p => p.Sessions)
                    .HasForeignKey(d => d.SesiIdRoot)
                    .HasConstraintName("FK_SESSION_SESSION_ITEM");
            });

            modelBuilder.Entity<SessionItem>(entity =>
            {
                entity.HasKey(e => e.SesiId);

                entity.ToTable("SESSION_ITEM");

                entity.Property(e => e.SesiId)
                    .ValueGeneratedNever()
                    .HasColumnName("SESI_ID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DesignId).HasColumnName("DESIGN_ID");

                entity.Property(e => e.Hidden).HasColumnName("HIDDEN");

                entity.Property(e => e.ItemId).HasColumnName("ITEM_ID");

                entity.Property(e => e.Label)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("LABEL");

                entity.Property(e => e.RequestData)
                    .IsRequired()
                    .HasColumnType("xml")
                    .HasColumnName("REQUEST_DATA");

                entity.Property(e => e.RequestType).HasColumnName("REQUEST_TYPE");

                entity.Property(e => e.SesId).HasColumnName("SES_ID");

                entity.HasOne(d => d.Ses)
                    .WithMany(p => p.SessionItems)
                    .HasForeignKey(d => d.SesId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SESSION_ITEM_SESSION");
            });

            modelBuilder.Entity<Setting>(entity =>
            {
                entity.HasKey(e => e.SetId);

                entity.ToTable("SETTINGS");

                entity.HasIndex(e => new { e.Setting1, e.Selected }, "IX_SETTINGS__SETTING_SELECTED__INCLS");

                entity.Property(e => e.SetId)
                    .ValueGeneratedNever()
                    .HasColumnName("SET_ID");

                entity.Property(e => e.Description)
                    .HasMaxLength(50)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.Selected)
                    .HasColumnName("SELECTED")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Setting1)
                    .HasMaxLength(50)
                    .HasColumnName("SETTING");

                entity.Property(e => e.Value)
                    .HasMaxLength(500)
                    .HasColumnName("VALUE");
            });

            modelBuilder.Entity<Setting1>(entity =>
            {
                entity.HasKey(e => e.SetId);

                entity.ToTable("SETTINGS", "install");

                entity.Property(e => e.SetId)
                    .ValueGeneratedNever()
                    .HasColumnName("SET_ID");

                entity.Property(e => e.Description)
                    .HasMaxLength(50)
                    .HasColumnName("DESCRIPTION")
                    .UseCollation("Latin1_General_CI_AS");

                entity.Property(e => e.Selected)
                    .HasColumnName("SELECTED")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Setting)
                    .HasMaxLength(50)
                    .HasColumnName("SETTING")
                    .UseCollation("Latin1_General_CI_AS");

                entity.Property(e => e.Value)
                    .HasMaxLength(500)
                    .HasColumnName("VALUE")
                    .UseCollation("Latin1_General_CI_AS");
            });

            modelBuilder.Entity<SitBit>(entity =>
            {
                entity.ToTable("SIT_BIT");

                entity.Property(e => e.SitBitId)
                    .ValueGeneratedNever()
                    .HasColumnName("SIT_BIT_ID");

                entity.HasOne(d => d.SitBitNavigation)
                    .WithOne(p => p.SitBit)
                    .HasForeignKey<SitBit>(d => d.SitBitId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SIT_BIT_SITES");
            });

            modelBuilder.Entity<SitDate>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SIT_DATE");

                entity.Property(e => e.SitDateId).HasColumnName("SIT_DATE_ID");

                entity.HasOne(d => d.SitDateNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.SitDateId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SIT_DATE_ID_SITES");
            });

            modelBuilder.Entity<SitMuid>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SIT_MUID");

                entity.Property(e => e.SitMuidId).HasColumnName("SIT_MUID_ID");

                entity.HasOne(d => d.SitMuidNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.SitMuidId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SIT_MUID_ID_SITES");
            });

            modelBuilder.Entity<SitMuidLink>(entity =>
            {
                entity.HasKey(e => new { e.SitMuidId, e.DrId, e.DroId });

                entity.ToTable("SIT_MUID_LINKS");

                entity.Property(e => e.SitMuidId).HasColumnName("SIT_MUID_ID");

                entity.Property(e => e.DrId).HasColumnName("DR_ID");

                entity.Property(e => e.DroId).HasColumnName("DRO_ID");
            });

            modelBuilder.Entity<SitNum>(entity =>
            {
                entity.ToTable("SIT_NUM");

                entity.Property(e => e.SitNumId)
                    .ValueGeneratedNever()
                    .HasColumnName("SIT_NUM_ID");

                entity.HasOne(d => d.SitNumNavigation)
                    .WithOne(p => p.SitNum)
                    .HasForeignKey<SitNum>(d => d.SitNumId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SIT_NUM_ID_SITES");
            });

            modelBuilder.Entity<SitTxt>(entity =>
            {
                entity.ToTable("SIT_TXT");

                entity.Property(e => e.SitTxtId)
                    .ValueGeneratedNever()
                    .HasColumnName("SIT_TXT_ID");

                entity.HasOne(d => d.SitTxtNavigation)
                    .WithOne(p => p.SitTxt)
                    .HasForeignKey<SitTxt>(d => d.SitTxtId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SIT_TXT_SITES");
            });

            modelBuilder.Entity<SitUid>(entity =>
            {
                entity.ToTable("SIT_UID");

                entity.Property(e => e.SitUidId)
                    .ValueGeneratedNever()
                    .HasColumnName("SIT_UID_ID");

                entity.HasOne(d => d.SitUidNavigation)
                    .WithOne(p => p.SitUid)
                    .HasForeignKey<SitUid>(d => d.SitUidId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SIT_UID_SITES");
            });

            modelBuilder.Entity<Site>(entity =>
            {
                entity.HasKey(e => e.SitId)
                    .HasName("PK__SITES__9B03087FB1FBC05C");

                entity.ToTable("SITES");

                entity.HasIndex(e => e.ShortCode, "IX__SITES__SHORT_CODE");

                entity.Property(e => e.SitId)
                    .ValueGeneratedNever()
                    .HasColumnName("SIT_ID");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.Address1)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_1");

                entity.Property(e => e.Address2)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_2");

                entity.Property(e => e.Address3)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_3");

                entity.Property(e => e.Country)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.County)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTY");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Fax1)
                    .HasMaxLength(50)
                    .HasColumnName("FAX_1");

                entity.Property(e => e.Phone1)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_1");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(255)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", true);

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.SgId).HasColumnName("SG_ID");

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'SIT-')");

                entity.Property(e => e.SitDeleted).HasColumnName("SIT_DELETED");

                entity.Property(e => e.SitExternal)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_EXTERNAL");

                entity.Property(e => e.SitUd1)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_UD1");

                entity.Property(e => e.SitUd10)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_UD10");

                entity.Property(e => e.SitUd10Bit).HasColumnName("SIT_UD10_BIT");

                entity.Property(e => e.SitUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SIT_UD10_DATE");

                entity.Property(e => e.SitUd10Id).HasColumnName("SIT_UD10_ID");

                entity.Property(e => e.SitUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SIT_UD10_NUMERIC");

                entity.Property(e => e.SitUd11)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_UD11");

                entity.Property(e => e.SitUd11Bit).HasColumnName("SIT_UD11_BIT");

                entity.Property(e => e.SitUd12)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_UD12");

                entity.Property(e => e.SitUd12Bit).HasColumnName("SIT_UD12_BIT");

                entity.Property(e => e.SitUd13)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_UD13");

                entity.Property(e => e.SitUd13Bit).HasColumnName("SIT_UD13_BIT");

                entity.Property(e => e.SitUd14)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_UD14");

                entity.Property(e => e.SitUd14Bit).HasColumnName("SIT_UD14_BIT");

                entity.Property(e => e.SitUd15)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_UD15");

                entity.Property(e => e.SitUd15Bit).HasColumnName("SIT_UD15_BIT");

                entity.Property(e => e.SitUd16Bit).HasColumnName("SIT_UD16_BIT");

                entity.Property(e => e.SitUd17Bit).HasColumnName("SIT_UD17_BIT");

                entity.Property(e => e.SitUd18Bit).HasColumnName("SIT_UD18_BIT");

                entity.Property(e => e.SitUd19Bit).HasColumnName("SIT_UD19_BIT");

                entity.Property(e => e.SitUd1Bit).HasColumnName("SIT_UD1_BIT");

                entity.Property(e => e.SitUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SIT_UD1_DATE");

                entity.Property(e => e.SitUd1Id).HasColumnName("SIT_UD1_ID");

                entity.Property(e => e.SitUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SIT_UD1_NUMERIC");

                entity.Property(e => e.SitUd2)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_UD2");

                entity.Property(e => e.SitUd20Bit).HasColumnName("SIT_UD20_BIT");

                entity.Property(e => e.SitUd21Bit).HasColumnName("SIT_UD21_BIT");

                entity.Property(e => e.SitUd22Bit).HasColumnName("SIT_UD22_BIT");

                entity.Property(e => e.SitUd23Bit).HasColumnName("SIT_UD23_BIT");

                entity.Property(e => e.SitUd24Bit).HasColumnName("SIT_UD24_BIT");

                entity.Property(e => e.SitUd2Bit).HasColumnName("SIT_UD2_BIT");

                entity.Property(e => e.SitUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SIT_UD2_DATE");

                entity.Property(e => e.SitUd2Id).HasColumnName("SIT_UD2_ID");

                entity.Property(e => e.SitUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SIT_UD2_NUMERIC");

                entity.Property(e => e.SitUd3)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_UD3");

                entity.Property(e => e.SitUd3Bit).HasColumnName("SIT_UD3_BIT");

                entity.Property(e => e.SitUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SIT_UD3_DATE");

                entity.Property(e => e.SitUd3Id).HasColumnName("SIT_UD3_ID");

                entity.Property(e => e.SitUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SIT_UD3_NUMERIC");

                entity.Property(e => e.SitUd4)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_UD4");

                entity.Property(e => e.SitUd4Bit).HasColumnName("SIT_UD4_BIT");

                entity.Property(e => e.SitUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SIT_UD4_DATE");

                entity.Property(e => e.SitUd4Id).HasColumnName("SIT_UD4_ID");

                entity.Property(e => e.SitUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SIT_UD4_NUMERIC");

                entity.Property(e => e.SitUd5)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_UD5");

                entity.Property(e => e.SitUd5Bit).HasColumnName("SIT_UD5_BIT");

                entity.Property(e => e.SitUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SIT_UD5_DATE");

                entity.Property(e => e.SitUd5Id).HasColumnName("SIT_UD5_ID");

                entity.Property(e => e.SitUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SIT_UD5_NUMERIC");

                entity.Property(e => e.SitUd6)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_UD6");

                entity.Property(e => e.SitUd6Bit).HasColumnName("SIT_UD6_BIT");

                entity.Property(e => e.SitUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SIT_UD6_DATE");

                entity.Property(e => e.SitUd6Id).HasColumnName("SIT_UD6_ID");

                entity.Property(e => e.SitUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SIT_UD6_NUMERIC");

                entity.Property(e => e.SitUd7)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_UD7");

                entity.Property(e => e.SitUd7Bit).HasColumnName("SIT_UD7_BIT");

                entity.Property(e => e.SitUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SIT_UD7_DATE");

                entity.Property(e => e.SitUd7Id).HasColumnName("SIT_UD7_ID");

                entity.Property(e => e.SitUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SIT_UD7_NUMERIC");

                entity.Property(e => e.SitUd8)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_UD8");

                entity.Property(e => e.SitUd8Bit).HasColumnName("SIT_UD8_BIT");

                entity.Property(e => e.SitUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SIT_UD8_DATE");

                entity.Property(e => e.SitUd8Id).HasColumnName("SIT_UD8_ID");

                entity.Property(e => e.SitUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SIT_UD8_NUMERIC");

                entity.Property(e => e.SitUd9)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_UD9");

                entity.Property(e => e.SitUd9Bit).HasColumnName("SIT_UD9_BIT");

                entity.Property(e => e.SitUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SIT_UD9_DATE");

                entity.Property(e => e.SitUd9Id).HasColumnName("SIT_UD9_ID");

                entity.Property(e => e.SitUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SIT_UD9_NUMERIC");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TimeZone)
                    .HasMaxLength(255)
                    .HasColumnName("TIME_ZONE");

                entity.Property(e => e.Town)
                    .HasMaxLength(255)
                    .HasColumnName("TOWN");

                entity.Property(e => e.Type1).HasColumnName("TYPE_1");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.WebSite1)
                    .HasMaxLength(100)
                    .HasColumnName("WEB_SITE_1");

                entity.HasOne(d => d.Ac)
                    .WithMany(p => p.Sites)
                    .HasForeignKey(d => d.AcId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SITE_ACCOUNT");
            });

            modelBuilder.Entity<Social>(entity =>
            {
                entity.HasKey(e => e.SclId);

                entity.ToTable("SOCIAL");

                entity.HasIndex(e => e.CsId, "IX_SOCIAL_CS_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.ObjId, "IX_SOCIAL_OBJ_ID")
                    .HasFillFactor((byte)80);

                entity.Property(e => e.SclId).HasColumnName("SCL_ID");

                entity.Property(e => e.CsId)
                    .HasColumnName("CS_ID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.FacebookImage)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_IMAGE");

                entity.Property(e => e.FacebookName)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_NAME");

                entity.Property(e => e.FacebookPrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_PRIVATE_ID");

                entity.Property(e => e.FacebookProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_PROFILE_URL");

                entity.Property(e => e.FacebookPublicId)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_PUBLIC_ID");

                entity.Property(e => e.GplusImage)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_IMAGE");

                entity.Property(e => e.GplusName)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_NAME");

                entity.Property(e => e.GplusPrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_PRIVATE_ID");

                entity.Property(e => e.GplusProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_PROFILE_URL");

                entity.Property(e => e.GplusPublicId)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_PUBLIC_ID");

                entity.Property(e => e.LinkedinImage)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_IMAGE");

                entity.Property(e => e.LinkedinName)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_NAME");

                entity.Property(e => e.LinkedinPrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_PRIVATE_ID");

                entity.Property(e => e.LinkedinProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_PROFILE_URL");

                entity.Property(e => e.LinkedinPublicId)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_PUBLIC_ID");

                entity.Property(e => e.ObjId)
                    .HasColumnName("OBJ_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Twitter1Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_IMAGE");

                entity.Property(e => e.Twitter1Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_NAME");

                entity.Property(e => e.Twitter1PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_PRIVATE_ID");

                entity.Property(e => e.Twitter1ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_PROFILE_URL");

                entity.Property(e => e.Twitter1PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_PUBLIC_ID");

                entity.Property(e => e.Twitter2Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_IMAGE");

                entity.Property(e => e.Twitter2Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_NAME");

                entity.Property(e => e.Twitter2PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_PRIVATE_ID");

                entity.Property(e => e.Twitter2ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_PROFILE_URL");

                entity.Property(e => e.Twitter2PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_PUBLIC_ID");

                entity.Property(e => e.Twitter3Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_IMAGE");

                entity.Property(e => e.Twitter3Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_NAME");

                entity.Property(e => e.Twitter3PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_PRIVATE_ID");

                entity.Property(e => e.Twitter3ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_PROFILE_URL");

                entity.Property(e => e.Twitter3PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_PUBLIC_ID");

                entity.Property(e => e.Twitter4Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_IMAGE");

                entity.Property(e => e.Twitter4Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_NAME");

                entity.Property(e => e.Twitter4PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_PRIVATE_ID");

                entity.Property(e => e.Twitter4ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_PROFILE_URL");

                entity.Property(e => e.Twitter4PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_PUBLIC_ID");

                entity.Property(e => e.Twitter5Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_IMAGE");

                entity.Property(e => e.Twitter5Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_NAME");

                entity.Property(e => e.Twitter5PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_PRIVATE_ID");

                entity.Property(e => e.Twitter5ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_PROFILE_URL");

                entity.Property(e => e.Twitter5PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_PUBLIC_ID");
            });

            modelBuilder.Entity<SocialAuth>(entity =>
            {
                entity.HasKey(e => e.SocId);

                entity.ToTable("SOCIAL_AUTH");

                entity.Property(e => e.SocId)
                    .ValueGeneratedNever()
                    .HasColumnName("SOC_ID");

                entity.Property(e => e.Bounced).HasColumnName("BOUNCED");

                entity.Property(e => e.Certificate).HasColumnName("CERTIFICATE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Data1).HasColumnName("DATA_1");

                entity.Property(e => e.Data10)
                    .HasMaxLength(1000)
                    .HasColumnName("DATA_10");

                entity.Property(e => e.Data2).HasColumnName("DATA_2");

                entity.Property(e => e.Data3).HasColumnName("DATA_3");

                entity.Property(e => e.Data4).HasColumnName("DATA_4");

                entity.Property(e => e.Data5).HasColumnName("DATA_5");

                entity.Property(e => e.Data6)
                    .HasMaxLength(1000)
                    .HasColumnName("DATA_6");

                entity.Property(e => e.Data7)
                    .HasMaxLength(1000)
                    .HasColumnName("DATA_7");

                entity.Property(e => e.Data8)
                    .HasMaxLength(1000)
                    .HasColumnName("DATA_8");

                entity.Property(e => e.Data9)
                    .HasMaxLength(1000)
                    .HasColumnName("DATA_9");

                entity.Property(e => e.ExpiryDate)
                    .HasColumnType("datetime")
                    .HasColumnName("EXPIRY_DATE");

                entity.Property(e => e.ItemId).HasColumnName("ITEM_ID");

                entity.Property(e => e.ItemType)
                    .HasMaxLength(255)
                    .HasColumnName("ITEM_TYPE");

                entity.Property(e => e.LastBounceMessage)
                    .HasMaxLength(1000)
                    .HasColumnName("LAST_BOUNCE_MESSAGE");

                entity.Property(e => e.LastBounced)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_BOUNCED");

                entity.Property(e => e.LastUsed)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_USED");

                entity.Property(e => e.ProfileUrl)
                    .HasMaxLength(255)
                    .HasColumnName("PROFILE_URL");

                entity.Property(e => e.Summary)
                    .HasMaxLength(100)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.ThirdPartyId)
                    .HasMaxLength(50)
                    .HasColumnName("THIRD_PARTY_ID");

                entity.Property(e => e.ThirdPartyName)
                    .HasMaxLength(100)
                    .HasColumnName("THIRD_PARTY_NAME");

                entity.Property(e => e.ThirdPartyPassword)
                    .HasMaxLength(255)
                    .HasColumnName("THIRD_PARTY_PASSWORD");

                entity.Property(e => e.ThirdPartyUsername)
                    .HasMaxLength(255)
                    .HasColumnName("THIRD_PARTY_USERNAME");

                entity.Property(e => e.TpiId).HasColumnName("TPI_ID");

                entity.Property(e => e.TypeName)
                    .HasMaxLength(50)
                    .HasColumnName("TYPE_NAME");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.HasOne(d => d.Us)
                    .WithMany(p => p.SocialAuths)
                    .HasForeignKey(d => d.UsId)
                    .HasConstraintName("FK_SOCIAL_AUTH_USERS");
            });

            modelBuilder.Entity<SocialAuthIntegration>(entity =>
            {
                entity.HasKey(e => e.SocsiId);

                entity.ToTable("SOCIAL_AUTH_INTEGRATIONS");

                entity.Property(e => e.SocsiId)
                    .ValueGeneratedNever()
                    .HasColumnName("SOCSI_ID");

                entity.Property(e => e.SiId).HasColumnName("SI_ID");

                entity.Property(e => e.SocId).HasColumnName("SOC_ID");

                entity.HasOne(d => d.Si)
                    .WithMany(p => p.SocialAuthIntegrations)
                    .HasForeignKey(d => d.SiId)
                    .HasConstraintName("FK_SOCIAL_AUTH_INTEGRATIONS_INTEGRATIONS");

                entity.HasOne(d => d.Soc)
                    .WithMany(p => p.SocialAuthIntegrations)
                    .HasForeignKey(d => d.SocId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SOCIAL_AUTH_INTEGRATIONS_SOCIAL_AUTH");
            });

            modelBuilder.Entity<Space>(entity =>
            {
                entity.ToTable("SPACES", "Portal");

                entity.Property(e => e.SpaceId)
                    .ValueGeneratedNever()
                    .HasColumnName("SPACE_ID");

                entity.Property(e => e.CreatedByUsId).HasColumnName("CREATED_BY_US_ID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CurrentVersionNumber)
                    .HasColumnName("CURRENT_VERSION_NUMBER")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Description)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.InitialPublishComplete).HasColumnName("INITIAL_PUBLISH_COMPLETE");

                entity.Property(e => e.IsAuth).HasColumnName("IS_AUTH");

                entity.Property(e => e.IsAvailable).HasColumnName("IS_AVAILABLE");

                entity.Property(e => e.LastPublishedVersionId).HasColumnName("LAST_PUBLISHED_VERSION_ID");

                entity.Property(e => e.LastUpdatedByUsId).HasColumnName("LAST_UPDATED_BY_US_ID");

                entity.Property(e => e.Published).HasColumnName("PUBLISHED");

                entity.Property(e => e.SiId).HasColumnName("SI_ID");

                entity.Property(e => e.Summary)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Url)
                    .HasMaxLength(500)
                    .HasColumnName("URL");

                entity.HasOne(d => d.CreatedByUs)
                    .WithMany(p => p.Spaces)
                    .HasForeignKey(d => d.CreatedByUsId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__SPACES__CREATED_BY_US_ID__USERS__US_ID");

                entity.HasOne(d => d.Si)
                    .WithMany(p => p.Spaces)
                    .HasForeignKey(d => d.SiId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__SPACES__INTEGRATIONS__SI_ID");
            });

            modelBuilder.Entity<SpaceRole>(entity =>
            {
                entity.HasKey(e => e.SrId);

                entity.ToTable("SPACE_ROLES", "Portal");

                entity.Property(e => e.SrId)
                    .ValueGeneratedNever()
                    .HasColumnName("SR_ID");

                entity.Property(e => e.RId).HasColumnName("R_ID");

                entity.Property(e => e.SpaceId).HasColumnName("SPACE_ID");

                entity.HasOne(d => d.RIdNavigation)
                    .WithMany(p => p.SpaceRoles)
                    .HasForeignKey(d => d.RId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SPACE_ROLES_ROLES");

                entity.HasOne(d => d.Space)
                    .WithMany(p => p.SpaceRoles)
                    .HasForeignKey(d => d.SpaceId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SPACE_ROLES_SPACES");
            });

            modelBuilder.Entity<SpaceVersion>(entity =>
            {
                entity.HasKey(e => new { e.VersionId, e.SpaceId });

                entity.ToTable("SPACE_VERSIONS", "Portal");

                entity.Property(e => e.VersionId).HasColumnName("VERSION_ID");

                entity.Property(e => e.SpaceId).HasColumnName("SPACE_ID");

                entity.Property(e => e.Description)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.Summary)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.HasOne(d => d.Space)
                    .WithMany(p => p.SpaceVersions)
                    .HasForeignKey(d => d.SpaceId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__SPACE_VERSIONS__SPACE_ID__SPACES__SPACE_ID");
            });

            modelBuilder.Entity<SrcBit>(entity =>
            {
                entity.ToTable("SRC_BIT");

                entity.Property(e => e.SrcBitId)
                    .ValueGeneratedNever()
                    .HasColumnName("SRC_BIT_ID");

                entity.HasOne(d => d.SrcBitNavigation)
                    .WithOne(p => p.SrcBit)
                    .HasForeignKey<SrcBit>(d => d.SrcBitId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__SRC_BIT__SRC_BIT__07397B50");
            });

            modelBuilder.Entity<SrcDate>(entity =>
            {
                entity.ToTable("SRC_DATE");

                entity.Property(e => e.SrcDateId)
                    .ValueGeneratedNever()
                    .HasColumnName("SRC_DATE_ID");

                entity.HasOne(d => d.SrcDateNavigation)
                    .WithOne(p => p.SrcDate)
                    .HasForeignKey<SrcDate>(d => d.SrcDateId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__SRC_DATE__SRC_DA__0A15E7FB");
            });

            modelBuilder.Entity<SrcNum>(entity =>
            {
                entity.ToTable("SRC_NUM");

                entity.Property(e => e.SrcNumId)
                    .ValueGeneratedNever()
                    .HasColumnName("SRC_NUM_ID");

                entity.HasOne(d => d.SrcNumNavigation)
                    .WithOne(p => p.SrcNum)
                    .HasForeignKey<SrcNum>(d => d.SrcNumId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__SRC_NUM__SRC_NUM__0FCEC151");
            });

            modelBuilder.Entity<SrcTxt>(entity =>
            {
                entity.ToTable("SRC_TXT");

                entity.Property(e => e.SrcTxtId)
                    .ValueGeneratedNever()
                    .HasColumnName("SRC_TXT_ID");

                entity.HasOne(d => d.SrcTxtNavigation)
                    .WithOne(p => p.SrcTxt)
                    .HasForeignKey<SrcTxt>(d => d.SrcTxtId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__SRC_TXT__SRC_TXT__045D0EA5");
            });

            modelBuilder.Entity<SrcUid>(entity =>
            {
                entity.ToTable("SRC_UID");

                entity.Property(e => e.SrcUidId)
                    .ValueGeneratedNever()
                    .HasColumnName("SRC_UID_ID");

                entity.HasOne(d => d.SrcUidNavigation)
                    .WithOne(p => p.SrcUid)
                    .HasForeignKey<SrcUid>(d => d.SrcUidId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__SRC_UID__SRC_UID__0CF254A6");
            });

            modelBuilder.Entity<StageHistory>(entity =>
            {
                entity.HasKey(e => e.SthId);

                entity.ToTable("STAGE_HISTORY");

                entity.HasIndex(e => e.RefId, "IX_STAGE_HISTORY_REF_ID")
                    .HasFillFactor((byte)80);

                entity.Property(e => e.SthId)
                    .HasColumnName("STH_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DroId).HasColumnName("DRO_ID");

                entity.Property(e => e.End)
                    .HasColumnType("datetime")
                    .HasColumnName("END");

                entity.Property(e => e.FieldName)
                    .HasMaxLength(255)
                    .HasColumnName("FIELD_NAME");

                entity.Property(e => e.NumericValue)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("NUMERIC_VALUE");

                entity.Property(e => e.ObjectType)
                    .HasMaxLength(32)
                    .HasColumnName("OBJECT_TYPE");

                entity.Property(e => e.RefId).HasColumnName("REF_ID");

                entity.Property(e => e.Start)
                    .HasColumnType("datetime")
                    .HasColumnName("START");

                entity.Property(e => e.ValueType).HasColumnName("VALUE_TYPE");
            });

            modelBuilder.Entity<StandardIntegration>(entity =>
            {
                entity.HasKey(e => e.SiId);

                entity.ToTable("STANDARD_INTEGRATIONS");

                entity.Property(e => e.SiId)
                    .ValueGeneratedNever()
                    .HasColumnName("SI_ID");

                entity.Property(e => e.BaseUri)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("BASE_URI")
                    .HasDefaultValueSql("(N'https://yoururl.com')");

                entity.Property(e => e.Enabled).HasColumnName("ENABLED");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .HasColumnName("NAME")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SitId).HasColumnName("SIT_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");
            });

            modelBuilder.Entity<StandardIntegrationsBatchfeed>(entity =>
            {
                entity.HasKey(e => e.SibId);

                entity.ToTable("STANDARD_INTEGRATIONS_BATCHFEEDS");

                entity.Property(e => e.SibId)
                    .ValueGeneratedNever()
                    .HasColumnName("SIB_ID");

                entity.Property(e => e.AlertFilename)
                    .HasMaxLength(255)
                    .HasColumnName("ALERT_FILENAME");

                entity.Property(e => e.Enabled).HasColumnName("ENABLED");

                entity.Property(e => e.GvObjecttype)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("GV_OBJECTTYPE")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .HasColumnName("NAME")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SiId).HasColumnName("SI_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");
            });

            modelBuilder.Entity<StandardIntegrationsBatchfeedsMapping>(entity =>
            {
                entity.HasKey(e => e.SibmId);

                entity.ToTable("STANDARD_INTEGRATIONS_BATCHFEEDS_MAPPINGS");

                entity.Property(e => e.SibmId)
                    .ValueGeneratedNever()
                    .HasColumnName("SIBM_ID");

                entity.Property(e => e.GvField)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("GV_FIELD")
                    .IsFixedLength(true);

                entity.Property(e => e.SibId).HasColumnName("SIB_ID");

                entity.Property(e => e.Static).HasColumnName("STATIC");

                entity.Property(e => e.TpField)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("TP_FIELD")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<StandardIntegrationsLivefeed>(entity =>
            {
                entity.HasKey(e => e.SilId);

                entity.ToTable("STANDARD_INTEGRATIONS_LIVEFEEDS");

                entity.Property(e => e.SilId)
                    .ValueGeneratedNever()
                    .HasColumnName("SIL_ID");

                entity.Property(e => e.Enabled).HasColumnName("ENABLED");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .HasColumnName("NAME");

                entity.Property(e => e.SiId).HasColumnName("SI_ID");

                entity.Property(e => e.SilTypeId).HasColumnName("SIL_TYPE_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");
            });

            modelBuilder.Entity<StandardIntegrationsType>(entity =>
            {
                entity.HasKey(e => e.SitId);

                entity.ToTable("STANDARD_INTEGRATIONS_TYPES");

                entity.Property(e => e.SitId)
                    .ValueGeneratedNever()
                    .HasColumnName("SIT_ID");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .HasColumnName("NAME");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");
            });

            modelBuilder.Entity<StgBit>(entity =>
            {
                entity.ToTable("STG_BIT");

                entity.Property(e => e.StgBitId)
                    .ValueGeneratedNever()
                    .HasColumnName("STG_BIT_ID");

                entity.HasOne(d => d.StgBitNavigation)
                    .WithOne(p => p.StgBit)
                    .HasForeignKey<StgBit>(d => d.StgBitId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__STG_BIT__STG_BIT__36FD9D0B");
            });

            modelBuilder.Entity<StgDate>(entity =>
            {
                entity.ToTable("STG_DATE");

                entity.Property(e => e.StgDateId)
                    .ValueGeneratedNever()
                    .HasColumnName("STG_DATE_ID");

                entity.HasOne(d => d.StgDateNavigation)
                    .WithOne(p => p.StgDate)
                    .HasForeignKey<StgDate>(d => d.StgDateId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__STG_DATE__STG_DA__39DA09B6");
            });

            modelBuilder.Entity<StgNum>(entity =>
            {
                entity.ToTable("STG_NUM");

                entity.Property(e => e.StgNumId)
                    .ValueGeneratedNever()
                    .HasColumnName("STG_NUM_ID");

                entity.HasOne(d => d.StgNumNavigation)
                    .WithOne(p => p.StgNum)
                    .HasForeignKey<StgNum>(d => d.StgNumId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__STG_NUM__STG_NUM__3F92E30C");
            });

            modelBuilder.Entity<StgTxt>(entity =>
            {
                entity.ToTable("STG_TXT");

                entity.Property(e => e.StgTxtId)
                    .ValueGeneratedNever()
                    .HasColumnName("STG_TXT_ID");

                entity.HasOne(d => d.StgTxtNavigation)
                    .WithOne(p => p.StgTxt)
                    .HasForeignKey<StgTxt>(d => d.StgTxtId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__STG_TXT__STG_TXT__34213060");
            });

            modelBuilder.Entity<StgUid>(entity =>
            {
                entity.ToTable("STG_UID");

                entity.Property(e => e.StgUidId)
                    .ValueGeneratedNever()
                    .HasColumnName("STG_UID_ID");

                entity.HasOne(d => d.StgUidNavigation)
                    .WithOne(p => p.StgUid)
                    .HasForeignKey<StgUid>(d => d.StgUidId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__STG_UID__STG_UID__3CB67661");
            });

            modelBuilder.Entity<SubKey>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SUB_KEYS");

                entity.Property(e => e.KId).HasColumnName("K_ID");

                entity.Property(e => e.SubKeyName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("SUB_KEY_NAME");

                entity.Property(e => e.SubKeyValue)
                    .IsRequired()
                    .HasColumnName("SUB_KEY_VALUE");
            });

            modelBuilder.Entity<SystemLabel>(entity =>
            {
                entity.HasKey(e => new { e.LangId, e.LabelId });

                entity.ToTable("SYSTEM_LABELS");

                entity.Property(e => e.LangId).HasColumnName("LANG_ID");

                entity.Property(e => e.LabelId).HasColumnName("LABEL_ID");

                entity.Property(e => e.Label)
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasColumnName("LABEL");

                entity.Property(e => e.LastUpdated)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_UPDATED")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SlId).HasColumnName("SL_ID");

                entity.HasOne(d => d.LabelNavigation)
                    .WithMany(p => p.SystemLabels)
                    .HasForeignKey(d => d.LabelId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SYSTEM_LABELS_SYSTEM_LABEL_DESCRIPTIONS");

                entity.HasOne(d => d.Lang)
                    .WithMany(p => p.SystemLabels)
                    .HasForeignKey(d => d.LangId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SYSTEM_LABELS_LANGUAGES");
            });

            modelBuilder.Entity<SystemLabelDescription>(entity =>
            {
                entity.HasKey(e => e.LabelId);

                entity.ToTable("SYSTEM_LABEL_DESCRIPTIONS");

                entity.Property(e => e.LabelId)
                    .ValueGeneratedNever()
                    .HasColumnName("LABEL_ID");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.SystemName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("SYSTEM_NAME");
            });

            modelBuilder.Entity<SystemXmlFile>(entity =>
            {
                entity.HasKey(e => e.FilePath)
                    .HasName("PK__SYSTEM_XML_FILES");

                entity.ToTable("SYSTEM_XML_FILES");

                entity.Property(e => e.FilePath)
                    .HasMaxLength(200)
                    .HasColumnName("FILE_PATH");

                entity.Property(e => e.LastModified)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_MODIFIED");

                entity.Property(e => e.XmlData)
                    .IsRequired()
                    .HasColumnType("xml")
                    .HasColumnName("XML_DATA");
            });

            modelBuilder.Entity<SystemXmlFilesBackup>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SYSTEM_XML_FILES_BACKUP");

                entity.Property(e => e.BackupDate)
                    .HasColumnType("datetime")
                    .HasColumnName("BACKUP_DATE");

                entity.Property(e => e.FilePath)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnName("FILE_PATH");

                entity.Property(e => e.XmlData)
                    .IsRequired()
                    .HasColumnType("xml")
                    .HasColumnName("XML_DATA");
            });

            modelBuilder.Entity<Tag>(entity =>
            {
                entity.ToTable("TAGS");

                entity.HasIndex(e => e.TagId, "IX_TAGS_TAG")
                    .IsUnique();

                entity.Property(e => e.TagId).HasColumnName("TAG_ID");

                entity.Property(e => e.Accounts).HasColumnName("ACCOUNTS");

                entity.Property(e => e.Activities).HasColumnName("ACTIVITIES");

                entity.Property(e => e.Appointments).HasColumnName("APPOINTMENTS");

                entity.Property(e => e.Campaigns).HasColumnName("CAMPAIGNS");

                entity.Property(e => e.Colour)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("COLOUR")
                    .IsFixedLength(true);

                entity.Property(e => e.Contacts).HasColumnName("CONTACTS");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Email).HasColumnName("EMAIL");

                entity.Property(e => e.Notes).HasColumnName("NOTES");

                entity.Property(e => e.Opportunities).HasColumnName("OPPORTUNITIES");

                entity.Property(e => e.Products).HasColumnName("PRODUCTS");

                entity.Property(e => e.Profiles).HasColumnName("PROFILES");

                entity.Property(e => e.Projects).HasColumnName("PROJECTS");

                entity.Property(e => e.Propagate).HasColumnName("PROPAGATE");

                entity.Property(e => e.Quotes).HasColumnName("QUOTES");

                entity.Property(e => e.Seminars).HasColumnName("SEMINARS");

                entity.Property(e => e.Tag1)
                    .HasMaxLength(25)
                    .HasColumnName("TAG");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.Users).HasColumnName("USERS");
            });

            modelBuilder.Entity<TagsLink>(entity =>
            {
                entity.HasKey(e => e.TaglId);

                entity.ToTable("TAGS_LINKS");

                entity.Property(e => e.TaglId).HasColumnName("TAGL_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.Propagated).HasColumnName("PROPAGATED");

                entity.Property(e => e.PropagatedId).HasColumnName("PROPAGATED_ID");

                entity.Property(e => e.TagId).HasColumnName("TAG_ID");

                entity.HasOne(d => d.Tag)
                    .WithMany(p => p.TagsLinks)
                    .HasForeignKey(d => d.TagId)
                    .HasConstraintName("FK_TAGS_LINKS_TAGS");
            });

            modelBuilder.Entity<TagsSearch>(entity =>
            {
                entity.HasKey(e => e.ObjId);

                entity.ToTable("TAGS_SEARCH");

                entity.Property(e => e.ObjId)
                    .ValueGeneratedNever()
                    .HasColumnName("OBJ_ID");

                entity.Property(e => e.Tags)
                    .HasMaxLength(2000)
                    .HasColumnName("TAGS");
            });

            modelBuilder.Entity<Target>(entity =>
            {
                entity.HasKey(e => e.TarId)
                    .HasName("PK_TARGETS_1");

                entity.ToTable("TARGETS");

                entity.Property(e => e.TarId)
                    .HasColumnName("TAR_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Created)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CurId).HasColumnName("CUR_ID");

                entity.Property(e => e.Deleted)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.OwnerId).HasColumnName("OWNER_ID");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("START_DATE")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TardId).HasColumnName("TARD_ID");

                entity.Property(e => e.TargetValue)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("TARGET_VALUE");
            });

            modelBuilder.Entity<TargetDef>(entity =>
            {
                entity.HasKey(e => e.TardId)
                    .HasName("PK_TARGETS");

                entity.ToTable("TARGET_DEFS");

                entity.Property(e => e.TardId)
                    .HasColumnName("TARD_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Created)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.DefaultValue)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("DEFAULT_VALUE");

                entity.Property(e => e.Deleted)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.OwnerType)
                    .HasMaxLength(50)
                    .HasColumnName("OWNER_TYPE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TargetType)
                    .HasMaxLength(255)
                    .HasColumnName("TARGET_TYPE")
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<TaxCode>(entity =>
            {
                entity.HasKey(e => e.TxcId);

                entity.ToTable("TAX_CODES");

                entity.HasIndex(e => e.ShortCode, "IX__TAX_CODES__SHORT_CODE");

                entity.Property(e => e.TxcId)
                    .ValueGeneratedNever()
                    .HasColumnName("TXC_ID");

                entity.Property(e => e.Code)
                    .HasMaxLength(50)
                    .HasColumnName("CODE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", true);

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'TXC-')");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TaxPercentage)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("TAX_PERCENTAGE");

                entity.Property(e => e.TxcDeleted).HasColumnName("TXC_DELETED");

                entity.Property(e => e.TxcExternal)
                    .HasMaxLength(255)
                    .HasColumnName("TXC_EXTERNAL");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<Template>(entity =>
            {
                entity.ToTable("TEMPLATES", "Portal");

                entity.Property(e => e.TemplateId)
                    .ValueGeneratedNever()
                    .HasColumnName("TEMPLATE_ID");

                entity.Property(e => e.TemplateAlias)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("TEMPLATE_ALIAS")
                    .UseCollation("Latin1_General_CI_AS");

                entity.Property(e => e.TemplateName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("TEMPLATE_NAME")
                    .UseCollation("Latin1_General_CI_AS");

                entity.Property(e => e.TemplateType).HasColumnName("TEMPLATE_TYPE");
            });

            modelBuilder.Entity<TemplateProperty>(entity =>
            {
                entity.HasKey(e => e.TpId)
                    .HasName("PK_Portal.TemplateProperties");

                entity.ToTable("TEMPLATE_PROPERTIES", "Portal");

                entity.Property(e => e.TpId)
                    .ValueGeneratedNever()
                    .HasColumnName("TP_ID");

                entity.Property(e => e.AreaId).HasColumnName("AREA_ID");

                entity.Property(e => e.PropertyName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("PROPERTY_NAME");

                entity.Property(e => e.PropertyValue)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("PROPERTY_VALUE");
            });

            modelBuilder.Entity<TextOptionsDrop>(entity =>
            {
                entity.HasKey(e => e.TodrId)
                    .HasName("PK_TextOptionsDrop");

                entity.Property(e => e.TodrId)
                    .ValueGeneratedNever()
                    .HasColumnName("TODR_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Deleted).HasColumnName("DELETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Issoftdrop).HasColumnName("ISSOFTDROP");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<TextOptionsDropsOption>(entity =>
            {
                entity.HasKey(e => e.TodroId);

                entity.Property(e => e.TodroId)
                    .ValueGeneratedNever()
                    .HasColumnName("TODRO_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Deleted).HasColumnName("DELETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Order).HasColumnName("ORDER");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TodrId).HasColumnName("TODR_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.Value)
                    .HasMaxLength(255)
                    .HasColumnName("VALUE");

                entity.HasOne(d => d.Todr)
                    .WithMany(p => p.TextOptionsDropsOptions)
                    .HasForeignKey(d => d.TodrId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TextOptionsDropsOption_TODR_ID");
            });

            modelBuilder.Entity<Theme>(entity =>
            {
                entity.ToTable("THEMES", "Portal");

                entity.Property(e => e.ThemeId)
                    .ValueGeneratedNever()
                    .HasColumnName("THEME_ID");

                entity.Property(e => e.BodyBgColour)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("BODY_BG_COLOUR")
                    .HasDefaultValueSql("(N'#F2F2F2')");

                entity.Property(e => e.Bold)
                    .IsRequired()
                    .HasMaxLength(5)
                    .HasColumnName("BOLD")
                    .HasDefaultValueSql("(N'700')");

                entity.Property(e => e.BorderColour)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("BORDER_COLOUR")
                    .HasDefaultValueSql("(N'#D4D4D4')");

                entity.Property(e => e.BorderRadius)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("BORDER_RADIUS")
                    .HasDefaultValueSql("(N'4px')");

                entity.Property(e => e.BorderStyle)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnName("BORDER_STYLE")
                    .HasDefaultValueSql("(N'solid')");

                entity.Property(e => e.BorderWidth)
                    .IsRequired()
                    .HasMaxLength(5)
                    .HasColumnName("BORDER_WIDTH")
                    .HasDefaultValueSql("(N'1px')");

                entity.Property(e => e.BoxShadow)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("BOX_SHADOW")
                    .HasDefaultValueSql("(N'0px 5px 6px rgba(215, 215, 215, 0.35)')");

                entity.Property(e => e.BoxSizing)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnName("BOX_SIZING")
                    .HasDefaultValueSql("(N'border-box')");

                entity.Property(e => e.ButtonsAndLinksColour)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("BUTTONS_AND_LINKS_COLOUR")
                    .HasDefaultValueSql("(N'#2196F3')");

                entity.Property(e => e.ContainerBorderColour)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("CONTAINER_BORDER_COLOUR")
                    .HasDefaultValueSql("(N'#d4d4d4')");

                entity.Property(e => e.ContainerBorderRadius)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("CONTAINER_BORDER_RADIUS")
                    .HasDefaultValueSql("(N'4px')");

                entity.Property(e => e.ContainerBorderStyle)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnName("CONTAINER_BORDER_STYLE")
                    .HasDefaultValueSql("(N'solid')");

                entity.Property(e => e.ContainerBorderWidth)
                    .IsRequired()
                    .HasMaxLength(5)
                    .HasColumnName("CONTAINER_BORDER_WIDTH")
                    .HasDefaultValueSql("(N'0px')");

                entity.Property(e => e.ContainerBoxShadow)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("CONTAINER_BOX_SHADOW")
                    .HasDefaultValueSql("(N'0px 5px 6px rgba(215, 215, 215, 0.35)')");

                entity.Property(e => e.ContainerBoxSizing)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnName("CONTAINER_BOX_SIZING")
                    .HasDefaultValueSql("(N'border-box')");

                entity.Property(e => e.ContentBgColour)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("CONTENT_BG_COLOUR")
                    .HasDefaultValueSql("(N'#FFFFFF')");

                entity.Property(e => e.DarkFontColour)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("DARK_FONT_COLOUR")
                    .HasDefaultValueSql("(N'#555555')");

                entity.Property(e => e.Darken)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnName("DARKEN")
                    .HasDefaultValueSql("(N'brightness(90%)')");

                entity.Property(e => e.ErrorFontColour)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("ERROR_FONT_COLOUR")
                    .HasDefaultValueSql("(N'#FF0000')");

                entity.Property(e => e.FeatureFontColour)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("FEATURE_FONT_COLOUR")
                    .HasDefaultValueSql("(N'#555555')");

                entity.Property(e => e.FontSize1)
                    .IsRequired()
                    .HasMaxLength(5)
                    .HasColumnName("FONT_SIZE_1")
                    .HasDefaultValueSql("(N'40px')");

                entity.Property(e => e.FontSize2)
                    .IsRequired()
                    .HasMaxLength(5)
                    .HasColumnName("FONT_SIZE_2")
                    .HasDefaultValueSql("(N'36px')");

                entity.Property(e => e.FontSize3)
                    .IsRequired()
                    .HasMaxLength(5)
                    .HasColumnName("FONT_SIZE_3")
                    .HasDefaultValueSql("(N'30px')");

                entity.Property(e => e.FontSize4)
                    .IsRequired()
                    .HasMaxLength(5)
                    .HasColumnName("FONT_SIZE_4")
                    .HasDefaultValueSql("(N'24px')");

                entity.Property(e => e.FontSize5)
                    .IsRequired()
                    .HasMaxLength(5)
                    .HasColumnName("FONT_SIZE_5")
                    .HasDefaultValueSql("(N'20px')");

                entity.Property(e => e.FontSize6)
                    .IsRequired()
                    .HasMaxLength(5)
                    .HasColumnName("FONT_SIZE_6")
                    .HasDefaultValueSql("(N'16px')");

                entity.Property(e => e.FontSize7)
                    .IsRequired()
                    .HasMaxLength(5)
                    .HasColumnName("FONT_SIZE_7")
                    .HasDefaultValueSql("(N'14px')");

                entity.Property(e => e.FontSize8)
                    .IsRequired()
                    .HasMaxLength(5)
                    .HasColumnName("FONT_SIZE_8")
                    .HasDefaultValueSql("(N'12px')");

                entity.Property(e => e.FooterBgColour)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("FOOTER_BG_COLOUR")
                    .HasDefaultValueSql("(N'#F2F2F2')");

                entity.Property(e => e.HeaderBgColour)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("HEADER_BG_COLOUR")
                    .HasDefaultValueSql("(N'#FFFFFF')");

                entity.Property(e => e.HighlightColour)
                    .HasMaxLength(10)
                    .HasColumnName("HIGHLIGHT_COLOUR")
                    .HasDefaultValueSql("(N'#2196F3')");

                entity.Property(e => e.LabelFontColour)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("LABEL_FONT_COLOUR")
                    .HasDefaultValueSql("(N'#7F7F7F')");

                entity.Property(e => e.Light)
                    .IsRequired()
                    .HasMaxLength(5)
                    .HasColumnName("LIGHT")
                    .HasDefaultValueSql("(N'200')");

                entity.Property(e => e.LightFontColour)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("LIGHT_FONT_COLOUR")
                    .HasDefaultValueSql("(N'#F2F2F2')");

                entity.Property(e => e.Lighten)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnName("LIGHTEN")
                    .HasDefaultValueSql("(N'brightness(120%)')");

                entity.Property(e => e.MaxMobile)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("MAX_MOBILE")
                    .HasDefaultValueSql("(N'767px')");

                entity.Property(e => e.MaxTablet)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("MAX_TABLET")
                    .HasDefaultValueSql("(N'1030px')");

                entity.Property(e => e.MenuBgColour)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("MENU_BG_COLOUR")
                    .HasDefaultValueSql("(N'#FFFFFF')");

                entity.Property(e => e.MinTablet)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("MIN_TABLET")
                    .HasDefaultValueSql("(N'768px')");

                entity.Property(e => e.Normal)
                    .IsRequired()
                    .HasMaxLength(5)
                    .HasColumnName("NORMAL")
                    .HasDefaultValueSql("(N'400')");

                entity.Property(e => e.SpaceFont)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("SPACE_FONT")
                    .HasDefaultValueSql("(N'Archivo')");

                entity.Property(e => e.SpaceId).HasColumnName("SPACE_ID");

                entity.Property(e => e.SpaceLogo).HasColumnName("SPACE_LOGO");

                entity.Property(e => e.SpaceWallpaper).HasColumnName("SPACE_WALLPAPER");

                entity.Property(e => e.TextShadow)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("TEXT_SHADOW")
                    .HasDefaultValueSql("(N'2px 2px 8px #000000')");

                entity.Property(e => e.ThemeName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnName("THEME_NAME");

                entity.Property(e => e.TitleBgColour)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("TITLE_BG_COLOUR")
                    .HasDefaultValueSql("(N'#F2F2F2')");

                entity.HasOne(d => d.Space)
                    .WithMany(p => p.Themes)
                    .HasForeignKey(d => d.SpaceId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__THEMES__INTEGRATION_SPACES__SPACE_ID");
            });

            modelBuilder.Entity<ThemeVersion>(entity =>
            {
                entity.HasKey(e => new { e.VersionId, e.ThemeId });

                entity.ToTable("THEME_VERSIONS", "Portal");

                entity.Property(e => e.VersionId).HasColumnName("VERSION_ID");

                entity.Property(e => e.ThemeId).HasColumnName("THEME_ID");

                entity.Property(e => e.BodyBgColour)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("BODY_BG_COLOUR");

                entity.Property(e => e.Bold)
                    .IsRequired()
                    .HasMaxLength(5)
                    .HasColumnName("BOLD");

                entity.Property(e => e.BorderColour)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("BORDER_COLOUR");

                entity.Property(e => e.BorderRadius)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("BORDER_RADIUS");

                entity.Property(e => e.BorderStyle)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnName("BORDER_STYLE");

                entity.Property(e => e.BorderWidth)
                    .IsRequired()
                    .HasMaxLength(5)
                    .HasColumnName("BORDER_WIDTH");

                entity.Property(e => e.BoxShadow)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("BOX_SHADOW");

                entity.Property(e => e.BoxSizing)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnName("BOX_SIZING");

                entity.Property(e => e.ButtonsAndLinksColour)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("BUTTONS_AND_LINKS_COLOUR");

                entity.Property(e => e.ContainerBorderColour)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("CONTAINER_BORDER_COLOUR");

                entity.Property(e => e.ContainerBorderRadius)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("CONTAINER_BORDER_RADIUS");

                entity.Property(e => e.ContainerBorderStyle)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnName("CONTAINER_BORDER_STYLE");

                entity.Property(e => e.ContainerBorderWidth)
                    .IsRequired()
                    .HasMaxLength(5)
                    .HasColumnName("CONTAINER_BORDER_WIDTH");

                entity.Property(e => e.ContainerBoxShadow)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("CONTAINER_BOX_SHADOW");

                entity.Property(e => e.ContainerBoxSizing)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnName("CONTAINER_BOX_SIZING");

                entity.Property(e => e.ContentBgColour)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("CONTENT_BG_COLOUR");

                entity.Property(e => e.DarkFontColour)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("DARK_FONT_COLOUR");

                entity.Property(e => e.Darken)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnName("DARKEN");

                entity.Property(e => e.ErrorFontColour)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("ERROR_FONT_COLOUR");

                entity.Property(e => e.FeatureFontColour)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("FEATURE_FONT_COLOUR");

                entity.Property(e => e.FontSize1)
                    .IsRequired()
                    .HasMaxLength(5)
                    .HasColumnName("FONT_SIZE_1");

                entity.Property(e => e.FontSize2)
                    .IsRequired()
                    .HasMaxLength(5)
                    .HasColumnName("FONT_SIZE_2");

                entity.Property(e => e.FontSize3)
                    .IsRequired()
                    .HasMaxLength(5)
                    .HasColumnName("FONT_SIZE_3");

                entity.Property(e => e.FontSize4)
                    .IsRequired()
                    .HasMaxLength(5)
                    .HasColumnName("FONT_SIZE_4");

                entity.Property(e => e.FontSize5)
                    .IsRequired()
                    .HasMaxLength(5)
                    .HasColumnName("FONT_SIZE_5");

                entity.Property(e => e.FontSize6)
                    .IsRequired()
                    .HasMaxLength(5)
                    .HasColumnName("FONT_SIZE_6");

                entity.Property(e => e.FontSize7)
                    .IsRequired()
                    .HasMaxLength(5)
                    .HasColumnName("FONT_SIZE_7");

                entity.Property(e => e.FontSize8)
                    .IsRequired()
                    .HasMaxLength(5)
                    .HasColumnName("FONT_SIZE_8");

                entity.Property(e => e.FooterBgColour)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("FOOTER_BG_COLOUR");

                entity.Property(e => e.HeaderBgColour)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("HEADER_BG_COLOUR");

                entity.Property(e => e.HighlightColour)
                    .HasMaxLength(10)
                    .HasColumnName("HIGHLIGHT_COLOUR");

                entity.Property(e => e.LabelFontColour)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("LABEL_FONT_COLOUR");

                entity.Property(e => e.Light)
                    .IsRequired()
                    .HasMaxLength(5)
                    .HasColumnName("LIGHT");

                entity.Property(e => e.LightFontColour)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("LIGHT_FONT_COLOUR");

                entity.Property(e => e.Lighten)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnName("LIGHTEN");

                entity.Property(e => e.MaxMobile)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("MAX_MOBILE");

                entity.Property(e => e.MaxTablet)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("MAX_TABLET");

                entity.Property(e => e.MenuBgColour)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("MENU_BG_COLOUR");

                entity.Property(e => e.MinTablet)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("MIN_TABLET");

                entity.Property(e => e.Normal)
                    .IsRequired()
                    .HasMaxLength(5)
                    .HasColumnName("NORMAL");

                entity.Property(e => e.SpaceFont)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("SPACE_FONT");

                entity.Property(e => e.SpaceId).HasColumnName("SPACE_ID");

                entity.Property(e => e.SpaceLogo).HasColumnName("SPACE_LOGO");

                entity.Property(e => e.SpaceWallpaper).HasColumnName("SPACE_WALLPAPER");

                entity.Property(e => e.TextShadow)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("TEXT_SHADOW");

                entity.Property(e => e.TitleBgColour)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("TITLE_BG_COLOUR");

                entity.HasOne(d => d.Space)
                    .WithMany(p => p.ThemeVersions)
                    .HasForeignKey(d => d.SpaceId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__THEME_VERSIONS__INTEGRATION_SPACES__SPACE_ID");
            });

            modelBuilder.Entity<TimePeriod>(entity =>
            {
                entity.HasKey(e => e.TimId);

                entity.ToTable("TIME_PERIODS");

                entity.Property(e => e.TimId).HasColumnName("TIM_ID");

                entity.Property(e => e.DateFrom)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_FROM");

                entity.Property(e => e.DateTo)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_TO");

                entity.Property(e => e.IsPublic).HasColumnName("IS_PUBLIC");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UsrId).HasColumnName("USR_ID");
            });

            modelBuilder.Entity<TimeUnit>(entity =>
            {
                entity.ToTable("TIME_UNITS");

                entity.Property(e => e.TimeUnitId)
                    .ValueGeneratedNever()
                    .HasColumnName("TIME_UNIT_ID");

                entity.Property(e => e.SystemName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("SYSTEM_NAME")
                    .UseCollation("Latin1_General_CI_AS");
            });

            modelBuilder.Entity<TimeUnitsRecord>(entity =>
            {
                entity.HasKey(e => e.TurId);

                entity.ToTable("TIME_UNITS_RECORD");

                entity.HasIndex(e => e.UsId, "IX_TIME_UNITS_RECORD_US_ID");

                entity.HasIndex(e => e.OpqdId, "IX_TimeUnitsRecord_QuoteItemId");

                entity.HasIndex(e => e.ShortCode, "IX__TIME_UNITS_RECORD__SHORT_CODE");

                entity.Property(e => e.TurId)
                    .ValueGeneratedNever()
                    .HasColumnName("TUR_ID");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcaId).HasColumnName("ACA_ID");

                entity.Property(e => e.AccaId).HasColumnName("ACCA_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DateRecorded)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_RECORDED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Description)
                    .HasMaxLength(4000)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.OpId).HasColumnName("OP_ID");

                entity.Property(e => e.OpaId).HasColumnName("OPA_ID");

                entity.Property(e => e.OpqdId).HasColumnName("OPQD_ID");

                entity.Property(e => e.Owner).HasColumnName("OWNER");

                entity.Property(e => e.PjId).HasColumnName("PJ_ID");

                entity.Property(e => e.PjaId).HasColumnName("PJA_ID");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", true);

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'TUR-')");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TimeUnitValue).HasColumnName("TIME_UNIT_VALUE");

                entity.Property(e => e.TurDeleted)
                    .HasColumnName("TUR_DELETED")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.HasOne(d => d.Ac)
                    .WithMany(p => p.TimeUnitsRecords)
                    .HasForeignKey(d => d.AcId)
                    .HasConstraintName("FK_TIME_UNITS_RECORD_AC_ID");

                entity.HasOne(d => d.Aca)
                    .WithMany(p => p.TimeUnitsRecordAcas)
                    .HasForeignKey(d => d.AcaId)
                    .HasConstraintName("FK_TIME_UNITS_RECORD_ACA_ID");

                entity.HasOne(d => d.Acca)
                    .WithMany(p => p.TimeUnitsRecordAccas)
                    .HasForeignKey(d => d.AccaId)
                    .HasConstraintName("FK_TIME_UNITS_RECORD_ACCA_ID");

                entity.HasOne(d => d.Op)
                    .WithMany(p => p.TimeUnitsRecords)
                    .HasForeignKey(d => d.OpId)
                    .HasConstraintName("FK_TIME_UNITS_RECORD_OP_ID");

                entity.HasOne(d => d.Opa)
                    .WithMany(p => p.TimeUnitsRecordOpas)
                    .HasForeignKey(d => d.OpaId)
                    .HasConstraintName("FK_TIME_UNITS_RECORD_OPA_ID");

                entity.HasOne(d => d.Opqd)
                    .WithMany(p => p.TimeUnitsRecords)
                    .HasForeignKey(d => d.OpqdId)
                    .HasConstraintName("FK_TIME_UNITS_RECORD_OPQD_ID");

                entity.HasOne(d => d.Pj)
                    .WithMany(p => p.TimeUnitsRecords)
                    .HasForeignKey(d => d.PjId)
                    .HasConstraintName("FK_TIME_UNITS_RECORD_PJ_ID");

                entity.HasOne(d => d.Pja)
                    .WithMany(p => p.TimeUnitsRecordPjas)
                    .HasForeignKey(d => d.PjaId)
                    .HasConstraintName("FK_TIME_UNITS_RECORD_PJA_ID");

                entity.HasOne(d => d.Us)
                    .WithMany(p => p.TimeUnitsRecords)
                    .HasForeignKey(d => d.UsId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TIME_UNITS_RECORD_US_ID");
            });

            modelBuilder.Entity<Touchpoint>(entity =>
            {
                entity.HasKey(e => e.TpId);

                entity.ToTable("TOUCHPOINT");

                entity.HasIndex(e => e.Created, "IX_TOUCHPOINT_CREATED");

                entity.HasIndex(e => e.ExternalId, "IX_TOUCHPOINT_EXTERNAL_ID");

                entity.HasIndex(e => e.RootTp, "IX_TOUCHPOINT_ROOT_TP");

                entity.HasIndex(e => e.SessionId, "IX_TOUCHPOINT_SESSION_ID");

                entity.Property(e => e.TpId).HasColumnName("TP_ID");

                entity.Property(e => e.Action)
                    .HasMaxLength(255)
                    .HasColumnName("ACTION");

                entity.Property(e => e.Address1)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS1");

                entity.Property(e => e.Address2)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS2");

                entity.Property(e => e.Address3)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS3");

                entity.Property(e => e.CompanyFounded)
                    .HasMaxLength(255)
                    .HasColumnName("COMPANY_FOUNDED");

                entity.Property(e => e.CompanyIndustrySic)
                    .HasMaxLength(255)
                    .HasColumnName("COMPANY_INDUSTRY_SIC");

                entity.Property(e => e.CompanyName)
                    .HasMaxLength(255)
                    .HasColumnName("COMPANY_NAME");

                entity.Property(e => e.CompanyNoEmployees)
                    .HasMaxLength(255)
                    .HasColumnName("COMPANY_NO_EMPLOYEES");

                entity.Property(e => e.CompanyReg)
                    .HasMaxLength(255)
                    .HasColumnName("COMPANY_REG");

                entity.Property(e => e.CompanyTurnover)
                    .HasMaxLength(255)
                    .HasColumnName("COMPANY_TURNOVER");

                entity.Property(e => e.ContactEmail)
                    .HasMaxLength(255)
                    .HasColumnName("CONTACT_EMAIL");

                entity.Property(e => e.ContactJobtitle)
                    .HasMaxLength(255)
                    .HasColumnName("CONTACT_JOBTITLE");

                entity.Property(e => e.ContactName)
                    .HasMaxLength(255)
                    .HasColumnName("CONTACT_NAME");

                entity.Property(e => e.Country)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.County)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTY");

                entity.Property(e => e.Created)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(100)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Description)
                    .HasMaxLength(1000)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.Domain)
                    .HasMaxLength(255)
                    .HasColumnName("DOMAIN");

                entity.Property(e => e.DurationSeconds).HasColumnName("DURATION_SECONDS");

                entity.Property(e => e.ExternalId)
                    .HasMaxLength(255)
                    .HasColumnName("EXTERNAL_ID");

                entity.Property(e => e.GeoLat).HasColumnName("GEO_LAT");

                entity.Property(e => e.GeoLong).HasColumnName("GEO_LONG");

                entity.Property(e => e.HasChildren).HasColumnName("HAS_CHILDREN");

                entity.Property(e => e.ImageUrl)
                    .HasMaxLength(255)
                    .HasColumnName("IMAGE_URL");

                entity.Property(e => e.Industry)
                    .HasMaxLength(255)
                    .HasColumnName("INDUSTRY");

                entity.Property(e => e.ItemUrl)
                    .HasMaxLength(255)
                    .HasColumnName("ITEM_URL");

                entity.Property(e => e.Keywords)
                    .HasMaxLength(255)
                    .HasColumnName("KEYWORDS");

                entity.Property(e => e.McaId).HasColumnName("MCA_ID");

                entity.Property(e => e.McsrId).HasColumnName("MCSR_ID");

                entity.Property(e => e.Phone1)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE1");

                entity.Property(e => e.Phone2)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE2");

                entity.Property(e => e.Phone3)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE3");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(255)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.PrivateId)
                    .HasMaxLength(50)
                    .HasColumnName("PRIVATE_ID");

                entity.Property(e => e.ProfileId)
                    .HasMaxLength(50)
                    .HasColumnName("PROFILE_ID");

                entity.Property(e => e.ProfileUrl)
                    .HasMaxLength(255)
                    .HasColumnName("PROFILE_URL");

                entity.Property(e => e.RootTp).HasColumnName("ROOT_TP");

                entity.Property(e => e.Score).HasColumnName("SCORE");

                entity.Property(e => e.ScoreThis)
                    .IsRequired()
                    .HasColumnName("SCORE_THIS")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SessionId).HasColumnName("SESSION_ID");

                entity.Property(e => e.SessionScore).HasColumnName("SESSION_SCORE");

                entity.Property(e => e.SocId).HasColumnName("SOC_ID");

                entity.Property(e => e.SocialMsgId)
                    .HasMaxLength(50)
                    .HasColumnName("SOCIAL_MSG_ID");

                entity.Property(e => e.Source)
                    .HasMaxLength(255)
                    .HasColumnName("SOURCE");

                entity.Property(e => e.StgId).HasColumnName("STG_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Town)
                    .HasMaxLength(255)
                    .HasColumnName("TOWN");

                entity.Property(e => e.TpDeleted).HasColumnName("TP_DELETED");

                entity.Property(e => e.TpGeneric1)
                    .HasMaxLength(255)
                    .HasColumnName("TP_GENERIC1");

                entity.Property(e => e.TpGeneric10)
                    .HasMaxLength(255)
                    .HasColumnName("TP_GENERIC10");

                entity.Property(e => e.TpGeneric2)
                    .HasMaxLength(255)
                    .HasColumnName("TP_GENERIC2");

                entity.Property(e => e.TpGeneric3)
                    .HasMaxLength(255)
                    .HasColumnName("TP_GENERIC3");

                entity.Property(e => e.TpGeneric4)
                    .HasMaxLength(255)
                    .HasColumnName("TP_GENERIC4");

                entity.Property(e => e.TpGeneric5)
                    .HasMaxLength(255)
                    .HasColumnName("TP_GENERIC5");

                entity.Property(e => e.TpGeneric6)
                    .HasMaxLength(255)
                    .HasColumnName("TP_GENERIC6");

                entity.Property(e => e.TpGeneric7)
                    .HasMaxLength(255)
                    .HasColumnName("TP_GENERIC7");

                entity.Property(e => e.TpGeneric8)
                    .HasMaxLength(255)
                    .HasColumnName("TP_GENERIC8");

                entity.Property(e => e.TpGeneric9)
                    .HasMaxLength(255)
                    .HasColumnName("TP_GENERIC9");

                entity.Property(e => e.TpUd1)
                    .HasMaxLength(255)
                    .HasColumnName("TP_UD1");

                entity.Property(e => e.TpUd10)
                    .HasMaxLength(255)
                    .HasColumnName("TP_UD10");

                entity.Property(e => e.TpUd10Bit)
                    .HasColumnName("TP_UD10_BIT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TpUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_UD10_DATE");

                entity.Property(e => e.TpUd10Id).HasColumnName("TP_UD10_ID");

                entity.Property(e => e.TpUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("TP_UD10_NUMERIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TpUd1Bit)
                    .HasColumnName("TP_UD1_BIT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TpUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_UD1_DATE");

                entity.Property(e => e.TpUd1Id).HasColumnName("TP_UD1_ID");

                entity.Property(e => e.TpUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("TP_UD1_NUMERIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TpUd2)
                    .HasMaxLength(255)
                    .HasColumnName("TP_UD2");

                entity.Property(e => e.TpUd2Bit)
                    .HasColumnName("TP_UD2_BIT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TpUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_UD2_DATE");

                entity.Property(e => e.TpUd2Id).HasColumnName("TP_UD2_ID");

                entity.Property(e => e.TpUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("TP_UD2_NUMERIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TpUd3)
                    .HasMaxLength(255)
                    .HasColumnName("TP_UD3");

                entity.Property(e => e.TpUd3Bit)
                    .HasColumnName("TP_UD3_BIT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TpUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_UD3_DATE");

                entity.Property(e => e.TpUd3Id).HasColumnName("TP_UD3_ID");

                entity.Property(e => e.TpUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("TP_UD3_NUMERIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TpUd4)
                    .HasMaxLength(255)
                    .HasColumnName("TP_UD4");

                entity.Property(e => e.TpUd4Bit)
                    .HasColumnName("TP_UD4_BIT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TpUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_UD4_DATE");

                entity.Property(e => e.TpUd4Id).HasColumnName("TP_UD4_ID");

                entity.Property(e => e.TpUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("TP_UD4_NUMERIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TpUd5)
                    .HasMaxLength(255)
                    .HasColumnName("TP_UD5");

                entity.Property(e => e.TpUd5Bit)
                    .HasColumnName("TP_UD5_BIT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TpUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_UD5_DATE");

                entity.Property(e => e.TpUd5Id).HasColumnName("TP_UD5_ID");

                entity.Property(e => e.TpUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("TP_UD5_NUMERIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TpUd6)
                    .HasMaxLength(255)
                    .HasColumnName("TP_UD6");

                entity.Property(e => e.TpUd6Bit)
                    .HasColumnName("TP_UD6_BIT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TpUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_UD6_DATE");

                entity.Property(e => e.TpUd6Id).HasColumnName("TP_UD6_ID");

                entity.Property(e => e.TpUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("TP_UD6_NUMERIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TpUd7)
                    .HasMaxLength(255)
                    .HasColumnName("TP_UD7");

                entity.Property(e => e.TpUd7Bit)
                    .HasColumnName("TP_UD7_BIT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TpUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_UD7_DATE");

                entity.Property(e => e.TpUd7Id).HasColumnName("TP_UD7_ID");

                entity.Property(e => e.TpUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("TP_UD7_NUMERIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TpUd8)
                    .HasMaxLength(255)
                    .HasColumnName("TP_UD8");

                entity.Property(e => e.TpUd8Bit)
                    .HasColumnName("TP_UD8_BIT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TpUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_UD8_DATE");

                entity.Property(e => e.TpUd8Id).HasColumnName("TP_UD8_ID");

                entity.Property(e => e.TpUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("TP_UD8_NUMERIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TpUd9)
                    .HasMaxLength(255)
                    .HasColumnName("TP_UD9");

                entity.Property(e => e.TpUd9Bit)
                    .HasColumnName("TP_UD9_BIT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TpUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_UD9_DATE");

                entity.Property(e => e.TpUd9Id).HasColumnName("TP_UD9_ID");

                entity.Property(e => e.TpUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("TP_UD9_NUMERIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TpcId).HasColumnName("TPC_ID");

                entity.Property(e => e.TrackingId).HasColumnName("TRACKING_ID");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.Website)
                    .HasMaxLength(255)
                    .HasColumnName("WEBSITE");

                entity.HasOne(d => d.Mca)
                    .WithMany(p => p.Touchpoints)
                    .HasForeignKey(d => d.McaId)
                    .HasConstraintName("FK_TOUCHPOINT_MARKETING_CAMPAIGN");

                entity.HasOne(d => d.Mcsr)
                    .WithMany(p => p.Touchpoints)
                    .HasForeignKey(d => d.McsrId)
                    .HasConstraintName("FK_TOUCHPOINT_MARKETING_CAMPAIGN_STAGE_RUN");

                entity.HasOne(d => d.Stg)
                    .WithMany(p => p.Touchpoints)
                    .HasForeignKey(d => d.StgId)
                    .HasConstraintName("FK_TOUCHPOINT_MARKETING_CAMPAIGN_STAGE");

                entity.HasOne(d => d.Tpc)
                    .WithMany(p => p.Touchpoints)
                    .HasForeignKey(d => d.TpcId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TOUCHPOINT_TOUCHPOINT_CONFIGURATIONS");
            });

            modelBuilder.Entity<TouchpointCategory>(entity =>
            {
                entity.HasKey(e => e.TptId)
                    .HasName("PK_TOUCHPOINT_CATEGORIES_1");

                entity.ToTable("TOUCHPOINT_CATEGORIES");

                entity.Property(e => e.TptId).HasColumnName("TPT_ID");

                entity.Property(e => e.CategoryColour)
                    .HasMaxLength(7)
                    .HasColumnName("CATEGORY_COLOUR");

                entity.Property(e => e.CategoryName)
                    .HasMaxLength(50)
                    .HasColumnName("CATEGORY_NAME");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<TouchpointConfiguration>(entity =>
            {
                entity.HasKey(e => e.TpcId)
                    .HasName("PK_TOUCHPOINT_INTEGRATIONS");

                entity.ToTable("TOUCHPOINT_CONFIGURATIONS");

                entity.Property(e => e.TpcId).HasColumnName("TPC_ID");

                entity.Property(e => e.AccountKeyGv)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_KEY_GV");

                entity.Property(e => e.CheckAccount)
                    .IsRequired()
                    .HasColumnName("CHECK_ACCOUNT")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CheckContact)
                    .IsRequired()
                    .HasColumnName("CHECK_CONTACT")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CheckLead)
                    .IsRequired()
                    .HasColumnName("CHECK_LEAD")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.ContactKeyGv)
                    .HasMaxLength(255)
                    .HasColumnName("CONTACT_KEY_GV");

                entity.Property(e => e.CreateOption).HasColumnName("CREATE_OPTION");

                entity.Property(e => e.Created)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(100)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.DegradeRate).HasColumnName("DEGRADE_RATE");

                entity.Property(e => e.DegradeScore).HasColumnName("DEGRADE_SCORE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(100)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.DropOffRate).HasColumnName("DROP_OFF_RATE");

                entity.Property(e => e.Icon)
                    .HasMaxLength(255)
                    .HasColumnName("ICON");

                entity.Property(e => e.InitialScore).HasColumnName("INITIAL_SCORE");

                entity.Property(e => e.IntegrationName)
                    .HasMaxLength(255)
                    .HasColumnName("INTEGRATION_NAME");

                entity.Property(e => e.Interval)
                    .HasColumnName("INTERVAL")
                    .HasDefaultValueSql("((10))");

                entity.Property(e => e.IsActive).HasColumnName("IS_ACTIVE");

                entity.Property(e => e.LastImported)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_IMPORTED");

                entity.Property(e => e.LastTouchpointDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_TOUCHPOINT_DATE");

                entity.Property(e => e.Lastrun)
                    .HasColumnType("datetime")
                    .HasColumnName("LASTRUN")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.LcId).HasColumnName("LC_ID");

                entity.Property(e => e.LeadKeyGv)
                    .HasMaxLength(255)
                    .HasColumnName("LEAD_KEY_GV");

                entity.Property(e => e.Rank).HasColumnName("RANK");

                entity.Property(e => e.TpcDeleted).HasColumnName("TPC_DELETED");

                entity.Property(e => e.TpcName)
                    .HasMaxLength(255)
                    .HasColumnName("TPC_NAME");

                entity.Property(e => e.TpiId).HasColumnName("TPI_ID");

                entity.Property(e => e.TptId).HasColumnName("TPT_ID");

                entity.Property(e => e.Updated)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(100)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UseAllSocial).HasColumnName("USE_ALL_SOCIAL");
            });

            modelBuilder.Entity<TouchpointConfigurationsDatum>(entity =>
            {
                entity.HasKey(e => e.TpdId)
                    .HasName("PK_TOUCHPOINT_INTEGRATIONS_DATA");

                entity.ToTable("TOUCHPOINT_CONFIGURATIONS_DATA");

                entity.Property(e => e.TpdId).HasColumnName("TPD_ID");

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .HasColumnName("NAME");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.Value1)
                    .HasMaxLength(255)
                    .HasColumnName("VALUE1");

                entity.Property(e => e.Value2)
                    .HasMaxLength(255)
                    .HasColumnName("VALUE2");

                entity.Property(e => e.Value3)
                    .HasMaxLength(255)
                    .HasColumnName("VALUE3");

                entity.HasOne(d => d.Us)
                    .WithMany(p => p.TouchpointConfigurationsData)
                    .HasForeignKey(d => d.UsId)
                    .HasConstraintName("FK_TOUCHPOINT_CONFIGURATIONS_DATA_USERS");
            });

            modelBuilder.Entity<TouchpointCredential>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TOUCHPOINT_CREDENTIALS");

                entity.Property(e => e.ClientId).HasColumnName("CLIENT_ID");

                entity.Property(e => e.ClientSecret).HasColumnName("CLIENT_SECRET");

                entity.Property(e => e.TpiId).HasColumnName("TPI_ID");
            });

            modelBuilder.Entity<TouchpointFilter>(entity =>
            {
                entity.HasKey(e => e.TpfId);

                entity.ToTable("TOUCHPOINT_FILTERS");

                entity.Property(e => e.TpfId).HasColumnName("TPF_ID");

                entity.Property(e => e.Data1)
                    .HasMaxLength(500)
                    .HasColumnName("DATA_1");

                entity.Property(e => e.FilterName)
                    .HasMaxLength(100)
                    .HasColumnName("FILTER_NAME");

                entity.Property(e => e.FilterValue)
                    .HasMaxLength(500)
                    .HasColumnName("FILTER_VALUE");

                entity.Property(e => e.IsAction).HasColumnName("IS_ACTION");

                entity.Property(e => e.TpcId).HasColumnName("TPC_ID");

                entity.HasOne(d => d.Tpc)
                    .WithMany(p => p.TouchpointFilters)
                    .HasForeignKey(d => d.TpcId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TOUCHPOINT_FILTERS_TOUCHPOINT_CONFIGURATIONS");
            });

            modelBuilder.Entity<TouchpointHistory>(entity =>
            {
                entity.HasKey(e => e.HisId);

                entity.ToTable("TOUCHPOINT_HISTORY");

                entity.HasIndex(e => e.CsId, "IX__TOUCHPOINT_HISTORY__CS_ID__INCLS");

                entity.HasIndex(e => e.ObjId, "IX__TOUCHPOINT_HISTORY__OBJ_ID__INCLS");

                entity.HasIndex(e => e.Ref, "IX__TOUCHPOINT_HISTORY__REF_ID__INCLS");

                entity.Property(e => e.HisId).HasColumnName("HIS_ID");

                entity.Property(e => e.CsId).HasColumnName("CS_ID");

                entity.Property(e => e.LastTp)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_TP");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.Ref).HasColumnName("REF");

                entity.Property(e => e.Score).HasColumnName("SCORE");

                entity.Property(e => e.ScoreDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SCORE_DATE")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<TouchpointLink>(entity =>
            {
                entity.HasKey(e => e.TplId);

                entity.ToTable("TOUCHPOINT_LINKS");

                entity.Property(e => e.TplId).HasColumnName("TPL_ID");

                entity.Property(e => e.Created)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CsId).HasColumnName("CS_ID");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.ObjType)
                    .HasMaxLength(50)
                    .HasColumnName("OBJ_TYPE");

                entity.Property(e => e.TpId).HasColumnName("TP_ID");

                entity.Property(e => e.TpcId).HasColumnName("TPC_ID");

                entity.HasOne(d => d.Tp)
                    .WithMany(p => p.TouchpointLinks)
                    .HasForeignKey(d => d.TpId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TOUCHPOINT_LINKS_TOUCHPOINT");

                entity.HasOne(d => d.Tpc)
                    .WithMany(p => p.TouchpointLinks)
                    .HasForeignKey(d => d.TpcId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TOUCHPOINT_LINKS_TOUCHPOINT_CONFIGURATIONS");
            });

            modelBuilder.Entity<TouchpointScore>(entity =>
            {
                entity.HasKey(e => e.TpscId);

                entity.ToTable("TOUCHPOINT_SCORES");

                entity.HasIndex(e => e.ObjId, "IX__TOUCHPOINT_SCORES__OBJ_ID");

                entity.Property(e => e.TpscId).HasColumnName("TPSC_ID");

                entity.Property(e => e.CsId).HasColumnName("CS_ID");

                entity.Property(e => e.HighestScore).HasColumnName("HIGHEST_SCORE");

                entity.Property(e => e.LastTp)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_TP");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.Score).HasColumnName("SCORE");
            });

            modelBuilder.Entity<TouchpointSocialAuth>(entity =>
            {
                entity.HasKey(e => new { e.SocId, e.TpcId })
                    .HasName("PK_TOUCHPOINT_SOCIAL_AUTH_1");

                entity.ToTable("TOUCHPOINT_SOCIAL_AUTH");

                entity.Property(e => e.SocId).HasColumnName("SOC_ID");

                entity.Property(e => e.TpcId).HasColumnName("TPC_ID");
            });

            modelBuilder.Entity<TouchpointTest>(entity =>
            {
                entity.HasKey(e => e.TptId);

                entity.ToTable("TOUCHPOINT_TESTS");

                entity.Property(e => e.TptId).HasColumnName("TPT_ID");

                entity.Property(e => e.Action)
                    .HasMaxLength(255)
                    .HasColumnName("ACTION");

                entity.Property(e => e.Address1)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS1");

                entity.Property(e => e.Address2)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS2");

                entity.Property(e => e.Address3)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS3");

                entity.Property(e => e.BatchId).HasColumnName("BATCH_ID");

                entity.Property(e => e.CompanyFounded)
                    .HasMaxLength(255)
                    .HasColumnName("COMPANY_FOUNDED");

                entity.Property(e => e.CompanyIndustrySic)
                    .HasMaxLength(255)
                    .HasColumnName("COMPANY_INDUSTRY_SIC");

                entity.Property(e => e.CompanyName)
                    .HasMaxLength(255)
                    .HasColumnName("COMPANY_NAME");

                entity.Property(e => e.CompanyNoEmployees)
                    .HasMaxLength(255)
                    .HasColumnName("COMPANY_NO_EMPLOYEES");

                entity.Property(e => e.CompanyReg)
                    .HasMaxLength(255)
                    .HasColumnName("COMPANY_REG");

                entity.Property(e => e.CompanyTurnover)
                    .HasMaxLength(255)
                    .HasColumnName("COMPANY_TURNOVER");

                entity.Property(e => e.ContactEmail1)
                    .HasMaxLength(255)
                    .HasColumnName("CONTACT_EMAIL1");

                entity.Property(e => e.ContactEmail2)
                    .HasMaxLength(255)
                    .HasColumnName("CONTACT_EMAIL2");

                entity.Property(e => e.ContactEmail3)
                    .HasMaxLength(255)
                    .HasColumnName("CONTACT_EMAIL3");

                entity.Property(e => e.ContactJobtitle)
                    .HasMaxLength(255)
                    .HasColumnName("CONTACT_JOBTITLE");

                entity.Property(e => e.ContactName)
                    .HasMaxLength(255)
                    .HasColumnName("CONTACT_NAME");

                entity.Property(e => e.Country)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.County)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTY");

                entity.Property(e => e.Created)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Description)
                    .HasMaxLength(255)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.Details)
                    .HasMaxLength(255)
                    .HasColumnName("DETAILS");

                entity.Property(e => e.Domain)
                    .HasMaxLength(255)
                    .HasColumnName("DOMAIN");

                entity.Property(e => e.DurationSeconds).HasColumnName("DURATION_SECONDS");

                entity.Property(e => e.ImageUrl)
                    .HasMaxLength(255)
                    .HasColumnName("IMAGE_URL");

                entity.Property(e => e.Industry)
                    .HasMaxLength(255)
                    .HasColumnName("INDUSTRY");

                entity.Property(e => e.ItemUrl)
                    .HasMaxLength(255)
                    .HasColumnName("ITEM_URL");

                entity.Property(e => e.Keywords)
                    .HasMaxLength(255)
                    .HasColumnName("KEYWORDS");

                entity.Property(e => e.Phone1)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE1");

                entity.Property(e => e.Phone2)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE2");

                entity.Property(e => e.Phone3)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE3");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(255)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.PrivateId)
                    .HasMaxLength(50)
                    .HasColumnName("PRIVATE_ID");

                entity.Property(e => e.Processed)
                    .HasColumnType("datetime")
                    .HasColumnName("PROCESSED");

                entity.Property(e => e.ProfileId)
                    .HasMaxLength(50)
                    .HasColumnName("PROFILE_ID");

                entity.Property(e => e.ProfileUrl)
                    .HasMaxLength(255)
                    .HasColumnName("PROFILE_URL");

                entity.Property(e => e.SocId).HasColumnName("SOC_ID");

                entity.Property(e => e.Source)
                    .HasMaxLength(255)
                    .HasColumnName("SOURCE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Town)
                    .HasMaxLength(255)
                    .HasColumnName("TOWN");

                entity.Property(e => e.TpGeneric1)
                    .HasMaxLength(255)
                    .HasColumnName("TP_GENERIC1");

                entity.Property(e => e.TpGeneric10)
                    .HasMaxLength(255)
                    .HasColumnName("TP_GENERIC10");

                entity.Property(e => e.TpGeneric2)
                    .HasMaxLength(255)
                    .HasColumnName("TP_GENERIC2");

                entity.Property(e => e.TpGeneric3)
                    .HasMaxLength(255)
                    .HasColumnName("TP_GENERIC3");

                entity.Property(e => e.TpGeneric4)
                    .HasMaxLength(255)
                    .HasColumnName("TP_GENERIC4");

                entity.Property(e => e.TpGeneric5)
                    .HasMaxLength(255)
                    .HasColumnName("TP_GENERIC5");

                entity.Property(e => e.TpGeneric6)
                    .HasMaxLength(255)
                    .HasColumnName("TP_GENERIC6");

                entity.Property(e => e.TpGeneric7)
                    .HasMaxLength(255)
                    .HasColumnName("TP_GENERIC7");

                entity.Property(e => e.TpGeneric8)
                    .HasMaxLength(255)
                    .HasColumnName("TP_GENERIC8");

                entity.Property(e => e.TpGeneric9)
                    .HasMaxLength(255)
                    .HasColumnName("TP_GENERIC9");

                entity.Property(e => e.TpUd1)
                    .HasMaxLength(255)
                    .HasColumnName("TP_UD1");

                entity.Property(e => e.TpUd10)
                    .HasMaxLength(255)
                    .HasColumnName("TP_UD10");

                entity.Property(e => e.TpUd10Bit).HasColumnName("TP_UD10_BIT");

                entity.Property(e => e.TpUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_UD10_DATE");

                entity.Property(e => e.TpUd10Id).HasColumnName("TP_UD10_ID");

                entity.Property(e => e.TpUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("TP_UD10_NUMERIC");

                entity.Property(e => e.TpUd1Bit).HasColumnName("TP_UD1_BIT");

                entity.Property(e => e.TpUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_UD1_DATE");

                entity.Property(e => e.TpUd1Id).HasColumnName("TP_UD1_ID");

                entity.Property(e => e.TpUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("TP_UD1_NUMERIC");

                entity.Property(e => e.TpUd2)
                    .HasMaxLength(255)
                    .HasColumnName("TP_UD2");

                entity.Property(e => e.TpUd2Bit).HasColumnName("TP_UD2_BIT");

                entity.Property(e => e.TpUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_UD2_DATE");

                entity.Property(e => e.TpUd2Id).HasColumnName("TP_UD2_ID");

                entity.Property(e => e.TpUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("TP_UD2_NUMERIC");

                entity.Property(e => e.TpUd3)
                    .HasMaxLength(255)
                    .HasColumnName("TP_UD3");

                entity.Property(e => e.TpUd3Bit).HasColumnName("TP_UD3_BIT");

                entity.Property(e => e.TpUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_UD3_DATE");

                entity.Property(e => e.TpUd3Id).HasColumnName("TP_UD3_ID");

                entity.Property(e => e.TpUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("TP_UD3_NUMERIC");

                entity.Property(e => e.TpUd4)
                    .HasMaxLength(255)
                    .HasColumnName("TP_UD4");

                entity.Property(e => e.TpUd4Bit).HasColumnName("TP_UD4_BIT");

                entity.Property(e => e.TpUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_UD4_DATE");

                entity.Property(e => e.TpUd4Id).HasColumnName("TP_UD4_ID");

                entity.Property(e => e.TpUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("TP_UD4_NUMERIC");

                entity.Property(e => e.TpUd5)
                    .HasMaxLength(255)
                    .HasColumnName("TP_UD5");

                entity.Property(e => e.TpUd5Bit).HasColumnName("TP_UD5_BIT");

                entity.Property(e => e.TpUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_UD5_DATE");

                entity.Property(e => e.TpUd5Id).HasColumnName("TP_UD5_ID");

                entity.Property(e => e.TpUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("TP_UD5_NUMERIC");

                entity.Property(e => e.TpUd6)
                    .HasMaxLength(255)
                    .HasColumnName("TP_UD6");

                entity.Property(e => e.TpUd6Bit).HasColumnName("TP_UD6_BIT");

                entity.Property(e => e.TpUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_UD6_DATE");

                entity.Property(e => e.TpUd6Id).HasColumnName("TP_UD6_ID");

                entity.Property(e => e.TpUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("TP_UD6_NUMERIC");

                entity.Property(e => e.TpUd7)
                    .HasMaxLength(255)
                    .HasColumnName("TP_UD7");

                entity.Property(e => e.TpUd7Bit).HasColumnName("TP_UD7_BIT");

                entity.Property(e => e.TpUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_UD7_DATE");

                entity.Property(e => e.TpUd7Id).HasColumnName("TP_UD7_ID");

                entity.Property(e => e.TpUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("TP_UD7_NUMERIC");

                entity.Property(e => e.TpUd8)
                    .HasMaxLength(255)
                    .HasColumnName("TP_UD8");

                entity.Property(e => e.TpUd8Bit).HasColumnName("TP_UD8_BIT");

                entity.Property(e => e.TpUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_UD8_DATE");

                entity.Property(e => e.TpUd8Id).HasColumnName("TP_UD8_ID");

                entity.Property(e => e.TpUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("TP_UD8_NUMERIC");

                entity.Property(e => e.TpUd9)
                    .HasMaxLength(255)
                    .HasColumnName("TP_UD9");

                entity.Property(e => e.TpUd9Bit).HasColumnName("TP_UD9_BIT");

                entity.Property(e => e.TpUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_UD9_DATE");

                entity.Property(e => e.TpUd9Id).HasColumnName("TP_UD9_ID");

                entity.Property(e => e.TpUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("TP_UD9_NUMERIC");

                entity.Property(e => e.TpiId).HasColumnName("TPI_ID");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.Website)
                    .HasMaxLength(255)
                    .HasColumnName("WEBSITE");
            });

            modelBuilder.Entity<Tp>(entity =>
            {
                entity.HasKey(e => e.TpsId);

                entity.ToTable("TPS");

                entity.HasIndex(e => e.Number, "IX_TPS_NUMBER")
                    .IsUnique()
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.TrimNumber, "IX_TPS__TRIM_NUMBER")
                    .HasFillFactor((byte)80);

                entity.Property(e => e.TpsId).HasColumnName("TPS_ID");

                entity.Property(e => e.Number)
                    .HasMaxLength(30)
                    .HasColumnName("NUMBER");

                entity.Property(e => e.TrimNumber)
                    .HasMaxLength(10)
                    .HasColumnName("TRIM_NUMBER");
            });

            modelBuilder.Entity<Trace>(entity =>
            {
                entity.HasIndex(e => e.Timestamp, "IX_TRACES_TIMESTAMP");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.FormattedMessage).HasMaxLength(4000);

                entity.Property(e => e.InstanceName).HasMaxLength(1000);

                entity.Property(e => e.Payload).HasMaxLength(4000);

                entity.Property(e => e.ProviderName).HasMaxLength(500);
            });

            modelBuilder.Entity<UsaBit>(entity =>
            {
                entity.ToTable("USA_BIT");

                entity.Property(e => e.UsaBitId)
                    .ValueGeneratedNever()
                    .HasColumnName("USA_BIT_ID");

                entity.HasOne(d => d.UsaBitNavigation)
                    .WithOne(p => p.UsaBit)
                    .HasForeignKey<UsaBit>(d => d.UsaBitId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__USA_BIT__USA_BIT__1A615E5D");
            });

            modelBuilder.Entity<UsaDate>(entity =>
            {
                entity.ToTable("USA_DATE");

                entity.Property(e => e.UsaDateId)
                    .ValueGeneratedNever()
                    .HasColumnName("USA_DATE_ID");

                entity.HasOne(d => d.UsaDateNavigation)
                    .WithOne(p => p.UsaDate)
                    .HasForeignKey<UsaDate>(d => d.UsaDateId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__USA_DATE__USA_DA__1D3DCB08");
            });

            modelBuilder.Entity<UsaMuid>(entity =>
            {
                entity.HasKey(e => e.UsaMuidId)
                    .IsClustered(false);

                entity.ToTable("USA_MUID");

                entity.Property(e => e.UsaMuidId)
                    .ValueGeneratedNever()
                    .HasColumnName("USA_MUID_ID");
            });

            modelBuilder.Entity<UsaMuidLink>(entity =>
            {
                entity.HasKey(e => new { e.UsaMuidId, e.DrId, e.DroId });

                entity.ToTable("USA_MUID_LINKS");

                entity.Property(e => e.UsaMuidId).HasColumnName("USA_MUID_ID");

                entity.Property(e => e.DrId).HasColumnName("DR_ID");

                entity.Property(e => e.DroId).HasColumnName("DRO_ID");
            });

            modelBuilder.Entity<UsaNum>(entity =>
            {
                entity.ToTable("USA_NUM");

                entity.Property(e => e.UsaNumId)
                    .ValueGeneratedNever()
                    .HasColumnName("USA_NUM_ID");

                entity.HasOne(d => d.UsaNumNavigation)
                    .WithOne(p => p.UsaNum)
                    .HasForeignKey<UsaNum>(d => d.UsaNumId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__USA_NUM__USA_NUM__22F6A45E");
            });

            modelBuilder.Entity<UsaTxt>(entity =>
            {
                entity.ToTable("USA_TXT");

                entity.Property(e => e.UsaTxtId)
                    .ValueGeneratedNever()
                    .HasColumnName("USA_TXT_ID");

                entity.HasOne(d => d.UsaTxtNavigation)
                    .WithOne(p => p.UsaTxt)
                    .HasForeignKey<UsaTxt>(d => d.UsaTxtId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__USA_TXT__USA_TXT__1784F1B2");
            });

            modelBuilder.Entity<UsaUid>(entity =>
            {
                entity.ToTable("USA_UID");

                entity.Property(e => e.UsaUidId)
                    .ValueGeneratedNever()
                    .HasColumnName("USA_UID_ID");

                entity.HasOne(d => d.UsaUidNavigation)
                    .WithOne(p => p.UsaUid)
                    .HasForeignKey<UsaUid>(d => d.UsaUidId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__USA_UID__USA_UID__201A37B3");
            });

            modelBuilder.Entity<User>(entity =>
            {
                entity.HasKey(e => e.UsId);

                entity.ToTable("USERS");

                entity.HasIndex(e => new { e.UsDeleted, e.EsteiroidentSid }, "IX_USERS_ESTEIROIDENT_SID_DELETED");

                entity.HasIndex(e => e.ShortCode, "IX__USERS__SHORT_CODE");

                entity.Property(e => e.UsId)
                    .HasColumnName("US_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.AName)
                    .HasMaxLength(255)
                    .HasColumnName("A_NAME");

                entity.Property(e => e.ARef)
                    .HasMaxLength(255)
                    .HasColumnName("A_REF");

                entity.Property(e => e.AccessAdmin).HasColumnName("ACCESS_ADMIN");

                entity.Property(e => e.AccessEnabled).HasColumnName("ACCESS_ENABLED");

                entity.Property(e => e.AcoTeamId).HasColumnName("ACO_TEAM_ID");

                entity.Property(e => e.AddressLookupDetails)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_LOOKUP_DETAILS");

                entity.Property(e => e.Admin)
                    .HasColumnName("ADMIN")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BName)
                    .HasMaxLength(255)
                    .HasColumnName("B_NAME");

                entity.Property(e => e.BRef)
                    .HasMaxLength(255)
                    .HasColumnName("B_REF");

                entity.Property(e => e.CName)
                    .HasMaxLength(255)
                    .HasColumnName("C_NAME");

                entity.Property(e => e.CRef)
                    .HasMaxLength(255)
                    .HasColumnName("C_REF");

                entity.Property(e => e.CalendarDuration)
                    .HasColumnName("CALENDAR_DURATION")
                    .HasDefaultValueSql("((2))");

                entity.Property(e => e.CalendarPeriod)
                    .HasColumnName("CALENDAR_PERIOD")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CalendarView)
                    .HasColumnName("CALENDAR_VIEW")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CsIdLatest).HasColumnName("CS_ID_LATEST");

                entity.Property(e => e.CsLatestDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CS_LATEST_DATE");

                entity.Property(e => e.CtId).HasColumnName("CT_ID");

                entity.Property(e => e.CultureCode)
                    .HasMaxLength(10)
                    .HasColumnName("CULTURE_CODE");

                entity.Property(e => e.CurId).HasColumnName("CUR_ID");

                entity.Property(e => e.DateFormat)
                    .HasMaxLength(1)
                    .HasColumnName("DATE_FORMAT");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.DocumentStorageView)
                    .HasColumnName("DOCUMENT_STORAGE_VIEW")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Email)
                    .HasColumnName("EMAIL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.EmailAddress)
                    .HasMaxLength(255)
                    .HasColumnName("EMAIL_ADDRESS");

                entity.Property(e => e.EmailScanAppointments).HasColumnName("EMAIL_SCAN_APPOINTMENTS");

                entity.Property(e => e.EmailScanContacts).HasColumnName("EMAIL_SCAN_CONTACTS");

                entity.Property(e => e.EmailScanDetails)
                    .HasMaxLength(512)
                    .HasColumnName("EMAIL_SCAN_DETAILS");

                entity.Property(e => e.EmailScanEmails).HasColumnName("EMAIL_SCAN_EMAILS");

                entity.Property(e => e.EmailScanExclusions)
                    .HasMaxLength(1024)
                    .HasColumnName("EMAIL_SCAN_EXCLUSIONS");

                entity.Property(e => e.EmailScanFolders)
                    .HasMaxLength(1024)
                    .HasColumnName("EMAIL_SCAN_FOLDERS");

                entity.Property(e => e.EmailScanMaxSensitivity).HasColumnName("EMAIL_SCAN_MAX_SENSITIVITY");

                entity.Property(e => e.EmailScanTasks).HasColumnName("EMAIL_SCAN_TASKS");

                entity.Property(e => e.EnableServerDocProd).HasColumnName("ENABLE_SERVER_DOC_PROD");

                entity.Property(e => e.EsteiroidentSid).HasColumnName("ESTEIROIDENT_SID");

                entity.Property(e => e.ExchangeServer)
                    .HasMaxLength(255)
                    .HasColumnName("EXCHANGE_SERVER");

                entity.Property(e => e.Exchangeid)
                    .HasMaxLength(255)
                    .HasColumnName("EXCHANGEID");

                entity.Property(e => e.Fname)
                    .HasMaxLength(50)
                    .HasColumnName("FNAME");

                entity.Property(e => e.HashedPwd)
                    .HasMaxLength(255)
                    .HasColumnName("HASHED_PWD");

                entity.Property(e => e.Home)
                    .HasColumnName("HOME")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.HomeName)
                    .HasMaxLength(255)
                    .HasColumnName("HOME_NAME")
                    .HasDefaultValueSql("('Home')");

                entity.Property(e => e.HomeRef)
                    .HasMaxLength(255)
                    .HasColumnName("HOME_REF")
                    .HasDefaultValueSql("('HomeFrameset')");

                entity.Property(e => e.HybridDefaultMode)
                    .HasColumnName("HYBRID_DEFAULT_MODE")
                    .HasDefaultValueSql("(CONVERT([uniqueidentifier],'D63D9C35-4BFB-4564-A9E9-11279FF3EC27',(0)))");

                entity.Property(e => e.HybridEnabled).HasColumnName("HYBRID_ENABLED");

                entity.Property(e => e.IsActionCentrePinned)
                    .IsRequired()
                    .HasColumnName("IS_ACTION_CENTRE_PINNED")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.IsMenuExpanded).HasColumnName("IS_MENU_EXPANDED");

                entity.Property(e => e.Lang)
                    .HasMaxLength(32)
                    .HasColumnName("LANG");

                entity.Property(e => e.LangId).HasColumnName("LANG_ID");

                entity.Property(e => e.LastScanned)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_SCANNED");

                entity.Property(e => e.LicenceType)
                    .HasColumnName("LICENCE_TYPE")
                    .HasDefaultValueSql("(CONVERT([uniqueidentifier],'e3942823-be8b-400f-bfdf-fe99593ca2dc',(0)))");

                entity.Property(e => e.LivechatEmail)
                    .HasMaxLength(255)
                    .HasColumnName("LIVECHAT_EMAIL");

                entity.Property(e => e.Lname)
                    .HasMaxLength(50)
                    .HasColumnName("LNAME");

                entity.Property(e => e.Manager).HasColumnName("MANAGER");

                entity.Property(e => e.MapsAccess).HasColumnName("MAPS_ACCESS");

                entity.Property(e => e.Mname)
                    .HasMaxLength(50)
                    .HasColumnName("MNAME");

                entity.Property(e => e.MonthlySalesTarget)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("MONTHLY_SALES_TARGET");

                entity.Property(e => e.NtAccount)
                    .HasMaxLength(100)
                    .HasColumnName("NT_ACCOUNT");

                entity.Property(e => e.NumberFormat)
                    .HasMaxLength(25)
                    .HasColumnName("NUMBER_FORMAT");

                entity.Property(e => e.PhoneCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_COUNTRY_CODE");

                entity.Property(e => e.PhoneIddCode)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_IDD_CODE");

                entity.Property(e => e.PhoneNddCode)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_NDD_CODE");

                entity.Property(e => e.PhoneOutsideLineCode)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_OUTSIDE_LINE_CODE");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", true);

                entity.Property(e => e.PrivateEmail).HasColumnName("PRIVATE_EMAIL");

                entity.Property(e => e.RootUser).HasColumnName("ROOT_USER");

                entity.Property(e => e.Sales)
                    .HasColumnName("SALES")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SetIdPhone).HasColumnName("SET_ID_PHONE");

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'USR-')");

                entity.Property(e => e.ShowOnAcManager).HasColumnName("SHOW_ON_AC_MANAGER");

                entity.Property(e => e.ShowOnCalendar).HasColumnName("SHOW_ON_CALENDAR");

                entity.Property(e => e.ShowOnSupport).HasColumnName("SHOW_ON_SUPPORT");

                entity.Property(e => e.ShowOnUsers).HasColumnName("SHOW_ON_USERS");

                entity.Property(e => e.SimpleViewMenu).HasColumnName("SIMPLE_VIEW_MENU");

                entity.Property(e => e.SingleWindow).HasColumnName("SINGLE_WINDOW");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TemplateFolder)
                    .HasMaxLength(255)
                    .HasColumnName("TEMPLATE_FOLDER");

                entity.Property(e => e.TimeDiff).HasColumnName("TIME_DIFF");

                entity.Property(e => e.TimeZone)
                    .HasMaxLength(255)
                    .HasColumnName("TIME_ZONE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsCulture).HasColumnName("US_CULTURE");

                entity.Property(e => e.UsDeleted).HasColumnName("US_DELETED");

                entity.Property(e => e.UsExternal)
                    .HasMaxLength(255)
                    .HasColumnName("US_EXTERNAL");

                entity.Property(e => e.UsUd1)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD1");

                entity.Property(e => e.UsUd10)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD10");

                entity.Property(e => e.UsUd10Bit).HasColumnName("US_UD10_BIT");

                entity.Property(e => e.UsUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD10_DATE");

                entity.Property(e => e.UsUd10Id).HasColumnName("US_UD10_ID");

                entity.Property(e => e.UsUd10Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD10_NUMERIC");

                entity.Property(e => e.UsUd11)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD11");

                entity.Property(e => e.UsUd11Bit).HasColumnName("US_UD11_BIT");

                entity.Property(e => e.UsUd12)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD12");

                entity.Property(e => e.UsUd12Bit).HasColumnName("US_UD12_BIT");

                entity.Property(e => e.UsUd13)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD13");

                entity.Property(e => e.UsUd13Bit).HasColumnName("US_UD13_BIT");

                entity.Property(e => e.UsUd14)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD14");

                entity.Property(e => e.UsUd14Bit).HasColumnName("US_UD14_BIT");

                entity.Property(e => e.UsUd15)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD15");

                entity.Property(e => e.UsUd15Bit).HasColumnName("US_UD15_BIT");

                entity.Property(e => e.UsUd16Bit).HasColumnName("US_UD16_BIT");

                entity.Property(e => e.UsUd17Bit).HasColumnName("US_UD17_BIT");

                entity.Property(e => e.UsUd18Bit).HasColumnName("US_UD18_BIT");

                entity.Property(e => e.UsUd19Bit).HasColumnName("US_UD19_BIT");

                entity.Property(e => e.UsUd1Bit).HasColumnName("US_UD1_BIT");

                entity.Property(e => e.UsUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD1_DATE");

                entity.Property(e => e.UsUd1Id).HasColumnName("US_UD1_ID");

                entity.Property(e => e.UsUd1Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD1_NUMERIC");

                entity.Property(e => e.UsUd2)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD2");

                entity.Property(e => e.UsUd20Bit).HasColumnName("US_UD20_BIT");

                entity.Property(e => e.UsUd21Bit).HasColumnName("US_UD21_BIT");

                entity.Property(e => e.UsUd22Bit).HasColumnName("US_UD22_BIT");

                entity.Property(e => e.UsUd23Bit).HasColumnName("US_UD23_BIT");

                entity.Property(e => e.UsUd24Bit).HasColumnName("US_UD24_BIT");

                entity.Property(e => e.UsUd2Bit).HasColumnName("US_UD2_BIT");

                entity.Property(e => e.UsUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD2_DATE");

                entity.Property(e => e.UsUd2Id).HasColumnName("US_UD2_ID");

                entity.Property(e => e.UsUd2Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD2_NUMERIC");

                entity.Property(e => e.UsUd3)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD3");

                entity.Property(e => e.UsUd3Bit).HasColumnName("US_UD3_BIT");

                entity.Property(e => e.UsUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD3_DATE");

                entity.Property(e => e.UsUd3Id).HasColumnName("US_UD3_ID");

                entity.Property(e => e.UsUd3Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD3_NUMERIC");

                entity.Property(e => e.UsUd4)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD4");

                entity.Property(e => e.UsUd4Bit).HasColumnName("US_UD4_BIT");

                entity.Property(e => e.UsUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD4_DATE");

                entity.Property(e => e.UsUd4Id).HasColumnName("US_UD4_ID");

                entity.Property(e => e.UsUd4Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD4_NUMERIC");

                entity.Property(e => e.UsUd5)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD5");

                entity.Property(e => e.UsUd5Bit).HasColumnName("US_UD5_BIT");

                entity.Property(e => e.UsUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD5_DATE");

                entity.Property(e => e.UsUd5Id).HasColumnName("US_UD5_ID");

                entity.Property(e => e.UsUd5Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD5_NUMERIC");

                entity.Property(e => e.UsUd6)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD6");

                entity.Property(e => e.UsUd6Bit).HasColumnName("US_UD6_BIT");

                entity.Property(e => e.UsUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD6_DATE");

                entity.Property(e => e.UsUd6Id).HasColumnName("US_UD6_ID");

                entity.Property(e => e.UsUd6Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD6_NUMERIC");

                entity.Property(e => e.UsUd7)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD7");

                entity.Property(e => e.UsUd7Bit).HasColumnName("US_UD7_BIT");

                entity.Property(e => e.UsUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD7_DATE");

                entity.Property(e => e.UsUd7Id).HasColumnName("US_UD7_ID");

                entity.Property(e => e.UsUd7Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD7_NUMERIC");

                entity.Property(e => e.UsUd8)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD8");

                entity.Property(e => e.UsUd8Bit).HasColumnName("US_UD8_BIT");

                entity.Property(e => e.UsUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD8_DATE");

                entity.Property(e => e.UsUd8Id).HasColumnName("US_UD8_ID");

                entity.Property(e => e.UsUd8Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD8_NUMERIC");

                entity.Property(e => e.UsUd9)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD9");

                entity.Property(e => e.UsUd9Bit).HasColumnName("US_UD9_BIT");

                entity.Property(e => e.UsUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD9_DATE");

                entity.Property(e => e.UsUd9Id).HasColumnName("US_UD9_ID");

                entity.Property(e => e.UsUd9Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD9_NUMERIC");

                entity.Property(e => e.UseWordMailMerge).HasColumnName("USE_WORD_MAIL_MERGE");

                entity.Property(e => e.UserDepartment).HasMaxLength(128);

                entity.Property(e => e.UserDirectPhone).HasMaxLength(32);

                entity.Property(e => e.UserJobTitle).HasMaxLength(128);

                entity.Property(e => e.UserMobileTelephone).HasMaxLength(32);

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");

                entity.HasOne(d => d.LangNavigation)
                    .WithMany(p => p.Users)
                    .HasForeignKey(d => d.LangId)
                    .HasConstraintName("FK_LANGUAGES_USERS");

                entity.HasOne(d => d.Usg)
                    .WithMany(p => p.Users)
                    .HasForeignKey(d => d.UsgId)
                    .HasConstraintName("FK_USERS_USERS_GROUPS");
            });

            modelBuilder.Entity<UserCulture>(entity =>
            {
                entity.HasKey(e => e.Code)
                    .HasName("PK_USER_LOCALES")
                    .IsClustered(false);

                entity.ToTable("USER_CULTURES");

                entity.HasIndex(e => e.Id, "CIX_USER_CULTURES");

                entity.Property(e => e.Code)
                    .HasMaxLength(15)
                    .UseCollation("Latin1_General_CI_AS");

                entity.Property(e => e.EnglishName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .UseCollation("Latin1_General_CI_AS");

                entity.Property(e => e.NativeName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .UseCollation("Latin1_General_CI_AS");
            });

            modelBuilder.Entity<UserRoleGroup>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("USER_ROLE_GROUPS", "Portal");

                entity.HasIndex(e => e.SpaceId, "IX_USER_ROLE_GROUPS");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.RgId).HasColumnName("RG_ID");

                entity.Property(e => e.SpaceId).HasColumnName("SPACE_ID");

                entity.Property(e => e.UsId).HasColumnName("US_ID");
            });

            modelBuilder.Entity<UsersAppointment>(entity =>
            {
                entity.HasKey(e => e.UsaId)
                    .HasName("PK_USER_APPOINTMENTS");

                entity.ToTable("USERS_APPOINTMENTS");

                entity.HasIndex(e => e.AcId, "IX_USERS_APPOINTMENTS_AC_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.End, "IX_USERS_APPOINTMENTS_END")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.Start, "IX_USERS_APPOINTMENTS_START")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.UsId, "IX_USERS_APPOINTMENTS_US_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => new { e.UsId, e.End, e.Start, e.UsaId, e.UsaDeleted }, "IX__USERS_APPOINTMENTS__ACTION_CENTRE");

                entity.HasIndex(e => e.ShortCode, "IX__USERS_APPOINTMENTS__SHORT_CODE");

                entity.Property(e => e.UsaId)
                    .ValueGeneratedNever()
                    .HasColumnName("USA_ID");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.ActId).HasColumnName("ACT_ID");

                entity.Property(e => e.AllDay).HasColumnName("ALL_DAY");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.DoNotSyncWith3p).HasColumnName("DO_NOT_SYNC_WITH_3P");

                entity.Property(e => e.End)
                    .HasColumnType("datetime")
                    .HasColumnName("END");

                entity.Property(e => e.GoneFromOutlook).HasColumnName("GONE_FROM_OUTLOOK");

                entity.Property(e => e.Location)
                    .HasMaxLength(255)
                    .HasColumnName("LOCATION");

                entity.Property(e => e.NtIdOutlook).HasColumnName("NT_ID_OUTLOOK");

                entity.Property(e => e.OpId).HasColumnName("OP_ID");

                entity.Property(e => e.OwnerId).HasColumnName("OWNER_ID");

                entity.Property(e => e.ParentType)
                    .HasMaxLength(255)
                    .HasColumnName("PARENT_TYPE");

                entity.Property(e => e.PjId).HasColumnName("PJ_ID");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", true);

                entity.Property(e => e.RecurrenceInfo)
                    .HasMaxLength(255)
                    .HasColumnName("RECURRENCE_INFO");

                entity.Property(e => e.RecurrenceType).HasColumnName("RECURRENCE_TYPE");

                entity.Property(e => e.Recurring).HasColumnName("RECURRING");

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.ReminderAlerted).HasColumnName("REMINDER_ALERTED");

                entity.Property(e => e.ReminderMinutes).HasColumnName("REMINDER_MINUTES");

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'APT-')");

                entity.Property(e => e.SitId).HasColumnName("SIT_ID");

                entity.Property(e => e.Start)
                    .HasColumnType("datetime")
                    .HasColumnName("START");

                entity.Property(e => e.StgId).HasColumnName("STG_ID");

                entity.Property(e => e.Subject)
                    .HasMaxLength(255)
                    .HasColumnName("SUBJECT");

                entity.Property(e => e.SyncUpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYNC_UPDATED_DATE");

                entity.Property(e => e.Ud1)
                    .HasMaxLength(255)
                    .HasColumnName("UD1");

                entity.Property(e => e.Ud10)
                    .HasMaxLength(255)
                    .HasColumnName("UD10");

                entity.Property(e => e.Ud11)
                    .HasMaxLength(255)
                    .HasColumnName("UD11");

                entity.Property(e => e.Ud12)
                    .HasMaxLength(255)
                    .HasColumnName("UD12");

                entity.Property(e => e.Ud13)
                    .HasMaxLength(255)
                    .HasColumnName("UD13");

                entity.Property(e => e.Ud14)
                    .HasMaxLength(255)
                    .HasColumnName("UD14");

                entity.Property(e => e.Ud15)
                    .HasMaxLength(255)
                    .HasColumnName("UD15");

                entity.Property(e => e.Ud2)
                    .HasMaxLength(255)
                    .HasColumnName("UD2");

                entity.Property(e => e.Ud3)
                    .HasMaxLength(255)
                    .HasColumnName("UD3");

                entity.Property(e => e.Ud4)
                    .HasMaxLength(255)
                    .HasColumnName("UD4");

                entity.Property(e => e.Ud5)
                    .HasMaxLength(255)
                    .HasColumnName("UD5");

                entity.Property(e => e.Ud6)
                    .HasMaxLength(255)
                    .HasColumnName("UD6");

                entity.Property(e => e.Ud7)
                    .HasMaxLength(255)
                    .HasColumnName("UD7");

                entity.Property(e => e.Ud8)
                    .HasMaxLength(255)
                    .HasColumnName("UD8");

                entity.Property(e => e.Ud9)
                    .HasMaxLength(255)
                    .HasColumnName("UD9");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsaAccessLevel).HasColumnName("USA_ACCESS_LEVEL");

                entity.Property(e => e.UsaDeleted).HasColumnName("USA_DELETED");

                entity.Property(e => e.UsaMapiId)
                    .HasMaxLength(350)
                    .HasColumnName("USA_MAPI_ID");

                entity.Property(e => e.UsaRemoved).HasColumnName("USA_REMOVED");

                entity.Property(e => e.UsaStoreId)
                    .HasMaxLength(800)
                    .HasColumnName("USA_STORE_ID");

                entity.Property(e => e.UsaType).HasColumnName("USA_TYPE");

                entity.Property(e => e.UsaUd10Bit).HasColumnName("USA_UD10_BIT");

                entity.Property(e => e.UsaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("USA_UD10_DATE");

                entity.Property(e => e.UsaUd10Id).HasColumnName("USA_UD10_ID");

                entity.Property(e => e.UsaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("USA_UD10_NUMERIC");

                entity.Property(e => e.UsaUd11Bit).HasColumnName("USA_UD11_BIT");

                entity.Property(e => e.UsaUd12Bit).HasColumnName("USA_UD12_BIT");

                entity.Property(e => e.UsaUd13Bit).HasColumnName("USA_UD13_BIT");

                entity.Property(e => e.UsaUd14Bit).HasColumnName("USA_UD14_BIT");

                entity.Property(e => e.UsaUd15Bit).HasColumnName("USA_UD15_BIT");

                entity.Property(e => e.UsaUd16Bit).HasColumnName("USA_UD16_BIT");

                entity.Property(e => e.UsaUd17Bit).HasColumnName("USA_UD17_BIT");

                entity.Property(e => e.UsaUd18Bit).HasColumnName("USA_UD18_BIT");

                entity.Property(e => e.UsaUd19Bit).HasColumnName("USA_UD19_BIT");

                entity.Property(e => e.UsaUd1Bit).HasColumnName("USA_UD1_BIT");

                entity.Property(e => e.UsaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("USA_UD1_DATE");

                entity.Property(e => e.UsaUd1Id).HasColumnName("USA_UD1_ID");

                entity.Property(e => e.UsaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("USA_UD1_NUMERIC");

                entity.Property(e => e.UsaUd20Bit).HasColumnName("USA_UD20_BIT");

                entity.Property(e => e.UsaUd21Bit).HasColumnName("USA_UD21_BIT");

                entity.Property(e => e.UsaUd22Bit).HasColumnName("USA_UD22_BIT");

                entity.Property(e => e.UsaUd23Bit).HasColumnName("USA_UD23_BIT");

                entity.Property(e => e.UsaUd24Bit).HasColumnName("USA_UD24_BIT");

                entity.Property(e => e.UsaUd2Bit).HasColumnName("USA_UD2_BIT");

                entity.Property(e => e.UsaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("USA_UD2_DATE");

                entity.Property(e => e.UsaUd2Id).HasColumnName("USA_UD2_ID");

                entity.Property(e => e.UsaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("USA_UD2_NUMERIC");

                entity.Property(e => e.UsaUd3Bit).HasColumnName("USA_UD3_BIT");

                entity.Property(e => e.UsaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("USA_UD3_DATE");

                entity.Property(e => e.UsaUd3Id).HasColumnName("USA_UD3_ID");

                entity.Property(e => e.UsaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("USA_UD3_NUMERIC");

                entity.Property(e => e.UsaUd4Bit).HasColumnName("USA_UD4_BIT");

                entity.Property(e => e.UsaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("USA_UD4_DATE");

                entity.Property(e => e.UsaUd4Id).HasColumnName("USA_UD4_ID");

                entity.Property(e => e.UsaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("USA_UD4_NUMERIC");

                entity.Property(e => e.UsaUd5Bit).HasColumnName("USA_UD5_BIT");

                entity.Property(e => e.UsaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("USA_UD5_DATE");

                entity.Property(e => e.UsaUd5Id).HasColumnName("USA_UD5_ID");

                entity.Property(e => e.UsaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("USA_UD5_NUMERIC");

                entity.Property(e => e.UsaUd6Bit).HasColumnName("USA_UD6_BIT");

                entity.Property(e => e.UsaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("USA_UD6_DATE");

                entity.Property(e => e.UsaUd6Id).HasColumnName("USA_UD6_ID");

                entity.Property(e => e.UsaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("USA_UD6_NUMERIC");

                entity.Property(e => e.UsaUd7Bit).HasColumnName("USA_UD7_BIT");

                entity.Property(e => e.UsaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("USA_UD7_DATE");

                entity.Property(e => e.UsaUd7Id).HasColumnName("USA_UD7_ID");

                entity.Property(e => e.UsaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("USA_UD7_NUMERIC");

                entity.Property(e => e.UsaUd8Bit).HasColumnName("USA_UD8_BIT");

                entity.Property(e => e.UsaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("USA_UD8_DATE");

                entity.Property(e => e.UsaUd8Id).HasColumnName("USA_UD8_ID");

                entity.Property(e => e.UsaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("USA_UD8_NUMERIC");

                entity.Property(e => e.UsaUd9Bit).HasColumnName("USA_UD9_BIT");

                entity.Property(e => e.UsaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("USA_UD9_DATE");

                entity.Property(e => e.UsaUd9Id).HasColumnName("USA_UD9_ID");

                entity.Property(e => e.UsaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("USA_UD9_NUMERIC");

                entity.Property(e => e.UtcConverted).HasColumnName("UTC_CONVERTED");

                entity.HasOne(d => d.Ac)
                    .WithMany(p => p.UsersAppointments)
                    .HasForeignKey(d => d.AcId)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_USERS_APPOINTMENTS_ACCOUNTS");

                entity.HasOne(d => d.Us)
                    .WithMany(p => p.UsersAppointments)
                    .HasForeignKey(d => d.UsId)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_USERS_APPOINTMENTS_USERS");
            });

            modelBuilder.Entity<UsersAppointmentsAttendee>(entity =>
            {
                entity.HasKey(e => e.UaaId);

                entity.ToTable("USERS_APPOINTMENTS_ATTENDEES");

                entity.HasIndex(e => new { e.UsId, e.AttendeeStatus }, "IX_USA_HOTBAR_1");

                entity.HasIndex(e => e.AttendeeStatus, "IX_USA_HOTBAR_2");

                entity.Property(e => e.UaaId)
                    .ValueGeneratedNever()
                    .HasColumnName("UAA_ID");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.Attendee)
                    .HasMaxLength(255)
                    .HasColumnName("ATTENDEE");

                entity.Property(e => e.AttendeeStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ATTENDEE_STATUS");

                entity.Property(e => e.AttendeeType)
                    .HasMaxLength(255)
                    .HasColumnName("ATTENDEE_TYPE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.ExternalId)
                    .HasMaxLength(255)
                    .HasColumnName("EXTERNAL_ID");

                entity.Property(e => e.UaaDeleted).HasColumnName("UAA_DELETED");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsaId).HasColumnName("USA_ID");
            });

            modelBuilder.Entity<UsersFavorite>(entity =>
            {
                entity.HasKey(e => e.UsfId);

                entity.ToTable("USERS_FAVORITES");

                entity.Property(e => e.UsfId)
                    .ValueGeneratedNever()
                    .HasColumnName("USF_ID");

                entity.Property(e => e.Class)
                    .HasColumnName("CLASS")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.OnMenu)
                    .IsRequired()
                    .HasColumnName("ON_MENU")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Public).HasColumnName("PUBLIC");

                entity.Property(e => e.RefId).HasColumnName("REF_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Type)
                    .HasMaxLength(1500)
                    .HasColumnName("TYPE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");

                entity.HasOne(d => d.Us)
                    .WithMany(p => p.UsersFavorites)
                    .HasForeignKey(d => d.UsId)
                    .HasConstraintName("FK_USERS_FAVORITES_USERS");

                entity.HasOne(d => d.Usg)
                    .WithMany(p => p.UsersFavorites)
                    .HasForeignKey(d => d.UsgId)
                    .HasConstraintName("FK_USERS_FAVORITES_USERS_GROUPS");
            });

            modelBuilder.Entity<UsersGadget>(entity =>
            {
                entity.HasKey(e => e.UgdId)
                    .HasName("PK_USERS_GADJETS");

                entity.ToTable("USERS_GADGETS");

                entity.Property(e => e.UgdId)
                    .ValueGeneratedNever()
                    .HasColumnName("UGD_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Data)
                    .HasMaxLength(1000)
                    .HasColumnName("DATA");

                entity.Property(e => e.GadId).HasColumnName("GAD_ID");

                entity.Property(e => e.Order).HasColumnName("ORDER");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.HasOne(d => d.Gad)
                    .WithMany(p => p.UsersGadgets)
                    .HasForeignKey(d => d.GadId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_USERS_GADGETS_GADGETS");

                entity.HasOne(d => d.Us)
                    .WithMany(p => p.UsersGadgets)
                    .HasForeignKey(d => d.UsId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_USERS_GADGETS_USERS");
            });

            modelBuilder.Entity<UsersGroup>(entity =>
            {
                entity.HasKey(e => e.UsgId)
                    .HasName("PK_USER_GROUPS");

                entity.ToTable("USERS_GROUPS");

                entity.HasIndex(e => e.ShortCode, "IX__USERS_GROUPS__SHORT_CODE");

                entity.Property(e => e.UsgId)
                    .HasColumnName("USG_ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.DstId).HasColumnName("DST_ID");

                entity.Property(e => e.Hidden).HasColumnName("HIDDEN");

                entity.Property(e => e.MonthlySalesTarget)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("MONTHLY_SALES_TARGET");

                entity.Property(e => e.PrefixedShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("PREFIXED_SHORT_CODE")
                    .HasComputedColumnSql("(concat([SHORT_CODE_PREFIX],[SHORT_CODE]))", true);

                entity.Property(e => e.ShortCode)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortCodePrefix)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnName("SHORT_CODE_PREFIX")
                    .HasDefaultValueSql("(N'TEA-')");

                entity.Property(e => e.Subdirectory)
                    .HasMaxLength(255)
                    .HasColumnName("SUBDIRECTORY");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Ud1)
                    .HasMaxLength(255)
                    .HasColumnName("UD1");

                entity.Property(e => e.Ud10)
                    .HasMaxLength(255)
                    .HasColumnName("UD10");

                entity.Property(e => e.Ud11)
                    .HasMaxLength(255)
                    .HasColumnName("UD11");

                entity.Property(e => e.Ud12)
                    .HasMaxLength(255)
                    .HasColumnName("UD12");

                entity.Property(e => e.Ud13)
                    .HasMaxLength(255)
                    .HasColumnName("UD13");

                entity.Property(e => e.Ud14)
                    .HasMaxLength(255)
                    .HasColumnName("UD14");

                entity.Property(e => e.Ud15)
                    .HasMaxLength(255)
                    .HasColumnName("UD15");

                entity.Property(e => e.Ud2)
                    .HasMaxLength(255)
                    .HasColumnName("UD2");

                entity.Property(e => e.Ud3)
                    .HasMaxLength(255)
                    .HasColumnName("UD3");

                entity.Property(e => e.Ud4)
                    .HasMaxLength(255)
                    .HasColumnName("UD4");

                entity.Property(e => e.Ud5)
                    .HasMaxLength(255)
                    .HasColumnName("UD5");

                entity.Property(e => e.Ud6)
                    .HasMaxLength(255)
                    .HasColumnName("UD6");

                entity.Property(e => e.Ud7)
                    .HasMaxLength(255)
                    .HasColumnName("UD7");

                entity.Property(e => e.Ud8)
                    .HasMaxLength(255)
                    .HasColumnName("UD8");

                entity.Property(e => e.Ud9)
                    .HasMaxLength(255)
                    .HasColumnName("UD9");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsgAccess).HasColumnName("USG_ACCESS");

                entity.Property(e => e.UsgDeleted).HasColumnName("USG_DELETED");

                entity.Property(e => e.UsgId1).HasColumnName("USG_ID_1");

                entity.Property(e => e.UsgId2).HasColumnName("USG_ID_2");

                entity.Property(e => e.ViewAllProjects).HasColumnName("VIEW_ALL_PROJECTS");
            });

            modelBuilder.Entity<UsersGroupsBanner>(entity =>
            {
                entity.HasKey(e => e.UgbId);

                entity.ToTable("USERS_GROUPS_BANNER");

                entity.Property(e => e.UgbId)
                    .ValueGeneratedNever()
                    .HasColumnName("UGB_ID");

                entity.Property(e => e.BannerCropPoints)
                    .HasMaxLength(50)
                    .HasColumnName("BANNER_CROP_POINTS");

                entity.Property(e => e.BannerCropped).HasColumnName("BANNER_CROPPED");

                entity.Property(e => e.BannerCroppedFileSize)
                    .HasMaxLength(10)
                    .HasColumnName("BANNER_CROPPED_FILE_SIZE");

                entity.Property(e => e.BannerSource).HasColumnName("BANNER_SOURCE");

                entity.Property(e => e.BannerSourceFileSize)
                    .HasMaxLength(10)
                    .HasColumnName("BANNER_SOURCE_FILE_SIZE");

                entity.Property(e => e.CompanyName)
                    .HasMaxLength(255)
                    .HasColumnName("COMPANY_NAME");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");

                entity.Property(e => e.Zoom)
                    .HasMaxLength(10)
                    .HasColumnName("ZOOM");

                entity.HasOne(d => d.Usg)
                    .WithMany(p => p.UsersGroupsBanners)
                    .HasForeignKey(d => d.UsgId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_USERS_GROUPS_BANNER_USERS_GROUPS");
            });

            modelBuilder.Entity<UsersGroupsMember>(entity =>
            {
                entity.HasKey(e => e.UsmId);

                entity.ToTable("USERS_GROUPS_MEMBERS");

                entity.HasIndex(e => e.UsgId, "IX_USERS_GROUPS_MEMBERS_USG_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.UsId, "IX_USERS_GROUPS_MEMBERS_US_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.UsId, "IX__USGM__US_ID__INCLS");

                entity.Property(e => e.UsmId)
                    .ValueGeneratedNever()
                    .HasColumnName("USM_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Manager).HasColumnName("MANAGER");

                entity.Property(e => e.PrimaryGroup).HasColumnName("PRIMARY_GROUP");

                entity.Property(e => e.ShareEmail).HasColumnName("SHARE_EMAIL");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");

                entity.HasOne(d => d.Usg)
                    .WithMany(p => p.UsersGroupsMembers)
                    .HasForeignKey(d => d.UsgId)
                    .HasConstraintName("FK_USERS_GROUPS_MEMBERS_USERS_GROUPS");
            });

            modelBuilder.Entity<UsersGroupsOption>(entity =>
            {
                entity.HasKey(e => e.GroId);

                entity.ToTable("USERS_GROUPS_OPTIONS");

                entity.HasIndex(e => new { e.UsgId, e.AcoId }, "IX_USERS_GROUPS_OPTIONS")
                    .IsUnique();

                entity.HasIndex(e => e.AcoId, "IX_USERS_GROUPS_OPTIONS_ACO_ID")
                    .HasFillFactor((byte)80);

                entity.HasIndex(e => e.UsgId, "IX_USERS_GROUPS_OPTIONS_USG_ID")
                    .HasFillFactor((byte)80);

                entity.Property(e => e.GroId)
                    .ValueGeneratedNever()
                    .HasColumnName("GRO_ID");

                entity.Property(e => e.AcoId).HasColumnName("ACO_ID");

                entity.Property(e => e.AllowDelete).HasColumnName("ALLOW_DELETE");

                entity.Property(e => e.AllowEdit).HasColumnName("ALLOW_EDIT");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");

                entity.HasOne(d => d.Aco)
                    .WithMany(p => p.UsersGroupsOptions)
                    .HasForeignKey(d => d.AcoId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_USERS_GROUPS_OPTIONS_ACCESS_OPTIONS");

                entity.HasOne(d => d.Usg)
                    .WithMany(p => p.UsersGroupsOptions)
                    .HasForeignKey(d => d.UsgId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_USERS_GROUPS_OPTIONS_USERS_GROUPS");
            });

            modelBuilder.Entity<UsersNavigationHistory>(entity =>
            {
                entity.ToTable("USERS_NAVIGATION_HISTORY");

                entity.HasIndex(e => new { e.UsId, e.CreatedDate }, "IX__UNH__US_ID_CREATED_DATE__INCLS");

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.Color).HasColumnName("COLOR");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DesignId).HasColumnName("DESIGN_ID");

                entity.Property(e => e.Icon)
                    .HasMaxLength(255)
                    .HasColumnName("ICON");

                entity.Property(e => e.ItemId).HasColumnName("ITEM_ID");

                entity.Property(e => e.ItemSummary)
                    .HasMaxLength(255)
                    .HasColumnName("ITEM_SUMMARY");

                entity.Property(e => e.LabelObjId).HasColumnName("LABEL_OBJ_ID");

                entity.Property(e => e.NavigationType)
                    .HasColumnName("NAVIGATION_TYPE")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PagePath)
                    .HasMaxLength(255)
                    .HasColumnName("PAGE_PATH");

                entity.Property(e => e.RequestId).HasColumnName("REQUEST_ID");

                entity.Property(e => e.UsId).HasColumnName("US_ID");
            });

            modelBuilder.Entity<UsersRecent>(entity =>
            {
                entity.HasKey(e => e.UsreId);

                entity.ToTable("USERS_RECENT");

                entity.Property(e => e.UsreId)
                    .ValueGeneratedNever()
                    .HasColumnName("USRE_ID");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Listfilter)
                    .HasMaxLength(4000)
                    .HasColumnName("LISTFILTER");

                entity.Property(e => e.ParentSummary)
                    .HasMaxLength(255)
                    .HasColumnName("PARENT_SUMMARY");

                entity.Property(e => e.RefId).HasColumnName("REF_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Type)
                    .HasMaxLength(50)
                    .HasColumnName("TYPE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.HasOne(d => d.Ac)
                    .WithMany(p => p.UsersRecents)
                    .HasForeignKey(d => d.AcId)
                    .HasConstraintName("FK_USERS_RECENT_ACCOUNTS");

                entity.HasOne(d => d.Us)
                    .WithMany(p => p.UsersRecents)
                    .HasForeignKey(d => d.UsId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_USERS_RECENT_USERS");
            });

            modelBuilder.Entity<UsersReport>(entity =>
            {
                entity.HasKey(e => e.UreId);

                entity.ToTable("USERS_REPORTS");

                entity.Property(e => e.UreId)
                    .ValueGeneratedNever()
                    .HasColumnName("URE_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.ReId).HasColumnName("RE_ID");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.HasOne(d => d.Re)
                    .WithMany(p => p.UsersReports)
                    .HasForeignKey(d => d.ReId)
                    .HasConstraintName("FK_USERS_REPORTS_REPORTS");

                entity.HasOne(d => d.Us)
                    .WithMany(p => p.UsersReports)
                    .HasForeignKey(d => d.UsId)
                    .HasConstraintName("FK_USERS_REPORTS_USERS");
            });

            modelBuilder.Entity<UsersRight>(entity =>
            {
                entity.HasKey(e => e.UsrId);

                entity.ToTable("USERS_RIGHTS");

                entity.Property(e => e.UsrId)
                    .ValueGeneratedNever()
                    .HasColumnName("USR_ID");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcgId).HasColumnName("ACG_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Ud1)
                    .HasMaxLength(255)
                    .HasColumnName("UD1");

                entity.Property(e => e.Ud10)
                    .HasMaxLength(255)
                    .HasColumnName("UD10");

                entity.Property(e => e.Ud11)
                    .HasMaxLength(255)
                    .HasColumnName("UD11");

                entity.Property(e => e.Ud12)
                    .HasMaxLength(255)
                    .HasColumnName("UD12");

                entity.Property(e => e.Ud13)
                    .HasMaxLength(255)
                    .HasColumnName("UD13");

                entity.Property(e => e.Ud14)
                    .HasMaxLength(255)
                    .HasColumnName("UD14");

                entity.Property(e => e.Ud15)
                    .HasMaxLength(255)
                    .HasColumnName("UD15");

                entity.Property(e => e.Ud2)
                    .HasMaxLength(255)
                    .HasColumnName("UD2");

                entity.Property(e => e.Ud3)
                    .HasMaxLength(255)
                    .HasColumnName("UD3");

                entity.Property(e => e.Ud4)
                    .HasMaxLength(255)
                    .HasColumnName("UD4");

                entity.Property(e => e.Ud5)
                    .HasMaxLength(255)
                    .HasColumnName("UD5");

                entity.Property(e => e.Ud6)
                    .HasMaxLength(255)
                    .HasColumnName("UD6");

                entity.Property(e => e.Ud7)
                    .HasMaxLength(255)
                    .HasColumnName("UD7");

                entity.Property(e => e.Ud8)
                    .HasMaxLength(255)
                    .HasColumnName("UD8");

                entity.Property(e => e.Ud9)
                    .HasMaxLength(255)
                    .HasColumnName("UD9");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");

                entity.Property(e => e.UsrDeleted).HasColumnName("USR_DELETED");

                entity.HasOne(d => d.Us)
                    .WithMany(p => p.UsersRights)
                    .HasForeignKey(d => d.UsId)
                    .HasConstraintName("FK_USERS_RIGHTS_USERS");

                entity.HasOne(d => d.Usg)
                    .WithMany(p => p.UsersRights)
                    .HasForeignKey(d => d.UsgId)
                    .HasConstraintName("FK_USERS_RIGHTS_USERS_GROUPS");
            });

            modelBuilder.Entity<UsersTask>(entity =>
            {
                entity.HasKey(e => e.UstId)
                    .HasName("PK_USER_TASKS");

                entity.ToTable("USERS_TASKS");

                entity.Property(e => e.UstId)
                    .ValueGeneratedNever()
                    .HasColumnName("UST_ID");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.BillingInformation)
                    .HasMaxLength(10)
                    .HasColumnName("BILLING_INFORMATION")
                    .IsFixedLength(true);

                entity.Property(e => e.Companies)
                    .HasMaxLength(255)
                    .HasColumnName("COMPANIES");

                entity.Property(e => e.Contacts)
                    .HasMaxLength(255)
                    .HasColumnName("CONTACTS");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DateCompleted)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_COMPLETED");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.DueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DUE_DATE");

                entity.Property(e => e.InUpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("IN_UPDATED_DATE");

                entity.Property(e => e.OutUpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OUT_UPDATED_DATE");

                entity.Property(e => e.Owner)
                    .HasMaxLength(50)
                    .HasColumnName("OWNER");

                entity.Property(e => e.PercentComplete)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("PERCENT_COMPLETE");

                entity.Property(e => e.Priority)
                    .HasMaxLength(50)
                    .HasColumnName("PRIORITY");

                entity.Property(e => e.Private).HasColumnName("PRIVATE");

                entity.Property(e => e.RefId).HasColumnName("REF_ID");

                entity.Property(e => e.RefTable)
                    .IsRequired()
                    .HasMaxLength(5)
                    .HasColumnName("REF_TABLE")
                    .IsFixedLength(true);

                entity.Property(e => e.Sensitivity)
                    .HasMaxLength(50)
                    .HasColumnName("SENSITIVITY");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("START_DATE");

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .HasColumnName("STATUS");

                entity.Property(e => e.Subject)
                    .HasMaxLength(255)
                    .HasColumnName("SUBJECT");

                entity.Property(e => e.Synchronised)
                    .HasColumnName("SYNCHRONISED")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UstDeleted).HasColumnName("UST_DELETED");

                entity.Property(e => e.UstMapiId)
                    .HasMaxLength(350)
                    .HasColumnName("UST_MAPI_ID");

                entity.Property(e => e.UstStoreId)
                    .HasMaxLength(800)
                    .HasColumnName("UST_STORE_ID");

                entity.HasOne(d => d.Ac)
                    .WithMany(p => p.UsersTasks)
                    .HasForeignKey(d => d.AcId)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_USERS_TASKS_ACCOUNTS");

                entity.HasOne(d => d.Us)
                    .WithMany(p => p.UsersTasks)
                    .HasForeignKey(d => d.UsId)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_USERS_TASKS_USERS");
            });

            modelBuilder.Entity<UvIntegrationId>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("uvIntegrationIds");

                entity.Property(e => e.FneId).HasColumnName("FNE_ID");

                entity.Property(e => e.IntegrationId)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("INTEGRATION_ID");

                entity.Property(e => e.IntegrationName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("INTEGRATION_NAME");

                entity.Property(e => e.IntegrationType)
                    .HasMaxLength(255)
                    .HasColumnName("INTEGRATION_TYPE");

                entity.Property(e => e.Summary)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");
            });

            modelBuilder.Entity<VAccountActivitiesAll>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vAccountActivitiesAll");

                entity.Property(e => e.AcBillingCountry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_COUNTRY");

                entity.Property(e => e.AcBillingCounty)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_COUNTY");

                entity.Property(e => e.AcBillingPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_POSTCODE");

                entity.Property(e => e.AcBillingTown)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_TOWN");

                entity.Property(e => e.AcCountry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_COUNTRY");

                entity.Property(e => e.AcCounty)
                    .HasMaxLength(255)
                    .HasColumnName("AC_COUNTY");

                entity.Property(e => e.AcExternal)
                    .HasMaxLength(255)
                    .HasColumnName("AC_EXTERNAL");

                entity.Property(e => e.AcFlag)
                    .HasMaxLength(255)
                    .HasColumnName("AC_FLAG");

                entity.Property(e => e.AcFlagHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_FLAG_HLIGHT");

                entity.Property(e => e.AcGroup)
                    .HasMaxLength(255)
                    .HasColumnName("AC_GROUP");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcIndustry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_INDUSTRY");

                entity.Property(e => e.AcIndustryHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_INDUSTRY_HLIGHT");

                entity.Property(e => e.AcLabel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LABEL");

                entity.Property(e => e.AcLabelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LABEL_HLIGHT");

                entity.Property(e => e.AcLevel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LEVEL");

                entity.Property(e => e.AcLevelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LEVEL_HLIGHT");

                entity.Property(e => e.AcManagerSupport)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_SUPPORT");

                entity.Property(e => e.AcManagerSupportEmail)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_SUPPORT_EMAIL");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.AcPhone1)
                    .HasMaxLength(50)
                    .HasColumnName("AC_PHONE_1");

                entity.Property(e => e.AcPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("AC_POSTCODE");

                entity.Property(e => e.AcReference)
                    .HasMaxLength(50)
                    .HasColumnName("AC_REFERENCE");

                entity.Property(e => e.AcSource)
                    .HasMaxLength(255)
                    .HasColumnName("AC_SOURCE");

                entity.Property(e => e.AcSourceHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_SOURCE_HLIGHT");

                entity.Property(e => e.AcTown)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TOWN");

                entity.Property(e => e.AcType)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE");

                entity.Property(e => e.AcType2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_2");

                entity.Property(e => e.AcType2Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_2_HLIGHT");

                entity.Property(e => e.AcTypeHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_HLIGHT");

                entity.Property(e => e.AcUd10Bit).HasColumnName("AC_UD10_BIT");

                entity.Property(e => e.AcUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD10_DATE");

                entity.Property(e => e.AcUd10Id).HasColumnName("AC_UD10_ID");

                entity.Property(e => e.AcUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_ID_NAME");

                entity.Property(e => e.AcUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd10Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD10_NUMERIC");

                entity.Property(e => e.AcUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_TEXT");

                entity.Property(e => e.AcUd11Bit).HasColumnName("AC_UD11_BIT");

                entity.Property(e => e.AcUd11Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD11_TEXT");

                entity.Property(e => e.AcUd12Bit).HasColumnName("AC_UD12_BIT");

                entity.Property(e => e.AcUd12Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD12_TEXT");

                entity.Property(e => e.AcUd13Bit).HasColumnName("AC_UD13_BIT");

                entity.Property(e => e.AcUd13Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD13_TEXT");

                entity.Property(e => e.AcUd14Bit).HasColumnName("AC_UD14_BIT");

                entity.Property(e => e.AcUd14Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD14_TEXT");

                entity.Property(e => e.AcUd15Bit).HasColumnName("AC_UD15_BIT");

                entity.Property(e => e.AcUd15Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD15_TEXT");

                entity.Property(e => e.AcUd16Bit).HasColumnName("AC_UD16_BIT");

                entity.Property(e => e.AcUd17Bit).HasColumnName("AC_UD17_BIT");

                entity.Property(e => e.AcUd18Bit).HasColumnName("AC_UD18_BIT");

                entity.Property(e => e.AcUd19Bit).HasColumnName("AC_UD19_BIT");

                entity.Property(e => e.AcUd1Bit).HasColumnName("AC_UD1_BIT");

                entity.Property(e => e.AcUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD1_DATE");

                entity.Property(e => e.AcUd1Id).HasColumnName("AC_UD1_ID");

                entity.Property(e => e.AcUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_ID_NAME");

                entity.Property(e => e.AcUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd1Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD1_NUMERIC");

                entity.Property(e => e.AcUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_TEXT");

                entity.Property(e => e.AcUd20Bit).HasColumnName("AC_UD20_BIT");

                entity.Property(e => e.AcUd21Bit).HasColumnName("AC_UD21_BIT");

                entity.Property(e => e.AcUd22Bit).HasColumnName("AC_UD22_BIT");

                entity.Property(e => e.AcUd23Bit).HasColumnName("AC_UD23_BIT");

                entity.Property(e => e.AcUd24Bit).HasColumnName("AC_UD24_BIT");

                entity.Property(e => e.AcUd2Bit).HasColumnName("AC_UD2_BIT");

                entity.Property(e => e.AcUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD2_DATE");

                entity.Property(e => e.AcUd2Id).HasColumnName("AC_UD2_ID");

                entity.Property(e => e.AcUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_ID_NAME");

                entity.Property(e => e.AcUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd2Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD2_NUMERIC");

                entity.Property(e => e.AcUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_TEXT");

                entity.Property(e => e.AcUd3Bit).HasColumnName("AC_UD3_BIT");

                entity.Property(e => e.AcUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD3_DATE");

                entity.Property(e => e.AcUd3Id).HasColumnName("AC_UD3_ID");

                entity.Property(e => e.AcUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_ID_NAME");

                entity.Property(e => e.AcUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd3Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD3_NUMERIC");

                entity.Property(e => e.AcUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_TEXT");

                entity.Property(e => e.AcUd4Bit).HasColumnName("AC_UD4_BIT");

                entity.Property(e => e.AcUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD4_DATE");

                entity.Property(e => e.AcUd4Id).HasColumnName("AC_UD4_ID");

                entity.Property(e => e.AcUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_ID_NAME");

                entity.Property(e => e.AcUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd4Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD4_NUMERIC");

                entity.Property(e => e.AcUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_TEXT");

                entity.Property(e => e.AcUd5Bit).HasColumnName("AC_UD5_BIT");

                entity.Property(e => e.AcUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD5_DATE");

                entity.Property(e => e.AcUd5Id).HasColumnName("AC_UD5_ID");

                entity.Property(e => e.AcUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_ID_NAME");

                entity.Property(e => e.AcUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd5Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD5_NUMERIC");

                entity.Property(e => e.AcUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_TEXT");

                entity.Property(e => e.AcUd6Bit).HasColumnName("AC_UD6_BIT");

                entity.Property(e => e.AcUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD6_DATE");

                entity.Property(e => e.AcUd6Id).HasColumnName("AC_UD6_ID");

                entity.Property(e => e.AcUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_ID_NAME");

                entity.Property(e => e.AcUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd6Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD6_NUMERIC");

                entity.Property(e => e.AcUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_TEXT");

                entity.Property(e => e.AcUd7Bit).HasColumnName("AC_UD7_BIT");

                entity.Property(e => e.AcUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD7_DATE");

                entity.Property(e => e.AcUd7Id).HasColumnName("AC_UD7_ID");

                entity.Property(e => e.AcUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_ID_NAME");

                entity.Property(e => e.AcUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd7Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD7_NUMERIC");

                entity.Property(e => e.AcUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_TEXT");

                entity.Property(e => e.AcUd8Bit).HasColumnName("AC_UD8_BIT");

                entity.Property(e => e.AcUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD8_DATE");

                entity.Property(e => e.AcUd8Id).HasColumnName("AC_UD8_ID");

                entity.Property(e => e.AcUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_ID_NAME");

                entity.Property(e => e.AcUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd8Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD8_NUMERIC");

                entity.Property(e => e.AcUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_TEXT");

                entity.Property(e => e.AcUd9Bit).HasColumnName("AC_UD9_BIT");

                entity.Property(e => e.AcUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD9_DATE");

                entity.Property(e => e.AcUd9Id).HasColumnName("AC_UD9_ID");

                entity.Property(e => e.AcUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_ID_NAME");

                entity.Property(e => e.AcUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd9Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD9_NUMERIC");

                entity.Property(e => e.AcUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_TEXT");

                entity.Property(e => e.AcaExternal)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_EXTERNAL");

                entity.Property(e => e.AcaId).HasColumnName("ACA_ID");

                entity.Property(e => e.AcaImport).HasColumnName("ACA_IMPORT");

                entity.Property(e => e.AcaReadonly).HasColumnName("ACA_READONLY");

                entity.Property(e => e.AcaUd10Bit).HasColumnName("ACA_UD10_BIT");

                entity.Property(e => e.AcaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD10_DATE");

                entity.Property(e => e.AcaUd10Id).HasColumnName("ACA_UD10_ID");

                entity.Property(e => e.AcaUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD10_ID_NAME");

                entity.Property(e => e.AcaUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACA_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.AcaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD10_NUMERIC");

                entity.Property(e => e.AcaUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD10_TEXT");

                entity.Property(e => e.AcaUd1Bit).HasColumnName("ACA_UD1_BIT");

                entity.Property(e => e.AcaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD1_DATE");

                entity.Property(e => e.AcaUd1Id).HasColumnName("ACA_UD1_ID");

                entity.Property(e => e.AcaUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD1_ID_NAME");

                entity.Property(e => e.AcaUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACA_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.AcaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD1_NUMERIC");

                entity.Property(e => e.AcaUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD1_TEXT");

                entity.Property(e => e.AcaUd2Bit).HasColumnName("ACA_UD2_BIT");

                entity.Property(e => e.AcaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD2_DATE");

                entity.Property(e => e.AcaUd2Id).HasColumnName("ACA_UD2_ID");

                entity.Property(e => e.AcaUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD2_ID_NAME");

                entity.Property(e => e.AcaUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACA_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.AcaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD2_NUMERIC");

                entity.Property(e => e.AcaUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD2_TEXT");

                entity.Property(e => e.AcaUd3Bit).HasColumnName("ACA_UD3_BIT");

                entity.Property(e => e.AcaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD3_DATE");

                entity.Property(e => e.AcaUd3Id).HasColumnName("ACA_UD3_ID");

                entity.Property(e => e.AcaUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD3_ID_NAME");

                entity.Property(e => e.AcaUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACA_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.AcaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD3_NUMERIC");

                entity.Property(e => e.AcaUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD3_TEXT");

                entity.Property(e => e.AcaUd4Bit).HasColumnName("ACA_UD4_BIT");

                entity.Property(e => e.AcaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD4_DATE");

                entity.Property(e => e.AcaUd4Id).HasColumnName("ACA_UD4_ID");

                entity.Property(e => e.AcaUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD4_ID_NAME");

                entity.Property(e => e.AcaUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACA_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.AcaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD4_NUMERIC");

                entity.Property(e => e.AcaUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD4_TEXT");

                entity.Property(e => e.AcaUd5Bit).HasColumnName("ACA_UD5_BIT");

                entity.Property(e => e.AcaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD5_DATE");

                entity.Property(e => e.AcaUd5Id).HasColumnName("ACA_UD5_ID");

                entity.Property(e => e.AcaUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD5_ID_NAME");

                entity.Property(e => e.AcaUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACA_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.AcaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD5_NUMERIC");

                entity.Property(e => e.AcaUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD5_TEXT");

                entity.Property(e => e.AcaUd6Bit).HasColumnName("ACA_UD6_BIT");

                entity.Property(e => e.AcaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD6_DATE");

                entity.Property(e => e.AcaUd6Id).HasColumnName("ACA_UD6_ID");

                entity.Property(e => e.AcaUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD6_ID_NAME");

                entity.Property(e => e.AcaUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACA_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.AcaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD6_NUMERIC");

                entity.Property(e => e.AcaUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD6_TEXT");

                entity.Property(e => e.AcaUd7Bit).HasColumnName("ACA_UD7_BIT");

                entity.Property(e => e.AcaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD7_DATE");

                entity.Property(e => e.AcaUd7Id).HasColumnName("ACA_UD7_ID");

                entity.Property(e => e.AcaUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD7_ID_NAME");

                entity.Property(e => e.AcaUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACA_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.AcaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD7_NUMERIC");

                entity.Property(e => e.AcaUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD7_TEXT");

                entity.Property(e => e.AcaUd8Bit).HasColumnName("ACA_UD8_BIT");

                entity.Property(e => e.AcaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD8_DATE");

                entity.Property(e => e.AcaUd8Id).HasColumnName("ACA_UD8_ID");

                entity.Property(e => e.AcaUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD8_ID_NAME");

                entity.Property(e => e.AcaUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACA_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.AcaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD8_NUMERIC");

                entity.Property(e => e.AcaUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD8_TEXT");

                entity.Property(e => e.AcaUd9Bit).HasColumnName("ACA_UD9_BIT");

                entity.Property(e => e.AcaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD9_DATE");

                entity.Property(e => e.AcaUd9Id).HasColumnName("ACA_UD9_ID");

                entity.Property(e => e.AcaUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD9_ID_NAME");

                entity.Property(e => e.AcaUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACA_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.AcaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD9_NUMERIC");

                entity.Property(e => e.AcaUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD9_TEXT");

                entity.Property(e => e.AccBusinessTelephonenumber)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BusinessTelephonenumber");

                entity.Property(e => e.AccEmail1Address)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_Email1Address");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_NAME");

                entity.Property(e => e.AccPrefEmail)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_EMAIL");

                entity.Property(e => e.AccPrefPhone)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_PHONE");

                entity.Property(e => e.AccaExternal)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_EXTERNAL");

                entity.Property(e => e.AccaId).HasColumnName("ACCA_ID");

                entity.Property(e => e.AccaNumber).HasColumnName("ACCA_NUMBER");

                entity.Property(e => e.AccaReadonly).HasColumnName("ACCA_READONLY");

                entity.Property(e => e.AccaStage).HasColumnName("ACCA_STAGE");

                entity.Property(e => e.AccaUd10Bit).HasColumnName("ACCA_UD10_BIT");

                entity.Property(e => e.AccaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD10_DATE");

                entity.Property(e => e.AccaUd10Id).HasColumnName("ACCA_UD10_ID");

                entity.Property(e => e.AccaUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD10_ID_NAME");

                entity.Property(e => e.AccaUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACCA_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.AccaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD10_NUMERIC");

                entity.Property(e => e.AccaUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD10_TEXT");

                entity.Property(e => e.AccaUd1Bit).HasColumnName("ACCA_UD1_BIT");

                entity.Property(e => e.AccaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD1_DATE");

                entity.Property(e => e.AccaUd1Id).HasColumnName("ACCA_UD1_ID");

                entity.Property(e => e.AccaUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD1_ID_NAME");

                entity.Property(e => e.AccaUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACCA_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.AccaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD1_NUMERIC");

                entity.Property(e => e.AccaUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD1_TEXT");

                entity.Property(e => e.AccaUd2Bit).HasColumnName("ACCA_UD2_BIT");

                entity.Property(e => e.AccaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD2_DATE");

                entity.Property(e => e.AccaUd2Id).HasColumnName("ACCA_UD2_ID");

                entity.Property(e => e.AccaUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD2_ID_NAME");

                entity.Property(e => e.AccaUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACCA_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.AccaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD2_NUMERIC");

                entity.Property(e => e.AccaUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD2_TEXT");

                entity.Property(e => e.AccaUd3Bit).HasColumnName("ACCA_UD3_BIT");

                entity.Property(e => e.AccaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD3_DATE");

                entity.Property(e => e.AccaUd3Id).HasColumnName("ACCA_UD3_ID");

                entity.Property(e => e.AccaUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD3_ID_NAME");

                entity.Property(e => e.AccaUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACCA_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.AccaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD3_NUMERIC");

                entity.Property(e => e.AccaUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD3_TEXT");

                entity.Property(e => e.AccaUd4Bit).HasColumnName("ACCA_UD4_BIT");

                entity.Property(e => e.AccaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD4_DATE");

                entity.Property(e => e.AccaUd4Id).HasColumnName("ACCA_UD4_ID");

                entity.Property(e => e.AccaUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD4_ID_NAME");

                entity.Property(e => e.AccaUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACCA_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.AccaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD4_NUMERIC");

                entity.Property(e => e.AccaUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD4_TEXT");

                entity.Property(e => e.AccaUd5Bit).HasColumnName("ACCA_UD5_BIT");

                entity.Property(e => e.AccaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD5_DATE");

                entity.Property(e => e.AccaUd5Id).HasColumnName("ACCA_UD5_ID");

                entity.Property(e => e.AccaUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD5_ID_NAME");

                entity.Property(e => e.AccaUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACCA_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.AccaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD5_NUMERIC");

                entity.Property(e => e.AccaUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD5_TEXT");

                entity.Property(e => e.AccaUd6Bit).HasColumnName("ACCA_UD6_BIT");

                entity.Property(e => e.AccaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD6_DATE");

                entity.Property(e => e.AccaUd6Id).HasColumnName("ACCA_UD6_ID");

                entity.Property(e => e.AccaUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD6_ID_NAME");

                entity.Property(e => e.AccaUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACCA_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.AccaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD6_NUMERIC");

                entity.Property(e => e.AccaUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD6_TEXT");

                entity.Property(e => e.AccaUd7Bit).HasColumnName("ACCA_UD7_BIT");

                entity.Property(e => e.AccaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD7_DATE");

                entity.Property(e => e.AccaUd7Id).HasColumnName("ACCA_UD7_ID");

                entity.Property(e => e.AccaUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD7_ID_NAME");

                entity.Property(e => e.AccaUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACCA_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.AccaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD7_NUMERIC");

                entity.Property(e => e.AccaUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD7_TEXT");

                entity.Property(e => e.AccaUd8Bit).HasColumnName("ACCA_UD8_BIT");

                entity.Property(e => e.AccaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD8_DATE");

                entity.Property(e => e.AccaUd8Id).HasColumnName("ACCA_UD8_ID");

                entity.Property(e => e.AccaUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD8_ID_NAME");

                entity.Property(e => e.AccaUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACCA_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.AccaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD8_NUMERIC");

                entity.Property(e => e.AccaUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD8_TEXT");

                entity.Property(e => e.AccaUd9Bit).HasColumnName("ACCA_UD9_BIT");

                entity.Property(e => e.AccaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD9_DATE");

                entity.Property(e => e.AccaUd9Id).HasColumnName("ACCA_UD9_ID");

                entity.Property(e => e.AccaUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD9_ID_NAME");

                entity.Property(e => e.AccaUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACCA_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.AccaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD9_NUMERIC");

                entity.Property(e => e.AccaUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD9_TEXT");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_MANAGER");

                entity.Property(e => e.AccountManagerEmail)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_MANAGER_EMAIL");

                entity.Property(e => e.AcgId).HasColumnName("ACG_ID");

                entity.Property(e => e.ActDeleted).HasColumnName("ACT_DELETED");

                entity.Property(e => e.ActExternal)
                    .HasMaxLength(255)
                    .HasColumnName("ACT_EXTERNAL");

                entity.Property(e => e.ActReadOnly).HasColumnName("ACT_READ_ONLY");

                entity.Property(e => e.ActivityType)
                    .HasMaxLength(255)
                    .HasColumnName("ACTIVITY_TYPE");

                entity.Property(e => e.ActivityTypeHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACTIVITY_TYPE_HLIGHT");

                entity.Property(e => e.BillingInformation)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_INFORMATION");

                entity.Property(e => e.Complete).HasColumnName("COMPLETE");

                entity.Property(e => e.ContactName)
                    .HasMaxLength(255)
                    .HasColumnName("CONTACT_NAME");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DateCompleted)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_COMPLETED");

                entity.Property(e => e.DaysOpen).HasColumnName("DAYS_OPEN");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.DueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DUE_DATE");

                entity.Property(e => e.Duration)
                    .HasMaxLength(50)
                    .HasColumnName("DURATION");

                entity.Property(e => e.Exported).HasColumnName("EXPORTED");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ImSummary)
                    .HasMaxLength(255)
                    .HasColumnName("IM_SUMMARY");

                entity.Property(e => e.MacId).HasColumnName("MAC_ID");

                entity.Property(e => e.MacStage)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_STAGE");

                entity.Property(e => e.MacStageHlight)
                    .HasMaxLength(100)
                    .HasColumnName("MAC_STAGE_HLIGHT");

                entity.Property(e => e.McrId).HasColumnName("MCR_ID");

                entity.Property(e => e.OpId).HasColumnName("OP_ID");

                entity.Property(e => e.OpStage)
                    .HasMaxLength(255)
                    .HasColumnName("OP_STAGE");

                entity.Property(e => e.OpState)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("OP_STATE");

                entity.Property(e => e.OpaExternal)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_EXTERNAL");

                entity.Property(e => e.OpaId).HasColumnName("OPA_ID");

                entity.Property(e => e.OpaReadonly).HasColumnName("OPA_READONLY");

                entity.Property(e => e.OpaUd10Bit).HasColumnName("OPA_UD10_BIT");

                entity.Property(e => e.OpaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD10_DATE");

                entity.Property(e => e.OpaUd10Id).HasColumnName("OPA_UD10_ID");

                entity.Property(e => e.OpaUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD10_ID_NAME");

                entity.Property(e => e.OpaUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPA_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.OpaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD10_NUMERIC");

                entity.Property(e => e.OpaUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD10_TEXT");

                entity.Property(e => e.OpaUd1Bit).HasColumnName("OPA_UD1_BIT");

                entity.Property(e => e.OpaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD1_DATE");

                entity.Property(e => e.OpaUd1Id).HasColumnName("OPA_UD1_ID");

                entity.Property(e => e.OpaUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD1_ID_NAME");

                entity.Property(e => e.OpaUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPA_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.OpaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD1_NUMERIC");

                entity.Property(e => e.OpaUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD1_TEXT");

                entity.Property(e => e.OpaUd2Bit).HasColumnName("OPA_UD2_BIT");

                entity.Property(e => e.OpaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD2_DATE");

                entity.Property(e => e.OpaUd2Id).HasColumnName("OPA_UD2_ID");

                entity.Property(e => e.OpaUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD2_ID_NAME");

                entity.Property(e => e.OpaUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPA_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.OpaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD2_NUMERIC");

                entity.Property(e => e.OpaUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD2_TEXT");

                entity.Property(e => e.OpaUd3Bit).HasColumnName("OPA_UD3_BIT");

                entity.Property(e => e.OpaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD3_DATE");

                entity.Property(e => e.OpaUd3Id).HasColumnName("OPA_UD3_ID");

                entity.Property(e => e.OpaUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD3_ID_NAME");

                entity.Property(e => e.OpaUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPA_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.OpaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD3_NUMERIC");

                entity.Property(e => e.OpaUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD3_TEXT");

                entity.Property(e => e.OpaUd4Bit).HasColumnName("OPA_UD4_BIT");

                entity.Property(e => e.OpaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD4_DATE");

                entity.Property(e => e.OpaUd4Id).HasColumnName("OPA_UD4_ID");

                entity.Property(e => e.OpaUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD4_ID_NAME");

                entity.Property(e => e.OpaUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPA_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.OpaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD4_NUMERIC");

                entity.Property(e => e.OpaUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD4_TEXT");

                entity.Property(e => e.OpaUd5Bit).HasColumnName("OPA_UD5_BIT");

                entity.Property(e => e.OpaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD5_DATE");

                entity.Property(e => e.OpaUd5Id).HasColumnName("OPA_UD5_ID");

                entity.Property(e => e.OpaUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD5_ID_NAME");

                entity.Property(e => e.OpaUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPA_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.OpaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD5_NUMERIC");

                entity.Property(e => e.OpaUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD5_TEXT");

                entity.Property(e => e.OpaUd6Bit).HasColumnName("OPA_UD6_BIT");

                entity.Property(e => e.OpaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD6_DATE");

                entity.Property(e => e.OpaUd6Id).HasColumnName("OPA_UD6_ID");

                entity.Property(e => e.OpaUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD6_ID_NAME");

                entity.Property(e => e.OpaUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPA_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.OpaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD6_NUMERIC");

                entity.Property(e => e.OpaUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD6_TEXT");

                entity.Property(e => e.OpaUd7Bit).HasColumnName("OPA_UD7_BIT");

                entity.Property(e => e.OpaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD7_DATE");

                entity.Property(e => e.OpaUd7Id).HasColumnName("OPA_UD7_ID");

                entity.Property(e => e.OpaUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD7_ID_NAME");

                entity.Property(e => e.OpaUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPA_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.OpaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD7_NUMERIC");

                entity.Property(e => e.OpaUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD7_TEXT");

                entity.Property(e => e.OpaUd8Bit).HasColumnName("OPA_UD8_BIT");

                entity.Property(e => e.OpaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD8_DATE");

                entity.Property(e => e.OpaUd8Id).HasColumnName("OPA_UD8_ID");

                entity.Property(e => e.OpaUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD8_ID_NAME");

                entity.Property(e => e.OpaUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPA_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.OpaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD8_NUMERIC");

                entity.Property(e => e.OpaUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD8_TEXT");

                entity.Property(e => e.OpaUd9Bit).HasColumnName("OPA_UD9_BIT");

                entity.Property(e => e.OpaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD9_DATE");

                entity.Property(e => e.OpaUd9Id).HasColumnName("OPA_UD9_ID");

                entity.Property(e => e.OpaUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD9_ID_NAME");

                entity.Property(e => e.OpaUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPA_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.OpaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD9_NUMERIC");

                entity.Property(e => e.OpaUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD9_TEXT");

                entity.Property(e => e.Overdue).HasColumnName("OVERDUE");

                entity.Property(e => e.Parent)
                    .HasMaxLength(50)
                    .HasColumnName("PARENT");

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.ParentName)
                    .HasMaxLength(255)
                    .HasColumnName("PARENT_NAME");

                entity.Property(e => e.ParentSummary)
                    .HasMaxLength(255)
                    .HasColumnName("PARENT_SUMMARY")
                    .UseCollation("Latin1_General_CI_AS");

                entity.Property(e => e.PercentComplete).HasColumnName("PERCENT_COMPLETE");

                entity.Property(e => e.PjId).HasColumnName("PJ_ID");

                entity.Property(e => e.PjStage)
                    .HasMaxLength(255)
                    .HasColumnName("PJ_STAGE");

                entity.Property(e => e.PjaExternal)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_EXTERNAL");

                entity.Property(e => e.PjaId).HasColumnName("PJA_ID");

                entity.Property(e => e.PjaReadonly).HasColumnName("PJA_READONLY");

                entity.Property(e => e.PjaUd10Bit).HasColumnName("PJA_UD10_BIT");

                entity.Property(e => e.PjaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD10_DATE");

                entity.Property(e => e.PjaUd10Id).HasColumnName("PJA_UD10_ID");

                entity.Property(e => e.PjaUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD10_ID_NAME");

                entity.Property(e => e.PjaUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJA_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.PjaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD10_NUMERIC");

                entity.Property(e => e.PjaUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD10_TEXT");

                entity.Property(e => e.PjaUd1Bit).HasColumnName("PJA_UD1_BIT");

                entity.Property(e => e.PjaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD1_DATE");

                entity.Property(e => e.PjaUd1Id).HasColumnName("PJA_UD1_ID");

                entity.Property(e => e.PjaUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD1_ID_NAME");

                entity.Property(e => e.PjaUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJA_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.PjaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD1_NUMERIC");

                entity.Property(e => e.PjaUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD1_TEXT");

                entity.Property(e => e.PjaUd2Bit).HasColumnName("PJA_UD2_BIT");

                entity.Property(e => e.PjaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD2_DATE");

                entity.Property(e => e.PjaUd2Id).HasColumnName("PJA_UD2_ID");

                entity.Property(e => e.PjaUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD2_ID_NAME");

                entity.Property(e => e.PjaUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJA_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.PjaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD2_NUMERIC");

                entity.Property(e => e.PjaUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD2_TEXT");

                entity.Property(e => e.PjaUd3Bit).HasColumnName("PJA_UD3_BIT");

                entity.Property(e => e.PjaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD3_DATE");

                entity.Property(e => e.PjaUd3Id).HasColumnName("PJA_UD3_ID");

                entity.Property(e => e.PjaUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD3_ID_NAME");

                entity.Property(e => e.PjaUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJA_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.PjaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD3_NUMERIC");

                entity.Property(e => e.PjaUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD3_TEXT");

                entity.Property(e => e.PjaUd4Bit).HasColumnName("PJA_UD4_BIT");

                entity.Property(e => e.PjaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD4_DATE");

                entity.Property(e => e.PjaUd4Id).HasColumnName("PJA_UD4_ID");

                entity.Property(e => e.PjaUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD4_ID_NAME");

                entity.Property(e => e.PjaUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJA_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.PjaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD4_NUMERIC");

                entity.Property(e => e.PjaUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD4_TEXT");

                entity.Property(e => e.PjaUd5Bit).HasColumnName("PJA_UD5_BIT");

                entity.Property(e => e.PjaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD5_DATE");

                entity.Property(e => e.PjaUd5Id).HasColumnName("PJA_UD5_ID");

                entity.Property(e => e.PjaUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD5_ID_NAME");

                entity.Property(e => e.PjaUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJA_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.PjaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD5_NUMERIC");

                entity.Property(e => e.PjaUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD5_TEXT");

                entity.Property(e => e.PjaUd6Bit).HasColumnName("PJA_UD6_BIT");

                entity.Property(e => e.PjaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD6_DATE");

                entity.Property(e => e.PjaUd6Id).HasColumnName("PJA_UD6_ID");

                entity.Property(e => e.PjaUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD6_ID_NAME");

                entity.Property(e => e.PjaUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJA_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.PjaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD6_NUMERIC");

                entity.Property(e => e.PjaUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD6_TEXT");

                entity.Property(e => e.PjaUd7Bit).HasColumnName("PJA_UD7_BIT");

                entity.Property(e => e.PjaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD7_DATE");

                entity.Property(e => e.PjaUd7Id).HasColumnName("PJA_UD7_ID");

                entity.Property(e => e.PjaUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD7_ID_NAME");

                entity.Property(e => e.PjaUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJA_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.PjaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD7_NUMERIC");

                entity.Property(e => e.PjaUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD7_TEXT");

                entity.Property(e => e.PjaUd8Bit).HasColumnName("PJA_UD8_BIT");

                entity.Property(e => e.PjaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD8_DATE");

                entity.Property(e => e.PjaUd8Id).HasColumnName("PJA_UD8_ID");

                entity.Property(e => e.PjaUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD8_ID_NAME");

                entity.Property(e => e.PjaUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJA_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.PjaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD8_NUMERIC");

                entity.Property(e => e.PjaUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD8_TEXT");

                entity.Property(e => e.PjaUd9Bit).HasColumnName("PJA_UD9_BIT");

                entity.Property(e => e.PjaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD9_DATE");

                entity.Property(e => e.PjaUd9Id).HasColumnName("PJA_UD9_ID");

                entity.Property(e => e.PjaUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD9_ID_NAME");

                entity.Property(e => e.PjaUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJA_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.PjaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD9_NUMERIC");

                entity.Property(e => e.PjaUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD9_TEXT");

                entity.Property(e => e.Priority)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("PRIORITY");

                entity.Property(e => e.PriorityHlight)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("PRIORITY_HLIGHT");

                entity.Property(e => e.PriorityId).HasColumnName("PRIORITY_ID");

                entity.Property(e => e.Private).HasColumnName("PRIVATE");

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.Reminder).HasColumnName("REMINDER");

                entity.Property(e => e.ReminderAlerted).HasColumnName("REMINDER_ALERTED");

                entity.Property(e => e.ReminderMinutes).HasColumnName("REMINDER_MINUTES");

                entity.Property(e => e.ReminderMinutesName)
                    .HasMaxLength(18)
                    .HasColumnName("REMINDER_MINUTES_NAME");

                entity.Property(e => e.SecurityGroup)
                    .HasMaxLength(255)
                    .HasColumnName("SECURITY_GROUP");

                entity.Property(e => e.SecurityId).HasColumnName("SECURITY_ID");

                entity.Property(e => e.SecurityObject)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SECURITY_OBJECT");

                entity.Property(e => e.SecurityOwner).HasColumnName("SECURITY_OWNER");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.SemName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_NAME");

                entity.Property(e => e.Sensitivity).HasColumnName("SENSITIVITY");

                entity.Property(e => e.SensitivityId).HasColumnName("SENSITIVITY_ID");

                entity.Property(e => e.ShowOnCalendar).HasColumnName("SHOW_ON_CALENDAR");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("START_DATE");

                entity.Property(e => e.Status)
                    .HasMaxLength(23)
                    .IsUnicode(false)
                    .HasColumnName("STATUS");

                entity.Property(e => e.StatusHlight)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("STATUS_HLIGHT");

                entity.Property(e => e.StatusId).HasColumnName("STATUS_ID");

                entity.Property(e => e.StgId).HasColumnName("STG_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Type).HasColumnName("TYPE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");

                entity.Property(e => e.UsIdSupport).HasColumnName("US_ID_SUPPORT");

                entity.Property(e => e.UsName)
                    .HasMaxLength(255)
                    .HasColumnName("US_NAME");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");

                entity.Property(e => e.UsgName)
                    .HasMaxLength(255)
                    .HasColumnName("USG_NAME");
            });

            modelBuilder.Entity<VAccountActivityNote>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vAccountActivityNotes");

                entity.Property(e => e.AcGroup)
                    .HasMaxLength(255)
                    .HasColumnName("AC_GROUP");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcIdEmpty).HasColumnName("AC_ID_EMPTY");

                entity.Property(e => e.AcManagerName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_NAME");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.AcaId).HasColumnName("ACA_ID");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_NAME");

                entity.Property(e => e.AccaId).HasColumnName("ACCA_ID");

                entity.Property(e => e.AcoId).HasColumnName("ACO_ID");

                entity.Property(e => e.AcpId).HasColumnName("ACP_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CreatorEmail)
                    .HasMaxLength(255)
                    .HasColumnName("CREATOR_EMAIL");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details)
                    .HasMaxLength(4000)
                    .HasColumnName("DETAILS");

                entity.Property(e => e.HasReminder).HasColumnName("HAS_REMINDER");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.NoteType)
                    .HasMaxLength(30)
                    .HasColumnName("NOTE_TYPE");

                entity.Property(e => e.NoteTypeSummary)
                    .HasMaxLength(58)
                    .HasColumnName("NOTE_TYPE_SUMMARY");

                entity.Property(e => e.Notice).HasColumnName("NOTICE");

                entity.Property(e => e.NtDeleted).HasColumnName("NT_DELETED");

                entity.Property(e => e.NtEmpty).HasColumnName("NT_EMPTY");

                entity.Property(e => e.NtExternal)
                    .HasMaxLength(255)
                    .HasColumnName("NT_EXTERNAL");

                entity.Property(e => e.NtId).HasColumnName("NT_ID");

                entity.Property(e => e.NtImport).HasColumnName("NT_IMPORT");

                entity.Property(e => e.OpId).HasColumnName("OP_ID");

                entity.Property(e => e.OpaId).HasColumnName("OPA_ID");

                entity.Property(e => e.OpcId).HasColumnName("OPC_ID");

                entity.Property(e => e.OpcaId).HasColumnName("OPCA_ID");

                entity.Property(e => e.OpcqId).HasColumnName("OPCQ_ID");

                entity.Property(e => e.OpqId).HasColumnName("OPQ_ID");

                entity.Property(e => e.OutlookNote).HasColumnName("OUTLOOK_NOTE");

                entity.Property(e => e.Owner)
                    .HasMaxLength(101)
                    .HasColumnName("OWNER");

                entity.Property(e => e.OwnerEmail)
                    .HasMaxLength(255)
                    .HasColumnName("OWNER_EMAIL");

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.ParentSummary)
                    .HasMaxLength(255)
                    .HasColumnName("PARENT_SUMMARY");

                entity.Property(e => e.ParentType)
                    .HasMaxLength(30)
                    .HasColumnName("PARENT_TYPE");

                entity.Property(e => e.PjId).HasColumnName("PJ_ID");

                entity.Property(e => e.PjaId).HasColumnName("PJA_ID");

                entity.Property(e => e.ReminderAlerted).HasColumnName("REMINDER_ALERTED");

                entity.Property(e => e.ReminderDate)
                    .HasColumnType("datetime")
                    .HasColumnName("REMINDER_DATE");

                entity.Property(e => e.ReminderDue).HasColumnName("REMINDER_DUE");

                entity.Property(e => e.SecurityGroup)
                    .HasMaxLength(255)
                    .HasColumnName("SECURITY_GROUP");

                entity.Property(e => e.SecurityId).HasColumnName("SECURITY_ID");

                entity.Property(e => e.SecurityObject)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SECURITY_OBJECT");

                entity.Property(e => e.SecurityOwner).HasColumnName("SECURITY_OWNER");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.ShowOnPortal).HasColumnName("SHOW_ON_PORTAL");

                entity.Property(e => e.Sticky).HasColumnName("STICKY");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");

                entity.Property(e => e.UsIdSupport).HasColumnName("US_ID_SUPPORT");

                entity.Property(e => e.UsaId).HasColumnName("USA_ID");
            });

            modelBuilder.Entity<VAccountActivitySecurity>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vAccountActivitySecurity");

                entity.Property(e => e.AcId).HasColumnName("ac_id");

                entity.Property(e => e.AcaId).HasColumnName("aca_id");

                entity.Property(e => e.AccountSummary)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_SUMMARY");

                entity.Property(e => e.CanSeeObject).HasColumnName("CAN_SEE_OBJECT");

                entity.Property(e => e.UsId).HasColumnName("us_id");

                entity.Property(e => e.UserSummary)
                    .HasMaxLength(255)
                    .HasColumnName("USER_SUMMARY");

                entity.Property(e => e.VisibilityReason)
                    .IsRequired()
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("VISIBILITY_REASON");
            });

            modelBuilder.Entity<VAccountCurrency>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vAccountCurrencies");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcurId).HasColumnName("ACUR_ID");

                entity.Property(e => e.BaseExchange).HasColumnName("BASE_EXCHANGE");

                entity.Property(e => e.Code)
                    .HasMaxLength(3)
                    .HasColumnName("CODE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CurDeleted).HasColumnName("CUR_DELETED");

                entity.Property(e => e.CurExternal)
                    .HasMaxLength(255)
                    .HasColumnName("CUR_EXTERNAL");

                entity.Property(e => e.CurId).HasColumnName("CUR_ID");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Discount).HasColumnName("DISCOUNT");

                entity.Property(e => e.Exclusive).HasColumnName("EXCLUSIVE");

                entity.Property(e => e.FneId).HasColumnName("FNE_ID");

                entity.Property(e => e.IsDefault).HasColumnName("IS_DEFAULT");

                entity.Property(e => e.Order).HasColumnName("ORDER");

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.PriceList).HasColumnName("PRICE_LIST");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Symbol)
                    .HasMaxLength(3)
                    .HasColumnName("SYMBOL");

                entity.Property(e => e.TxcId).HasColumnName("TXC_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<VAccountFinancialEntitiesList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vAccountFinancialEntitiesList");

                entity.Property(e => e.AcAlert)
                    .HasMaxLength(255)
                    .HasColumnName("AC_ALERT");

                entity.Property(e => e.AcAlertHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_ALERT_HLIGHT");

                entity.Property(e => e.AcDeleted).HasColumnName("AC_DELETED");

                entity.Property(e => e.AcDiscount)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("AC_DISCOUNT");

                entity.Property(e => e.AcDormant).HasColumnName("AC_DORMANT");

                entity.Property(e => e.AcExternal)
                    .HasMaxLength(255)
                    .HasColumnName("AC_EXTERNAL");

                entity.Property(e => e.AcFlag).HasColumnName("AC_FLAG");

                entity.Property(e => e.AcGroup)
                    .HasMaxLength(255)
                    .HasColumnName("AC_GROUP");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcImport).HasColumnName("AC_IMPORT");

                entity.Property(e => e.AcIndustry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_INDUSTRY");

                entity.Property(e => e.AcIndustryHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_INDUSTRY_HLIGHT");

                entity.Property(e => e.AcLabel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LABEL");

                entity.Property(e => e.AcLabelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LABEL_HLIGHT");

                entity.Property(e => e.AcLevel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LEVEL");

                entity.Property(e => e.AcLevelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LEVEL_HLIGHT");

                entity.Property(e => e.AcNumber)
                    .HasMaxLength(10)
                    .HasColumnName("AC_NUMBER")
                    .IsFixedLength(true);

                entity.Property(e => e.AcPotential)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("AC_POTENTIAL");

                entity.Property(e => e.AcSales)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("AC_SALES");

                entity.Property(e => e.AcSource)
                    .HasMaxLength(255)
                    .HasColumnName("AC_SOURCE");

                entity.Property(e => e.AcSourceHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_SOURCE_HLIGHT");

                entity.Property(e => e.AcType)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE");

                entity.Property(e => e.AcType2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_2");

                entity.Property(e => e.AcType2Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_2_HLIGHT");

                entity.Property(e => e.AcTypeHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_HLIGHT");

                entity.Property(e => e.AcUd1)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1");

                entity.Property(e => e.AcUd10)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10");

                entity.Property(e => e.AcUd10Bit).HasColumnName("AC_UD10_BIT");

                entity.Property(e => e.AcUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD10_DATE");

                entity.Property(e => e.AcUd10Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_ID");

                entity.Property(e => e.AcUd10IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD10_ID_HLIGHT");

                entity.Property(e => e.AcUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD10_NUMERIC");

                entity.Property(e => e.AcUd10Uid).HasColumnName("AC_UD10_UID");

                entity.Property(e => e.AcUd11)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD11");

                entity.Property(e => e.AcUd11Bit).HasColumnName("AC_UD11_BIT");

                entity.Property(e => e.AcUd12)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD12");

                entity.Property(e => e.AcUd12Bit).HasColumnName("AC_UD12_BIT");

                entity.Property(e => e.AcUd13)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD13");

                entity.Property(e => e.AcUd13Bit).HasColumnName("AC_UD13_BIT");

                entity.Property(e => e.AcUd14)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD14");

                entity.Property(e => e.AcUd14Bit).HasColumnName("AC_UD14_BIT");

                entity.Property(e => e.AcUd15)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD15");

                entity.Property(e => e.AcUd15Bit).HasColumnName("AC_UD15_BIT");

                entity.Property(e => e.AcUd16Bit).HasColumnName("AC_UD16_BIT");

                entity.Property(e => e.AcUd17Bit).HasColumnName("AC_UD17_BIT");

                entity.Property(e => e.AcUd18Bit).HasColumnName("AC_UD18_BIT");

                entity.Property(e => e.AcUd19Bit).HasColumnName("AC_UD19_BIT");

                entity.Property(e => e.AcUd1Bit).HasColumnName("AC_UD1_BIT");

                entity.Property(e => e.AcUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD1_DATE");

                entity.Property(e => e.AcUd1Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_ID");

                entity.Property(e => e.AcUd1IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD1_ID_HLIGHT");

                entity.Property(e => e.AcUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD1_NUMERIC");

                entity.Property(e => e.AcUd1Uid).HasColumnName("AC_UD1_UID");

                entity.Property(e => e.AcUd2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2");

                entity.Property(e => e.AcUd20Bit).HasColumnName("AC_UD20_BIT");

                entity.Property(e => e.AcUd21Bit).HasColumnName("AC_UD21_BIT");

                entity.Property(e => e.AcUd22Bit).HasColumnName("AC_UD22_BIT");

                entity.Property(e => e.AcUd23Bit).HasColumnName("AC_UD23_BIT");

                entity.Property(e => e.AcUd24Bit).HasColumnName("AC_UD24_BIT");

                entity.Property(e => e.AcUd2Bit).HasColumnName("AC_UD2_BIT");

                entity.Property(e => e.AcUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD2_DATE");

                entity.Property(e => e.AcUd2Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_ID");

                entity.Property(e => e.AcUd2IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD2_ID_HLIGHT");

                entity.Property(e => e.AcUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD2_NUMERIC");

                entity.Property(e => e.AcUd2Uid).HasColumnName("AC_UD2_UID");

                entity.Property(e => e.AcUd3)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3");

                entity.Property(e => e.AcUd3Bit).HasColumnName("AC_UD3_BIT");

                entity.Property(e => e.AcUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD3_DATE");

                entity.Property(e => e.AcUd3Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_ID");

                entity.Property(e => e.AcUd3IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD3_ID_HLIGHT");

                entity.Property(e => e.AcUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD3_NUMERIC");

                entity.Property(e => e.AcUd3Uid).HasColumnName("AC_UD3_UID");

                entity.Property(e => e.AcUd4)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4");

                entity.Property(e => e.AcUd4Bit).HasColumnName("AC_UD4_BIT");

                entity.Property(e => e.AcUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD4_DATE");

                entity.Property(e => e.AcUd4Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_ID");

                entity.Property(e => e.AcUd4IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD4_ID_HLIGHT");

                entity.Property(e => e.AcUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD4_NUMERIC");

                entity.Property(e => e.AcUd4Uid).HasColumnName("AC_UD4_UID");

                entity.Property(e => e.AcUd5)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5");

                entity.Property(e => e.AcUd5Bit).HasColumnName("AC_UD5_BIT");

                entity.Property(e => e.AcUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD5_DATE");

                entity.Property(e => e.AcUd5Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_ID");

                entity.Property(e => e.AcUd5IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD5_ID_HLIGHT");

                entity.Property(e => e.AcUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD5_NUMERIC");

                entity.Property(e => e.AcUd5Uid).HasColumnName("AC_UD5_UID");

                entity.Property(e => e.AcUd6)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6");

                entity.Property(e => e.AcUd6Bit).HasColumnName("AC_UD6_BIT");

                entity.Property(e => e.AcUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD6_DATE");

                entity.Property(e => e.AcUd6Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_ID");

                entity.Property(e => e.AcUd6IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD6_ID_HLIGHT");

                entity.Property(e => e.AcUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD6_NUMERIC");

                entity.Property(e => e.AcUd6Uid).HasColumnName("AC_UD6_UID");

                entity.Property(e => e.AcUd7)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7");

                entity.Property(e => e.AcUd7Bit).HasColumnName("AC_UD7_BIT");

                entity.Property(e => e.AcUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD7_DATE");

                entity.Property(e => e.AcUd7Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_ID");

                entity.Property(e => e.AcUd7IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD7_ID_HLIGHT");

                entity.Property(e => e.AcUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD7_NUMERIC");

                entity.Property(e => e.AcUd7Uid).HasColumnName("AC_UD7_UID");

                entity.Property(e => e.AcUd8)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8");

                entity.Property(e => e.AcUd8Bit).HasColumnName("AC_UD8_BIT");

                entity.Property(e => e.AcUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD8_DATE");

                entity.Property(e => e.AcUd8Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_ID");

                entity.Property(e => e.AcUd8IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD8_ID_HLIGHT");

                entity.Property(e => e.AcUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD8_NUMERIC");

                entity.Property(e => e.AcUd8Uid).HasColumnName("AC_UD8_UID");

                entity.Property(e => e.AcUd9)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9");

                entity.Property(e => e.AcUd9Bit).HasColumnName("AC_UD9_BIT");

                entity.Property(e => e.AcUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD9_DATE");

                entity.Property(e => e.AcUd9Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_ID");

                entity.Property(e => e.AcUd9IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD9_ID_HLIGHT");

                entity.Property(e => e.AcUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD9_NUMERIC");

                entity.Property(e => e.AcUd9Uid).HasColumnName("AC_UD9_UID");

                entity.Property(e => e.AccIdSales).HasColumnName("ACC_ID_SALES");

                entity.Property(e => e.AccIdSupport).HasColumnName("ACC_ID_SUPPORT");

                entity.Property(e => e.AccPrefEmail)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_EMAIL");

                entity.Property(e => e.AccPrefPhone)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_PHONE");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_MANAGER");

                entity.Property(e => e.AcfneId).HasColumnName("ACFNE_ID");

                entity.Property(e => e.AcgId).HasColumnName("ACG_ID");

                entity.Property(e => e.Address1)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_1");

                entity.Property(e => e.Address2)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_2");

                entity.Property(e => e.Address3)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_3");

                entity.Property(e => e.BaseCurrency)
                    .HasMaxLength(5)
                    .HasColumnName("BASE_CURRENCY");

                entity.Property(e => e.BillingAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_ADDRESS_1");

                entity.Property(e => e.BillingAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_ADDRESS_2");

                entity.Property(e => e.BillingAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_ADDRESS_3");

                entity.Property(e => e.BillingCountry)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_COUNTRY");

                entity.Property(e => e.BillingCounty)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_COUNTY");

                entity.Property(e => e.BillingPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_POSTCODE");

                entity.Property(e => e.BillingPostcodeTrim)
                    .HasMaxLength(15)
                    .HasColumnName("BILLING_POSTCODE_TRIM");

                entity.Property(e => e.BillingTown)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_TOWN");

                entity.Property(e => e.ContactEmail)
                    .HasMaxLength(255)
                    .HasColumnName("CONTACT_EMAIL");

                entity.Property(e => e.ContactPhone)
                    .HasMaxLength(255)
                    .HasColumnName("CONTACT_PHONE");

                entity.Property(e => e.Country)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.County)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTY");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CsId).HasColumnName("CS_ID");

                entity.Property(e => e.CurId).HasColumnName("CUR_ID");

                entity.Property(e => e.CurName)
                    .HasMaxLength(255)
                    .HasColumnName("CUR_NAME");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.EmailDomains)
                    .HasMaxLength(1024)
                    .HasColumnName("EMAIL_DOMAINS");

                entity.Property(e => e.FacebookImage)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_IMAGE");

                entity.Property(e => e.FacebookName)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_NAME");

                entity.Property(e => e.FacebookPrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_PRIVATE_ID");

                entity.Property(e => e.FacebookProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_PROFILE_URL");

                entity.Property(e => e.FacebookPublicId)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_PUBLIC_ID");

                entity.Property(e => e.Fax1)
                    .HasMaxLength(50)
                    .HasColumnName("FAX_1");

                entity.Property(e => e.Fax1Formatted)
                    .HasMaxLength(62)
                    .HasColumnName("FAX_1_FORMATTED");

                entity.Property(e => e.Fax2)
                    .HasMaxLength(50)
                    .HasColumnName("FAX_2");

                entity.Property(e => e.Fax2Formatted)
                    .HasMaxLength(62)
                    .HasColumnName("FAX_2_FORMATTED");

                entity.Property(e => e.Fax3)
                    .HasMaxLength(50)
                    .HasColumnName("FAX_3");

                entity.Property(e => e.Fax3Formatted)
                    .HasMaxLength(62)
                    .HasColumnName("FAX_3_FORMATTED");

                entity.Property(e => e.FneId).HasColumnName("FNE_ID");

                entity.Property(e => e.FneName)
                    .HasMaxLength(255)
                    .HasColumnName("FNE_NAME");

                entity.Property(e => e.GplusImage)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_IMAGE");

                entity.Property(e => e.GplusName)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_NAME");

                entity.Property(e => e.GplusPrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_PRIVATE_ID");

                entity.Property(e => e.GplusProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_PROFILE_URL");

                entity.Property(e => e.GplusPublicId)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_PUBLIC_ID");

                entity.Property(e => e.ImSummary)
                    .HasMaxLength(255)
                    .HasColumnName("IM_SUMMARY");

                entity.Property(e => e.Industry).HasColumnName("INDUSTRY");

                entity.Property(e => e.Label).HasColumnName("LABEL");

                entity.Property(e => e.LcId).HasColumnName("LC_ID");

                entity.Property(e => e.LeadListSummary)
                    .HasMaxLength(255)
                    .HasColumnName("LEAD_LIST_SUMMARY");

                entity.Property(e => e.LeadSummary)
                    .HasMaxLength(255)
                    .HasColumnName("LEAD_SUMMARY");

                entity.Property(e => e.Level).HasColumnName("LEVEL");

                entity.Property(e => e.LinkedinImage)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_IMAGE");

                entity.Property(e => e.LinkedinName)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_NAME");

                entity.Property(e => e.LinkedinPrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_PRIVATE_ID");

                entity.Property(e => e.LinkedinProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_PROFILE_URL");

                entity.Property(e => e.LinkedinPublicId)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_PUBLIC_ID");

                entity.Property(e => e.MainSalesContact)
                    .HasMaxLength(255)
                    .HasColumnName("MAIN_SALES_CONTACT");

                entity.Property(e => e.MainSupportContact)
                    .HasMaxLength(255)
                    .HasColumnName("MAIN_SUPPORT_CONTACT");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .HasColumnName("NAME");

                entity.Property(e => e.NameLongestWord)
                    .HasMaxLength(255)
                    .HasColumnName("NAME_LONGEST_WORD");

                entity.Property(e => e.NameSoundex)
                    .HasMaxLength(4)
                    .HasColumnName("NAME_SOUNDEX");

                entity.Property(e => e.NumberEmployees)
                    .HasMaxLength(10)
                    .HasColumnName("NUMBER_EMPLOYEES");

                entity.Property(e => e.Parent).HasColumnName("PARENT");

                entity.Property(e => e.Phone1)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_1");

                entity.Property(e => e.Phone1Trim)
                    .HasMaxLength(15)
                    .HasColumnName("PHONE_1_TRIM");

                entity.Property(e => e.Phone2)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_2");

                entity.Property(e => e.Phone2Trim)
                    .HasMaxLength(15)
                    .HasColumnName("PHONE_2_TRIM");

                entity.Property(e => e.Phone3)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_3");

                entity.Property(e => e.Phone3Trim)
                    .HasMaxLength(15)
                    .HasColumnName("PHONE_3_TRIM");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(255)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.PostcodeTrim)
                    .HasMaxLength(15)
                    .HasColumnName("POSTCODE_TRIM");

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.ShortCode)
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Site)
                    .HasMaxLength(100)
                    .HasColumnName("SITE");

                entity.Property(e => e.Source).HasColumnName("SOURCE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.SummaryTrim)
                    .HasMaxLength(100)
                    .HasColumnName("SUMMARY_TRIM");

                entity.Property(e => e.SupportContactEmail)
                    .HasMaxLength(255)
                    .HasColumnName("SUPPORT_CONTACT_EMAIL");

                entity.Property(e => e.SupportContactPhone)
                    .HasMaxLength(255)
                    .HasColumnName("SUPPORT_CONTACT_PHONE");

                entity.Property(e => e.SupportManager)
                    .HasMaxLength(255)
                    .HasColumnName("SUPPORT_MANAGER");

                entity.Property(e => e.Town)
                    .HasMaxLength(255)
                    .HasColumnName("TOWN");

                entity.Property(e => e.Twitter1Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_IMAGE");

                entity.Property(e => e.Twitter1Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_NAME");

                entity.Property(e => e.Twitter1PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_PRIVATE_ID");

                entity.Property(e => e.Twitter1ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_PROFILE_URL");

                entity.Property(e => e.Twitter1PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_PUBLIC_ID");

                entity.Property(e => e.Twitter2Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_IMAGE");

                entity.Property(e => e.Twitter2Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_NAME");

                entity.Property(e => e.Twitter2PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_PRIVATE_ID");

                entity.Property(e => e.Twitter2ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_PROFILE_URL");

                entity.Property(e => e.Twitter2PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_PUBLIC_ID");

                entity.Property(e => e.Twitter3Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_IMAGE");

                entity.Property(e => e.Twitter3Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_NAME");

                entity.Property(e => e.Twitter3PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_PRIVATE_ID");

                entity.Property(e => e.Twitter3ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_PROFILE_URL");

                entity.Property(e => e.Twitter3PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_PUBLIC_ID");

                entity.Property(e => e.Twitter4Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_IMAGE");

                entity.Property(e => e.Twitter4Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_NAME");

                entity.Property(e => e.Twitter4PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_PRIVATE_ID");

                entity.Property(e => e.Twitter4ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_PROFILE_URL");

                entity.Property(e => e.Twitter4PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_PUBLIC_ID");

                entity.Property(e => e.Twitter5Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_IMAGE");

                entity.Property(e => e.Twitter5Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_NAME");

                entity.Property(e => e.Twitter5PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_PRIVATE_ID");

                entity.Property(e => e.Twitter5ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_PROFILE_URL");

                entity.Property(e => e.Twitter5PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_PUBLIC_ID");

                entity.Property(e => e.Type1).HasColumnName("TYPE_1");

                entity.Property(e => e.Type2).HasColumnName("TYPE_2");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsDept)
                    .HasMaxLength(128)
                    .HasColumnName("US_DEPT");

                entity.Property(e => e.UsDeptSupport)
                    .HasMaxLength(128)
                    .HasColumnName("US_DEPT_SUPPORT");

                entity.Property(e => e.UsEmail)
                    .HasMaxLength(255)
                    .HasColumnName("US_EMAIL");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");

                entity.Property(e => e.UsIdSupport).HasColumnName("US_ID_SUPPORT");

                entity.Property(e => e.UsSupportEmail)
                    .HasMaxLength(255)
                    .HasColumnName("US_SUPPORT_EMAIL");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");

                entity.Property(e => e.UsgIdSupport).HasColumnName("USG_ID_SUPPORT");

                entity.Property(e => e.UsgName)
                    .HasMaxLength(255)
                    .HasColumnName("USG_NAME");

                entity.Property(e => e.UsgNameSupport)
                    .HasMaxLength(255)
                    .HasColumnName("USG_NAME_SUPPORT");

                entity.Property(e => e.Validationmessage)
                    .HasMaxLength(255)
                    .HasColumnName("VALIDATIONMESSAGE");

                entity.Property(e => e.WebSite1)
                    .HasMaxLength(100)
                    .HasColumnName("WEB_SITE_1");

                entity.Property(e => e.WebSite2)
                    .HasMaxLength(100)
                    .HasColumnName("WEB_SITE_2");

                entity.Property(e => e.WebsiteTrim)
                    .HasMaxLength(100)
                    .HasColumnName("WEBSITE_TRIM");
            });

            modelBuilder.Entity<VAccountFinancialEntity>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vAccountFinancialEntities");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcfneDeleted).HasColumnName("ACFNE_DELETED");

                entity.Property(e => e.AcfneId).HasColumnName("ACFNE_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.FneExternal)
                    .HasMaxLength(255)
                    .HasColumnName("FNE_EXTERNAL");

                entity.Property(e => e.FneId).HasColumnName("FNE_ID");

                entity.Property(e => e.IsDefault).HasColumnName("IS_DEFAULT");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<VAccountMailCampaign>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vAccountMailCampaigns");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.MacDeleted).HasColumnName("MAC_DELETED");

                entity.Property(e => e.MacId).HasColumnName("MAC_ID");

                entity.Property(e => e.MacMedium)
                    .IsRequired()
                    .HasMaxLength(71)
                    .IsUnicode(false)
                    .HasColumnName("MAC_MEDIUM");

                entity.Property(e => e.MacStage)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_STAGE");

                entity.Property(e => e.MacStageHlight)
                    .HasMaxLength(100)
                    .HasColumnName("MAC_STAGE_HLIGHT");

                entity.Property(e => e.MacStatus).HasColumnName("MAC_STATUS");

                entity.Property(e => e.MacType)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_TYPE");

                entity.Property(e => e.MacTypeHlight)
                    .HasMaxLength(100)
                    .HasColumnName("MAC_TYPE_HLIGHT");

                entity.Property(e => e.MacacId).HasColumnName("MACAC_ID");

                entity.Property(e => e.RunBy)
                    .HasMaxLength(255)
                    .HasColumnName("RUN_BY");

                entity.Property(e => e.RunDate)
                    .HasColumnType("datetime")
                    .HasColumnName("RUN_DATE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");
            });

            modelBuilder.Entity<VAccountPriceList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vAccountPriceLists");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcurId).HasColumnName("ACUR_ID");

                entity.Property(e => e.BaseExchange).HasColumnName("BASE_EXCHANGE");

                entity.Property(e => e.Code)
                    .HasMaxLength(3)
                    .HasColumnName("CODE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CurDeleted).HasColumnName("CUR_DELETED");

                entity.Property(e => e.CurExternal)
                    .HasMaxLength(255)
                    .HasColumnName("CUR_EXTERNAL");

                entity.Property(e => e.CurId).HasColumnName("CUR_ID");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Discount).HasColumnName("DISCOUNT");

                entity.Property(e => e.Exclusive).HasColumnName("EXCLUSIVE");

                entity.Property(e => e.FneId).HasColumnName("FNE_ID");

                entity.Property(e => e.IsDefault).HasColumnName("IS_DEFAULT");

                entity.Property(e => e.Order).HasColumnName("ORDER");

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.PriceList).HasColumnName("PRICE_LIST");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Symbol)
                    .HasMaxLength(3)
                    .HasColumnName("SYMBOL");

                entity.Property(e => e.TxcId).HasColumnName("TXC_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<VAccountProfileType>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vAccountProfileTypes");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.DroId).HasColumnName("DRO_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");
            });

            modelBuilder.Entity<VAccountSecurity>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vAccountSecurity");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccountSummary)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_SUMMARY");

                entity.Property(e => e.CanSeeObject).HasColumnName("CAN_SEE_OBJECT");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UserSummary)
                    .HasMaxLength(255)
                    .HasColumnName("USER_SUMMARY");

                entity.Property(e => e.VisibilityReason)
                    .IsRequired()
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("VISIBILITY_REASON");
            });

            modelBuilder.Entity<VAccountsLinksContact>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vAccountsLinksContacts");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcName)
                    .HasMaxLength(100)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.AccDeleted).HasColumnName("ACC_DELETED");

                entity.Property(e => e.AccDormant).HasColumnName("ACC_DORMANT");

                entity.Property(e => e.AccExternal)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_EXTERNAL");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccImport).HasColumnName("ACC_IMPORT");

                entity.Property(e => e.AccStatus).HasColumnName("ACC_STATUS");

                entity.Property(e => e.AccUd1)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD1");

                entity.Property(e => e.AccUd10)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD10");

                entity.Property(e => e.AccUd10Bit).HasColumnName("ACC_UD10_BIT");

                entity.Property(e => e.AccUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD10_DATE");

                entity.Property(e => e.AccUd10Id).HasColumnName("ACC_UD10_ID");

                entity.Property(e => e.AccUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD10_NUMERIC");

                entity.Property(e => e.AccUd11)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD11");

                entity.Property(e => e.AccUd11Bit).HasColumnName("ACC_UD11_BIT");

                entity.Property(e => e.AccUd12)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD12");

                entity.Property(e => e.AccUd12Bit).HasColumnName("ACC_UD12_BIT");

                entity.Property(e => e.AccUd13)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD13");

                entity.Property(e => e.AccUd13Bit).HasColumnName("ACC_UD13_BIT");

                entity.Property(e => e.AccUd14)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD14");

                entity.Property(e => e.AccUd14Bit).HasColumnName("ACC_UD14_BIT");

                entity.Property(e => e.AccUd15)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD15");

                entity.Property(e => e.AccUd15Bit).HasColumnName("ACC_UD15_BIT");

                entity.Property(e => e.AccUd16Bit).HasColumnName("ACC_UD16_BIT");

                entity.Property(e => e.AccUd17Bit).HasColumnName("ACC_UD17_BIT");

                entity.Property(e => e.AccUd18Bit).HasColumnName("ACC_UD18_BIT");

                entity.Property(e => e.AccUd19Bit).HasColumnName("ACC_UD19_BIT");

                entity.Property(e => e.AccUd1Bit).HasColumnName("ACC_UD1_BIT");

                entity.Property(e => e.AccUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD1_DATE");

                entity.Property(e => e.AccUd1Id).HasColumnName("ACC_UD1_ID");

                entity.Property(e => e.AccUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD1_NUMERIC");

                entity.Property(e => e.AccUd2)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD2");

                entity.Property(e => e.AccUd20Bit).HasColumnName("ACC_UD20_BIT");

                entity.Property(e => e.AccUd21Bit).HasColumnName("ACC_UD21_BIT");

                entity.Property(e => e.AccUd22Bit).HasColumnName("ACC_UD22_BIT");

                entity.Property(e => e.AccUd23Bit).HasColumnName("ACC_UD23_BIT");

                entity.Property(e => e.AccUd24Bit).HasColumnName("ACC_UD24_BIT");

                entity.Property(e => e.AccUd2Bit).HasColumnName("ACC_UD2_BIT");

                entity.Property(e => e.AccUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD2_DATE");

                entity.Property(e => e.AccUd2Id).HasColumnName("ACC_UD2_ID");

                entity.Property(e => e.AccUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD2_NUMERIC");

                entity.Property(e => e.AccUd3)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD3");

                entity.Property(e => e.AccUd3Bit).HasColumnName("ACC_UD3_BIT");

                entity.Property(e => e.AccUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD3_DATE");

                entity.Property(e => e.AccUd3Id).HasColumnName("ACC_UD3_ID");

                entity.Property(e => e.AccUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD3_NUMERIC");

                entity.Property(e => e.AccUd4)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD4");

                entity.Property(e => e.AccUd4Bit).HasColumnName("ACC_UD4_BIT");

                entity.Property(e => e.AccUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD4_DATE");

                entity.Property(e => e.AccUd4Id).HasColumnName("ACC_UD4_ID");

                entity.Property(e => e.AccUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD4_NUMERIC");

                entity.Property(e => e.AccUd5)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD5");

                entity.Property(e => e.AccUd5Bit).HasColumnName("ACC_UD5_BIT");

                entity.Property(e => e.AccUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD5_DATE");

                entity.Property(e => e.AccUd5Id).HasColumnName("ACC_UD5_ID");

                entity.Property(e => e.AccUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD5_NUMERIC");

                entity.Property(e => e.AccUd6)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD6");

                entity.Property(e => e.AccUd6Bit).HasColumnName("ACC_UD6_BIT");

                entity.Property(e => e.AccUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD6_DATE");

                entity.Property(e => e.AccUd6Id).HasColumnName("ACC_UD6_ID");

                entity.Property(e => e.AccUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD6_NUMERIC");

                entity.Property(e => e.AccUd7)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD7");

                entity.Property(e => e.AccUd7Bit).HasColumnName("ACC_UD7_BIT");

                entity.Property(e => e.AccUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD7_DATE");

                entity.Property(e => e.AccUd7Id).HasColumnName("ACC_UD7_ID");

                entity.Property(e => e.AccUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD7_NUMERIC");

                entity.Property(e => e.AccUd8)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD8");

                entity.Property(e => e.AccUd8Bit).HasColumnName("ACC_UD8_BIT");

                entity.Property(e => e.AccUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD8_DATE");

                entity.Property(e => e.AccUd8Id).HasColumnName("ACC_UD8_ID");

                entity.Property(e => e.AccUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD8_NUMERIC");

                entity.Property(e => e.AccUd9)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD9");

                entity.Property(e => e.AccUd9Bit).HasColumnName("ACC_UD9_BIT");

                entity.Property(e => e.AccUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD9_DATE");

                entity.Property(e => e.AccUd9Id).HasColumnName("ACC_UD9_ID");

                entity.Property(e => e.AccUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD9_NUMERIC");

                entity.Property(e => e.Account).HasMaxLength(255);

                entity.Property(e => e.AclFrom).HasColumnName("ACL_FROM");

                entity.Property(e => e.Anniversary).HasMaxLength(255);

                entity.Property(e => e.AssistantTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Assistantname).HasMaxLength(255);

                entity.Property(e => e.BillingInformation).HasMaxLength(255);

                entity.Property(e => e.Birthday).HasMaxLength(255);

                entity.Property(e => e.Business2TelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.BusinessAddress).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressCity).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressCountry).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressState).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.BusinessFaxNumber).HasMaxLength(255);

                entity.Property(e => e.BusinessHomePage).HasMaxLength(255);

                entity.Property(e => e.BusinessTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.CallbackTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.CarTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Categories).HasMaxLength(500);

                entity.Property(e => e.Children).HasMaxLength(255);

                entity.Property(e => e.Companies).HasMaxLength(255);

                entity.Property(e => e.CompanyAndFullName).HasMaxLength(255);

                entity.Property(e => e.CompanyLastFirstNoSpace).HasMaxLength(255);

                entity.Property(e => e.CompanyLastFirstSpaceOnly).HasMaxLength(255);

                entity.Property(e => e.CompanyMainTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.CompanyName).HasMaxLength(255);

                entity.Property(e => e.ComputerNetworkName).HasMaxLength(255);

                entity.Property(e => e.ConnectOptIn).HasColumnName("CONNECT_OPT_IN");

                entity.Property(e => e.ConnectOptInDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CONNECT_OPT_IN_DATE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CreationTime).HasMaxLength(255);

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Department).HasMaxLength(255);

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.Email1Address).HasMaxLength(255);

                entity.Property(e => e.Email1AddressType).HasMaxLength(255);

                entity.Property(e => e.Email1DisplayName).HasMaxLength(255);

                entity.Property(e => e.Email1EntryId)
                    .HasMaxLength(255)
                    .HasColumnName("Email1EntryID");

                entity.Property(e => e.Email2Address).HasMaxLength(255);

                entity.Property(e => e.Email2AddressType).HasMaxLength(255);

                entity.Property(e => e.Email2DisplayName).HasMaxLength(255);

                entity.Property(e => e.Email2EntryId)
                    .HasMaxLength(255)
                    .HasColumnName("Email2EntryID");

                entity.Property(e => e.Email3Address).HasMaxLength(255);

                entity.Property(e => e.Email3AddressType).HasMaxLength(255);

                entity.Property(e => e.Email3DisplayName).HasMaxLength(255);

                entity.Property(e => e.Email3EntryId)
                    .HasMaxLength(255)
                    .HasColumnName("Email3EntryID");

                entity.Property(e => e.Erased).HasColumnName("ERASED");

                entity.Property(e => e.ErasedBy)
                    .HasMaxLength(255)
                    .HasColumnName("ERASED_BY");

                entity.Property(e => e.ErasedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ERASED_DATE");

                entity.Property(e => e.Exported).HasColumnName("EXPORTED");

                entity.Property(e => e.FirstName).HasMaxLength(255);

                entity.Property(e => e.Ftpsite)
                    .HasMaxLength(255)
                    .HasColumnName("FTPSite");

                entity.Property(e => e.FullName).HasMaxLength(255);

                entity.Property(e => e.FullNameAndCompany).HasMaxLength(255);

                entity.Property(e => e.Hobby).HasMaxLength(255);

                entity.Property(e => e.Home2TelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.HomeAddress).HasMaxLength(255);

                entity.Property(e => e.HomeAddressCity).HasMaxLength(255);

                entity.Property(e => e.HomeAddressCountry).HasMaxLength(255);

                entity.Property(e => e.HomeAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.HomeAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.HomeAddressState).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.HomeFaxNumber).HasMaxLength(255);

                entity.Property(e => e.HomeTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Initials).HasMaxLength(255);

                entity.Property(e => e.InternetFreeBusyAddress).HasMaxLength(255);

                entity.Property(e => e.Isdnnumber)
                    .HasMaxLength(255)
                    .HasColumnName("ISDNNumber");

                entity.Property(e => e.JobTitle).HasMaxLength(255);

                entity.Property(e => e.LastFirstAndSuffix).HasMaxLength(255);

                entity.Property(e => e.LastFirstNoSpaceCompany).HasMaxLength(255);

                entity.Property(e => e.LastFirstSpaceOnly).HasMaxLength(255);

                entity.Property(e => e.LastFirstSpaceOnlyCompany).HasMaxLength(255);

                entity.Property(e => e.LastModificationTime).HasMaxLength(255);

                entity.Property(e => e.LastName).HasMaxLength(255);

                entity.Property(e => e.LastNameAndFirstName).HasMaxLength(255);

                entity.Property(e => e.LinkedinName)
                    .HasMaxLength(255)
                    .HasColumnName("LINKEDIN_NAME");

                entity.Property(e => e.MailingAddress).HasMaxLength(255);

                entity.Property(e => e.MailingAddressCity).HasMaxLength(255);

                entity.Property(e => e.MailingAddressCountry).HasMaxLength(255);

                entity.Property(e => e.MailingAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.MailingAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.MailingAddressState).HasMaxLength(255);

                entity.Property(e => e.MailingAddressStreet).HasMaxLength(255);

                entity.Property(e => e.MailingAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.MailingAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.ManagerName).HasMaxLength(255);

                entity.Property(e => e.MiddleName).HasMaxLength(255);

                entity.Property(e => e.Mileage).HasMaxLength(255);

                entity.Property(e => e.MobileTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.NetMeetingAlias).HasMaxLength(255);

                entity.Property(e => e.NetMeetingServer).HasMaxLength(255);

                entity.Property(e => e.NickName).HasMaxLength(255);

                entity.Property(e => e.NtIdOutlook).HasColumnName("NT_ID_OUTLOOK");

                entity.Property(e => e.OfficeLocation).HasMaxLength(255);

                entity.Property(e => e.OtherAddress).HasMaxLength(255);

                entity.Property(e => e.OtherAddressCity).HasMaxLength(255);

                entity.Property(e => e.OtherAddressCountry).HasMaxLength(255);

                entity.Property(e => e.OtherAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.OtherAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.OtherAddressState).HasMaxLength(255);

                entity.Property(e => e.OtherAddressStreet).HasMaxLength(255);

                entity.Property(e => e.OtherAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.OtherAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.OtherFaxNumber).HasMaxLength(255);

                entity.Property(e => e.OtherTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.PersonalHomePage).HasMaxLength(255);

                entity.Property(e => e.PrefAddress).HasColumnName("PREF_ADDRESS");

                entity.Property(e => e.PrefEmail).HasColumnName("PREF_EMAIL");

                entity.Property(e => e.PrefPhone).HasColumnName("PREF_PHONE");

                entity.Property(e => e.PreferredContact).HasColumnName("PREFERRED_CONTACT");

                entity.Property(e => e.PreferredContactEmail).HasColumnName("PREFERRED_CONTACT_EMAIL");

                entity.Property(e => e.PreferredContactFax).HasColumnName("PREFERRED_CONTACT_FAX");

                entity.Property(e => e.PreferredContactLetter).HasColumnName("PREFERRED_CONTACT_LETTER");

                entity.Property(e => e.PreferredContactPhone).HasColumnName("PREFERRED_CONTACT_PHONE");

                entity.Property(e => e.PrimaryTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.PrivacyNotified).HasColumnName("PRIVACY_NOTIFIED");

                entity.Property(e => e.PrivacyNotifiedBy)
                    .HasMaxLength(255)
                    .HasColumnName("PRIVACY_NOTIFIED_BY");

                entity.Property(e => e.PrivacyNotifiedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRIVACY_NOTIFIED_DATE");

                entity.Property(e => e.PrivacyNotifiedMethod)
                    .HasMaxLength(255)
                    .HasColumnName("PRIVACY_NOTIFIED_METHOD");

                entity.Property(e => e.Profession).HasMaxLength(255);

                entity.Property(e => e.RadioTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.ReferredBy).HasMaxLength(255);

                entity.Property(e => e.RemovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("REMOVAL_DATE");

                entity.Property(e => e.Salutation)
                    .HasMaxLength(255)
                    .HasColumnName("SALUTATION");

                entity.Property(e => e.SelectedMailingAddress).HasMaxLength(255);

                entity.Property(e => e.Sensitivity).HasMaxLength(255);

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Spouse).HasMaxLength(255);

                entity.Property(e => e.Subject).HasMaxLength(255);

                entity.Property(e => e.Suffix).HasMaxLength(255);

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.SyncUpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYNC_UPDATED_DATE");

                entity.Property(e => e.TelexNumber).HasMaxLength(255);

                entity.Property(e => e.Title).HasMaxLength(255);

                entity.Property(e => e.TtytddtelephoneNumber)
                    .HasMaxLength(255)
                    .HasColumnName("TTYTDDTelephoneNumber");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.WebPage).HasMaxLength(255);

                entity.Property(e => e.YomiCompanyName).HasMaxLength(255);

                entity.Property(e => e.YomiFirstName).HasMaxLength(255);

                entity.Property(e => e.YomiLastName).HasMaxLength(255);
            });

            modelBuilder.Entity<VAccountsList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vAccountsList");

                entity.Property(e => e.AcAlert)
                    .HasMaxLength(255)
                    .HasColumnName("AC_ALERT");

                entity.Property(e => e.AcAlertHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_ALERT_HLIGHT");

                entity.Property(e => e.AcDeleted).HasColumnName("AC_DELETED");

                entity.Property(e => e.AcDiscount)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("AC_DISCOUNT");

                entity.Property(e => e.AcDormant).HasColumnName("AC_DORMANT");

                entity.Property(e => e.AcExternal)
                    .HasMaxLength(255)
                    .HasColumnName("AC_EXTERNAL");

                entity.Property(e => e.AcFlag).HasColumnName("AC_FLAG");

                entity.Property(e => e.AcGroup)
                    .HasMaxLength(255)
                    .HasColumnName("AC_GROUP");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcImport).HasColumnName("AC_IMPORT");

                entity.Property(e => e.AcIndustry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_INDUSTRY");

                entity.Property(e => e.AcIndustryHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_INDUSTRY_HLIGHT");

                entity.Property(e => e.AcLabel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LABEL");

                entity.Property(e => e.AcLabelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LABEL_HLIGHT");

                entity.Property(e => e.AcLevel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LEVEL");

                entity.Property(e => e.AcLevelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LEVEL_HLIGHT");

                entity.Property(e => e.AcNumber)
                    .HasMaxLength(10)
                    .HasColumnName("AC_NUMBER")
                    .IsFixedLength(true);

                entity.Property(e => e.AcPotential)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("AC_POTENTIAL");

                entity.Property(e => e.AcSales)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("AC_SALES");

                entity.Property(e => e.AcSource)
                    .HasMaxLength(255)
                    .HasColumnName("AC_SOURCE");

                entity.Property(e => e.AcSourceHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_SOURCE_HLIGHT");

                entity.Property(e => e.AcType)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE");

                entity.Property(e => e.AcType2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_2");

                entity.Property(e => e.AcType2Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_2_HLIGHT");

                entity.Property(e => e.AcTypeHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_HLIGHT");

                entity.Property(e => e.AcUd1)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1");

                entity.Property(e => e.AcUd10)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10");

                entity.Property(e => e.AcUd10Bit).HasColumnName("AC_UD10_BIT");

                entity.Property(e => e.AcUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD10_DATE");

                entity.Property(e => e.AcUd10Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_ID");

                entity.Property(e => e.AcUd10IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD10_ID_HLIGHT");

                entity.Property(e => e.AcUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD10_NUMERIC");

                entity.Property(e => e.AcUd10Uid).HasColumnName("AC_UD10_UID");

                entity.Property(e => e.AcUd11)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD11");

                entity.Property(e => e.AcUd11Bit).HasColumnName("AC_UD11_BIT");

                entity.Property(e => e.AcUd12)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD12");

                entity.Property(e => e.AcUd12Bit).HasColumnName("AC_UD12_BIT");

                entity.Property(e => e.AcUd13)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD13");

                entity.Property(e => e.AcUd13Bit).HasColumnName("AC_UD13_BIT");

                entity.Property(e => e.AcUd14)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD14");

                entity.Property(e => e.AcUd14Bit).HasColumnName("AC_UD14_BIT");

                entity.Property(e => e.AcUd15)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD15");

                entity.Property(e => e.AcUd15Bit).HasColumnName("AC_UD15_BIT");

                entity.Property(e => e.AcUd16Bit).HasColumnName("AC_UD16_BIT");

                entity.Property(e => e.AcUd17Bit).HasColumnName("AC_UD17_BIT");

                entity.Property(e => e.AcUd18Bit).HasColumnName("AC_UD18_BIT");

                entity.Property(e => e.AcUd19Bit).HasColumnName("AC_UD19_BIT");

                entity.Property(e => e.AcUd1Bit).HasColumnName("AC_UD1_BIT");

                entity.Property(e => e.AcUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD1_DATE");

                entity.Property(e => e.AcUd1Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_ID");

                entity.Property(e => e.AcUd1IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD1_ID_HLIGHT");

                entity.Property(e => e.AcUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD1_NUMERIC");

                entity.Property(e => e.AcUd1Uid).HasColumnName("AC_UD1_UID");

                entity.Property(e => e.AcUd2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2");

                entity.Property(e => e.AcUd20Bit).HasColumnName("AC_UD20_BIT");

                entity.Property(e => e.AcUd21Bit).HasColumnName("AC_UD21_BIT");

                entity.Property(e => e.AcUd22Bit).HasColumnName("AC_UD22_BIT");

                entity.Property(e => e.AcUd23Bit).HasColumnName("AC_UD23_BIT");

                entity.Property(e => e.AcUd24Bit).HasColumnName("AC_UD24_BIT");

                entity.Property(e => e.AcUd2Bit).HasColumnName("AC_UD2_BIT");

                entity.Property(e => e.AcUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD2_DATE");

                entity.Property(e => e.AcUd2Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_ID");

                entity.Property(e => e.AcUd2IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD2_ID_HLIGHT");

                entity.Property(e => e.AcUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD2_NUMERIC");

                entity.Property(e => e.AcUd2Uid).HasColumnName("AC_UD2_UID");

                entity.Property(e => e.AcUd3)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3");

                entity.Property(e => e.AcUd3Bit).HasColumnName("AC_UD3_BIT");

                entity.Property(e => e.AcUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD3_DATE");

                entity.Property(e => e.AcUd3Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_ID");

                entity.Property(e => e.AcUd3IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD3_ID_HLIGHT");

                entity.Property(e => e.AcUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD3_NUMERIC");

                entity.Property(e => e.AcUd3Uid).HasColumnName("AC_UD3_UID");

                entity.Property(e => e.AcUd4)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4");

                entity.Property(e => e.AcUd4Bit).HasColumnName("AC_UD4_BIT");

                entity.Property(e => e.AcUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD4_DATE");

                entity.Property(e => e.AcUd4Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_ID");

                entity.Property(e => e.AcUd4IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD4_ID_HLIGHT");

                entity.Property(e => e.AcUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD4_NUMERIC");

                entity.Property(e => e.AcUd4Uid).HasColumnName("AC_UD4_UID");

                entity.Property(e => e.AcUd5)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5");

                entity.Property(e => e.AcUd5Bit).HasColumnName("AC_UD5_BIT");

                entity.Property(e => e.AcUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD5_DATE");

                entity.Property(e => e.AcUd5Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_ID");

                entity.Property(e => e.AcUd5IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD5_ID_HLIGHT");

                entity.Property(e => e.AcUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD5_NUMERIC");

                entity.Property(e => e.AcUd5Uid).HasColumnName("AC_UD5_UID");

                entity.Property(e => e.AcUd6)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6");

                entity.Property(e => e.AcUd6Bit).HasColumnName("AC_UD6_BIT");

                entity.Property(e => e.AcUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD6_DATE");

                entity.Property(e => e.AcUd6Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_ID");

                entity.Property(e => e.AcUd6IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD6_ID_HLIGHT");

                entity.Property(e => e.AcUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD6_NUMERIC");

                entity.Property(e => e.AcUd6Uid).HasColumnName("AC_UD6_UID");

                entity.Property(e => e.AcUd7)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7");

                entity.Property(e => e.AcUd7Bit).HasColumnName("AC_UD7_BIT");

                entity.Property(e => e.AcUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD7_DATE");

                entity.Property(e => e.AcUd7Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_ID");

                entity.Property(e => e.AcUd7IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD7_ID_HLIGHT");

                entity.Property(e => e.AcUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD7_NUMERIC");

                entity.Property(e => e.AcUd7Uid).HasColumnName("AC_UD7_UID");

                entity.Property(e => e.AcUd8)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8");

                entity.Property(e => e.AcUd8Bit).HasColumnName("AC_UD8_BIT");

                entity.Property(e => e.AcUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD8_DATE");

                entity.Property(e => e.AcUd8Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_ID");

                entity.Property(e => e.AcUd8IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD8_ID_HLIGHT");

                entity.Property(e => e.AcUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD8_NUMERIC");

                entity.Property(e => e.AcUd8Uid).HasColumnName("AC_UD8_UID");

                entity.Property(e => e.AcUd9)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9");

                entity.Property(e => e.AcUd9Bit).HasColumnName("AC_UD9_BIT");

                entity.Property(e => e.AcUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD9_DATE");

                entity.Property(e => e.AcUd9Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_ID");

                entity.Property(e => e.AcUd9IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD9_ID_HLIGHT");

                entity.Property(e => e.AcUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD9_NUMERIC");

                entity.Property(e => e.AcUd9Uid).HasColumnName("AC_UD9_UID");

                entity.Property(e => e.AccIdSales).HasColumnName("ACC_ID_SALES");

                entity.Property(e => e.AccIdSupport).HasColumnName("ACC_ID_SUPPORT");

                entity.Property(e => e.AccPrefEmail)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_EMAIL");

                entity.Property(e => e.AccPrefPhone)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_PHONE");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_MANAGER");

                entity.Property(e => e.AcgId).HasColumnName("ACG_ID");

                entity.Property(e => e.ActualTime).HasColumnName("ACTUAL_TIME");

                entity.Property(e => e.ActualUnits).HasColumnName("ACTUAL_UNITS");

                entity.Property(e => e.Address1)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_1");

                entity.Property(e => e.Address2)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_2");

                entity.Property(e => e.Address3)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_3");

                entity.Property(e => e.BaseCurrency)
                    .HasMaxLength(5)
                    .HasColumnName("BASE_CURRENCY");

                entity.Property(e => e.BillingAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_ADDRESS_1");

                entity.Property(e => e.BillingAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_ADDRESS_2");

                entity.Property(e => e.BillingAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_ADDRESS_3");

                entity.Property(e => e.BillingCountry)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_COUNTRY");

                entity.Property(e => e.BillingCounty)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_COUNTY");

                entity.Property(e => e.BillingCurrencyCode)
                    .HasMaxLength(3)
                    .HasColumnName("BILLING_CURRENCY_CODE");

                entity.Property(e => e.BillingCurrencySymbol)
                    .HasMaxLength(3)
                    .HasColumnName("BILLING_CURRENCY_SYMBOL");

                entity.Property(e => e.BillingPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_POSTCODE");

                entity.Property(e => e.BillingPostcodeTrim)
                    .HasMaxLength(15)
                    .HasColumnName("BILLING_POSTCODE_TRIM");

                entity.Property(e => e.BillingSitId).HasColumnName("BILLING_SIT_ID");

                entity.Property(e => e.BillingSite)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_SITE");

                entity.Property(e => e.BillingTown)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_TOWN");

                entity.Property(e => e.ContactEmail)
                    .HasMaxLength(255)
                    .HasColumnName("CONTACT_EMAIL");

                entity.Property(e => e.ContactPhone)
                    .HasMaxLength(255)
                    .HasColumnName("CONTACT_PHONE");

                entity.Property(e => e.Country)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.County)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTY");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CsId).HasColumnName("CS_ID");

                entity.Property(e => e.CurId).HasColumnName("CUR_ID");

                entity.Property(e => e.CurIdBilling).HasColumnName("CUR_ID_BILLING");

                entity.Property(e => e.CurName)
                    .HasMaxLength(255)
                    .HasColumnName("CUR_NAME");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.EmailDomains)
                    .HasMaxLength(1024)
                    .HasColumnName("EMAIL_DOMAINS");

                entity.Property(e => e.EstimatedTime).HasColumnName("ESTIMATED_TIME");

                entity.Property(e => e.EstimatedUnits).HasColumnName("ESTIMATED_UNITS");

                entity.Property(e => e.FacebookImage)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_IMAGE");

                entity.Property(e => e.FacebookName)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_NAME");

                entity.Property(e => e.FacebookPrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_PRIVATE_ID");

                entity.Property(e => e.FacebookProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_PROFILE_URL");

                entity.Property(e => e.FacebookPublicId)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_PUBLIC_ID");

                entity.Property(e => e.Fax1)
                    .HasMaxLength(50)
                    .HasColumnName("FAX_1");

                entity.Property(e => e.Fax1Formatted)
                    .HasMaxLength(62)
                    .HasColumnName("FAX_1_FORMATTED");

                entity.Property(e => e.Fax2)
                    .HasMaxLength(50)
                    .HasColumnName("FAX_2");

                entity.Property(e => e.Fax2Formatted)
                    .HasMaxLength(62)
                    .HasColumnName("FAX_2_FORMATTED");

                entity.Property(e => e.Fax3)
                    .HasMaxLength(50)
                    .HasColumnName("FAX_3");

                entity.Property(e => e.Fax3Formatted)
                    .HasMaxLength(62)
                    .HasColumnName("FAX_3_FORMATTED");

                entity.Property(e => e.GplusImage)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_IMAGE");

                entity.Property(e => e.GplusName)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_NAME");

                entity.Property(e => e.GplusPrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_PRIVATE_ID");

                entity.Property(e => e.GplusProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_PROFILE_URL");

                entity.Property(e => e.GplusPublicId)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_PUBLIC_ID");

                entity.Property(e => e.ImSummary)
                    .HasMaxLength(255)
                    .HasColumnName("IM_SUMMARY");

                entity.Property(e => e.Industry).HasColumnName("INDUSTRY");

                entity.Property(e => e.Label).HasColumnName("LABEL");

                entity.Property(e => e.LcId).HasColumnName("LC_ID");

                entity.Property(e => e.LeadListSummary)
                    .HasMaxLength(255)
                    .HasColumnName("LEAD_LIST_SUMMARY");

                entity.Property(e => e.LeadSummary)
                    .HasMaxLength(255)
                    .HasColumnName("LEAD_SUMMARY");

                entity.Property(e => e.Level).HasColumnName("LEVEL");

                entity.Property(e => e.LinkedinImage)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_IMAGE");

                entity.Property(e => e.LinkedinName)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_NAME");

                entity.Property(e => e.LinkedinPrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_PRIVATE_ID");

                entity.Property(e => e.LinkedinProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_PROFILE_URL");

                entity.Property(e => e.LinkedinPublicId)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_PUBLIC_ID");

                entity.Property(e => e.MainSalesContact)
                    .HasMaxLength(255)
                    .HasColumnName("MAIN_SALES_CONTACT");

                entity.Property(e => e.MainSupportContact)
                    .HasMaxLength(255)
                    .HasColumnName("MAIN_SUPPORT_CONTACT");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .HasColumnName("NAME");

                entity.Property(e => e.NameLongestWord)
                    .HasMaxLength(255)
                    .HasColumnName("NAME_LONGEST_WORD");

                entity.Property(e => e.NameSoundex)
                    .HasMaxLength(4)
                    .HasColumnName("NAME_SOUNDEX");

                entity.Property(e => e.NumberEmployees)
                    .HasMaxLength(10)
                    .HasColumnName("NUMBER_EMPLOYEES");

                entity.Property(e => e.Parent).HasColumnName("PARENT");

                entity.Property(e => e.Phone1)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_1");

                entity.Property(e => e.Phone1Trim)
                    .HasMaxLength(15)
                    .HasColumnName("PHONE_1_TRIM");

                entity.Property(e => e.Phone2)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_2");

                entity.Property(e => e.Phone2Trim)
                    .HasMaxLength(15)
                    .HasColumnName("PHONE_2_TRIM");

                entity.Property(e => e.Phone3)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_3");

                entity.Property(e => e.Phone3Trim)
                    .HasMaxLength(15)
                    .HasColumnName("PHONE_3_TRIM");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(255)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.PostcodeTrim)
                    .HasMaxLength(15)
                    .HasColumnName("POSTCODE_TRIM");

                entity.Property(e => e.PrimarySitId).HasColumnName("PRIMARY_SIT_ID");

                entity.Property(e => e.PrimarySite)
                    .HasMaxLength(255)
                    .HasColumnName("PRIMARY_SITE");

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Site)
                    .HasMaxLength(100)
                    .HasColumnName("SITE");

                entity.Property(e => e.Source).HasColumnName("SOURCE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.SummaryTrim)
                    .HasMaxLength(100)
                    .HasColumnName("SUMMARY_TRIM");

                entity.Property(e => e.SupportContactEmail)
                    .HasMaxLength(255)
                    .HasColumnName("SUPPORT_CONTACT_EMAIL");

                entity.Property(e => e.SupportContactPhone)
                    .HasMaxLength(255)
                    .HasColumnName("SUPPORT_CONTACT_PHONE");

                entity.Property(e => e.SupportManager)
                    .HasMaxLength(255)
                    .HasColumnName("SUPPORT_MANAGER");

                entity.Property(e => e.Town)
                    .HasMaxLength(255)
                    .HasColumnName("TOWN");

                entity.Property(e => e.Twitter1Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_IMAGE");

                entity.Property(e => e.Twitter1Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_NAME");

                entity.Property(e => e.Twitter1PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_PRIVATE_ID");

                entity.Property(e => e.Twitter1ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_PROFILE_URL");

                entity.Property(e => e.Twitter1PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_PUBLIC_ID");

                entity.Property(e => e.Twitter2Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_IMAGE");

                entity.Property(e => e.Twitter2Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_NAME");

                entity.Property(e => e.Twitter2PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_PRIVATE_ID");

                entity.Property(e => e.Twitter2ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_PROFILE_URL");

                entity.Property(e => e.Twitter2PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_PUBLIC_ID");

                entity.Property(e => e.Twitter3Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_IMAGE");

                entity.Property(e => e.Twitter3Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_NAME");

                entity.Property(e => e.Twitter3PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_PRIVATE_ID");

                entity.Property(e => e.Twitter3ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_PROFILE_URL");

                entity.Property(e => e.Twitter3PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_PUBLIC_ID");

                entity.Property(e => e.Twitter4Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_IMAGE");

                entity.Property(e => e.Twitter4Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_NAME");

                entity.Property(e => e.Twitter4PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_PRIVATE_ID");

                entity.Property(e => e.Twitter4ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_PROFILE_URL");

                entity.Property(e => e.Twitter4PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_PUBLIC_ID");

                entity.Property(e => e.Twitter5Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_IMAGE");

                entity.Property(e => e.Twitter5Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_NAME");

                entity.Property(e => e.Twitter5PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_PRIVATE_ID");

                entity.Property(e => e.Twitter5ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_PROFILE_URL");

                entity.Property(e => e.Twitter5PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_PUBLIC_ID");

                entity.Property(e => e.Type1).HasColumnName("TYPE_1");

                entity.Property(e => e.Type2).HasColumnName("TYPE_2");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsDept)
                    .HasMaxLength(128)
                    .HasColumnName("US_DEPT");

                entity.Property(e => e.UsDeptSupport)
                    .HasMaxLength(128)
                    .HasColumnName("US_DEPT_SUPPORT");

                entity.Property(e => e.UsEmail)
                    .HasMaxLength(255)
                    .HasColumnName("US_EMAIL");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");

                entity.Property(e => e.UsIdSupport).HasColumnName("US_ID_SUPPORT");

                entity.Property(e => e.UsSupportEmail)
                    .HasMaxLength(255)
                    .HasColumnName("US_SUPPORT_EMAIL");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");

                entity.Property(e => e.UsgIdSupport).HasColumnName("USG_ID_SUPPORT");

                entity.Property(e => e.UsgName)
                    .HasMaxLength(255)
                    .HasColumnName("USG_NAME");

                entity.Property(e => e.UsgNameSupport)
                    .HasMaxLength(255)
                    .HasColumnName("USG_NAME_SUPPORT");

                entity.Property(e => e.Validationmessage)
                    .HasMaxLength(255)
                    .HasColumnName("VALIDATIONMESSAGE");

                entity.Property(e => e.WebSite1)
                    .HasMaxLength(100)
                    .HasColumnName("WEB_SITE_1");

                entity.Property(e => e.WebSite2)
                    .HasMaxLength(100)
                    .HasColumnName("WEB_SITE_2");

                entity.Property(e => e.WebsiteTrim)
                    .HasMaxLength(100)
                    .HasColumnName("WEBSITE_TRIM");
            });

            modelBuilder.Entity<VAccountsProfile>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vAccountsProfiles");

                entity.Property(e => e.AcAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("AC_ADDRESS_1");

                entity.Property(e => e.AcAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_ADDRESS_2");

                entity.Property(e => e.AcAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("AC_ADDRESS_3");

                entity.Property(e => e.AcBillingCountry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_COUNTRY");

                entity.Property(e => e.AcBillingCounty)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_COUNTY");

                entity.Property(e => e.AcBillingPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_POSTCODE");

                entity.Property(e => e.AcBillingTown)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_TOWN");

                entity.Property(e => e.AcCountry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_COUNTRY");

                entity.Property(e => e.AcCounty)
                    .HasMaxLength(255)
                    .HasColumnName("AC_COUNTY");

                entity.Property(e => e.AcFlag)
                    .HasMaxLength(255)
                    .HasColumnName("AC_FLAG");

                entity.Property(e => e.AcFlagHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_FLAG_HLIGHT");

                entity.Property(e => e.AcGroup)
                    .HasMaxLength(255)
                    .HasColumnName("AC_GROUP");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcIndustry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_INDUSTRY");

                entity.Property(e => e.AcIndustryHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_INDUSTRY_HLIGHT");

                entity.Property(e => e.AcLabel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LABEL");

                entity.Property(e => e.AcLabelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LABEL_HLIGHT");

                entity.Property(e => e.AcLevel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LEVEL");

                entity.Property(e => e.AcLevelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LEVEL_HLIGHT");

                entity.Property(e => e.AcManager)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER");

                entity.Property(e => e.AcManagerEmail)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_EMAIL");

                entity.Property(e => e.AcManagerSupport)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_SUPPORT");

                entity.Property(e => e.AcManagerSupportEmail)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_SUPPORT_EMAIL");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.AcPhone1)
                    .HasMaxLength(50)
                    .HasColumnName("AC_PHONE_1");

                entity.Property(e => e.AcPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("AC_POSTCODE");

                entity.Property(e => e.AcReference)
                    .HasMaxLength(50)
                    .HasColumnName("AC_REFERENCE");

                entity.Property(e => e.AcSource)
                    .HasMaxLength(255)
                    .HasColumnName("AC_SOURCE");

                entity.Property(e => e.AcSourceHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_SOURCE_HLIGHT");

                entity.Property(e => e.AcTown)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TOWN");

                entity.Property(e => e.AcType1)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_1");

                entity.Property(e => e.AcType1Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_1_HLIGHT");

                entity.Property(e => e.AcType2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_2");

                entity.Property(e => e.AcType2Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_2_HLIGHT");

                entity.Property(e => e.AcUd10Bit).HasColumnName("AC_UD10_BIT");

                entity.Property(e => e.AcUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD10_DATE");

                entity.Property(e => e.AcUd10Id).HasColumnName("AC_UD10_ID");

                entity.Property(e => e.AcUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_ID_NAME");

                entity.Property(e => e.AcUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd10Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD10_NUMERIC");

                entity.Property(e => e.AcUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_TEXT");

                entity.Property(e => e.AcUd11Bit).HasColumnName("AC_UD11_BIT");

                entity.Property(e => e.AcUd11Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD11_TEXT");

                entity.Property(e => e.AcUd12Bit).HasColumnName("AC_UD12_BIT");

                entity.Property(e => e.AcUd12Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD12_TEXT");

                entity.Property(e => e.AcUd13Bit).HasColumnName("AC_UD13_BIT");

                entity.Property(e => e.AcUd13Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD13_TEXT");

                entity.Property(e => e.AcUd14Bit).HasColumnName("AC_UD14_BIT");

                entity.Property(e => e.AcUd14Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD14_TEXT");

                entity.Property(e => e.AcUd15Bit).HasColumnName("AC_UD15_BIT");

                entity.Property(e => e.AcUd15Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD15_TEXT");

                entity.Property(e => e.AcUd16Bit).HasColumnName("AC_UD16_BIT");

                entity.Property(e => e.AcUd17Bit).HasColumnName("AC_UD17_BIT");

                entity.Property(e => e.AcUd18Bit).HasColumnName("AC_UD18_BIT");

                entity.Property(e => e.AcUd19Bit).HasColumnName("AC_UD19_BIT");

                entity.Property(e => e.AcUd1Bit).HasColumnName("AC_UD1_BIT");

                entity.Property(e => e.AcUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD1_DATE");

                entity.Property(e => e.AcUd1Id).HasColumnName("AC_UD1_ID");

                entity.Property(e => e.AcUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_ID_NAME");

                entity.Property(e => e.AcUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd1Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD1_NUMERIC");

                entity.Property(e => e.AcUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_TEXT");

                entity.Property(e => e.AcUd20Bit).HasColumnName("AC_UD20_BIT");

                entity.Property(e => e.AcUd21Bit).HasColumnName("AC_UD21_BIT");

                entity.Property(e => e.AcUd22Bit).HasColumnName("AC_UD22_BIT");

                entity.Property(e => e.AcUd23Bit).HasColumnName("AC_UD23_BIT");

                entity.Property(e => e.AcUd24Bit).HasColumnName("AC_UD24_BIT");

                entity.Property(e => e.AcUd2Bit).HasColumnName("AC_UD2_BIT");

                entity.Property(e => e.AcUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD2_DATE");

                entity.Property(e => e.AcUd2Id).HasColumnName("AC_UD2_ID");

                entity.Property(e => e.AcUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_ID_NAME");

                entity.Property(e => e.AcUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd2Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD2_NUMERIC");

                entity.Property(e => e.AcUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_TEXT");

                entity.Property(e => e.AcUd3Bit).HasColumnName("AC_UD3_BIT");

                entity.Property(e => e.AcUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD3_DATE");

                entity.Property(e => e.AcUd3Id).HasColumnName("AC_UD3_ID");

                entity.Property(e => e.AcUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_ID_NAME");

                entity.Property(e => e.AcUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd3Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD3_NUMERIC");

                entity.Property(e => e.AcUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_TEXT");

                entity.Property(e => e.AcUd4Bit).HasColumnName("AC_UD4_BIT");

                entity.Property(e => e.AcUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD4_DATE");

                entity.Property(e => e.AcUd4Id).HasColumnName("AC_UD4_ID");

                entity.Property(e => e.AcUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_ID_NAME");

                entity.Property(e => e.AcUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd4Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD4_NUMERIC");

                entity.Property(e => e.AcUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_TEXT");

                entity.Property(e => e.AcUd5Bit).HasColumnName("AC_UD5_BIT");

                entity.Property(e => e.AcUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD5_DATE");

                entity.Property(e => e.AcUd5Id).HasColumnName("AC_UD5_ID");

                entity.Property(e => e.AcUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_ID_NAME");

                entity.Property(e => e.AcUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd5Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD5_NUMERIC");

                entity.Property(e => e.AcUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_TEXT");

                entity.Property(e => e.AcUd6Bit).HasColumnName("AC_UD6_BIT");

                entity.Property(e => e.AcUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD6_DATE");

                entity.Property(e => e.AcUd6Id).HasColumnName("AC_UD6_ID");

                entity.Property(e => e.AcUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_ID_NAME");

                entity.Property(e => e.AcUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd6Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD6_NUMERIC");

                entity.Property(e => e.AcUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_TEXT");

                entity.Property(e => e.AcUd7Bit).HasColumnName("AC_UD7_BIT");

                entity.Property(e => e.AcUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD7_DATE");

                entity.Property(e => e.AcUd7Id).HasColumnName("AC_UD7_ID");

                entity.Property(e => e.AcUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_ID_NAME");

                entity.Property(e => e.AcUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd7Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD7_NUMERIC");

                entity.Property(e => e.AcUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_TEXT");

                entity.Property(e => e.AcUd8Bit).HasColumnName("AC_UD8_BIT");

                entity.Property(e => e.AcUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD8_DATE");

                entity.Property(e => e.AcUd8Id).HasColumnName("AC_UD8_ID");

                entity.Property(e => e.AcUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_ID_NAME");

                entity.Property(e => e.AcUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd8Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD8_NUMERIC");

                entity.Property(e => e.AcUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_TEXT");

                entity.Property(e => e.AcUd9Bit).HasColumnName("AC_UD9_BIT");

                entity.Property(e => e.AcUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD9_DATE");

                entity.Property(e => e.AcUd9Id).HasColumnName("AC_UD9_ID");

                entity.Property(e => e.AcUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_ID_NAME");

                entity.Property(e => e.AcUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd9Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD9_NUMERIC");

                entity.Property(e => e.AcUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_TEXT");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_NAME");

                entity.Property(e => e.AccPrefEmail)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_EMAIL");

                entity.Property(e => e.AccPrefPhone)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_PHONE");

                entity.Property(e => e.AcgId).HasColumnName("ACG_ID");

                entity.Property(e => e.AcpDeleted).HasColumnName("ACP_DELETED");

                entity.Property(e => e.AcpExternal)
                    .HasMaxLength(255)
                    .HasColumnName("ACP_EXTERNAL");

                entity.Property(e => e.AcpId).HasColumnName("ACP_ID");

                entity.Property(e => e.AcpImport).HasColumnName("ACP_IMPORT");

                entity.Property(e => e.AcpUd10Bit).HasColumnName("ACP_UD10_BIT");

                entity.Property(e => e.AcpUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACP_UD10_DATE");

                entity.Property(e => e.AcpUd10Id).HasColumnName("ACP_UD10_ID");

                entity.Property(e => e.AcpUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACP_UD10_ID_NAME");

                entity.Property(e => e.AcpUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACP_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.AcpUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACP_UD10_NUMERIC");

                entity.Property(e => e.AcpUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACP_UD10_TEXT");

                entity.Property(e => e.AcpUd11Bit).HasColumnName("ACP_UD11_BIT");

                entity.Property(e => e.AcpUd12Bit).HasColumnName("ACP_UD12_BIT");

                entity.Property(e => e.AcpUd13Bit).HasColumnName("ACP_UD13_BIT");

                entity.Property(e => e.AcpUd14Bit).HasColumnName("ACP_UD14_BIT");

                entity.Property(e => e.AcpUd15Bit).HasColumnName("ACP_UD15_BIT");

                entity.Property(e => e.AcpUd16Bit).HasColumnName("ACP_UD16_BIT");

                entity.Property(e => e.AcpUd17Bit).HasColumnName("ACP_UD17_BIT");

                entity.Property(e => e.AcpUd18Bit).HasColumnName("ACP_UD18_BIT");

                entity.Property(e => e.AcpUd19Bit).HasColumnName("ACP_UD19_BIT");

                entity.Property(e => e.AcpUd1Bit).HasColumnName("ACP_UD1_BIT");

                entity.Property(e => e.AcpUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACP_UD1_DATE");

                entity.Property(e => e.AcpUd1Id).HasColumnName("ACP_UD1_ID");

                entity.Property(e => e.AcpUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACP_UD1_ID_NAME");

                entity.Property(e => e.AcpUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACP_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.AcpUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACP_UD1_NUMERIC");

                entity.Property(e => e.AcpUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACP_UD1_TEXT");

                entity.Property(e => e.AcpUd20Bit).HasColumnName("ACP_UD20_BIT");

                entity.Property(e => e.AcpUd21Bit).HasColumnName("ACP_UD21_BIT");

                entity.Property(e => e.AcpUd22Bit).HasColumnName("ACP_UD22_BIT");

                entity.Property(e => e.AcpUd23Bit).HasColumnName("ACP_UD23_BIT");

                entity.Property(e => e.AcpUd24Bit).HasColumnName("ACP_UD24_BIT");

                entity.Property(e => e.AcpUd2Bit).HasColumnName("ACP_UD2_BIT");

                entity.Property(e => e.AcpUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACP_UD2_DATE");

                entity.Property(e => e.AcpUd2Id).HasColumnName("ACP_UD2_ID");

                entity.Property(e => e.AcpUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACP_UD2_ID_NAME");

                entity.Property(e => e.AcpUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACP_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.AcpUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACP_UD2_NUMERIC");

                entity.Property(e => e.AcpUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACP_UD2_TEXT");

                entity.Property(e => e.AcpUd3Bit).HasColumnName("ACP_UD3_BIT");

                entity.Property(e => e.AcpUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACP_UD3_DATE");

                entity.Property(e => e.AcpUd3Id).HasColumnName("ACP_UD3_ID");

                entity.Property(e => e.AcpUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACP_UD3_ID_NAME");

                entity.Property(e => e.AcpUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACP_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.AcpUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACP_UD3_NUMERIC");

                entity.Property(e => e.AcpUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACP_UD3_TEXT");

                entity.Property(e => e.AcpUd4Bit).HasColumnName("ACP_UD4_BIT");

                entity.Property(e => e.AcpUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACP_UD4_DATE");

                entity.Property(e => e.AcpUd4Id).HasColumnName("ACP_UD4_ID");

                entity.Property(e => e.AcpUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACP_UD4_ID_NAME");

                entity.Property(e => e.AcpUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACP_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.AcpUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACP_UD4_NUMERIC");

                entity.Property(e => e.AcpUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACP_UD4_TEXT");

                entity.Property(e => e.AcpUd5Bit).HasColumnName("ACP_UD5_BIT");

                entity.Property(e => e.AcpUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACP_UD5_DATE");

                entity.Property(e => e.AcpUd5Id).HasColumnName("ACP_UD5_ID");

                entity.Property(e => e.AcpUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACP_UD5_ID_NAME");

                entity.Property(e => e.AcpUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACP_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.AcpUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACP_UD5_NUMERIC");

                entity.Property(e => e.AcpUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACP_UD5_TEXT");

                entity.Property(e => e.AcpUd6Bit).HasColumnName("ACP_UD6_BIT");

                entity.Property(e => e.AcpUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACP_UD6_DATE");

                entity.Property(e => e.AcpUd6Id).HasColumnName("ACP_UD6_ID");

                entity.Property(e => e.AcpUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACP_UD6_ID_NAME");

                entity.Property(e => e.AcpUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACP_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.AcpUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACP_UD6_NUMERIC");

                entity.Property(e => e.AcpUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACP_UD6_TEXT");

                entity.Property(e => e.AcpUd7Bit).HasColumnName("ACP_UD7_BIT");

                entity.Property(e => e.AcpUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACP_UD7_DATE");

                entity.Property(e => e.AcpUd7Id).HasColumnName("ACP_UD7_ID");

                entity.Property(e => e.AcpUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACP_UD7_ID_NAME");

                entity.Property(e => e.AcpUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACP_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.AcpUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACP_UD7_NUMERIC");

                entity.Property(e => e.AcpUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACP_UD7_TEXT");

                entity.Property(e => e.AcpUd8Bit).HasColumnName("ACP_UD8_BIT");

                entity.Property(e => e.AcpUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACP_UD8_DATE");

                entity.Property(e => e.AcpUd8Id).HasColumnName("ACP_UD8_ID");

                entity.Property(e => e.AcpUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACP_UD8_ID_NAME");

                entity.Property(e => e.AcpUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACP_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.AcpUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACP_UD8_NUMERIC");

                entity.Property(e => e.AcpUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACP_UD8_TEXT");

                entity.Property(e => e.AcpUd9Bit).HasColumnName("ACP_UD9_BIT");

                entity.Property(e => e.AcpUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACP_UD9_DATE");

                entity.Property(e => e.AcpUd9Id).HasColumnName("ACP_UD9_ID");

                entity.Property(e => e.AcpUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACP_UD9_ID_NAME");

                entity.Property(e => e.AcpUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACP_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.AcpUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACP_UD9_NUMERIC");

                entity.Property(e => e.AcpUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACP_UD9_TEXT");

                entity.Property(e => e.BusinessTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Email1Address).HasMaxLength(255);

                entity.Property(e => e.HomeTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.ImSummary)
                    .HasMaxLength(255)
                    .HasColumnName("IM_SUMMARY");

                entity.Property(e => e.Label).HasColumnName("LABEL");

                entity.Property(e => e.MobileTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.ProfileLabel)
                    .HasMaxLength(255)
                    .HasColumnName("PROFILE_LABEL");

                entity.Property(e => e.ProfileLabelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PROFILE_LABEL_HLIGHT");

                entity.Property(e => e.ProfileType)
                    .HasMaxLength(255)
                    .HasColumnName("PROFILE_TYPE");

                entity.Property(e => e.ProfileTypeDetails).HasColumnName("PROFILE_TYPE_DETAILS");

                entity.Property(e => e.ProfileTypeHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PROFILE_TYPE_HLIGHT");

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.SitId).HasColumnName("SIT_ID");

                entity.Property(e => e.SitName)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_NAME");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Type).HasColumnName("TYPE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");

                entity.Property(e => e.UsIdSupport).HasColumnName("US_ID_SUPPORT");
            });

            modelBuilder.Entity<VActivitiesListContactAndContactsAccount>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vActivitiesListContactAndContactsAccount");

                entity.Property(e => e.AcBillingCountry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_COUNTRY");

                entity.Property(e => e.AcBillingCounty)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_COUNTY");

                entity.Property(e => e.AcBillingPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_POSTCODE");

                entity.Property(e => e.AcBillingTown)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_TOWN");

                entity.Property(e => e.AcCountry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_COUNTRY");

                entity.Property(e => e.AcCounty)
                    .HasMaxLength(255)
                    .HasColumnName("AC_COUNTY");

                entity.Property(e => e.AcExternal)
                    .HasMaxLength(255)
                    .HasColumnName("AC_EXTERNAL");

                entity.Property(e => e.AcFlag)
                    .HasMaxLength(255)
                    .HasColumnName("AC_FLAG");

                entity.Property(e => e.AcFlagHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_FLAG_HLIGHT");

                entity.Property(e => e.AcGroup)
                    .HasMaxLength(255)
                    .HasColumnName("AC_GROUP");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcIndustry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_INDUSTRY");

                entity.Property(e => e.AcIndustryHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_INDUSTRY_HLIGHT");

                entity.Property(e => e.AcLabel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LABEL");

                entity.Property(e => e.AcLabelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LABEL_HLIGHT");

                entity.Property(e => e.AcLevel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LEVEL");

                entity.Property(e => e.AcLevelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LEVEL_HLIGHT");

                entity.Property(e => e.AcManagerSupport)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_SUPPORT");

                entity.Property(e => e.AcManagerSupportEmail)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_SUPPORT_EMAIL");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.AcPhone1)
                    .HasMaxLength(50)
                    .HasColumnName("AC_PHONE_1");

                entity.Property(e => e.AcPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("AC_POSTCODE");

                entity.Property(e => e.AcReference)
                    .HasMaxLength(50)
                    .HasColumnName("AC_REFERENCE");

                entity.Property(e => e.AcSource)
                    .HasMaxLength(255)
                    .HasColumnName("AC_SOURCE");

                entity.Property(e => e.AcSourceHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_SOURCE_HLIGHT");

                entity.Property(e => e.AcTown)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TOWN");

                entity.Property(e => e.AcType)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE");

                entity.Property(e => e.AcType2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_2");

                entity.Property(e => e.AcType2Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_2_HLIGHT");

                entity.Property(e => e.AcTypeHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_HLIGHT");

                entity.Property(e => e.AcUd10Bit).HasColumnName("AC_UD10_BIT");

                entity.Property(e => e.AcUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD10_DATE");

                entity.Property(e => e.AcUd10Id).HasColumnName("AC_UD10_ID");

                entity.Property(e => e.AcUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_ID_NAME");

                entity.Property(e => e.AcUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd10Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD10_NUMERIC");

                entity.Property(e => e.AcUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_TEXT");

                entity.Property(e => e.AcUd11Bit).HasColumnName("AC_UD11_BIT");

                entity.Property(e => e.AcUd11Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD11_TEXT");

                entity.Property(e => e.AcUd12Bit).HasColumnName("AC_UD12_BIT");

                entity.Property(e => e.AcUd12Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD12_TEXT");

                entity.Property(e => e.AcUd13Bit).HasColumnName("AC_UD13_BIT");

                entity.Property(e => e.AcUd13Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD13_TEXT");

                entity.Property(e => e.AcUd14Bit).HasColumnName("AC_UD14_BIT");

                entity.Property(e => e.AcUd14Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD14_TEXT");

                entity.Property(e => e.AcUd15Bit).HasColumnName("AC_UD15_BIT");

                entity.Property(e => e.AcUd15Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD15_TEXT");

                entity.Property(e => e.AcUd16Bit).HasColumnName("AC_UD16_BIT");

                entity.Property(e => e.AcUd17Bit).HasColumnName("AC_UD17_BIT");

                entity.Property(e => e.AcUd18Bit).HasColumnName("AC_UD18_BIT");

                entity.Property(e => e.AcUd19Bit).HasColumnName("AC_UD19_BIT");

                entity.Property(e => e.AcUd1Bit).HasColumnName("AC_UD1_BIT");

                entity.Property(e => e.AcUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD1_DATE");

                entity.Property(e => e.AcUd1Id).HasColumnName("AC_UD1_ID");

                entity.Property(e => e.AcUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_ID_NAME");

                entity.Property(e => e.AcUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd1Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD1_NUMERIC");

                entity.Property(e => e.AcUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_TEXT");

                entity.Property(e => e.AcUd20Bit).HasColumnName("AC_UD20_BIT");

                entity.Property(e => e.AcUd21Bit).HasColumnName("AC_UD21_BIT");

                entity.Property(e => e.AcUd22Bit).HasColumnName("AC_UD22_BIT");

                entity.Property(e => e.AcUd23Bit).HasColumnName("AC_UD23_BIT");

                entity.Property(e => e.AcUd24Bit).HasColumnName("AC_UD24_BIT");

                entity.Property(e => e.AcUd2Bit).HasColumnName("AC_UD2_BIT");

                entity.Property(e => e.AcUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD2_DATE");

                entity.Property(e => e.AcUd2Id).HasColumnName("AC_UD2_ID");

                entity.Property(e => e.AcUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_ID_NAME");

                entity.Property(e => e.AcUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd2Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD2_NUMERIC");

                entity.Property(e => e.AcUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_TEXT");

                entity.Property(e => e.AcUd3Bit).HasColumnName("AC_UD3_BIT");

                entity.Property(e => e.AcUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD3_DATE");

                entity.Property(e => e.AcUd3Id).HasColumnName("AC_UD3_ID");

                entity.Property(e => e.AcUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_ID_NAME");

                entity.Property(e => e.AcUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd3Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD3_NUMERIC");

                entity.Property(e => e.AcUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_TEXT");

                entity.Property(e => e.AcUd4Bit).HasColumnName("AC_UD4_BIT");

                entity.Property(e => e.AcUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD4_DATE");

                entity.Property(e => e.AcUd4Id).HasColumnName("AC_UD4_ID");

                entity.Property(e => e.AcUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_ID_NAME");

                entity.Property(e => e.AcUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd4Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD4_NUMERIC");

                entity.Property(e => e.AcUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_TEXT");

                entity.Property(e => e.AcUd5Bit).HasColumnName("AC_UD5_BIT");

                entity.Property(e => e.AcUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD5_DATE");

                entity.Property(e => e.AcUd5Id).HasColumnName("AC_UD5_ID");

                entity.Property(e => e.AcUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_ID_NAME");

                entity.Property(e => e.AcUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd5Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD5_NUMERIC");

                entity.Property(e => e.AcUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_TEXT");

                entity.Property(e => e.AcUd6Bit).HasColumnName("AC_UD6_BIT");

                entity.Property(e => e.AcUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD6_DATE");

                entity.Property(e => e.AcUd6Id).HasColumnName("AC_UD6_ID");

                entity.Property(e => e.AcUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_ID_NAME");

                entity.Property(e => e.AcUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd6Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD6_NUMERIC");

                entity.Property(e => e.AcUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_TEXT");

                entity.Property(e => e.AcUd7Bit).HasColumnName("AC_UD7_BIT");

                entity.Property(e => e.AcUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD7_DATE");

                entity.Property(e => e.AcUd7Id).HasColumnName("AC_UD7_ID");

                entity.Property(e => e.AcUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_ID_NAME");

                entity.Property(e => e.AcUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd7Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD7_NUMERIC");

                entity.Property(e => e.AcUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_TEXT");

                entity.Property(e => e.AcUd8Bit).HasColumnName("AC_UD8_BIT");

                entity.Property(e => e.AcUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD8_DATE");

                entity.Property(e => e.AcUd8Id).HasColumnName("AC_UD8_ID");

                entity.Property(e => e.AcUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_ID_NAME");

                entity.Property(e => e.AcUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd8Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD8_NUMERIC");

                entity.Property(e => e.AcUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_TEXT");

                entity.Property(e => e.AcUd9Bit).HasColumnName("AC_UD9_BIT");

                entity.Property(e => e.AcUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD9_DATE");

                entity.Property(e => e.AcUd9Id).HasColumnName("AC_UD9_ID");

                entity.Property(e => e.AcUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_ID_NAME");

                entity.Property(e => e.AcUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd9Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD9_NUMERIC");

                entity.Property(e => e.AcUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_TEXT");

                entity.Property(e => e.AcaExternal)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_EXTERNAL");

                entity.Property(e => e.AcaId).HasColumnName("ACA_ID");

                entity.Property(e => e.AcaImport).HasColumnName("ACA_IMPORT");

                entity.Property(e => e.AcaReadonly).HasColumnName("ACA_READONLY");

                entity.Property(e => e.AcaUd10Bit).HasColumnName("ACA_UD10_BIT");

                entity.Property(e => e.AcaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD10_DATE");

                entity.Property(e => e.AcaUd10Id).HasColumnName("ACA_UD10_ID");

                entity.Property(e => e.AcaUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD10_ID_NAME");

                entity.Property(e => e.AcaUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACA_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.AcaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD10_NUMERIC");

                entity.Property(e => e.AcaUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD10_TEXT");

                entity.Property(e => e.AcaUd1Bit).HasColumnName("ACA_UD1_BIT");

                entity.Property(e => e.AcaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD1_DATE");

                entity.Property(e => e.AcaUd1Id).HasColumnName("ACA_UD1_ID");

                entity.Property(e => e.AcaUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD1_ID_NAME");

                entity.Property(e => e.AcaUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACA_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.AcaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD1_NUMERIC");

                entity.Property(e => e.AcaUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD1_TEXT");

                entity.Property(e => e.AcaUd2Bit).HasColumnName("ACA_UD2_BIT");

                entity.Property(e => e.AcaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD2_DATE");

                entity.Property(e => e.AcaUd2Id).HasColumnName("ACA_UD2_ID");

                entity.Property(e => e.AcaUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD2_ID_NAME");

                entity.Property(e => e.AcaUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACA_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.AcaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD2_NUMERIC");

                entity.Property(e => e.AcaUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD2_TEXT");

                entity.Property(e => e.AcaUd3Bit).HasColumnName("ACA_UD3_BIT");

                entity.Property(e => e.AcaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD3_DATE");

                entity.Property(e => e.AcaUd3Id).HasColumnName("ACA_UD3_ID");

                entity.Property(e => e.AcaUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD3_ID_NAME");

                entity.Property(e => e.AcaUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACA_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.AcaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD3_NUMERIC");

                entity.Property(e => e.AcaUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD3_TEXT");

                entity.Property(e => e.AcaUd4Bit).HasColumnName("ACA_UD4_BIT");

                entity.Property(e => e.AcaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD4_DATE");

                entity.Property(e => e.AcaUd4Id).HasColumnName("ACA_UD4_ID");

                entity.Property(e => e.AcaUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD4_ID_NAME");

                entity.Property(e => e.AcaUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACA_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.AcaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD4_NUMERIC");

                entity.Property(e => e.AcaUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD4_TEXT");

                entity.Property(e => e.AcaUd5Bit).HasColumnName("ACA_UD5_BIT");

                entity.Property(e => e.AcaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD5_DATE");

                entity.Property(e => e.AcaUd5Id).HasColumnName("ACA_UD5_ID");

                entity.Property(e => e.AcaUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD5_ID_NAME");

                entity.Property(e => e.AcaUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACA_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.AcaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD5_NUMERIC");

                entity.Property(e => e.AcaUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD5_TEXT");

                entity.Property(e => e.AcaUd6Bit).HasColumnName("ACA_UD6_BIT");

                entity.Property(e => e.AcaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD6_DATE");

                entity.Property(e => e.AcaUd6Id).HasColumnName("ACA_UD6_ID");

                entity.Property(e => e.AcaUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD6_ID_NAME");

                entity.Property(e => e.AcaUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACA_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.AcaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD6_NUMERIC");

                entity.Property(e => e.AcaUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD6_TEXT");

                entity.Property(e => e.AcaUd7Bit).HasColumnName("ACA_UD7_BIT");

                entity.Property(e => e.AcaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD7_DATE");

                entity.Property(e => e.AcaUd7Id).HasColumnName("ACA_UD7_ID");

                entity.Property(e => e.AcaUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD7_ID_NAME");

                entity.Property(e => e.AcaUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACA_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.AcaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD7_NUMERIC");

                entity.Property(e => e.AcaUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD7_TEXT");

                entity.Property(e => e.AcaUd8Bit).HasColumnName("ACA_UD8_BIT");

                entity.Property(e => e.AcaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD8_DATE");

                entity.Property(e => e.AcaUd8Id).HasColumnName("ACA_UD8_ID");

                entity.Property(e => e.AcaUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD8_ID_NAME");

                entity.Property(e => e.AcaUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACA_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.AcaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD8_NUMERIC");

                entity.Property(e => e.AcaUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD8_TEXT");

                entity.Property(e => e.AcaUd9Bit).HasColumnName("ACA_UD9_BIT");

                entity.Property(e => e.AcaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD9_DATE");

                entity.Property(e => e.AcaUd9Id).HasColumnName("ACA_UD9_ID");

                entity.Property(e => e.AcaUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD9_ID_NAME");

                entity.Property(e => e.AcaUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACA_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.AcaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD9_NUMERIC");

                entity.Property(e => e.AcaUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD9_TEXT");

                entity.Property(e => e.AccBusinessTelephonenumber)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BusinessTelephonenumber");

                entity.Property(e => e.AccEmail1Address)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_Email1Address");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_NAME");

                entity.Property(e => e.AccPrefEmail)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_EMAIL");

                entity.Property(e => e.AccPrefPhone)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_PHONE");

                entity.Property(e => e.AccaExternal)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_EXTERNAL");

                entity.Property(e => e.AccaId).HasColumnName("ACCA_ID");

                entity.Property(e => e.AccaNumber).HasColumnName("ACCA_NUMBER");

                entity.Property(e => e.AccaReadonly).HasColumnName("ACCA_READONLY");

                entity.Property(e => e.AccaStage).HasColumnName("ACCA_STAGE");

                entity.Property(e => e.AccaUd10Bit).HasColumnName("ACCA_UD10_BIT");

                entity.Property(e => e.AccaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD10_DATE");

                entity.Property(e => e.AccaUd10Id).HasColumnName("ACCA_UD10_ID");

                entity.Property(e => e.AccaUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD10_ID_NAME");

                entity.Property(e => e.AccaUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACCA_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.AccaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD10_NUMERIC");

                entity.Property(e => e.AccaUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD10_TEXT");

                entity.Property(e => e.AccaUd1Bit).HasColumnName("ACCA_UD1_BIT");

                entity.Property(e => e.AccaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD1_DATE");

                entity.Property(e => e.AccaUd1Id).HasColumnName("ACCA_UD1_ID");

                entity.Property(e => e.AccaUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD1_ID_NAME");

                entity.Property(e => e.AccaUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACCA_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.AccaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD1_NUMERIC");

                entity.Property(e => e.AccaUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD1_TEXT");

                entity.Property(e => e.AccaUd2Bit).HasColumnName("ACCA_UD2_BIT");

                entity.Property(e => e.AccaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD2_DATE");

                entity.Property(e => e.AccaUd2Id).HasColumnName("ACCA_UD2_ID");

                entity.Property(e => e.AccaUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD2_ID_NAME");

                entity.Property(e => e.AccaUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACCA_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.AccaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD2_NUMERIC");

                entity.Property(e => e.AccaUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD2_TEXT");

                entity.Property(e => e.AccaUd3Bit).HasColumnName("ACCA_UD3_BIT");

                entity.Property(e => e.AccaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD3_DATE");

                entity.Property(e => e.AccaUd3Id).HasColumnName("ACCA_UD3_ID");

                entity.Property(e => e.AccaUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD3_ID_NAME");

                entity.Property(e => e.AccaUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACCA_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.AccaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD3_NUMERIC");

                entity.Property(e => e.AccaUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD3_TEXT");

                entity.Property(e => e.AccaUd4Bit).HasColumnName("ACCA_UD4_BIT");

                entity.Property(e => e.AccaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD4_DATE");

                entity.Property(e => e.AccaUd4Id).HasColumnName("ACCA_UD4_ID");

                entity.Property(e => e.AccaUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD4_ID_NAME");

                entity.Property(e => e.AccaUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACCA_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.AccaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD4_NUMERIC");

                entity.Property(e => e.AccaUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD4_TEXT");

                entity.Property(e => e.AccaUd5Bit).HasColumnName("ACCA_UD5_BIT");

                entity.Property(e => e.AccaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD5_DATE");

                entity.Property(e => e.AccaUd5Id).HasColumnName("ACCA_UD5_ID");

                entity.Property(e => e.AccaUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD5_ID_NAME");

                entity.Property(e => e.AccaUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACCA_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.AccaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD5_NUMERIC");

                entity.Property(e => e.AccaUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD5_TEXT");

                entity.Property(e => e.AccaUd6Bit).HasColumnName("ACCA_UD6_BIT");

                entity.Property(e => e.AccaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD6_DATE");

                entity.Property(e => e.AccaUd6Id).HasColumnName("ACCA_UD6_ID");

                entity.Property(e => e.AccaUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD6_ID_NAME");

                entity.Property(e => e.AccaUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACCA_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.AccaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD6_NUMERIC");

                entity.Property(e => e.AccaUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD6_TEXT");

                entity.Property(e => e.AccaUd7Bit).HasColumnName("ACCA_UD7_BIT");

                entity.Property(e => e.AccaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD7_DATE");

                entity.Property(e => e.AccaUd7Id).HasColumnName("ACCA_UD7_ID");

                entity.Property(e => e.AccaUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD7_ID_NAME");

                entity.Property(e => e.AccaUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACCA_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.AccaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD7_NUMERIC");

                entity.Property(e => e.AccaUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD7_TEXT");

                entity.Property(e => e.AccaUd8Bit).HasColumnName("ACCA_UD8_BIT");

                entity.Property(e => e.AccaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD8_DATE");

                entity.Property(e => e.AccaUd8Id).HasColumnName("ACCA_UD8_ID");

                entity.Property(e => e.AccaUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD8_ID_NAME");

                entity.Property(e => e.AccaUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACCA_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.AccaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD8_NUMERIC");

                entity.Property(e => e.AccaUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD8_TEXT");

                entity.Property(e => e.AccaUd9Bit).HasColumnName("ACCA_UD9_BIT");

                entity.Property(e => e.AccaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD9_DATE");

                entity.Property(e => e.AccaUd9Id).HasColumnName("ACCA_UD9_ID");

                entity.Property(e => e.AccaUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD9_ID_NAME");

                entity.Property(e => e.AccaUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACCA_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.AccaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD9_NUMERIC");

                entity.Property(e => e.AccaUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD9_TEXT");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_MANAGER");

                entity.Property(e => e.AccountManagerEmail)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_MANAGER_EMAIL");

                entity.Property(e => e.AcgId).HasColumnName("ACG_ID");

                entity.Property(e => e.ActDeleted).HasColumnName("ACT_DELETED");

                entity.Property(e => e.ActExternal)
                    .HasMaxLength(255)
                    .HasColumnName("ACT_EXTERNAL");

                entity.Property(e => e.ActReadOnly).HasColumnName("ACT_READ_ONLY");

                entity.Property(e => e.ActivityType)
                    .HasMaxLength(255)
                    .HasColumnName("ACTIVITY_TYPE");

                entity.Property(e => e.ActivityTypeHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACTIVITY_TYPE_HLIGHT");

                entity.Property(e => e.BillingInformation)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_INFORMATION");

                entity.Property(e => e.Complete).HasColumnName("COMPLETE");

                entity.Property(e => e.ContactName)
                    .HasMaxLength(255)
                    .HasColumnName("CONTACT_NAME");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DateCompleted)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_COMPLETED");

                entity.Property(e => e.DaysOpen).HasColumnName("DAYS_OPEN");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.DueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DUE_DATE");

                entity.Property(e => e.Duration)
                    .HasMaxLength(50)
                    .HasColumnName("DURATION");

                entity.Property(e => e.Exported).HasColumnName("EXPORTED");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ImSummary)
                    .HasMaxLength(255)
                    .HasColumnName("IM_SUMMARY");

                entity.Property(e => e.MacId).HasColumnName("MAC_ID");

                entity.Property(e => e.MacStage)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_STAGE");

                entity.Property(e => e.MacStageHlight)
                    .HasMaxLength(100)
                    .HasColumnName("MAC_STAGE_HLIGHT");

                entity.Property(e => e.McrId).HasColumnName("MCR_ID");

                entity.Property(e => e.OpId).HasColumnName("OP_ID");

                entity.Property(e => e.OpSource)
                    .HasMaxLength(255)
                    .HasColumnName("OP_SOURCE");

                entity.Property(e => e.OpSourceHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OP_SOURCE_HLIGHT");

                entity.Property(e => e.OpStage)
                    .HasMaxLength(255)
                    .HasColumnName("OP_STAGE");

                entity.Property(e => e.OpState)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("OP_STATE");

                entity.Property(e => e.OpaExternal)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_EXTERNAL");

                entity.Property(e => e.OpaId).HasColumnName("OPA_ID");

                entity.Property(e => e.OpaReadonly).HasColumnName("OPA_READONLY");

                entity.Property(e => e.OpaUd10Bit).HasColumnName("OPA_UD10_BIT");

                entity.Property(e => e.OpaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD10_DATE");

                entity.Property(e => e.OpaUd10Id).HasColumnName("OPA_UD10_ID");

                entity.Property(e => e.OpaUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD10_ID_NAME");

                entity.Property(e => e.OpaUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPA_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.OpaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD10_NUMERIC");

                entity.Property(e => e.OpaUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD10_TEXT");

                entity.Property(e => e.OpaUd1Bit).HasColumnName("OPA_UD1_BIT");

                entity.Property(e => e.OpaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD1_DATE");

                entity.Property(e => e.OpaUd1Id).HasColumnName("OPA_UD1_ID");

                entity.Property(e => e.OpaUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD1_ID_NAME");

                entity.Property(e => e.OpaUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPA_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.OpaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD1_NUMERIC");

                entity.Property(e => e.OpaUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD1_TEXT");

                entity.Property(e => e.OpaUd2Bit).HasColumnName("OPA_UD2_BIT");

                entity.Property(e => e.OpaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD2_DATE");

                entity.Property(e => e.OpaUd2Id).HasColumnName("OPA_UD2_ID");

                entity.Property(e => e.OpaUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD2_ID_NAME");

                entity.Property(e => e.OpaUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPA_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.OpaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD2_NUMERIC");

                entity.Property(e => e.OpaUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD2_TEXT");

                entity.Property(e => e.OpaUd3Bit).HasColumnName("OPA_UD3_BIT");

                entity.Property(e => e.OpaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD3_DATE");

                entity.Property(e => e.OpaUd3Id).HasColumnName("OPA_UD3_ID");

                entity.Property(e => e.OpaUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD3_ID_NAME");

                entity.Property(e => e.OpaUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPA_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.OpaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD3_NUMERIC");

                entity.Property(e => e.OpaUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD3_TEXT");

                entity.Property(e => e.OpaUd4Bit).HasColumnName("OPA_UD4_BIT");

                entity.Property(e => e.OpaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD4_DATE");

                entity.Property(e => e.OpaUd4Id).HasColumnName("OPA_UD4_ID");

                entity.Property(e => e.OpaUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD4_ID_NAME");

                entity.Property(e => e.OpaUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPA_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.OpaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD4_NUMERIC");

                entity.Property(e => e.OpaUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD4_TEXT");

                entity.Property(e => e.OpaUd5Bit).HasColumnName("OPA_UD5_BIT");

                entity.Property(e => e.OpaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD5_DATE");

                entity.Property(e => e.OpaUd5Id).HasColumnName("OPA_UD5_ID");

                entity.Property(e => e.OpaUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD5_ID_NAME");

                entity.Property(e => e.OpaUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPA_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.OpaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD5_NUMERIC");

                entity.Property(e => e.OpaUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD5_TEXT");

                entity.Property(e => e.OpaUd6Bit).HasColumnName("OPA_UD6_BIT");

                entity.Property(e => e.OpaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD6_DATE");

                entity.Property(e => e.OpaUd6Id).HasColumnName("OPA_UD6_ID");

                entity.Property(e => e.OpaUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD6_ID_NAME");

                entity.Property(e => e.OpaUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPA_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.OpaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD6_NUMERIC");

                entity.Property(e => e.OpaUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD6_TEXT");

                entity.Property(e => e.OpaUd7Bit).HasColumnName("OPA_UD7_BIT");

                entity.Property(e => e.OpaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD7_DATE");

                entity.Property(e => e.OpaUd7Id).HasColumnName("OPA_UD7_ID");

                entity.Property(e => e.OpaUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD7_ID_NAME");

                entity.Property(e => e.OpaUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPA_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.OpaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD7_NUMERIC");

                entity.Property(e => e.OpaUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD7_TEXT");

                entity.Property(e => e.OpaUd8Bit).HasColumnName("OPA_UD8_BIT");

                entity.Property(e => e.OpaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD8_DATE");

                entity.Property(e => e.OpaUd8Id).HasColumnName("OPA_UD8_ID");

                entity.Property(e => e.OpaUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD8_ID_NAME");

                entity.Property(e => e.OpaUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPA_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.OpaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD8_NUMERIC");

                entity.Property(e => e.OpaUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD8_TEXT");

                entity.Property(e => e.OpaUd9Bit).HasColumnName("OPA_UD9_BIT");

                entity.Property(e => e.OpaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD9_DATE");

                entity.Property(e => e.OpaUd9Id).HasColumnName("OPA_UD9_ID");

                entity.Property(e => e.OpaUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD9_ID_NAME");

                entity.Property(e => e.OpaUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPA_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.OpaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD9_NUMERIC");

                entity.Property(e => e.OpaUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD9_TEXT");

                entity.Property(e => e.Overdue).HasColumnName("OVERDUE");

                entity.Property(e => e.Parent)
                    .HasMaxLength(50)
                    .HasColumnName("PARENT");

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.ParentName)
                    .HasMaxLength(255)
                    .HasColumnName("PARENT_NAME");

                entity.Property(e => e.ParentSummary)
                    .HasMaxLength(255)
                    .HasColumnName("PARENT_SUMMARY")
                    .UseCollation("Latin1_General_CI_AS");

                entity.Property(e => e.PercentComplete).HasColumnName("PERCENT_COMPLETE");

                entity.Property(e => e.PjId).HasColumnName("PJ_ID");

                entity.Property(e => e.PjStage)
                    .HasMaxLength(255)
                    .HasColumnName("PJ_STAGE");

                entity.Property(e => e.PjaExternal)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_EXTERNAL");

                entity.Property(e => e.PjaId).HasColumnName("PJA_ID");

                entity.Property(e => e.PjaReadonly).HasColumnName("PJA_READONLY");

                entity.Property(e => e.PjaUd10Bit).HasColumnName("PJA_UD10_BIT");

                entity.Property(e => e.PjaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD10_DATE");

                entity.Property(e => e.PjaUd10Id).HasColumnName("PJA_UD10_ID");

                entity.Property(e => e.PjaUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD10_ID_NAME");

                entity.Property(e => e.PjaUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJA_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.PjaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD10_NUMERIC");

                entity.Property(e => e.PjaUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD10_TEXT");

                entity.Property(e => e.PjaUd1Bit).HasColumnName("PJA_UD1_BIT");

                entity.Property(e => e.PjaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD1_DATE");

                entity.Property(e => e.PjaUd1Id).HasColumnName("PJA_UD1_ID");

                entity.Property(e => e.PjaUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD1_ID_NAME");

                entity.Property(e => e.PjaUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJA_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.PjaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD1_NUMERIC");

                entity.Property(e => e.PjaUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD1_TEXT");

                entity.Property(e => e.PjaUd2Bit).HasColumnName("PJA_UD2_BIT");

                entity.Property(e => e.PjaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD2_DATE");

                entity.Property(e => e.PjaUd2Id).HasColumnName("PJA_UD2_ID");

                entity.Property(e => e.PjaUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD2_ID_NAME");

                entity.Property(e => e.PjaUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJA_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.PjaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD2_NUMERIC");

                entity.Property(e => e.PjaUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD2_TEXT");

                entity.Property(e => e.PjaUd3Bit).HasColumnName("PJA_UD3_BIT");

                entity.Property(e => e.PjaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD3_DATE");

                entity.Property(e => e.PjaUd3Id).HasColumnName("PJA_UD3_ID");

                entity.Property(e => e.PjaUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD3_ID_NAME");

                entity.Property(e => e.PjaUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJA_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.PjaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD3_NUMERIC");

                entity.Property(e => e.PjaUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD3_TEXT");

                entity.Property(e => e.PjaUd4Bit).HasColumnName("PJA_UD4_BIT");

                entity.Property(e => e.PjaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD4_DATE");

                entity.Property(e => e.PjaUd4Id).HasColumnName("PJA_UD4_ID");

                entity.Property(e => e.PjaUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD4_ID_NAME");

                entity.Property(e => e.PjaUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJA_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.PjaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD4_NUMERIC");

                entity.Property(e => e.PjaUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD4_TEXT");

                entity.Property(e => e.PjaUd5Bit).HasColumnName("PJA_UD5_BIT");

                entity.Property(e => e.PjaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD5_DATE");

                entity.Property(e => e.PjaUd5Id).HasColumnName("PJA_UD5_ID");

                entity.Property(e => e.PjaUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD5_ID_NAME");

                entity.Property(e => e.PjaUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJA_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.PjaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD5_NUMERIC");

                entity.Property(e => e.PjaUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD5_TEXT");

                entity.Property(e => e.PjaUd6Bit).HasColumnName("PJA_UD6_BIT");

                entity.Property(e => e.PjaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD6_DATE");

                entity.Property(e => e.PjaUd6Id).HasColumnName("PJA_UD6_ID");

                entity.Property(e => e.PjaUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD6_ID_NAME");

                entity.Property(e => e.PjaUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJA_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.PjaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD6_NUMERIC");

                entity.Property(e => e.PjaUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD6_TEXT");

                entity.Property(e => e.PjaUd7Bit).HasColumnName("PJA_UD7_BIT");

                entity.Property(e => e.PjaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD7_DATE");

                entity.Property(e => e.PjaUd7Id).HasColumnName("PJA_UD7_ID");

                entity.Property(e => e.PjaUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD7_ID_NAME");

                entity.Property(e => e.PjaUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJA_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.PjaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD7_NUMERIC");

                entity.Property(e => e.PjaUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD7_TEXT");

                entity.Property(e => e.PjaUd8Bit).HasColumnName("PJA_UD8_BIT");

                entity.Property(e => e.PjaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD8_DATE");

                entity.Property(e => e.PjaUd8Id).HasColumnName("PJA_UD8_ID");

                entity.Property(e => e.PjaUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD8_ID_NAME");

                entity.Property(e => e.PjaUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJA_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.PjaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD8_NUMERIC");

                entity.Property(e => e.PjaUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD8_TEXT");

                entity.Property(e => e.PjaUd9Bit).HasColumnName("PJA_UD9_BIT");

                entity.Property(e => e.PjaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD9_DATE");

                entity.Property(e => e.PjaUd9Id).HasColumnName("PJA_UD9_ID");

                entity.Property(e => e.PjaUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD9_ID_NAME");

                entity.Property(e => e.PjaUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJA_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.PjaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD9_NUMERIC");

                entity.Property(e => e.PjaUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD9_TEXT");

                entity.Property(e => e.Priority)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("PRIORITY");

                entity.Property(e => e.PriorityHlight)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("PRIORITY_HLIGHT");

                entity.Property(e => e.PriorityId).HasColumnName("PRIORITY_ID");

                entity.Property(e => e.Private).HasColumnName("PRIVATE");

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.Reminder).HasColumnName("REMINDER");

                entity.Property(e => e.ReminderAlerted).HasColumnName("REMINDER_ALERTED");

                entity.Property(e => e.ReminderMinutes).HasColumnName("REMINDER_MINUTES");

                entity.Property(e => e.ReminderMinutesName)
                    .HasMaxLength(18)
                    .HasColumnName("REMINDER_MINUTES_NAME");

                entity.Property(e => e.SecurityGroup)
                    .HasMaxLength(255)
                    .HasColumnName("SECURITY_GROUP");

                entity.Property(e => e.SecurityId).HasColumnName("SECURITY_ID");

                entity.Property(e => e.SecurityObject)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SECURITY_OBJECT");

                entity.Property(e => e.SecurityOwner).HasColumnName("SECURITY_OWNER");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.SemName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_NAME");

                entity.Property(e => e.Sensitivity).HasColumnName("SENSITIVITY");

                entity.Property(e => e.SensitivityId).HasColumnName("SENSITIVITY_ID");

                entity.Property(e => e.ShowOnCalendar).HasColumnName("SHOW_ON_CALENDAR");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("START_DATE");

                entity.Property(e => e.Status)
                    .HasMaxLength(23)
                    .IsUnicode(false)
                    .HasColumnName("STATUS");

                entity.Property(e => e.StatusHlight)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("STATUS_HLIGHT");

                entity.Property(e => e.StatusId).HasColumnName("STATUS_ID");

                entity.Property(e => e.StgId).HasColumnName("STG_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Type).HasColumnName("TYPE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");

                entity.Property(e => e.UsIdSupport).HasColumnName("US_ID_SUPPORT");

                entity.Property(e => e.UsName)
                    .HasMaxLength(255)
                    .HasColumnName("US_NAME");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");

                entity.Property(e => e.UsgName)
                    .HasMaxLength(255)
                    .HasColumnName("USG_NAME");
            });

            modelBuilder.Entity<VActivity>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vActivities");

                entity.Property(e => e.AcBillingCountry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_COUNTRY");

                entity.Property(e => e.AcBillingCounty)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_COUNTY");

                entity.Property(e => e.AcBillingPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_POSTCODE");

                entity.Property(e => e.AcBillingTown)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_TOWN");

                entity.Property(e => e.AcCountry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_COUNTRY");

                entity.Property(e => e.AcCounty)
                    .HasMaxLength(255)
                    .HasColumnName("AC_COUNTY");

                entity.Property(e => e.AcExternal)
                    .HasMaxLength(255)
                    .HasColumnName("AC_EXTERNAL");

                entity.Property(e => e.AcFlag)
                    .HasMaxLength(255)
                    .HasColumnName("AC_FLAG");

                entity.Property(e => e.AcFlagHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_FLAG_HLIGHT");

                entity.Property(e => e.AcGroup)
                    .HasMaxLength(255)
                    .HasColumnName("AC_GROUP");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcIndustry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_INDUSTRY");

                entity.Property(e => e.AcIndustryHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_INDUSTRY_HLIGHT");

                entity.Property(e => e.AcLabel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LABEL");

                entity.Property(e => e.AcLabelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LABEL_HLIGHT");

                entity.Property(e => e.AcLevel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LEVEL");

                entity.Property(e => e.AcLevelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LEVEL_HLIGHT");

                entity.Property(e => e.AcManagerSupport)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_SUPPORT");

                entity.Property(e => e.AcManagerSupportEmail)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_SUPPORT_EMAIL");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.AcPhone1)
                    .HasMaxLength(50)
                    .HasColumnName("AC_PHONE_1");

                entity.Property(e => e.AcPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("AC_POSTCODE");

                entity.Property(e => e.AcReference)
                    .HasMaxLength(50)
                    .HasColumnName("AC_REFERENCE");

                entity.Property(e => e.AcSource)
                    .HasMaxLength(255)
                    .HasColumnName("AC_SOURCE");

                entity.Property(e => e.AcSourceHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_SOURCE_HLIGHT");

                entity.Property(e => e.AcTown)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TOWN");

                entity.Property(e => e.AcType)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE");

                entity.Property(e => e.AcType2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_2");

                entity.Property(e => e.AcType2Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_2_HLIGHT");

                entity.Property(e => e.AcTypeHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_HLIGHT");

                entity.Property(e => e.AcUd10Bit).HasColumnName("AC_UD10_BIT");

                entity.Property(e => e.AcUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD10_DATE");

                entity.Property(e => e.AcUd10Id).HasColumnName("AC_UD10_ID");

                entity.Property(e => e.AcUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_ID_NAME");

                entity.Property(e => e.AcUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd10Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD10_NUMERIC");

                entity.Property(e => e.AcUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_TEXT");

                entity.Property(e => e.AcUd11Bit).HasColumnName("AC_UD11_BIT");

                entity.Property(e => e.AcUd11Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD11_TEXT");

                entity.Property(e => e.AcUd12Bit).HasColumnName("AC_UD12_BIT");

                entity.Property(e => e.AcUd12Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD12_TEXT");

                entity.Property(e => e.AcUd13Bit).HasColumnName("AC_UD13_BIT");

                entity.Property(e => e.AcUd13Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD13_TEXT");

                entity.Property(e => e.AcUd14Bit).HasColumnName("AC_UD14_BIT");

                entity.Property(e => e.AcUd14Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD14_TEXT");

                entity.Property(e => e.AcUd15Bit).HasColumnName("AC_UD15_BIT");

                entity.Property(e => e.AcUd15Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD15_TEXT");

                entity.Property(e => e.AcUd16Bit).HasColumnName("AC_UD16_BIT");

                entity.Property(e => e.AcUd17Bit).HasColumnName("AC_UD17_BIT");

                entity.Property(e => e.AcUd18Bit).HasColumnName("AC_UD18_BIT");

                entity.Property(e => e.AcUd19Bit).HasColumnName("AC_UD19_BIT");

                entity.Property(e => e.AcUd1Bit).HasColumnName("AC_UD1_BIT");

                entity.Property(e => e.AcUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD1_DATE");

                entity.Property(e => e.AcUd1Id).HasColumnName("AC_UD1_ID");

                entity.Property(e => e.AcUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_ID_NAME");

                entity.Property(e => e.AcUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd1Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD1_NUMERIC");

                entity.Property(e => e.AcUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_TEXT");

                entity.Property(e => e.AcUd20Bit).HasColumnName("AC_UD20_BIT");

                entity.Property(e => e.AcUd21Bit).HasColumnName("AC_UD21_BIT");

                entity.Property(e => e.AcUd22Bit).HasColumnName("AC_UD22_BIT");

                entity.Property(e => e.AcUd23Bit).HasColumnName("AC_UD23_BIT");

                entity.Property(e => e.AcUd24Bit).HasColumnName("AC_UD24_BIT");

                entity.Property(e => e.AcUd2Bit).HasColumnName("AC_UD2_BIT");

                entity.Property(e => e.AcUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD2_DATE");

                entity.Property(e => e.AcUd2Id).HasColumnName("AC_UD2_ID");

                entity.Property(e => e.AcUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_ID_NAME");

                entity.Property(e => e.AcUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd2Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD2_NUMERIC");

                entity.Property(e => e.AcUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_TEXT");

                entity.Property(e => e.AcUd3Bit).HasColumnName("AC_UD3_BIT");

                entity.Property(e => e.AcUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD3_DATE");

                entity.Property(e => e.AcUd3Id).HasColumnName("AC_UD3_ID");

                entity.Property(e => e.AcUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_ID_NAME");

                entity.Property(e => e.AcUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd3Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD3_NUMERIC");

                entity.Property(e => e.AcUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_TEXT");

                entity.Property(e => e.AcUd4Bit).HasColumnName("AC_UD4_BIT");

                entity.Property(e => e.AcUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD4_DATE");

                entity.Property(e => e.AcUd4Id).HasColumnName("AC_UD4_ID");

                entity.Property(e => e.AcUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_ID_NAME");

                entity.Property(e => e.AcUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd4Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD4_NUMERIC");

                entity.Property(e => e.AcUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_TEXT");

                entity.Property(e => e.AcUd5Bit).HasColumnName("AC_UD5_BIT");

                entity.Property(e => e.AcUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD5_DATE");

                entity.Property(e => e.AcUd5Id).HasColumnName("AC_UD5_ID");

                entity.Property(e => e.AcUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_ID_NAME");

                entity.Property(e => e.AcUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd5Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD5_NUMERIC");

                entity.Property(e => e.AcUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_TEXT");

                entity.Property(e => e.AcUd6Bit).HasColumnName("AC_UD6_BIT");

                entity.Property(e => e.AcUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD6_DATE");

                entity.Property(e => e.AcUd6Id).HasColumnName("AC_UD6_ID");

                entity.Property(e => e.AcUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_ID_NAME");

                entity.Property(e => e.AcUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd6Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD6_NUMERIC");

                entity.Property(e => e.AcUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_TEXT");

                entity.Property(e => e.AcUd7Bit).HasColumnName("AC_UD7_BIT");

                entity.Property(e => e.AcUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD7_DATE");

                entity.Property(e => e.AcUd7Id).HasColumnName("AC_UD7_ID");

                entity.Property(e => e.AcUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_ID_NAME");

                entity.Property(e => e.AcUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd7Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD7_NUMERIC");

                entity.Property(e => e.AcUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_TEXT");

                entity.Property(e => e.AcUd8Bit).HasColumnName("AC_UD8_BIT");

                entity.Property(e => e.AcUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD8_DATE");

                entity.Property(e => e.AcUd8Id).HasColumnName("AC_UD8_ID");

                entity.Property(e => e.AcUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_ID_NAME");

                entity.Property(e => e.AcUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd8Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD8_NUMERIC");

                entity.Property(e => e.AcUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_TEXT");

                entity.Property(e => e.AcUd9Bit).HasColumnName("AC_UD9_BIT");

                entity.Property(e => e.AcUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD9_DATE");

                entity.Property(e => e.AcUd9Id).HasColumnName("AC_UD9_ID");

                entity.Property(e => e.AcUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_ID_NAME");

                entity.Property(e => e.AcUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd9Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD9_NUMERIC");

                entity.Property(e => e.AcUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_TEXT");

                entity.Property(e => e.AcaExternal)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_EXTERNAL");

                entity.Property(e => e.AcaId).HasColumnName("ACA_ID");

                entity.Property(e => e.AcaImport).HasColumnName("ACA_IMPORT");

                entity.Property(e => e.AcaReadonly).HasColumnName("ACA_READONLY");

                entity.Property(e => e.AcaUd10Bit).HasColumnName("ACA_UD10_BIT");

                entity.Property(e => e.AcaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD10_DATE");

                entity.Property(e => e.AcaUd10Id).HasColumnName("ACA_UD10_ID");

                entity.Property(e => e.AcaUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD10_ID_NAME");

                entity.Property(e => e.AcaUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACA_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.AcaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD10_NUMERIC");

                entity.Property(e => e.AcaUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD10_TEXT");

                entity.Property(e => e.AcaUd1Bit).HasColumnName("ACA_UD1_BIT");

                entity.Property(e => e.AcaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD1_DATE");

                entity.Property(e => e.AcaUd1Id).HasColumnName("ACA_UD1_ID");

                entity.Property(e => e.AcaUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD1_ID_NAME");

                entity.Property(e => e.AcaUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACA_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.AcaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD1_NUMERIC");

                entity.Property(e => e.AcaUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD1_TEXT");

                entity.Property(e => e.AcaUd2Bit).HasColumnName("ACA_UD2_BIT");

                entity.Property(e => e.AcaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD2_DATE");

                entity.Property(e => e.AcaUd2Id).HasColumnName("ACA_UD2_ID");

                entity.Property(e => e.AcaUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD2_ID_NAME");

                entity.Property(e => e.AcaUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACA_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.AcaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD2_NUMERIC");

                entity.Property(e => e.AcaUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD2_TEXT");

                entity.Property(e => e.AcaUd3Bit).HasColumnName("ACA_UD3_BIT");

                entity.Property(e => e.AcaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD3_DATE");

                entity.Property(e => e.AcaUd3Id).HasColumnName("ACA_UD3_ID");

                entity.Property(e => e.AcaUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD3_ID_NAME");

                entity.Property(e => e.AcaUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACA_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.AcaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD3_NUMERIC");

                entity.Property(e => e.AcaUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD3_TEXT");

                entity.Property(e => e.AcaUd4Bit).HasColumnName("ACA_UD4_BIT");

                entity.Property(e => e.AcaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD4_DATE");

                entity.Property(e => e.AcaUd4Id).HasColumnName("ACA_UD4_ID");

                entity.Property(e => e.AcaUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD4_ID_NAME");

                entity.Property(e => e.AcaUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACA_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.AcaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD4_NUMERIC");

                entity.Property(e => e.AcaUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD4_TEXT");

                entity.Property(e => e.AcaUd5Bit).HasColumnName("ACA_UD5_BIT");

                entity.Property(e => e.AcaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD5_DATE");

                entity.Property(e => e.AcaUd5Id).HasColumnName("ACA_UD5_ID");

                entity.Property(e => e.AcaUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD5_ID_NAME");

                entity.Property(e => e.AcaUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACA_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.AcaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD5_NUMERIC");

                entity.Property(e => e.AcaUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD5_TEXT");

                entity.Property(e => e.AcaUd6Bit).HasColumnName("ACA_UD6_BIT");

                entity.Property(e => e.AcaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD6_DATE");

                entity.Property(e => e.AcaUd6Id).HasColumnName("ACA_UD6_ID");

                entity.Property(e => e.AcaUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD6_ID_NAME");

                entity.Property(e => e.AcaUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACA_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.AcaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD6_NUMERIC");

                entity.Property(e => e.AcaUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD6_TEXT");

                entity.Property(e => e.AcaUd7Bit).HasColumnName("ACA_UD7_BIT");

                entity.Property(e => e.AcaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD7_DATE");

                entity.Property(e => e.AcaUd7Id).HasColumnName("ACA_UD7_ID");

                entity.Property(e => e.AcaUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD7_ID_NAME");

                entity.Property(e => e.AcaUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACA_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.AcaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD7_NUMERIC");

                entity.Property(e => e.AcaUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD7_TEXT");

                entity.Property(e => e.AcaUd8Bit).HasColumnName("ACA_UD8_BIT");

                entity.Property(e => e.AcaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD8_DATE");

                entity.Property(e => e.AcaUd8Id).HasColumnName("ACA_UD8_ID");

                entity.Property(e => e.AcaUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD8_ID_NAME");

                entity.Property(e => e.AcaUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACA_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.AcaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD8_NUMERIC");

                entity.Property(e => e.AcaUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD8_TEXT");

                entity.Property(e => e.AcaUd9Bit).HasColumnName("ACA_UD9_BIT");

                entity.Property(e => e.AcaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACA_UD9_DATE");

                entity.Property(e => e.AcaUd9Id).HasColumnName("ACA_UD9_ID");

                entity.Property(e => e.AcaUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD9_ID_NAME");

                entity.Property(e => e.AcaUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACA_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.AcaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACA_UD9_NUMERIC");

                entity.Property(e => e.AcaUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACA_UD9_TEXT");

                entity.Property(e => e.AccBusinessTelephonenumber)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BusinessTelephonenumber");

                entity.Property(e => e.AccEmail1Address)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_Email1Address");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_NAME");

                entity.Property(e => e.AccPrefEmail)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_EMAIL");

                entity.Property(e => e.AccPrefPhone)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_PHONE");

                entity.Property(e => e.AccRef).HasColumnName("ACC_REF");

                entity.Property(e => e.AccaExternal)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_EXTERNAL");

                entity.Property(e => e.AccaId).HasColumnName("ACCA_ID");

                entity.Property(e => e.AccaNumber).HasColumnName("ACCA_NUMBER");

                entity.Property(e => e.AccaReadonly).HasColumnName("ACCA_READONLY");

                entity.Property(e => e.AccaStage).HasColumnName("ACCA_STAGE");

                entity.Property(e => e.AccaUd10Bit).HasColumnName("ACCA_UD10_BIT");

                entity.Property(e => e.AccaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD10_DATE");

                entity.Property(e => e.AccaUd10Id).HasColumnName("ACCA_UD10_ID");

                entity.Property(e => e.AccaUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD10_ID_NAME");

                entity.Property(e => e.AccaUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACCA_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.AccaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD10_NUMERIC");

                entity.Property(e => e.AccaUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD10_TEXT");

                entity.Property(e => e.AccaUd1Bit).HasColumnName("ACCA_UD1_BIT");

                entity.Property(e => e.AccaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD1_DATE");

                entity.Property(e => e.AccaUd1Id).HasColumnName("ACCA_UD1_ID");

                entity.Property(e => e.AccaUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD1_ID_NAME");

                entity.Property(e => e.AccaUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACCA_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.AccaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD1_NUMERIC");

                entity.Property(e => e.AccaUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD1_TEXT");

                entity.Property(e => e.AccaUd2Bit).HasColumnName("ACCA_UD2_BIT");

                entity.Property(e => e.AccaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD2_DATE");

                entity.Property(e => e.AccaUd2Id).HasColumnName("ACCA_UD2_ID");

                entity.Property(e => e.AccaUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD2_ID_NAME");

                entity.Property(e => e.AccaUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACCA_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.AccaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD2_NUMERIC");

                entity.Property(e => e.AccaUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD2_TEXT");

                entity.Property(e => e.AccaUd3Bit).HasColumnName("ACCA_UD3_BIT");

                entity.Property(e => e.AccaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD3_DATE");

                entity.Property(e => e.AccaUd3Id).HasColumnName("ACCA_UD3_ID");

                entity.Property(e => e.AccaUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD3_ID_NAME");

                entity.Property(e => e.AccaUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACCA_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.AccaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD3_NUMERIC");

                entity.Property(e => e.AccaUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD3_TEXT");

                entity.Property(e => e.AccaUd4Bit).HasColumnName("ACCA_UD4_BIT");

                entity.Property(e => e.AccaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD4_DATE");

                entity.Property(e => e.AccaUd4Id).HasColumnName("ACCA_UD4_ID");

                entity.Property(e => e.AccaUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD4_ID_NAME");

                entity.Property(e => e.AccaUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACCA_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.AccaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD4_NUMERIC");

                entity.Property(e => e.AccaUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD4_TEXT");

                entity.Property(e => e.AccaUd5Bit).HasColumnName("ACCA_UD5_BIT");

                entity.Property(e => e.AccaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD5_DATE");

                entity.Property(e => e.AccaUd5Id).HasColumnName("ACCA_UD5_ID");

                entity.Property(e => e.AccaUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD5_ID_NAME");

                entity.Property(e => e.AccaUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACCA_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.AccaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD5_NUMERIC");

                entity.Property(e => e.AccaUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD5_TEXT");

                entity.Property(e => e.AccaUd6Bit).HasColumnName("ACCA_UD6_BIT");

                entity.Property(e => e.AccaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD6_DATE");

                entity.Property(e => e.AccaUd6Id).HasColumnName("ACCA_UD6_ID");

                entity.Property(e => e.AccaUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD6_ID_NAME");

                entity.Property(e => e.AccaUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACCA_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.AccaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD6_NUMERIC");

                entity.Property(e => e.AccaUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD6_TEXT");

                entity.Property(e => e.AccaUd7Bit).HasColumnName("ACCA_UD7_BIT");

                entity.Property(e => e.AccaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD7_DATE");

                entity.Property(e => e.AccaUd7Id).HasColumnName("ACCA_UD7_ID");

                entity.Property(e => e.AccaUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD7_ID_NAME");

                entity.Property(e => e.AccaUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACCA_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.AccaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD7_NUMERIC");

                entity.Property(e => e.AccaUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD7_TEXT");

                entity.Property(e => e.AccaUd8Bit).HasColumnName("ACCA_UD8_BIT");

                entity.Property(e => e.AccaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD8_DATE");

                entity.Property(e => e.AccaUd8Id).HasColumnName("ACCA_UD8_ID");

                entity.Property(e => e.AccaUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD8_ID_NAME");

                entity.Property(e => e.AccaUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACCA_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.AccaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD8_NUMERIC");

                entity.Property(e => e.AccaUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD8_TEXT");

                entity.Property(e => e.AccaUd9Bit).HasColumnName("ACCA_UD9_BIT");

                entity.Property(e => e.AccaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_UD9_DATE");

                entity.Property(e => e.AccaUd9Id).HasColumnName("ACCA_UD9_ID");

                entity.Property(e => e.AccaUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD9_ID_NAME");

                entity.Property(e => e.AccaUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACCA_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.AccaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACCA_UD9_NUMERIC");

                entity.Property(e => e.AccaUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("ACCA_UD9_TEXT");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_MANAGER");

                entity.Property(e => e.AccountManagerEmail)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_MANAGER_EMAIL");

                entity.Property(e => e.AcgId).HasColumnName("ACG_ID");

                entity.Property(e => e.ActDeleted).HasColumnName("ACT_DELETED");

                entity.Property(e => e.ActExternal)
                    .HasMaxLength(255)
                    .HasColumnName("ACT_EXTERNAL");

                entity.Property(e => e.ActReadOnly).HasColumnName("ACT_READ_ONLY");

                entity.Property(e => e.ActivityType)
                    .HasMaxLength(255)
                    .HasColumnName("ACTIVITY_TYPE");

                entity.Property(e => e.ActivityTypeHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACTIVITY_TYPE_HLIGHT");

                entity.Property(e => e.ActualTime).HasColumnName("ACTUAL_TIME");

                entity.Property(e => e.ActualUnits).HasColumnName("ACTUAL_UNITS");

                entity.Property(e => e.BillingInformation)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_INFORMATION");

                entity.Property(e => e.Complete).HasColumnName("COMPLETE");

                entity.Property(e => e.ContactName)
                    .HasMaxLength(255)
                    .HasColumnName("CONTACT_NAME");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DateCompleted)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_COMPLETED");

                entity.Property(e => e.DaysOpen).HasColumnName("DAYS_OPEN");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.DueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DUE_DATE");

                entity.Property(e => e.Duration)
                    .HasMaxLength(50)
                    .HasColumnName("DURATION");

                entity.Property(e => e.EstimatedTime).HasColumnName("ESTIMATED_TIME");

                entity.Property(e => e.EstimatedUnits).HasColumnName("ESTIMATED_UNITS");

                entity.Property(e => e.Exported).HasColumnName("EXPORTED");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ImSummary)
                    .HasMaxLength(255)
                    .HasColumnName("IM_SUMMARY");

                entity.Property(e => e.MacId).HasColumnName("MAC_ID");

                entity.Property(e => e.MacStage)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_STAGE");

                entity.Property(e => e.MacStageHlight)
                    .HasMaxLength(100)
                    .HasColumnName("MAC_STAGE_HLIGHT");

                entity.Property(e => e.McrId).HasColumnName("MCR_ID");

                entity.Property(e => e.OpId).HasColumnName("OP_ID");

                entity.Property(e => e.OpSource)
                    .HasMaxLength(255)
                    .HasColumnName("OP_SOURCE");

                entity.Property(e => e.OpSourceHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OP_SOURCE_HLIGHT");

                entity.Property(e => e.OpStage)
                    .HasMaxLength(255)
                    .HasColumnName("OP_STAGE");

                entity.Property(e => e.OpState)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("OP_STATE");

                entity.Property(e => e.OpaExternal)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_EXTERNAL");

                entity.Property(e => e.OpaId).HasColumnName("OPA_ID");

                entity.Property(e => e.OpaReadonly).HasColumnName("OPA_READONLY");

                entity.Property(e => e.OpaUd10Bit).HasColumnName("OPA_UD10_BIT");

                entity.Property(e => e.OpaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD10_DATE");

                entity.Property(e => e.OpaUd10Id).HasColumnName("OPA_UD10_ID");

                entity.Property(e => e.OpaUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD10_ID_NAME");

                entity.Property(e => e.OpaUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPA_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.OpaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD10_NUMERIC");

                entity.Property(e => e.OpaUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD10_TEXT");

                entity.Property(e => e.OpaUd1Bit).HasColumnName("OPA_UD1_BIT");

                entity.Property(e => e.OpaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD1_DATE");

                entity.Property(e => e.OpaUd1Id).HasColumnName("OPA_UD1_ID");

                entity.Property(e => e.OpaUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD1_ID_NAME");

                entity.Property(e => e.OpaUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPA_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.OpaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD1_NUMERIC");

                entity.Property(e => e.OpaUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD1_TEXT");

                entity.Property(e => e.OpaUd2Bit).HasColumnName("OPA_UD2_BIT");

                entity.Property(e => e.OpaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD2_DATE");

                entity.Property(e => e.OpaUd2Id).HasColumnName("OPA_UD2_ID");

                entity.Property(e => e.OpaUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD2_ID_NAME");

                entity.Property(e => e.OpaUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPA_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.OpaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD2_NUMERIC");

                entity.Property(e => e.OpaUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD2_TEXT");

                entity.Property(e => e.OpaUd3Bit).HasColumnName("OPA_UD3_BIT");

                entity.Property(e => e.OpaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD3_DATE");

                entity.Property(e => e.OpaUd3Id).HasColumnName("OPA_UD3_ID");

                entity.Property(e => e.OpaUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD3_ID_NAME");

                entity.Property(e => e.OpaUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPA_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.OpaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD3_NUMERIC");

                entity.Property(e => e.OpaUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD3_TEXT");

                entity.Property(e => e.OpaUd4Bit).HasColumnName("OPA_UD4_BIT");

                entity.Property(e => e.OpaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD4_DATE");

                entity.Property(e => e.OpaUd4Id).HasColumnName("OPA_UD4_ID");

                entity.Property(e => e.OpaUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD4_ID_NAME");

                entity.Property(e => e.OpaUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPA_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.OpaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD4_NUMERIC");

                entity.Property(e => e.OpaUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD4_TEXT");

                entity.Property(e => e.OpaUd5Bit).HasColumnName("OPA_UD5_BIT");

                entity.Property(e => e.OpaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD5_DATE");

                entity.Property(e => e.OpaUd5Id).HasColumnName("OPA_UD5_ID");

                entity.Property(e => e.OpaUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD5_ID_NAME");

                entity.Property(e => e.OpaUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPA_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.OpaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD5_NUMERIC");

                entity.Property(e => e.OpaUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD5_TEXT");

                entity.Property(e => e.OpaUd6Bit).HasColumnName("OPA_UD6_BIT");

                entity.Property(e => e.OpaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD6_DATE");

                entity.Property(e => e.OpaUd6Id).HasColumnName("OPA_UD6_ID");

                entity.Property(e => e.OpaUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD6_ID_NAME");

                entity.Property(e => e.OpaUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPA_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.OpaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD6_NUMERIC");

                entity.Property(e => e.OpaUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD6_TEXT");

                entity.Property(e => e.OpaUd7Bit).HasColumnName("OPA_UD7_BIT");

                entity.Property(e => e.OpaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD7_DATE");

                entity.Property(e => e.OpaUd7Id).HasColumnName("OPA_UD7_ID");

                entity.Property(e => e.OpaUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD7_ID_NAME");

                entity.Property(e => e.OpaUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPA_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.OpaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD7_NUMERIC");

                entity.Property(e => e.OpaUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD7_TEXT");

                entity.Property(e => e.OpaUd8Bit).HasColumnName("OPA_UD8_BIT");

                entity.Property(e => e.OpaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD8_DATE");

                entity.Property(e => e.OpaUd8Id).HasColumnName("OPA_UD8_ID");

                entity.Property(e => e.OpaUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD8_ID_NAME");

                entity.Property(e => e.OpaUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPA_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.OpaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD8_NUMERIC");

                entity.Property(e => e.OpaUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD8_TEXT");

                entity.Property(e => e.OpaUd9Bit).HasColumnName("OPA_UD9_BIT");

                entity.Property(e => e.OpaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPA_UD9_DATE");

                entity.Property(e => e.OpaUd9Id).HasColumnName("OPA_UD9_ID");

                entity.Property(e => e.OpaUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD9_ID_NAME");

                entity.Property(e => e.OpaUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPA_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.OpaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OPA_UD9_NUMERIC");

                entity.Property(e => e.OpaUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("OPA_UD9_TEXT");

                entity.Property(e => e.Overdue).HasColumnName("OVERDUE");

                entity.Property(e => e.Parent)
                    .HasMaxLength(50)
                    .HasColumnName("PARENT");

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.ParentName)
                    .HasMaxLength(255)
                    .HasColumnName("PARENT_NAME");

                entity.Property(e => e.ParentSummary)
                    .HasMaxLength(255)
                    .HasColumnName("PARENT_SUMMARY")
                    .UseCollation("Latin1_General_CI_AS");

                entity.Property(e => e.PercentComplete).HasColumnName("PERCENT_COMPLETE");

                entity.Property(e => e.PjId).HasColumnName("PJ_ID");

                entity.Property(e => e.PjStage)
                    .HasMaxLength(255)
                    .HasColumnName("PJ_STAGE");

                entity.Property(e => e.PjaExternal)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_EXTERNAL");

                entity.Property(e => e.PjaId).HasColumnName("PJA_ID");

                entity.Property(e => e.PjaReadonly).HasColumnName("PJA_READONLY");

                entity.Property(e => e.PjaUd10Bit).HasColumnName("PJA_UD10_BIT");

                entity.Property(e => e.PjaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD10_DATE");

                entity.Property(e => e.PjaUd10Id).HasColumnName("PJA_UD10_ID");

                entity.Property(e => e.PjaUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD10_ID_NAME");

                entity.Property(e => e.PjaUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJA_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.PjaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD10_NUMERIC");

                entity.Property(e => e.PjaUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD10_TEXT");

                entity.Property(e => e.PjaUd1Bit).HasColumnName("PJA_UD1_BIT");

                entity.Property(e => e.PjaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD1_DATE");

                entity.Property(e => e.PjaUd1Id).HasColumnName("PJA_UD1_ID");

                entity.Property(e => e.PjaUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD1_ID_NAME");

                entity.Property(e => e.PjaUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJA_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.PjaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD1_NUMERIC");

                entity.Property(e => e.PjaUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD1_TEXT");

                entity.Property(e => e.PjaUd2Bit).HasColumnName("PJA_UD2_BIT");

                entity.Property(e => e.PjaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD2_DATE");

                entity.Property(e => e.PjaUd2Id).HasColumnName("PJA_UD2_ID");

                entity.Property(e => e.PjaUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD2_ID_NAME");

                entity.Property(e => e.PjaUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJA_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.PjaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD2_NUMERIC");

                entity.Property(e => e.PjaUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD2_TEXT");

                entity.Property(e => e.PjaUd3Bit).HasColumnName("PJA_UD3_BIT");

                entity.Property(e => e.PjaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD3_DATE");

                entity.Property(e => e.PjaUd3Id).HasColumnName("PJA_UD3_ID");

                entity.Property(e => e.PjaUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD3_ID_NAME");

                entity.Property(e => e.PjaUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJA_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.PjaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD3_NUMERIC");

                entity.Property(e => e.PjaUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD3_TEXT");

                entity.Property(e => e.PjaUd4Bit).HasColumnName("PJA_UD4_BIT");

                entity.Property(e => e.PjaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD4_DATE");

                entity.Property(e => e.PjaUd4Id).HasColumnName("PJA_UD4_ID");

                entity.Property(e => e.PjaUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD4_ID_NAME");

                entity.Property(e => e.PjaUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJA_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.PjaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD4_NUMERIC");

                entity.Property(e => e.PjaUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD4_TEXT");

                entity.Property(e => e.PjaUd5Bit).HasColumnName("PJA_UD5_BIT");

                entity.Property(e => e.PjaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD5_DATE");

                entity.Property(e => e.PjaUd5Id).HasColumnName("PJA_UD5_ID");

                entity.Property(e => e.PjaUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD5_ID_NAME");

                entity.Property(e => e.PjaUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJA_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.PjaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD5_NUMERIC");

                entity.Property(e => e.PjaUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD5_TEXT");

                entity.Property(e => e.PjaUd6Bit).HasColumnName("PJA_UD6_BIT");

                entity.Property(e => e.PjaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD6_DATE");

                entity.Property(e => e.PjaUd6Id).HasColumnName("PJA_UD6_ID");

                entity.Property(e => e.PjaUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD6_ID_NAME");

                entity.Property(e => e.PjaUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJA_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.PjaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD6_NUMERIC");

                entity.Property(e => e.PjaUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD6_TEXT");

                entity.Property(e => e.PjaUd7Bit).HasColumnName("PJA_UD7_BIT");

                entity.Property(e => e.PjaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD7_DATE");

                entity.Property(e => e.PjaUd7Id).HasColumnName("PJA_UD7_ID");

                entity.Property(e => e.PjaUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD7_ID_NAME");

                entity.Property(e => e.PjaUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJA_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.PjaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD7_NUMERIC");

                entity.Property(e => e.PjaUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD7_TEXT");

                entity.Property(e => e.PjaUd8Bit).HasColumnName("PJA_UD8_BIT");

                entity.Property(e => e.PjaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD8_DATE");

                entity.Property(e => e.PjaUd8Id).HasColumnName("PJA_UD8_ID");

                entity.Property(e => e.PjaUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD8_ID_NAME");

                entity.Property(e => e.PjaUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJA_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.PjaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD8_NUMERIC");

                entity.Property(e => e.PjaUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD8_TEXT");

                entity.Property(e => e.PjaUd9Bit).HasColumnName("PJA_UD9_BIT");

                entity.Property(e => e.PjaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJA_UD9_DATE");

                entity.Property(e => e.PjaUd9Id).HasColumnName("PJA_UD9_ID");

                entity.Property(e => e.PjaUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD9_ID_NAME");

                entity.Property(e => e.PjaUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJA_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.PjaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJA_UD9_NUMERIC");

                entity.Property(e => e.PjaUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJA_UD9_TEXT");

                entity.Property(e => e.Priority)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("PRIORITY");

                entity.Property(e => e.PriorityHlight)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("PRIORITY_HLIGHT");

                entity.Property(e => e.PriorityId).HasColumnName("PRIORITY_ID");

                entity.Property(e => e.Private).HasColumnName("PRIVATE");

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.Reminder).HasColumnName("REMINDER");

                entity.Property(e => e.ReminderAlerted).HasColumnName("REMINDER_ALERTED");

                entity.Property(e => e.ReminderMinutes).HasColumnName("REMINDER_MINUTES");

                entity.Property(e => e.ReminderMinutesName)
                    .HasMaxLength(18)
                    .HasColumnName("REMINDER_MINUTES_NAME");

                entity.Property(e => e.SecurityGroup)
                    .HasMaxLength(255)
                    .HasColumnName("SECURITY_GROUP");

                entity.Property(e => e.SecurityId).HasColumnName("SECURITY_ID");

                entity.Property(e => e.SecurityObject)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SECURITY_OBJECT");

                entity.Property(e => e.SecurityOwner).HasColumnName("SECURITY_OWNER");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.SemName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_NAME");

                entity.Property(e => e.Sensitivity).HasColumnName("SENSITIVITY");

                entity.Property(e => e.SensitivityId).HasColumnName("SENSITIVITY_ID");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShowOnCalendar).HasColumnName("SHOW_ON_CALENDAR");

                entity.Property(e => e.SitId).HasColumnName("SIT_ID");

                entity.Property(e => e.SiteName)
                    .HasMaxLength(255)
                    .HasColumnName("SITE_NAME");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("START_DATE");

                entity.Property(e => e.Status)
                    .HasMaxLength(23)
                    .IsUnicode(false)
                    .HasColumnName("STATUS");

                entity.Property(e => e.StatusHlight)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("STATUS_HLIGHT");

                entity.Property(e => e.StatusId).HasColumnName("STATUS_ID");

                entity.Property(e => e.StgId).HasColumnName("STG_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Type).HasColumnName("TYPE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");

                entity.Property(e => e.UsIdSupport).HasColumnName("US_ID_SUPPORT");

                entity.Property(e => e.UsName)
                    .HasMaxLength(255)
                    .HasColumnName("US_NAME");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");

                entity.Property(e => e.UsgName)
                    .HasMaxLength(255)
                    .HasColumnName("USG_NAME");
            });

            modelBuilder.Entity<VActivityAlert>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vActivityAlerts");

                entity.Property(e => e.ActId).HasColumnName("ACT_ID");

                entity.Property(e => e.DateValue)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_VALUE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UsId).HasColumnName("US_ID");
            });

            modelBuilder.Entity<VAlert>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vAlerts");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcManager)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER");

                entity.Property(e => e.AcManagerEmail)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_EMAIL");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.ActionOptions).HasColumnName("ACTION_OPTIONS");

                entity.Property(e => e.ActionType).HasColumnName("ACTION_TYPE");

                entity.Property(e => e.ActionTypeDescription)
                    .HasMaxLength(26)
                    .IsUnicode(false)
                    .HasColumnName("ACTION_TYPE_DESCRIPTION");

                entity.Property(e => e.AlDeleted).HasColumnName("AL_DELETED");

                entity.Property(e => e.AlId).HasColumnName("AL_ID");

                entity.Property(e => e.AlIdAck).HasColumnName("AL_ID_ACK");

                entity.Property(e => e.AlIdDismiss).HasColumnName("AL_ID_DISMISS");

                entity.Property(e => e.AlertStatus).HasColumnName("ALERT_STATUS");

                entity.Property(e => e.AlertStatusDescription)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("ALERT_STATUS_DESCRIPTION");

                entity.Property(e => e.AtId).HasColumnName("AT_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Dismiss)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("DISMISS");

                entity.Property(e => e.DismissedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DISMISSED_BY");

                entity.Property(e => e.DismissedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DISMISSED_DATE");

                entity.Property(e => e.DueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DUE_DATE");

                entity.Property(e => e.EmailAddress)
                    .HasMaxLength(255)
                    .HasColumnName("EMAIL_ADDRESS");

                entity.Property(e => e.EmailBody)
                    .HasColumnType("text")
                    .HasColumnName("EMAIL_BODY");

                entity.Property(e => e.EmailSubject)
                    .HasMaxLength(255)
                    .HasColumnName("EMAIL_SUBJECT");

                entity.Property(e => e.EmailType).HasColumnName("EMAIL_TYPE");

                entity.Property(e => e.Initial).HasColumnName("INITIAL");

                entity.Property(e => e.JobId).HasColumnName("JOB_ID");

                entity.Property(e => e.Noteclose)
                    .IsRequired()
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("NOTECLOSE");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.ParentSummary)
                    .HasMaxLength(255)
                    .HasColumnName("PARENT_SUMMARY");

                entity.Property(e => e.ParentType)
                    .HasMaxLength(255)
                    .HasColumnName("PARENT_TYPE");

                entity.Property(e => e.SmtpFrom)
                    .HasMaxLength(100)
                    .HasColumnName("SMTP_FROM");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.User)
                    .HasMaxLength(255)
                    .HasColumnName("USER");

                entity.Property(e => e.UserGroup)
                    .HasMaxLength(255)
                    .HasColumnName("USER_GROUP");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");
            });

            modelBuilder.Entity<VAlertJob>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vAlertJobs");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.Command)
                    .HasMaxLength(255)
                    .HasColumnName("COMMAND");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.FneId).HasColumnName("FNE_ID");

                entity.Property(e => e.JobDeleted).HasColumnName("JOB_DELETED");

                entity.Property(e => e.JobId).HasColumnName("JOB_ID");

                entity.Property(e => e.JobTypeId).HasColumnName("JOB_TYPE_ID");

                entity.Property(e => e.Jobstatus).HasColumnName("JOBSTATUS");

                entity.Property(e => e.Jobtype)
                    .HasMaxLength(255)
                    .HasColumnName("JOBTYPE");

                entity.Property(e => e.ObjId)
                    .HasMaxLength(50)
                    .HasColumnName("OBJ_ID");

                entity.Property(e => e.ObjectType)
                    .HasMaxLength(50)
                    .HasColumnName("OBJECT_TYPE");

                entity.Property(e => e.Result)
                    .HasMaxLength(255)
                    .HasColumnName("RESULT");

                entity.Property(e => e.RunAfter)
                    .HasColumnType("datetime")
                    .HasColumnName("RUN_AFTER");

                entity.Property(e => e.RunDate)
                    .HasColumnType("datetime")
                    .HasColumnName("RUN_DATE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<VAlertTrace>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vAlertTrace");

                entity.Property(e => e.AeId).HasColumnName("AE_ID");

                entity.Property(e => e.AlId).HasColumnName("AL_ID");

                entity.Property(e => e.AlertDescription)
                    .HasMaxLength(255)
                    .HasColumnName("ALERT_DESCRIPTION");

                entity.Property(e => e.AlertTitle)
                    .HasMaxLength(255)
                    .HasColumnName("ALERT_TITLE");

                entity.Property(e => e.AlertType)
                    .HasMaxLength(255)
                    .HasColumnName("ALERT_TYPE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.ObjectSummary)
                    .HasMaxLength(255)
                    .HasColumnName("OBJECT_SUMMARY");

                entity.Property(e => e.ObjectType)
                    .HasMaxLength(50)
                    .HasColumnName("OBJECT_TYPE");

                entity.Property(e => e.State).HasColumnName("STATE");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .HasColumnName("STATUS");
            });

            modelBuilder.Entity<VAppointmentAlert>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vAppointmentAlerts");

                entity.Property(e => e.DateValue)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_VALUE");

                entity.Property(e => e.Subject)
                    .HasMaxLength(255)
                    .HasColumnName("SUBJECT");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsaId).HasColumnName("USA_ID");
            });

            modelBuilder.Entity<VAppointmentAlertsUtc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vAppointmentAlertsUTC");

                entity.Property(e => e.DateValue)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_VALUE");

                entity.Property(e => e.Subject)
                    .HasMaxLength(255)
                    .HasColumnName("SUBJECT");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsaId).HasColumnName("USA_ID");
            });

            modelBuilder.Entity<VAppointmentSyncList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vAppointmentSyncList");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_NAME");

                entity.Property(e => e.End)
                    .HasColumnType("datetime")
                    .HasColumnName("END");

                entity.Property(e => e.ParentType)
                    .HasMaxLength(255)
                    .HasColumnName("PARENT_TYPE");

                entity.Property(e => e.Start)
                    .HasColumnType("datetime")
                    .HasColumnName("START");

                entity.Property(e => e.Subject)
                    .HasMaxLength(255)
                    .HasColumnName("SUBJECT");

                entity.Property(e => e.SyncUpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYNC_UPDATED_DATE");

                entity.Property(e => e.UsaId).HasColumnName("USA_ID");

                entity.Property(e => e.Username)
                    .HasMaxLength(255)
                    .HasColumnName("USERNAME");
            });

            modelBuilder.Entity<VAppointmentUser>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vAppointmentUsers");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UsId).HasColumnName("US_ID");
            });

            modelBuilder.Entity<VAppointmentsAttendee>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vAppointmentsAttendees");

                entity.Property(e => e.AcGroup)
                    .HasMaxLength(255)
                    .HasColumnName("AC_GROUP");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_NAME");

                entity.Property(e => e.Attendee)
                    .HasMaxLength(255)
                    .HasColumnName("ATTENDEE");

                entity.Property(e => e.AttendeeObjType)
                    .HasMaxLength(50)
                    .HasColumnName("ATTENDEE_OBJ_TYPE");

                entity.Property(e => e.AttendeeStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ATTENDEE_STATUS");

                entity.Property(e => e.AttendeeTeam)
                    .HasMaxLength(255)
                    .HasColumnName("ATTENDEE_TEAM");

                entity.Property(e => e.AttendeeType)
                    .HasMaxLength(255)
                    .HasColumnName("ATTENDEE_TYPE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Email)
                    .HasMaxLength(255)
                    .HasColumnName("EMAIL");

                entity.Property(e => e.End)
                    .HasColumnType("datetime")
                    .HasColumnName("END");

                entity.Property(e => e.GoneFromOutlook).HasColumnName("GONE_FROM_OUTLOOK");

                entity.Property(e => e.Jobtitle)
                    .HasMaxLength(255)
                    .HasColumnName("JOBTITLE");

                entity.Property(e => e.Location)
                    .HasMaxLength(255)
                    .HasColumnName("LOCATION");

                entity.Property(e => e.Mobile)
                    .HasMaxLength(255)
                    .HasColumnName("MOBILE");

                entity.Property(e => e.ParentType)
                    .HasMaxLength(255)
                    .HasColumnName("PARENT_TYPE");

                entity.Property(e => e.RefEmailAddress)
                    .HasMaxLength(255)
                    .HasColumnName("REF_EMAIL_ADDRESS");

                entity.Property(e => e.RefId).HasColumnName("REF_ID");

                entity.Property(e => e.SecurityGroup)
                    .HasMaxLength(255)
                    .HasColumnName("SECURITY_GROUP");

                entity.Property(e => e.SecurityId).HasColumnName("SECURITY_ID");

                entity.Property(e => e.SecurityObject)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SECURITY_OBJECT");

                entity.Property(e => e.SecurityOwner).HasColumnName("SECURITY_OWNER");

                entity.Property(e => e.Start)
                    .HasColumnType("datetime")
                    .HasColumnName("START");

                entity.Property(e => e.Subject)
                    .HasMaxLength(255)
                    .HasColumnName("SUBJECT");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Telephone)
                    .HasMaxLength(255)
                    .HasColumnName("TELEPHONE");

                entity.Property(e => e.UaaId).HasColumnName("UAA_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");

                entity.Property(e => e.UsIdSupport).HasColumnName("US_ID_SUPPORT");

                entity.Property(e => e.UsaAccessLevel).HasColumnName("USA_ACCESS_LEVEL");

                entity.Property(e => e.UsaId).HasColumnName("USA_ID");

                entity.Property(e => e.UsaUsId).HasColumnName("USA_US_ID");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");
            });

            modelBuilder.Entity<VAttachmentCount>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vAttachmentCount");

                entity.Property(e => e.Attachments).HasColumnName("ATTACHMENTS");

                entity.Property(e => e.CoId).HasColumnName("CO_ID");
            });

            modelBuilder.Entity<VBasePrivacyLogEntriesForInsert>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vBasePrivacyLogEntriesForInsert");

                entity.Property(e => e.DropdownValue).HasColumnName("DROPDOWN_VALUE");

                entity.Property(e => e.Duration).HasColumnName("DURATION");

                entity.Property(e => e.EventType)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("EVENT_TYPE");

                entity.Property(e => e.LawfulBasis)
                    .HasMaxLength(255)
                    .HasColumnName("LAWFUL_BASIS");

                entity.Property(e => e.Notification).HasColumnName("NOTIFICATION");

                entity.Property(e => e.PrlPrrId).HasColumnName("PRL_PRR_ID");

                entity.Property(e => e.PrrActive).HasColumnName("PRR_ACTIVE");

                entity.Property(e => e.PrrRuleTypeId).HasColumnName("PRR_RULE_TYPE_ID");

                entity.Property(e => e.PuId).HasColumnName("PU_ID");

                entity.Property(e => e.PurposeName)
                    .HasMaxLength(255)
                    .HasColumnName("PURPOSE_NAME");

                entity.Property(e => e.RemovalDateMode).HasColumnName("REMOVAL_DATE_MODE");
            });

            modelBuilder.Entity<VCall>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vCalls");

                entity.Property(e => e.AcGroup)
                    .HasMaxLength(255)
                    .HasColumnName("AC_GROUP");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_NAME");

                entity.Property(e => e.AcoId).HasColumnName("ACO_ID");

                entity.Property(e => e.CllId).HasColumnName("CLL_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DialParams)
                    .HasMaxLength(548)
                    .HasColumnName("DIAL_PARAMS");

                entity.Property(e => e.Direction)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DIRECTION");

                entity.Property(e => e.DirectionImage)
                    .IsRequired()
                    .HasMaxLength(22)
                    .IsUnicode(false)
                    .HasColumnName("DIRECTION_IMAGE");

                entity.Property(e => e.Duration).HasColumnName("DURATION");

                entity.Property(e => e.Incomming).HasColumnName("INCOMMING");

                entity.Property(e => e.Number)
                    .HasMaxLength(255)
                    .HasColumnName("NUMBER");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.ParentSummary)
                    .HasMaxLength(255)
                    .HasColumnName("PARENT_SUMMARY");

                entity.Property(e => e.ParentType)
                    .HasMaxLength(50)
                    .HasColumnName("PARENT_TYPE");

                entity.Property(e => e.Type)
                    .HasMaxLength(255)
                    .HasColumnName("TYPE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");

                entity.Property(e => e.UsIdSupport).HasColumnName("US_ID_SUPPORT");
            });

            modelBuilder.Entity<VCampaignAllRecipient>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vCampaignAllRecipients");

                entity.Property(e => e.AcGroup)
                    .HasMaxLength(255)
                    .HasColumnName("AC_GROUP");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcManager)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_NAME");

                entity.Property(e => e.AcgId).HasColumnName("ACG_ID");

                entity.Property(e => e.Address)
                    .IsRequired()
                    .HasMaxLength(511)
                    .HasColumnName("ADDRESS");

                entity.Property(e => e.DefaultSalutation)
                    .HasMaxLength(128)
                    .HasColumnName("DEFAULT_SALUTATION");

                entity.Property(e => e.Email)
                    .HasMaxLength(255)
                    .HasColumnName("EMAIL");

                entity.Property(e => e.Fax)
                    .HasMaxLength(255)
                    .HasColumnName("FAX");

                entity.Property(e => e.Invalid)
                    .HasMaxLength(22)
                    .IsUnicode(false)
                    .HasColumnName("INVALID");

                entity.Property(e => e.IsNew).HasColumnName("IS_NEW");

                entity.Property(e => e.Jobtitle)
                    .HasMaxLength(255)
                    .HasColumnName("JOBTITLE");

                entity.Property(e => e.MacId).HasColumnName("MAC_ID");

                entity.Property(e => e.MacMedium).HasColumnName("MAC_MEDIUM");

                entity.Property(e => e.MaccuDeleted).HasColumnName("MACCU_DELETED");

                entity.Property(e => e.MaccuId)
                    .HasMaxLength(40)
                    .HasColumnName("MACCU_ID");

                entity.Property(e => e.McsCount).HasColumnName("MCS_COUNT");

                entity.Property(e => e.Phone)
                    .HasMaxLength(255)
                    .HasColumnName("PHONE");

                entity.Property(e => e.Salutation)
                    .HasMaxLength(255)
                    .HasColumnName("SALUTATION");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Title)
                    .HasMaxLength(255)
                    .HasColumnName("TITLE");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");
            });

            modelBuilder.Entity<VCampaignRunRecipientsAll>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vCampaignRunRecipientsAll");

                entity.Property(e => e.AcAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("AC_ADDRESS_1");

                entity.Property(e => e.AcAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_ADDRESS_2");

                entity.Property(e => e.AcAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("AC_ADDRESS_3");

                entity.Property(e => e.AcBillingAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_ADDRESS_1");

                entity.Property(e => e.AcBillingAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_ADDRESS_2");

                entity.Property(e => e.AcBillingAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_ADDRESS_3");

                entity.Property(e => e.AcBillingCounty)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_COUNTY");

                entity.Property(e => e.AcBillingPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_POSTCODE");

                entity.Property(e => e.AcBillingTown)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_TOWN");

                entity.Property(e => e.AcCounty)
                    .HasMaxLength(255)
                    .HasColumnName("AC_COUNTY");

                entity.Property(e => e.AcExternal)
                    .HasMaxLength(255)
                    .HasColumnName("AC_EXTERNAL");

                entity.Property(e => e.AcFlag)
                    .HasMaxLength(255)
                    .HasColumnName("AC_FLAG");

                entity.Property(e => e.AcFlagHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_FLAG_HLIGHT");

                entity.Property(e => e.AcGroup)
                    .HasMaxLength(255)
                    .HasColumnName("AC_GROUP");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcIndustry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_INDUSTRY");

                entity.Property(e => e.AcIndustryHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_INDUSTRY_HLIGHT");

                entity.Property(e => e.AcLabel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LABEL");

                entity.Property(e => e.AcLabelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LABEL_HLIGHT");

                entity.Property(e => e.AcLevel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LEVEL");

                entity.Property(e => e.AcLevelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LEVEL_HLIGHT");

                entity.Property(e => e.AcManager)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER");

                entity.Property(e => e.AcManagerDept)
                    .HasMaxLength(128)
                    .HasColumnName("AC_MANAGER_DEPT");

                entity.Property(e => e.AcManagerEmail)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_EMAIL");

                entity.Property(e => e.AcManagerGroup)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_GROUP");

                entity.Property(e => e.AcManagerSupport)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_SUPPORT");

                entity.Property(e => e.AcManagerSupportEmail)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_SUPPORT_EMAIL");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.AcPhone1)
                    .HasMaxLength(50)
                    .HasColumnName("AC_PHONE_1");

                entity.Property(e => e.AcPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("AC_POSTCODE");

                entity.Property(e => e.AcReference)
                    .HasMaxLength(50)
                    .HasColumnName("AC_REFERENCE");

                entity.Property(e => e.AcSource)
                    .HasMaxLength(255)
                    .HasColumnName("AC_SOURCE");

                entity.Property(e => e.AcSourceHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_SOURCE_HLIGHT");

                entity.Property(e => e.AcTown)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TOWN");

                entity.Property(e => e.AcType)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE");

                entity.Property(e => e.AcType2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_2");

                entity.Property(e => e.AcType2Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_2_HLIGHT");

                entity.Property(e => e.AcTypeHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_HLIGHT");

                entity.Property(e => e.AcUd10Bit).HasColumnName("AC_UD10_BIT");

                entity.Property(e => e.AcUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD10_DATE");

                entity.Property(e => e.AcUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_ID_NAME");

                entity.Property(e => e.AcUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd10Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD10_NUMERIC");

                entity.Property(e => e.AcUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_TEXT");

                entity.Property(e => e.AcUd11Bit).HasColumnName("AC_UD11_BIT");

                entity.Property(e => e.AcUd11Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD11_TEXT");

                entity.Property(e => e.AcUd12Bit).HasColumnName("AC_UD12_BIT");

                entity.Property(e => e.AcUd12Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD12_TEXT");

                entity.Property(e => e.AcUd13Bit).HasColumnName("AC_UD13_BIT");

                entity.Property(e => e.AcUd13Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD13_TEXT");

                entity.Property(e => e.AcUd14Bit).HasColumnName("AC_UD14_BIT");

                entity.Property(e => e.AcUd14Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD14_TEXT");

                entity.Property(e => e.AcUd15Bit).HasColumnName("AC_UD15_BIT");

                entity.Property(e => e.AcUd15Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD15_TEXT");

                entity.Property(e => e.AcUd16Bit).HasColumnName("AC_UD16_BIT");

                entity.Property(e => e.AcUd17Bit).HasColumnName("AC_UD17_BIT");

                entity.Property(e => e.AcUd18Bit).HasColumnName("AC_UD18_BIT");

                entity.Property(e => e.AcUd19Bit).HasColumnName("AC_UD19_BIT");

                entity.Property(e => e.AcUd1Bit).HasColumnName("AC_UD1_BIT");

                entity.Property(e => e.AcUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD1_DATE");

                entity.Property(e => e.AcUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_ID_NAME");

                entity.Property(e => e.AcUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd1Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD1_NUMERIC");

                entity.Property(e => e.AcUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_TEXT");

                entity.Property(e => e.AcUd20Bit).HasColumnName("AC_UD20_BIT");

                entity.Property(e => e.AcUd21Bit).HasColumnName("AC_UD21_BIT");

                entity.Property(e => e.AcUd22Bit).HasColumnName("AC_UD22_BIT");

                entity.Property(e => e.AcUd23Bit).HasColumnName("AC_UD23_BIT");

                entity.Property(e => e.AcUd24Bit).HasColumnName("AC_UD24_BIT");

                entity.Property(e => e.AcUd2Bit).HasColumnName("AC_UD2_BIT");

                entity.Property(e => e.AcUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD2_DATE");

                entity.Property(e => e.AcUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_ID_NAME");

                entity.Property(e => e.AcUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd2Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD2_NUMERIC");

                entity.Property(e => e.AcUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_TEXT");

                entity.Property(e => e.AcUd3Bit).HasColumnName("AC_UD3_BIT");

                entity.Property(e => e.AcUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD3_DATE");

                entity.Property(e => e.AcUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_ID_NAME");

                entity.Property(e => e.AcUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd3Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD3_NUMERIC");

                entity.Property(e => e.AcUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_TEXT");

                entity.Property(e => e.AcUd4Bit).HasColumnName("AC_UD4_BIT");

                entity.Property(e => e.AcUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD4_DATE");

                entity.Property(e => e.AcUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_ID_NAME");

                entity.Property(e => e.AcUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd4Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD4_NUMERIC");

                entity.Property(e => e.AcUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_TEXT");

                entity.Property(e => e.AcUd5Bit).HasColumnName("AC_UD5_BIT");

                entity.Property(e => e.AcUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD5_DATE");

                entity.Property(e => e.AcUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_ID_NAME");

                entity.Property(e => e.AcUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd5Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD5_NUMERIC");

                entity.Property(e => e.AcUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_TEXT");

                entity.Property(e => e.AcUd6Bit).HasColumnName("AC_UD6_BIT");

                entity.Property(e => e.AcUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD6_DATE");

                entity.Property(e => e.AcUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_ID_NAME");

                entity.Property(e => e.AcUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd6Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD6_NUMERIC");

                entity.Property(e => e.AcUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_TEXT");

                entity.Property(e => e.AcUd7Bit).HasColumnName("AC_UD7_BIT");

                entity.Property(e => e.AcUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD7_DATE");

                entity.Property(e => e.AcUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_ID_NAME");

                entity.Property(e => e.AcUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd7Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD7_NUMERIC");

                entity.Property(e => e.AcUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_TEXT");

                entity.Property(e => e.AcUd8Bit).HasColumnName("AC_UD8_BIT");

                entity.Property(e => e.AcUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD8_DATE");

                entity.Property(e => e.AcUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_ID_NAME");

                entity.Property(e => e.AcUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd8Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD8_NUMERIC");

                entity.Property(e => e.AcUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_TEXT");

                entity.Property(e => e.AcUd9Bit).HasColumnName("AC_UD9_BIT");

                entity.Property(e => e.AcUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD9_DATE");

                entity.Property(e => e.AcUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_ID_NAME");

                entity.Property(e => e.AcUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd9Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD9_NUMERIC");

                entity.Property(e => e.AcUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_TEXT");

                entity.Property(e => e.AccDeleted).HasColumnName("ACC_DELETED");

                entity.Property(e => e.AccExternal)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_EXTERNAL");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccImport).HasColumnName("ACC_IMPORT");

                entity.Property(e => e.AccName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_NAME");

                entity.Property(e => e.AccPrefAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_ADDRESS_1");

                entity.Property(e => e.AccPrefAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_ADDRESS_2");

                entity.Property(e => e.AccPrefAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_ADDRESS_3");

                entity.Property(e => e.AccPrefCountry)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_COUNTRY");

                entity.Property(e => e.AccPrefCounty)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_COUNTY");

                entity.Property(e => e.AccPrefEmail)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_EMAIL");

                entity.Property(e => e.AccPrefPhone)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_PHONE");

                entity.Property(e => e.AccPrefPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_POSTCODE");

                entity.Property(e => e.AccPrefTown)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_TOWN");

                entity.Property(e => e.AccStatus).HasColumnName("ACC_STATUS");

                entity.Property(e => e.AccUd1)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD1");

                entity.Property(e => e.AccUd10)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD10");

                entity.Property(e => e.AccUd10Bit).HasColumnName("ACC_UD10_BIT");

                entity.Property(e => e.AccUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD10_DATE");

                entity.Property(e => e.AccUd10Id).HasColumnName("ACC_UD10_ID");

                entity.Property(e => e.AccUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD10_ID_NAME");

                entity.Property(e => e.AccUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD10_NUMERIC");

                entity.Property(e => e.AccUd11)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD11");

                entity.Property(e => e.AccUd11Bit).HasColumnName("ACC_UD11_BIT");

                entity.Property(e => e.AccUd12)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD12");

                entity.Property(e => e.AccUd12Bit).HasColumnName("ACC_UD12_BIT");

                entity.Property(e => e.AccUd13)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD13");

                entity.Property(e => e.AccUd13Bit).HasColumnName("ACC_UD13_BIT");

                entity.Property(e => e.AccUd14)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD14");

                entity.Property(e => e.AccUd14Bit).HasColumnName("ACC_UD14_BIT");

                entity.Property(e => e.AccUd15)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD15");

                entity.Property(e => e.AccUd15Bit).HasColumnName("ACC_UD15_BIT");

                entity.Property(e => e.AccUd16Bit).HasColumnName("ACC_UD16_BIT");

                entity.Property(e => e.AccUd17Bit).HasColumnName("ACC_UD17_BIT");

                entity.Property(e => e.AccUd18Bit).HasColumnName("ACC_UD18_BIT");

                entity.Property(e => e.AccUd19Bit).HasColumnName("ACC_UD19_BIT");

                entity.Property(e => e.AccUd1Bit).HasColumnName("ACC_UD1_BIT");

                entity.Property(e => e.AccUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD1_DATE");

                entity.Property(e => e.AccUd1Id).HasColumnName("ACC_UD1_ID");

                entity.Property(e => e.AccUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD1_ID_NAME");

                entity.Property(e => e.AccUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD1_NUMERIC");

                entity.Property(e => e.AccUd2)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD2");

                entity.Property(e => e.AccUd20Bit).HasColumnName("ACC_UD20_BIT");

                entity.Property(e => e.AccUd21Bit).HasColumnName("ACC_UD21_BIT");

                entity.Property(e => e.AccUd22Bit).HasColumnName("ACC_UD22_BIT");

                entity.Property(e => e.AccUd23Bit).HasColumnName("ACC_UD23_BIT");

                entity.Property(e => e.AccUd24Bit).HasColumnName("ACC_UD24_BIT");

                entity.Property(e => e.AccUd2Bit).HasColumnName("ACC_UD2_BIT");

                entity.Property(e => e.AccUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD2_DATE");

                entity.Property(e => e.AccUd2Id).HasColumnName("ACC_UD2_ID");

                entity.Property(e => e.AccUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD2_ID_NAME");

                entity.Property(e => e.AccUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD2_NUMERIC");

                entity.Property(e => e.AccUd3)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD3");

                entity.Property(e => e.AccUd3Bit).HasColumnName("ACC_UD3_BIT");

                entity.Property(e => e.AccUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD3_DATE");

                entity.Property(e => e.AccUd3Id).HasColumnName("ACC_UD3_ID");

                entity.Property(e => e.AccUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD3_ID_NAME");

                entity.Property(e => e.AccUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD3_NUMERIC");

                entity.Property(e => e.AccUd4)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD4");

                entity.Property(e => e.AccUd4Bit).HasColumnName("ACC_UD4_BIT");

                entity.Property(e => e.AccUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD4_DATE");

                entity.Property(e => e.AccUd4Id).HasColumnName("ACC_UD4_ID");

                entity.Property(e => e.AccUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD4_ID_NAME");

                entity.Property(e => e.AccUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD4_NUMERIC");

                entity.Property(e => e.AccUd5)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD5");

                entity.Property(e => e.AccUd5Bit).HasColumnName("ACC_UD5_BIT");

                entity.Property(e => e.AccUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD5_DATE");

                entity.Property(e => e.AccUd5Id).HasColumnName("ACC_UD5_ID");

                entity.Property(e => e.AccUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD5_ID_NAME");

                entity.Property(e => e.AccUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD5_NUMERIC");

                entity.Property(e => e.AccUd6)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD6");

                entity.Property(e => e.AccUd6Bit).HasColumnName("ACC_UD6_BIT");

                entity.Property(e => e.AccUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD6_DATE");

                entity.Property(e => e.AccUd6Id).HasColumnName("ACC_UD6_ID");

                entity.Property(e => e.AccUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD6_ID_NAME");

                entity.Property(e => e.AccUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD6_NUMERIC");

                entity.Property(e => e.AccUd7)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD7");

                entity.Property(e => e.AccUd7Bit).HasColumnName("ACC_UD7_BIT");

                entity.Property(e => e.AccUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD7_DATE");

                entity.Property(e => e.AccUd7Id).HasColumnName("ACC_UD7_ID");

                entity.Property(e => e.AccUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD7_ID_NAME");

                entity.Property(e => e.AccUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD7_NUMERIC");

                entity.Property(e => e.AccUd8)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD8");

                entity.Property(e => e.AccUd8Bit).HasColumnName("ACC_UD8_BIT");

                entity.Property(e => e.AccUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD8_DATE");

                entity.Property(e => e.AccUd8Id).HasColumnName("ACC_UD8_ID");

                entity.Property(e => e.AccUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD8_ID_NAME");

                entity.Property(e => e.AccUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD8_NUMERIC");

                entity.Property(e => e.AccUd9)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD9");

                entity.Property(e => e.AccUd9Bit).HasColumnName("ACC_UD9_BIT");

                entity.Property(e => e.AccUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD9_DATE");

                entity.Property(e => e.AccUd9Id).HasColumnName("ACC_UD9_ID");

                entity.Property(e => e.AccUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD9_ID_NAME");

                entity.Property(e => e.AccUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD9_NUMERIC");

                entity.Property(e => e.Account).HasMaxLength(255);

                entity.Property(e => e.AccountName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_NAME");

                entity.Property(e => e.AcgId).HasColumnName("ACG_ID");

                entity.Property(e => e.Anniversary).HasMaxLength(255);

                entity.Property(e => e.AssistantTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Assistantname).HasMaxLength(255);

                entity.Property(e => e.BillingInformation).HasMaxLength(255);

                entity.Property(e => e.Birthday).HasMaxLength(255);

                entity.Property(e => e.Business2TelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.BusinessAddress).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressCity).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressCountry).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressState).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.BusinessFaxNumber).HasMaxLength(255);

                entity.Property(e => e.BusinessFaxNumberFormatted).HasMaxLength(267);

                entity.Property(e => e.BusinessHomePage).HasMaxLength(255);

                entity.Property(e => e.BusinessTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.CallbackTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.CarTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Categories).HasMaxLength(500);

                entity.Property(e => e.Children).HasMaxLength(255);

                entity.Property(e => e.Companies).HasMaxLength(255);

                entity.Property(e => e.CompanyAndFullName).HasMaxLength(255);

                entity.Property(e => e.CompanyLastFirstNoSpace).HasMaxLength(255);

                entity.Property(e => e.CompanyLastFirstSpaceOnly).HasMaxLength(255);

                entity.Property(e => e.CompanyMainTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.CompanyName).HasMaxLength(255);

                entity.Property(e => e.ComputerNetworkName).HasMaxLength(255);

                entity.Property(e => e.ConnectOptIn).HasColumnName("CONNECT_OPT_IN");

                entity.Property(e => e.ConnectOptInDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CONNECT_OPT_IN_DATE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CreationTime).HasMaxLength(255);

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Department).HasMaxLength(255);

                entity.Property(e => e.Email1Address).HasMaxLength(255);

                entity.Property(e => e.Email1AddressType).HasMaxLength(255);

                entity.Property(e => e.Email1DisplayName).HasMaxLength(255);

                entity.Property(e => e.Email1EntryId)
                    .HasMaxLength(255)
                    .HasColumnName("Email1EntryID");

                entity.Property(e => e.Email2Address).HasMaxLength(255);

                entity.Property(e => e.Email2AddressType).HasMaxLength(255);

                entity.Property(e => e.Email2DisplayName).HasMaxLength(255);

                entity.Property(e => e.Email2EntryId)
                    .HasMaxLength(255)
                    .HasColumnName("Email2EntryID");

                entity.Property(e => e.Email3Address).HasMaxLength(255);

                entity.Property(e => e.Email3AddressType).HasMaxLength(255);

                entity.Property(e => e.Email3DisplayName).HasMaxLength(255);

                entity.Property(e => e.Email3EntryId)
                    .HasMaxLength(255)
                    .HasColumnName("Email3EntryID");

                entity.Property(e => e.Exported).HasColumnName("EXPORTED");

                entity.Property(e => e.FacebookImage)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_IMAGE");

                entity.Property(e => e.FacebookName)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_NAME");

                entity.Property(e => e.FacebookPrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_PRIVATE_ID");

                entity.Property(e => e.FacebookProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_PROFILE_URL");

                entity.Property(e => e.FacebookPublicId)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_PUBLIC_ID");

                entity.Property(e => e.FirstName).HasMaxLength(255);

                entity.Property(e => e.Ftpsite)
                    .HasMaxLength(255)
                    .HasColumnName("FTPSite");

                entity.Property(e => e.FullName).HasMaxLength(255);

                entity.Property(e => e.FullNameAndCompany).HasMaxLength(255);

                entity.Property(e => e.GplusImage)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_IMAGE");

                entity.Property(e => e.GplusName)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_NAME");

                entity.Property(e => e.GplusPrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_PRIVATE_ID");

                entity.Property(e => e.GplusProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_PROFILE_URL");

                entity.Property(e => e.GplusPublicId)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_PUBLIC_ID");

                entity.Property(e => e.GvcBounceCode)
                    .HasMaxLength(20)
                    .HasColumnName("GVC_BOUNCE_CODE");

                entity.Property(e => e.GvcBounceFlag).HasColumnName("GVC_BOUNCE_FLAG");

                entity.Property(e => e.GvcBounceText)
                    .HasMaxLength(255)
                    .HasColumnName("GVC_BOUNCE_TEXT");

                entity.Property(e => e.GvcClickedThruDate)
                    .HasColumnType("datetime")
                    .HasColumnName("GVC_CLICKED_THRU_DATE");

                entity.Property(e => e.GvcClickedThruFlag).HasColumnName("GVC_CLICKED_THRU_FLAG");

                entity.Property(e => e.GvcForwardCount).HasColumnName("GVC_FORWARD_COUNT");

                entity.Property(e => e.GvcForwardDate)
                    .HasColumnType("datetime")
                    .HasColumnName("GVC_FORWARD_DATE");

                entity.Property(e => e.GvcForwardFlag).HasColumnName("GVC_FORWARD_FLAG");

                entity.Property(e => e.GvcReadDate)
                    .HasColumnType("datetime")
                    .HasColumnName("GVC_READ_DATE");

                entity.Property(e => e.GvcReadFlag).HasColumnName("GVC_READ_FLAG");

                entity.Property(e => e.GvcRepliedCount).HasColumnName("GVC_REPLIED_COUNT");

                entity.Property(e => e.GvcRepliedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("GVC_REPLIED_DATE");

                entity.Property(e => e.GvcRepliedFlag).HasColumnName("GVC_REPLIED_FLAG");

                entity.Property(e => e.GvcSentDate)
                    .HasColumnType("datetime")
                    .HasColumnName("GVC_SENT_DATE");

                entity.Property(e => e.GvcSentFlag).HasColumnName("GVC_SENT_FLAG");

                entity.Property(e => e.GvcUnsubAll).HasColumnName("GVC_UNSUB_ALL");

                entity.Property(e => e.GvcUnsubDate)
                    .HasColumnType("datetime")
                    .HasColumnName("GVC_UNSUB_DATE");

                entity.Property(e => e.GvcUnsubThis).HasColumnName("GVC_UNSUB_THIS");

                entity.Property(e => e.Hobby).HasMaxLength(255);

                entity.Property(e => e.Home2TelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.HomeAddress).HasMaxLength(255);

                entity.Property(e => e.HomeAddressCity).HasMaxLength(255);

                entity.Property(e => e.HomeAddressCountry).HasMaxLength(255);

                entity.Property(e => e.HomeAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.HomeAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.HomeAddressState).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.HomeFaxNumber).HasMaxLength(255);

                entity.Property(e => e.HomeFaxNumberFormatted).HasMaxLength(267);

                entity.Property(e => e.HomeTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.ImSummary)
                    .HasMaxLength(255)
                    .HasColumnName("IM_SUMMARY");

                entity.Property(e => e.Initials).HasMaxLength(255);

                entity.Property(e => e.InternetFreeBusyAddress).HasMaxLength(255);

                entity.Property(e => e.Isdnnumber)
                    .HasMaxLength(255)
                    .HasColumnName("ISDNNumber");

                entity.Property(e => e.JobTitle).HasMaxLength(255);

                entity.Property(e => e.LastFirstAndSuffix).HasMaxLength(255);

                entity.Property(e => e.LastFirstNoSpaceCompany).HasMaxLength(255);

                entity.Property(e => e.LastFirstSpaceOnly).HasMaxLength(255);

                entity.Property(e => e.LastFirstSpaceOnlyCompany).HasMaxLength(255);

                entity.Property(e => e.LastModificationTime).HasMaxLength(255);

                entity.Property(e => e.LastName).HasMaxLength(255);

                entity.Property(e => e.LastNameAndFirstName).HasMaxLength(255);

                entity.Property(e => e.LinkedinImage)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_IMAGE");

                entity.Property(e => e.LinkedinName)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_NAME");

                entity.Property(e => e.LinkedinPrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_PRIVATE_ID");

                entity.Property(e => e.LinkedinProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_PROFILE_URL");

                entity.Property(e => e.LinkedinPublicId)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_PUBLIC_ID");

                entity.Property(e => e.MacId).HasColumnName("MAC_ID");

                entity.Property(e => e.MacMedium)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("MAC_MEDIUM");

                entity.Property(e => e.MacName)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_NAME");

                entity.Property(e => e.MacOwnerName)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_OWNER_NAME");

                entity.Property(e => e.MacStageName)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_STAGE_NAME");

                entity.Property(e => e.MacStageNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("MAC_STAGE_NAME_HLIGHT");

                entity.Property(e => e.MacTypeName)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_TYPE_NAME");

                entity.Property(e => e.MacTypeNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("MAC_TYPE_NAME_HLIGHT");

                entity.Property(e => e.MacUd1)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_UD1");

                entity.Property(e => e.MacUd10)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_UD10");

                entity.Property(e => e.MacUd10Bit).HasColumnName("MAC_UD10_BIT");

                entity.Property(e => e.MacUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MAC_UD10_DATE");

                entity.Property(e => e.MacUd10Id).HasColumnName("MAC_UD10_ID");

                entity.Property(e => e.MacUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MAC_UD10_NUMERIC");

                entity.Property(e => e.MacUd1Bit).HasColumnName("MAC_UD1_BIT");

                entity.Property(e => e.MacUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MAC_UD1_DATE");

                entity.Property(e => e.MacUd1Id).HasColumnName("MAC_UD1_ID");

                entity.Property(e => e.MacUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MAC_UD1_NUMERIC");

                entity.Property(e => e.MacUd2)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_UD2");

                entity.Property(e => e.MacUd2Bit).HasColumnName("MAC_UD2_BIT");

                entity.Property(e => e.MacUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MAC_UD2_DATE");

                entity.Property(e => e.MacUd2Id).HasColumnName("MAC_UD2_ID");

                entity.Property(e => e.MacUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MAC_UD2_NUMERIC");

                entity.Property(e => e.MacUd3)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_UD3");

                entity.Property(e => e.MacUd3Bit).HasColumnName("MAC_UD3_BIT");

                entity.Property(e => e.MacUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MAC_UD3_DATE");

                entity.Property(e => e.MacUd3Id).HasColumnName("MAC_UD3_ID");

                entity.Property(e => e.MacUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MAC_UD3_NUMERIC");

                entity.Property(e => e.MacUd4)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_UD4");

                entity.Property(e => e.MacUd4Bit).HasColumnName("MAC_UD4_BIT");

                entity.Property(e => e.MacUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MAC_UD4_DATE");

                entity.Property(e => e.MacUd4Id).HasColumnName("MAC_UD4_ID");

                entity.Property(e => e.MacUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MAC_UD4_NUMERIC");

                entity.Property(e => e.MacUd5)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_UD5");

                entity.Property(e => e.MacUd5Bit).HasColumnName("MAC_UD5_BIT");

                entity.Property(e => e.MacUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MAC_UD5_DATE");

                entity.Property(e => e.MacUd5Id).HasColumnName("MAC_UD5_ID");

                entity.Property(e => e.MacUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MAC_UD5_NUMERIC");

                entity.Property(e => e.MacUd6)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_UD6");

                entity.Property(e => e.MacUd6Bit).HasColumnName("MAC_UD6_BIT");

                entity.Property(e => e.MacUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MAC_UD6_DATE");

                entity.Property(e => e.MacUd6Id).HasColumnName("MAC_UD6_ID");

                entity.Property(e => e.MacUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MAC_UD6_NUMERIC");

                entity.Property(e => e.MacUd7)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_UD7");

                entity.Property(e => e.MacUd7Bit).HasColumnName("MAC_UD7_BIT");

                entity.Property(e => e.MacUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MAC_UD7_DATE");

                entity.Property(e => e.MacUd7Id).HasColumnName("MAC_UD7_ID");

                entity.Property(e => e.MacUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MAC_UD7_NUMERIC");

                entity.Property(e => e.MacUd8)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_UD8");

                entity.Property(e => e.MacUd8Bit).HasColumnName("MAC_UD8_BIT");

                entity.Property(e => e.MacUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MAC_UD8_DATE");

                entity.Property(e => e.MacUd8Id).HasColumnName("MAC_UD8_ID");

                entity.Property(e => e.MacUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MAC_UD8_NUMERIC");

                entity.Property(e => e.MacUd9)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_UD9");

                entity.Property(e => e.MacUd9Bit).HasColumnName("MAC_UD9_BIT");

                entity.Property(e => e.MacUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MAC_UD9_DATE");

                entity.Property(e => e.MacUd9Id).HasColumnName("MAC_UD9_ID");

                entity.Property(e => e.MacUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MAC_UD9_NUMERIC");

                entity.Property(e => e.MaccsId).HasColumnName("MACCS_ID");

                entity.Property(e => e.MailingAddress).HasMaxLength(255);

                entity.Property(e => e.MailingAddressCity).HasMaxLength(255);

                entity.Property(e => e.MailingAddressCountry).HasMaxLength(255);

                entity.Property(e => e.MailingAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.MailingAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.MailingAddressState).HasMaxLength(255);

                entity.Property(e => e.MailingAddressStreet).HasMaxLength(255);

                entity.Property(e => e.MailingAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.MailingAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.ManagerName).HasMaxLength(255);

                entity.Property(e => e.McrId).HasColumnName("MCR_ID");

                entity.Property(e => e.McrRunBy)
                    .HasMaxLength(255)
                    .HasColumnName("MCR_RUN_BY");

                entity.Property(e => e.McrRunDate)
                    .HasColumnType("datetime")
                    .HasColumnName("MCR_RUN_DATE");

                entity.Property(e => e.MiddleName).HasMaxLength(255);

                entity.Property(e => e.Mileage).HasMaxLength(255);

                entity.Property(e => e.MobileTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.NetMeetingAlias).HasMaxLength(255);

                entity.Property(e => e.NetMeetingServer).HasMaxLength(255);

                entity.Property(e => e.NickName).HasMaxLength(255);

                entity.Property(e => e.OfficeLocation).HasMaxLength(255);

                entity.Property(e => e.OtherAddress).HasMaxLength(255);

                entity.Property(e => e.OtherAddressCity).HasMaxLength(255);

                entity.Property(e => e.OtherAddressCountry).HasMaxLength(255);

                entity.Property(e => e.OtherAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.OtherAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.OtherAddressState).HasMaxLength(255);

                entity.Property(e => e.OtherAddressStreet).HasMaxLength(255);

                entity.Property(e => e.OtherAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.OtherAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.OtherFaxNumber).HasMaxLength(255);

                entity.Property(e => e.OtherTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.PersonalHomePage).HasMaxLength(255);

                entity.Property(e => e.PrefAddress).HasColumnName("PREF_ADDRESS");

                entity.Property(e => e.PrefEmail).HasColumnName("PREF_EMAIL");

                entity.Property(e => e.PrefPhone).HasColumnName("PREF_PHONE");

                entity.Property(e => e.PreferredContact).HasColumnName("PREFERRED_CONTACT");

                entity.Property(e => e.PreferredContactEmail).HasColumnName("PREFERRED_CONTACT_EMAIL");

                entity.Property(e => e.PreferredContactFax).HasColumnName("PREFERRED_CONTACT_FAX");

                entity.Property(e => e.PreferredContactLetter).HasColumnName("PREFERRED_CONTACT_LETTER");

                entity.Property(e => e.PreferredContactPhone).HasColumnName("PREFERRED_CONTACT_PHONE");

                entity.Property(e => e.PrimaryContact).HasColumnName("PRIMARY_CONTACT");

                entity.Property(e => e.PrimaryTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.PrivacyNotified).HasColumnName("PRIVACY_NOTIFIED");

                entity.Property(e => e.PrivacyNotifiedBy)
                    .HasMaxLength(255)
                    .HasColumnName("PRIVACY_NOTIFIED_BY");

                entity.Property(e => e.PrivacyNotifiedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRIVACY_NOTIFIED_DATE");

                entity.Property(e => e.PrivacyNotifiedMethod)
                    .HasMaxLength(255)
                    .HasColumnName("PRIVACY_NOTIFIED_METHOD");

                entity.Property(e => e.Profession).HasMaxLength(255);

                entity.Property(e => e.RadioTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.ReferredBy).HasMaxLength(255);

                entity.Property(e => e.RemovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("REMOVAL_DATE");

                entity.Property(e => e.Salutation)
                    .HasMaxLength(255)
                    .HasColumnName("SALUTATION");

                entity.Property(e => e.SelectedMailingAddress).HasMaxLength(255);

                entity.Property(e => e.Sensitivity).HasMaxLength(255);

                entity.Property(e => e.Spouse).HasMaxLength(255);

                entity.Property(e => e.State)
                    .HasMaxLength(10)
                    .HasColumnName("STATE");

                entity.Property(e => e.Status)
                    .HasMaxLength(255)
                    .HasColumnName("STATUS");

                entity.Property(e => e.Subject).HasMaxLength(255);

                entity.Property(e => e.Suffix).HasMaxLength(255);

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TelexNumber).HasMaxLength(255);

                entity.Property(e => e.Title).HasMaxLength(255);

                entity.Property(e => e.TtytddtelephoneNumber)
                    .HasMaxLength(255)
                    .HasColumnName("TTYTDDTelephoneNumber");

                entity.Property(e => e.Twitter1Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_IMAGE");

                entity.Property(e => e.Twitter1Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_NAME");

                entity.Property(e => e.Twitter1PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_PRIVATE_ID");

                entity.Property(e => e.Twitter1ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_PROFILE_URL");

                entity.Property(e => e.Twitter1PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_PUBLIC_ID");

                entity.Property(e => e.Twitter2Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_IMAGE");

                entity.Property(e => e.Twitter2Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_NAME");

                entity.Property(e => e.Twitter2PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_PRIVATE_ID");

                entity.Property(e => e.Twitter2ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_PROFILE_URL");

                entity.Property(e => e.Twitter2PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_PUBLIC_ID");

                entity.Property(e => e.Twitter3Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_IMAGE");

                entity.Property(e => e.Twitter3Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_NAME");

                entity.Property(e => e.Twitter3PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_PRIVATE_ID");

                entity.Property(e => e.Twitter3ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_PROFILE_URL");

                entity.Property(e => e.Twitter3PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_PUBLIC_ID");

                entity.Property(e => e.Twitter4Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_IMAGE");

                entity.Property(e => e.Twitter4Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_NAME");

                entity.Property(e => e.Twitter4PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_PRIVATE_ID");

                entity.Property(e => e.Twitter4ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_PROFILE_URL");

                entity.Property(e => e.Twitter4PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_PUBLIC_ID");

                entity.Property(e => e.Twitter5Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_IMAGE");

                entity.Property(e => e.Twitter5Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_NAME");

                entity.Property(e => e.Twitter5PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_PRIVATE_ID");

                entity.Property(e => e.Twitter5ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_PROFILE_URL");

                entity.Property(e => e.Twitter5PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_PUBLIC_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");

                entity.Property(e => e.UsIdSupport).HasColumnName("US_ID_SUPPORT");

                entity.Property(e => e.UsName)
                    .HasMaxLength(255)
                    .HasColumnName("US_NAME");

                entity.Property(e => e.UsgName)
                    .HasMaxLength(255)
                    .HasColumnName("USG_NAME");

                entity.Property(e => e.WebPage).HasMaxLength(255);

                entity.Property(e => e.YomiCompanyName).HasMaxLength(255);

                entity.Property(e => e.YomiFirstName).HasMaxLength(255);

                entity.Property(e => e.YomiLastName).HasMaxLength(255);
            });

            modelBuilder.Entity<VCode>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vCodes");

                entity.Property(e => e.AcoId).HasColumnName("ACO_ID");

                entity.Property(e => e.AcoId2).HasColumnName("ACO_ID2");

                entity.Property(e => e.AppendSummary).HasColumnName("APPEND_SUMMARY");

                entity.Property(e => e.CodId).HasColumnName("COD_ID");

                entity.Property(e => e.CreateOnInsert).HasColumnName("CREATE_ON_INSERT");

                entity.Property(e => e.Expression)
                    .HasMaxLength(50)
                    .HasColumnName("EXPRESSION");

                entity.Property(e => e.Optional).HasColumnName("OPTIONAL");

                entity.Property(e => e.Ref)
                    .HasMaxLength(50)
                    .HasColumnName("REF");

                entity.Property(e => e.Seed).HasColumnName("SEED");

                entity.Property(e => e.Seedwidth).HasColumnName("SEEDWIDTH");

                entity.Property(e => e.Summary)
                    .HasMaxLength(103)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TableName)
                    .HasMaxLength(50)
                    .HasColumnName("TABLE_NAME");
            });

            modelBuilder.Entity<VContact>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vContacts");

                entity.Property(e => e.AcAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("AC_ADDRESS_1");

                entity.Property(e => e.AcAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_ADDRESS_2");

                entity.Property(e => e.AcAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("AC_ADDRESS_3");

                entity.Property(e => e.AcBillingAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_ADDRESS_1");

                entity.Property(e => e.AcBillingAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_ADDRESS_2");

                entity.Property(e => e.AcBillingAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_ADDRESS_3");

                entity.Property(e => e.AcBillingCounty)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_COUNTY");

                entity.Property(e => e.AcBillingPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_POSTCODE");

                entity.Property(e => e.AcBillingTown)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_TOWN");

                entity.Property(e => e.AcCounty)
                    .HasMaxLength(255)
                    .HasColumnName("AC_COUNTY");

                entity.Property(e => e.AcExternal)
                    .HasMaxLength(255)
                    .HasColumnName("AC_EXTERNAL");

                entity.Property(e => e.AcFlag)
                    .HasMaxLength(255)
                    .HasColumnName("AC_FLAG");

                entity.Property(e => e.AcFlagHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_FLAG_HLIGHT");

                entity.Property(e => e.AcGroup)
                    .HasMaxLength(255)
                    .HasColumnName("AC_GROUP");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcIndustry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_INDUSTRY");

                entity.Property(e => e.AcIndustryHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_INDUSTRY_HLIGHT");

                entity.Property(e => e.AcLabel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LABEL");

                entity.Property(e => e.AcLabelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LABEL_HLIGHT");

                entity.Property(e => e.AcLevel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LEVEL");

                entity.Property(e => e.AcLevelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LEVEL_HLIGHT");

                entity.Property(e => e.AcManager)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER");

                entity.Property(e => e.AcManagerDept)
                    .HasMaxLength(128)
                    .HasColumnName("AC_MANAGER_DEPT");

                entity.Property(e => e.AcManagerEmail)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_EMAIL");

                entity.Property(e => e.AcManagerGroup)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_GROUP");

                entity.Property(e => e.AcManagerSupport)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_SUPPORT");

                entity.Property(e => e.AcManagerSupportEmail)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_SUPPORT_EMAIL");

                entity.Property(e => e.AcPhone1)
                    .HasMaxLength(50)
                    .HasColumnName("AC_PHONE_1");

                entity.Property(e => e.AcPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("AC_POSTCODE");

                entity.Property(e => e.AcReference)
                    .HasMaxLength(50)
                    .HasColumnName("AC_REFERENCE");

                entity.Property(e => e.AcSource)
                    .HasMaxLength(255)
                    .HasColumnName("AC_SOURCE");

                entity.Property(e => e.AcSourceHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_SOURCE_HLIGHT");

                entity.Property(e => e.AcTown)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TOWN");

                entity.Property(e => e.AcType)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE");

                entity.Property(e => e.AcType2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_2");

                entity.Property(e => e.AcType2Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_2_HLIGHT");

                entity.Property(e => e.AcTypeHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_HLIGHT");

                entity.Property(e => e.AcUd10Bit).HasColumnName("AC_UD10_BIT");

                entity.Property(e => e.AcUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD10_DATE");

                entity.Property(e => e.AcUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_ID_NAME");

                entity.Property(e => e.AcUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd10Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD10_NUMERIC");

                entity.Property(e => e.AcUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_TEXT");

                entity.Property(e => e.AcUd11Bit).HasColumnName("AC_UD11_BIT");

                entity.Property(e => e.AcUd11Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD11_TEXT");

                entity.Property(e => e.AcUd12Bit).HasColumnName("AC_UD12_BIT");

                entity.Property(e => e.AcUd12Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD12_TEXT");

                entity.Property(e => e.AcUd13Bit).HasColumnName("AC_UD13_BIT");

                entity.Property(e => e.AcUd13Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD13_TEXT");

                entity.Property(e => e.AcUd14Bit).HasColumnName("AC_UD14_BIT");

                entity.Property(e => e.AcUd14Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD14_TEXT");

                entity.Property(e => e.AcUd15Bit).HasColumnName("AC_UD15_BIT");

                entity.Property(e => e.AcUd15Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD15_TEXT");

                entity.Property(e => e.AcUd16Bit).HasColumnName("AC_UD16_BIT");

                entity.Property(e => e.AcUd17Bit).HasColumnName("AC_UD17_BIT");

                entity.Property(e => e.AcUd18Bit).HasColumnName("AC_UD18_BIT");

                entity.Property(e => e.AcUd19Bit).HasColumnName("AC_UD19_BIT");

                entity.Property(e => e.AcUd1Bit).HasColumnName("AC_UD1_BIT");

                entity.Property(e => e.AcUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD1_DATE");

                entity.Property(e => e.AcUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_ID_NAME");

                entity.Property(e => e.AcUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd1Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD1_NUMERIC");

                entity.Property(e => e.AcUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_TEXT");

                entity.Property(e => e.AcUd20Bit).HasColumnName("AC_UD20_BIT");

                entity.Property(e => e.AcUd21Bit).HasColumnName("AC_UD21_BIT");

                entity.Property(e => e.AcUd22Bit).HasColumnName("AC_UD22_BIT");

                entity.Property(e => e.AcUd23Bit).HasColumnName("AC_UD23_BIT");

                entity.Property(e => e.AcUd24Bit).HasColumnName("AC_UD24_BIT");

                entity.Property(e => e.AcUd2Bit).HasColumnName("AC_UD2_BIT");

                entity.Property(e => e.AcUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD2_DATE");

                entity.Property(e => e.AcUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_ID_NAME");

                entity.Property(e => e.AcUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd2Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD2_NUMERIC");

                entity.Property(e => e.AcUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_TEXT");

                entity.Property(e => e.AcUd3Bit).HasColumnName("AC_UD3_BIT");

                entity.Property(e => e.AcUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD3_DATE");

                entity.Property(e => e.AcUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_ID_NAME");

                entity.Property(e => e.AcUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd3Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD3_NUMERIC");

                entity.Property(e => e.AcUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_TEXT");

                entity.Property(e => e.AcUd4Bit).HasColumnName("AC_UD4_BIT");

                entity.Property(e => e.AcUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD4_DATE");

                entity.Property(e => e.AcUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_ID_NAME");

                entity.Property(e => e.AcUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd4Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD4_NUMERIC");

                entity.Property(e => e.AcUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_TEXT");

                entity.Property(e => e.AcUd5Bit).HasColumnName("AC_UD5_BIT");

                entity.Property(e => e.AcUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD5_DATE");

                entity.Property(e => e.AcUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_ID_NAME");

                entity.Property(e => e.AcUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd5Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD5_NUMERIC");

                entity.Property(e => e.AcUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_TEXT");

                entity.Property(e => e.AcUd6Bit).HasColumnName("AC_UD6_BIT");

                entity.Property(e => e.AcUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD6_DATE");

                entity.Property(e => e.AcUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_ID_NAME");

                entity.Property(e => e.AcUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd6Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD6_NUMERIC");

                entity.Property(e => e.AcUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_TEXT");

                entity.Property(e => e.AcUd7Bit).HasColumnName("AC_UD7_BIT");

                entity.Property(e => e.AcUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD7_DATE");

                entity.Property(e => e.AcUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_ID_NAME");

                entity.Property(e => e.AcUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd7Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD7_NUMERIC");

                entity.Property(e => e.AcUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_TEXT");

                entity.Property(e => e.AcUd8Bit).HasColumnName("AC_UD8_BIT");

                entity.Property(e => e.AcUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD8_DATE");

                entity.Property(e => e.AcUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_ID_NAME");

                entity.Property(e => e.AcUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd8Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD8_NUMERIC");

                entity.Property(e => e.AcUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_TEXT");

                entity.Property(e => e.AcUd9Bit).HasColumnName("AC_UD9_BIT");

                entity.Property(e => e.AcUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD9_DATE");

                entity.Property(e => e.AcUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_ID_NAME");

                entity.Property(e => e.AcUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd9Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD9_NUMERIC");

                entity.Property(e => e.AcUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_TEXT");

                entity.Property(e => e.AccDeleted).HasColumnName("ACC_DELETED");

                entity.Property(e => e.AccDormant).HasColumnName("ACC_DORMANT");

                entity.Property(e => e.AccExternal)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_EXTERNAL");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccImport).HasColumnName("ACC_IMPORT");

                entity.Property(e => e.AccPrefAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_ADDRESS_1");

                entity.Property(e => e.AccPrefAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_ADDRESS_2");

                entity.Property(e => e.AccPrefAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_ADDRESS_3");

                entity.Property(e => e.AccPrefCountry)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_COUNTRY");

                entity.Property(e => e.AccPrefCounty)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_COUNTY");

                entity.Property(e => e.AccPrefEmail)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_EMAIL");

                entity.Property(e => e.AccPrefPhone)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_PHONE");

                entity.Property(e => e.AccPrefPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_POSTCODE");

                entity.Property(e => e.AccPrefTown)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_TOWN");

                entity.Property(e => e.AccStatus).HasColumnName("ACC_STATUS");

                entity.Property(e => e.AccUd1)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD1");

                entity.Property(e => e.AccUd10)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD10");

                entity.Property(e => e.AccUd10Bit).HasColumnName("ACC_UD10_BIT");

                entity.Property(e => e.AccUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD10_DATE");

                entity.Property(e => e.AccUd10Id).HasColumnName("ACC_UD10_ID");

                entity.Property(e => e.AccUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD10_ID_NAME");

                entity.Property(e => e.AccUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD10_NUMERIC");

                entity.Property(e => e.AccUd11)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD11");

                entity.Property(e => e.AccUd11Bit).HasColumnName("ACC_UD11_BIT");

                entity.Property(e => e.AccUd12)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD12");

                entity.Property(e => e.AccUd12Bit).HasColumnName("ACC_UD12_BIT");

                entity.Property(e => e.AccUd13)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD13");

                entity.Property(e => e.AccUd13Bit).HasColumnName("ACC_UD13_BIT");

                entity.Property(e => e.AccUd14)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD14");

                entity.Property(e => e.AccUd14Bit).HasColumnName("ACC_UD14_BIT");

                entity.Property(e => e.AccUd15)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD15");

                entity.Property(e => e.AccUd15Bit).HasColumnName("ACC_UD15_BIT");

                entity.Property(e => e.AccUd16Bit).HasColumnName("ACC_UD16_BIT");

                entity.Property(e => e.AccUd17Bit).HasColumnName("ACC_UD17_BIT");

                entity.Property(e => e.AccUd18Bit).HasColumnName("ACC_UD18_BIT");

                entity.Property(e => e.AccUd19Bit).HasColumnName("ACC_UD19_BIT");

                entity.Property(e => e.AccUd1Bit).HasColumnName("ACC_UD1_BIT");

                entity.Property(e => e.AccUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD1_DATE");

                entity.Property(e => e.AccUd1Id).HasColumnName("ACC_UD1_ID");

                entity.Property(e => e.AccUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD1_ID_NAME");

                entity.Property(e => e.AccUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD1_NUMERIC");

                entity.Property(e => e.AccUd2)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD2");

                entity.Property(e => e.AccUd20Bit).HasColumnName("ACC_UD20_BIT");

                entity.Property(e => e.AccUd21Bit).HasColumnName("ACC_UD21_BIT");

                entity.Property(e => e.AccUd22Bit).HasColumnName("ACC_UD22_BIT");

                entity.Property(e => e.AccUd23Bit).HasColumnName("ACC_UD23_BIT");

                entity.Property(e => e.AccUd24Bit).HasColumnName("ACC_UD24_BIT");

                entity.Property(e => e.AccUd2Bit).HasColumnName("ACC_UD2_BIT");

                entity.Property(e => e.AccUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD2_DATE");

                entity.Property(e => e.AccUd2Id).HasColumnName("ACC_UD2_ID");

                entity.Property(e => e.AccUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD2_ID_NAME");

                entity.Property(e => e.AccUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD2_NUMERIC");

                entity.Property(e => e.AccUd3)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD3");

                entity.Property(e => e.AccUd3Bit).HasColumnName("ACC_UD3_BIT");

                entity.Property(e => e.AccUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD3_DATE");

                entity.Property(e => e.AccUd3Id).HasColumnName("ACC_UD3_ID");

                entity.Property(e => e.AccUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD3_ID_NAME");

                entity.Property(e => e.AccUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD3_NUMERIC");

                entity.Property(e => e.AccUd4)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD4");

                entity.Property(e => e.AccUd4Bit).HasColumnName("ACC_UD4_BIT");

                entity.Property(e => e.AccUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD4_DATE");

                entity.Property(e => e.AccUd4Id).HasColumnName("ACC_UD4_ID");

                entity.Property(e => e.AccUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD4_ID_NAME");

                entity.Property(e => e.AccUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD4_NUMERIC");

                entity.Property(e => e.AccUd5)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD5");

                entity.Property(e => e.AccUd5Bit).HasColumnName("ACC_UD5_BIT");

                entity.Property(e => e.AccUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD5_DATE");

                entity.Property(e => e.AccUd5Id).HasColumnName("ACC_UD5_ID");

                entity.Property(e => e.AccUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD5_ID_NAME");

                entity.Property(e => e.AccUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD5_NUMERIC");

                entity.Property(e => e.AccUd6)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD6");

                entity.Property(e => e.AccUd6Bit).HasColumnName("ACC_UD6_BIT");

                entity.Property(e => e.AccUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD6_DATE");

                entity.Property(e => e.AccUd6Id).HasColumnName("ACC_UD6_ID");

                entity.Property(e => e.AccUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD6_ID_NAME");

                entity.Property(e => e.AccUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD6_NUMERIC");

                entity.Property(e => e.AccUd7)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD7");

                entity.Property(e => e.AccUd7Bit).HasColumnName("ACC_UD7_BIT");

                entity.Property(e => e.AccUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD7_DATE");

                entity.Property(e => e.AccUd7Id).HasColumnName("ACC_UD7_ID");

                entity.Property(e => e.AccUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD7_ID_NAME");

                entity.Property(e => e.AccUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD7_NUMERIC");

                entity.Property(e => e.AccUd8)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD8");

                entity.Property(e => e.AccUd8Bit).HasColumnName("ACC_UD8_BIT");

                entity.Property(e => e.AccUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD8_DATE");

                entity.Property(e => e.AccUd8Id).HasColumnName("ACC_UD8_ID");

                entity.Property(e => e.AccUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD8_ID_NAME");

                entity.Property(e => e.AccUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD8_NUMERIC");

                entity.Property(e => e.AccUd9)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD9");

                entity.Property(e => e.AccUd9Bit).HasColumnName("ACC_UD9_BIT");

                entity.Property(e => e.AccUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD9_DATE");

                entity.Property(e => e.AccUd9Id).HasColumnName("ACC_UD9_ID");

                entity.Property(e => e.AccUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD9_ID_NAME");

                entity.Property(e => e.AccUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD9_NUMERIC");

                entity.Property(e => e.Account).HasMaxLength(255);

                entity.Property(e => e.AccountName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_NAME");

                entity.Property(e => e.AcgId).HasColumnName("ACG_ID");

                entity.Property(e => e.Anniversary).HasMaxLength(255);

                entity.Property(e => e.AssistantTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Assistantname).HasMaxLength(255);

                entity.Property(e => e.BillingInformation).HasMaxLength(255);

                entity.Property(e => e.Birthday).HasMaxLength(255);

                entity.Property(e => e.Business2TelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.BusinessAddress).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressCity).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressCountry).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressState).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.BusinessFaxNumber).HasMaxLength(255);

                entity.Property(e => e.BusinessFaxNumberFormatted).HasMaxLength(267);

                entity.Property(e => e.BusinessHomePage).HasMaxLength(255);

                entity.Property(e => e.BusinessSitId).HasColumnName("BUSINESS_SIT_ID");

                entity.Property(e => e.BusinessSite)
                    .HasMaxLength(255)
                    .HasColumnName("BUSINESS_SITE");

                entity.Property(e => e.BusinessTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.CallbackTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.CarTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Categories).HasMaxLength(500);

                entity.Property(e => e.Children).HasMaxLength(255);

                entity.Property(e => e.Companies).HasMaxLength(255);

                entity.Property(e => e.CompanyAndFullName).HasMaxLength(255);

                entity.Property(e => e.CompanyLastFirstNoSpace).HasMaxLength(255);

                entity.Property(e => e.CompanyLastFirstSpaceOnly).HasMaxLength(255);

                entity.Property(e => e.CompanyMainTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.CompanyName).HasMaxLength(255);

                entity.Property(e => e.ComputerNetworkName).HasMaxLength(255);

                entity.Property(e => e.ConnectOptIn).HasColumnName("CONNECT_OPT_IN");

                entity.Property(e => e.ConnectOptInDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CONNECT_OPT_IN_DATE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CreationTime).HasMaxLength(255);

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Department).HasMaxLength(255);

                entity.Property(e => e.Email1Address).HasMaxLength(255);

                entity.Property(e => e.Email1AddressType).HasMaxLength(255);

                entity.Property(e => e.Email1DisplayName).HasMaxLength(255);

                entity.Property(e => e.Email1EntryId)
                    .HasMaxLength(255)
                    .HasColumnName("Email1EntryID");

                entity.Property(e => e.Email2Address).HasMaxLength(255);

                entity.Property(e => e.Email2AddressType).HasMaxLength(255);

                entity.Property(e => e.Email2DisplayName).HasMaxLength(255);

                entity.Property(e => e.Email2EntryId)
                    .HasMaxLength(255)
                    .HasColumnName("Email2EntryID");

                entity.Property(e => e.Email3Address).HasMaxLength(255);

                entity.Property(e => e.Email3AddressType).HasMaxLength(255);

                entity.Property(e => e.Email3DisplayName).HasMaxLength(255);

                entity.Property(e => e.Email3EntryId)
                    .HasMaxLength(255)
                    .HasColumnName("Email3EntryID");

                entity.Property(e => e.Exported).HasColumnName("EXPORTED");

                entity.Property(e => e.FacebookImage)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_IMAGE");

                entity.Property(e => e.FacebookName)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_NAME");

                entity.Property(e => e.FacebookPrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_PRIVATE_ID");

                entity.Property(e => e.FacebookProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_PROFILE_URL");

                entity.Property(e => e.FacebookPublicId)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_PUBLIC_ID");

                entity.Property(e => e.FirstName).HasMaxLength(255);

                entity.Property(e => e.Ftpsite)
                    .HasMaxLength(255)
                    .HasColumnName("FTPSite");

                entity.Property(e => e.FullName).HasMaxLength(255);

                entity.Property(e => e.FullNameAndCompany).HasMaxLength(255);

                entity.Property(e => e.GplusImage)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_IMAGE");

                entity.Property(e => e.GplusName)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_NAME");

                entity.Property(e => e.GplusPrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_PRIVATE_ID");

                entity.Property(e => e.GplusProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_PROFILE_URL");

                entity.Property(e => e.GplusPublicId)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_PUBLIC_ID");

                entity.Property(e => e.Hobby).HasMaxLength(255);

                entity.Property(e => e.Home2TelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.HomeAddress).HasMaxLength(255);

                entity.Property(e => e.HomeAddressCity).HasMaxLength(255);

                entity.Property(e => e.HomeAddressCountry).HasMaxLength(255);

                entity.Property(e => e.HomeAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.HomeAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.HomeAddressState).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.HomeFaxNumber).HasMaxLength(255);

                entity.Property(e => e.HomeFaxNumberFormatted).HasMaxLength(267);

                entity.Property(e => e.HomeTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.ImSummary)
                    .HasMaxLength(255)
                    .HasColumnName("IM_SUMMARY");

                entity.Property(e => e.Initials).HasMaxLength(255);

                entity.Property(e => e.InternetFreeBusyAddress).HasMaxLength(255);

                entity.Property(e => e.Isdnnumber)
                    .HasMaxLength(255)
                    .HasColumnName("ISDNNumber");

                entity.Property(e => e.JobTitle).HasMaxLength(255);

                entity.Property(e => e.LastFirstAndSuffix).HasMaxLength(255);

                entity.Property(e => e.LastFirstNoSpaceCompany).HasMaxLength(255);

                entity.Property(e => e.LastFirstSpaceOnly).HasMaxLength(255);

                entity.Property(e => e.LastFirstSpaceOnlyCompany).HasMaxLength(255);

                entity.Property(e => e.LastModificationTime).HasMaxLength(255);

                entity.Property(e => e.LastName).HasMaxLength(255);

                entity.Property(e => e.LastNameAndFirstName).HasMaxLength(255);

                entity.Property(e => e.LinkedinImage)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_IMAGE");

                entity.Property(e => e.LinkedinName)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_NAME");

                entity.Property(e => e.LinkedinPrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_PRIVATE_ID");

                entity.Property(e => e.LinkedinProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_PROFILE_URL");

                entity.Property(e => e.LinkedinPublicId)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_PUBLIC_ID");

                entity.Property(e => e.MailingAddress).HasMaxLength(255);

                entity.Property(e => e.MailingAddressCity).HasMaxLength(255);

                entity.Property(e => e.MailingAddressCountry).HasMaxLength(255);

                entity.Property(e => e.MailingAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.MailingAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.MailingAddressState).HasMaxLength(255);

                entity.Property(e => e.MailingAddressStreet).HasMaxLength(255);

                entity.Property(e => e.MailingAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.MailingAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.ManagerName).HasMaxLength(255);

                entity.Property(e => e.MiddleName).HasMaxLength(255);

                entity.Property(e => e.Mileage).HasMaxLength(255);

                entity.Property(e => e.MobileTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.NetMeetingAlias).HasMaxLength(255);

                entity.Property(e => e.NetMeetingServer).HasMaxLength(255);

                entity.Property(e => e.NickName).HasMaxLength(255);

                entity.Property(e => e.OfficeLocation).HasMaxLength(255);

                entity.Property(e => e.OtherAddress).HasMaxLength(255);

                entity.Property(e => e.OtherAddressCity).HasMaxLength(255);

                entity.Property(e => e.OtherAddressCountry).HasMaxLength(255);

                entity.Property(e => e.OtherAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.OtherAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.OtherAddressState).HasMaxLength(255);

                entity.Property(e => e.OtherAddressStreet).HasMaxLength(255);

                entity.Property(e => e.OtherAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.OtherAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.OtherFaxNumber).HasMaxLength(255);

                entity.Property(e => e.OtherTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.PersonalHomePage).HasMaxLength(255);

                entity.Property(e => e.PrefAddress).HasColumnName("PREF_ADDRESS");

                entity.Property(e => e.PrefEmail).HasColumnName("PREF_EMAIL");

                entity.Property(e => e.PrefPhone).HasColumnName("PREF_PHONE");

                entity.Property(e => e.PreferredContact).HasColumnName("PREFERRED_CONTACT");

                entity.Property(e => e.PreferredContactEmail).HasColumnName("PREFERRED_CONTACT_EMAIL");

                entity.Property(e => e.PreferredContactFax).HasColumnName("PREFERRED_CONTACT_FAX");

                entity.Property(e => e.PreferredContactLetter).HasColumnName("PREFERRED_CONTACT_LETTER");

                entity.Property(e => e.PreferredContactPhone).HasColumnName("PREFERRED_CONTACT_PHONE");

                entity.Property(e => e.PrimaryContact).HasColumnName("PRIMARY_CONTACT");

                entity.Property(e => e.PrimaryTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.PrivacyNotified).HasColumnName("PRIVACY_NOTIFIED");

                entity.Property(e => e.PrivacyNotifiedBy)
                    .HasMaxLength(255)
                    .HasColumnName("PRIVACY_NOTIFIED_BY");

                entity.Property(e => e.PrivacyNotifiedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRIVACY_NOTIFIED_DATE");

                entity.Property(e => e.PrivacyNotifiedMethod)
                    .HasMaxLength(255)
                    .HasColumnName("PRIVACY_NOTIFIED_METHOD");

                entity.Property(e => e.Profession).HasMaxLength(255);

                entity.Property(e => e.RadioTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.ReferredBy).HasMaxLength(255);

                entity.Property(e => e.RemovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("REMOVAL_DATE");

                entity.Property(e => e.Salutation)
                    .HasMaxLength(255)
                    .HasColumnName("SALUTATION");

                entity.Property(e => e.SelectedMailingAddress).HasMaxLength(255);

                entity.Property(e => e.Sensitivity).HasMaxLength(255);

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Spouse).HasMaxLength(255);

                entity.Property(e => e.State)
                    .HasMaxLength(10)
                    .HasColumnName("STATE");

                entity.Property(e => e.Status)
                    .HasMaxLength(255)
                    .HasColumnName("STATUS");

                entity.Property(e => e.Subject).HasMaxLength(255);

                entity.Property(e => e.Suffix).HasMaxLength(255);

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TelexNumber).HasMaxLength(255);

                entity.Property(e => e.Title).HasMaxLength(255);

                entity.Property(e => e.TtytddtelephoneNumber)
                    .HasMaxLength(255)
                    .HasColumnName("TTYTDDTelephoneNumber");

                entity.Property(e => e.Twitter1Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_IMAGE");

                entity.Property(e => e.Twitter1Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_NAME");

                entity.Property(e => e.Twitter1PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_PRIVATE_ID");

                entity.Property(e => e.Twitter1ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_PROFILE_URL");

                entity.Property(e => e.Twitter1PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_PUBLIC_ID");

                entity.Property(e => e.Twitter2Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_IMAGE");

                entity.Property(e => e.Twitter2Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_NAME");

                entity.Property(e => e.Twitter2PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_PRIVATE_ID");

                entity.Property(e => e.Twitter2ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_PROFILE_URL");

                entity.Property(e => e.Twitter2PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_PUBLIC_ID");

                entity.Property(e => e.Twitter3Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_IMAGE");

                entity.Property(e => e.Twitter3Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_NAME");

                entity.Property(e => e.Twitter3PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_PRIVATE_ID");

                entity.Property(e => e.Twitter3ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_PROFILE_URL");

                entity.Property(e => e.Twitter3PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_PUBLIC_ID");

                entity.Property(e => e.Twitter4Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_IMAGE");

                entity.Property(e => e.Twitter4Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_NAME");

                entity.Property(e => e.Twitter4PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_PRIVATE_ID");

                entity.Property(e => e.Twitter4ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_PROFILE_URL");

                entity.Property(e => e.Twitter4PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_PUBLIC_ID");

                entity.Property(e => e.Twitter5Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_IMAGE");

                entity.Property(e => e.Twitter5Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_NAME");

                entity.Property(e => e.Twitter5PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_PRIVATE_ID");

                entity.Property(e => e.Twitter5ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_PROFILE_URL");

                entity.Property(e => e.Twitter5PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_PUBLIC_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");

                entity.Property(e => e.UsIdSupport).HasColumnName("US_ID_SUPPORT");

                entity.Property(e => e.UsName)
                    .HasMaxLength(255)
                    .HasColumnName("US_NAME");

                entity.Property(e => e.UsgName)
                    .HasMaxLength(255)
                    .HasColumnName("USG_NAME");

                entity.Property(e => e.WebPage).HasMaxLength(255);

                entity.Property(e => e.YomiCompanyName).HasMaxLength(255);

                entity.Property(e => e.YomiFirstName).HasMaxLength(255);

                entity.Property(e => e.YomiLastName).HasMaxLength(255);
            });

            modelBuilder.Entity<VContactSyncList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vContactSyncList");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_NAME");

                entity.Property(e => e.CsdId).HasColumnName("CSD_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.SyncDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYNC_DATE");

                entity.Property(e => e.Username)
                    .HasMaxLength(255)
                    .HasColumnName("USERNAME");
            });

            modelBuilder.Entity<VContactUnsubscribe>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vContactUnsubscribes");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.CampaignType)
                    .HasMaxLength(255)
                    .HasColumnName("CAMPAIGN_TYPE");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DroCreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DRO_CREATED_DATE");

                entity.Property(e => e.DroId).HasColumnName("DRO_ID");

                entity.Property(e => e.MacType).HasColumnName("MAC_TYPE");

                entity.Property(e => e.OptionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OPTION_DATE");

                entity.Property(e => e.Subscribed).HasColumnName("SUBSCRIBED");
            });

            modelBuilder.Entity<VContactsLinked>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vContactsLinked");

                entity.Property(e => e.AcAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("AC_ADDRESS_1");

                entity.Property(e => e.AcAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_ADDRESS_2");

                entity.Property(e => e.AcAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("AC_ADDRESS_3");

                entity.Property(e => e.AcBillingAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_ADDRESS_1");

                entity.Property(e => e.AcBillingAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_ADDRESS_2");

                entity.Property(e => e.AcBillingAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_ADDRESS_3");

                entity.Property(e => e.AcBillingCounty)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_COUNTY");

                entity.Property(e => e.AcBillingPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_POSTCODE");

                entity.Property(e => e.AcBillingTown)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_TOWN");

                entity.Property(e => e.AcCounty)
                    .HasMaxLength(255)
                    .HasColumnName("AC_COUNTY");

                entity.Property(e => e.AcExternal)
                    .HasMaxLength(255)
                    .HasColumnName("AC_EXTERNAL");

                entity.Property(e => e.AcFlag)
                    .HasMaxLength(255)
                    .HasColumnName("AC_FLAG");

                entity.Property(e => e.AcFlagHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_FLAG_HLIGHT");

                entity.Property(e => e.AcGroup)
                    .HasMaxLength(255)
                    .HasColumnName("AC_GROUP");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcIndustry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_INDUSTRY");

                entity.Property(e => e.AcIndustryHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_INDUSTRY_HLIGHT");

                entity.Property(e => e.AcLabel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LABEL");

                entity.Property(e => e.AcLabelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LABEL_HLIGHT");

                entity.Property(e => e.AcLevel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LEVEL");

                entity.Property(e => e.AcLevelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LEVEL_HLIGHT");

                entity.Property(e => e.AcManager)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER");

                entity.Property(e => e.AcManagerDept)
                    .HasMaxLength(128)
                    .HasColumnName("AC_MANAGER_DEPT");

                entity.Property(e => e.AcManagerEmail)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_EMAIL");

                entity.Property(e => e.AcManagerGroup)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_GROUP");

                entity.Property(e => e.AcManagerSupport)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_SUPPORT");

                entity.Property(e => e.AcManagerSupportEmail)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_SUPPORT_EMAIL");

                entity.Property(e => e.AcPhone1)
                    .HasMaxLength(50)
                    .HasColumnName("AC_PHONE_1");

                entity.Property(e => e.AcPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("AC_POSTCODE");

                entity.Property(e => e.AcReference)
                    .HasMaxLength(50)
                    .HasColumnName("AC_REFERENCE");

                entity.Property(e => e.AcSource)
                    .HasMaxLength(255)
                    .HasColumnName("AC_SOURCE");

                entity.Property(e => e.AcSourceHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_SOURCE_HLIGHT");

                entity.Property(e => e.AcTown)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TOWN");

                entity.Property(e => e.AcType)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE");

                entity.Property(e => e.AcType2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_2");

                entity.Property(e => e.AcType2Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_2_HLIGHT");

                entity.Property(e => e.AcTypeHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_HLIGHT");

                entity.Property(e => e.AcUd10Bit).HasColumnName("AC_UD10_BIT");

                entity.Property(e => e.AcUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD10_DATE");

                entity.Property(e => e.AcUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_ID_NAME");

                entity.Property(e => e.AcUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd10Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD10_NUMERIC");

                entity.Property(e => e.AcUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_TEXT");

                entity.Property(e => e.AcUd11Bit).HasColumnName("AC_UD11_BIT");

                entity.Property(e => e.AcUd11Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD11_TEXT");

                entity.Property(e => e.AcUd12Bit).HasColumnName("AC_UD12_BIT");

                entity.Property(e => e.AcUd12Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD12_TEXT");

                entity.Property(e => e.AcUd13Bit).HasColumnName("AC_UD13_BIT");

                entity.Property(e => e.AcUd13Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD13_TEXT");

                entity.Property(e => e.AcUd14Bit).HasColumnName("AC_UD14_BIT");

                entity.Property(e => e.AcUd14Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD14_TEXT");

                entity.Property(e => e.AcUd15Bit).HasColumnName("AC_UD15_BIT");

                entity.Property(e => e.AcUd15Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD15_TEXT");

                entity.Property(e => e.AcUd16Bit).HasColumnName("AC_UD16_BIT");

                entity.Property(e => e.AcUd17Bit).HasColumnName("AC_UD17_BIT");

                entity.Property(e => e.AcUd18Bit).HasColumnName("AC_UD18_BIT");

                entity.Property(e => e.AcUd19Bit).HasColumnName("AC_UD19_BIT");

                entity.Property(e => e.AcUd1Bit).HasColumnName("AC_UD1_BIT");

                entity.Property(e => e.AcUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD1_DATE");

                entity.Property(e => e.AcUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_ID_NAME");

                entity.Property(e => e.AcUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd1Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD1_NUMERIC");

                entity.Property(e => e.AcUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_TEXT");

                entity.Property(e => e.AcUd20Bit).HasColumnName("AC_UD20_BIT");

                entity.Property(e => e.AcUd21Bit).HasColumnName("AC_UD21_BIT");

                entity.Property(e => e.AcUd22Bit).HasColumnName("AC_UD22_BIT");

                entity.Property(e => e.AcUd23Bit).HasColumnName("AC_UD23_BIT");

                entity.Property(e => e.AcUd24Bit).HasColumnName("AC_UD24_BIT");

                entity.Property(e => e.AcUd2Bit).HasColumnName("AC_UD2_BIT");

                entity.Property(e => e.AcUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD2_DATE");

                entity.Property(e => e.AcUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_ID_NAME");

                entity.Property(e => e.AcUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd2Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD2_NUMERIC");

                entity.Property(e => e.AcUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_TEXT");

                entity.Property(e => e.AcUd3Bit).HasColumnName("AC_UD3_BIT");

                entity.Property(e => e.AcUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD3_DATE");

                entity.Property(e => e.AcUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_ID_NAME");

                entity.Property(e => e.AcUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd3Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD3_NUMERIC");

                entity.Property(e => e.AcUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_TEXT");

                entity.Property(e => e.AcUd4Bit).HasColumnName("AC_UD4_BIT");

                entity.Property(e => e.AcUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD4_DATE");

                entity.Property(e => e.AcUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_ID_NAME");

                entity.Property(e => e.AcUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd4Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD4_NUMERIC");

                entity.Property(e => e.AcUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_TEXT");

                entity.Property(e => e.AcUd5Bit).HasColumnName("AC_UD5_BIT");

                entity.Property(e => e.AcUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD5_DATE");

                entity.Property(e => e.AcUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_ID_NAME");

                entity.Property(e => e.AcUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd5Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD5_NUMERIC");

                entity.Property(e => e.AcUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_TEXT");

                entity.Property(e => e.AcUd6Bit).HasColumnName("AC_UD6_BIT");

                entity.Property(e => e.AcUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD6_DATE");

                entity.Property(e => e.AcUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_ID_NAME");

                entity.Property(e => e.AcUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd6Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD6_NUMERIC");

                entity.Property(e => e.AcUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_TEXT");

                entity.Property(e => e.AcUd7Bit).HasColumnName("AC_UD7_BIT");

                entity.Property(e => e.AcUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD7_DATE");

                entity.Property(e => e.AcUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_ID_NAME");

                entity.Property(e => e.AcUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd7Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD7_NUMERIC");

                entity.Property(e => e.AcUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_TEXT");

                entity.Property(e => e.AcUd8Bit).HasColumnName("AC_UD8_BIT");

                entity.Property(e => e.AcUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD8_DATE");

                entity.Property(e => e.AcUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_ID_NAME");

                entity.Property(e => e.AcUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd8Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD8_NUMERIC");

                entity.Property(e => e.AcUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_TEXT");

                entity.Property(e => e.AcUd9Bit).HasColumnName("AC_UD9_BIT");

                entity.Property(e => e.AcUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD9_DATE");

                entity.Property(e => e.AcUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_ID_NAME");

                entity.Property(e => e.AcUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd9Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD9_NUMERIC");

                entity.Property(e => e.AcUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_TEXT");

                entity.Property(e => e.AccDeleted).HasColumnName("ACC_DELETED");

                entity.Property(e => e.AccExternal)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_EXTERNAL");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccImport).HasColumnName("ACC_IMPORT");

                entity.Property(e => e.AccPrefAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_ADDRESS_1");

                entity.Property(e => e.AccPrefAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_ADDRESS_2");

                entity.Property(e => e.AccPrefAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_ADDRESS_3");

                entity.Property(e => e.AccPrefCountry)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_COUNTRY");

                entity.Property(e => e.AccPrefCounty)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_COUNTY");

                entity.Property(e => e.AccPrefEmail)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_EMAIL");

                entity.Property(e => e.AccPrefPhone)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_PHONE");

                entity.Property(e => e.AccPrefPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_POSTCODE");

                entity.Property(e => e.AccPrefTown)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_TOWN");

                entity.Property(e => e.AccStatus).HasColumnName("ACC_STATUS");

                entity.Property(e => e.AccUd1)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD1");

                entity.Property(e => e.AccUd10)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD10");

                entity.Property(e => e.AccUd10Bit).HasColumnName("ACC_UD10_BIT");

                entity.Property(e => e.AccUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD10_DATE");

                entity.Property(e => e.AccUd10Id).HasColumnName("ACC_UD10_ID");

                entity.Property(e => e.AccUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD10_ID_NAME");

                entity.Property(e => e.AccUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD10_NUMERIC");

                entity.Property(e => e.AccUd11)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD11");

                entity.Property(e => e.AccUd11Bit).HasColumnName("ACC_UD11_BIT");

                entity.Property(e => e.AccUd12)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD12");

                entity.Property(e => e.AccUd12Bit).HasColumnName("ACC_UD12_BIT");

                entity.Property(e => e.AccUd13)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD13");

                entity.Property(e => e.AccUd13Bit).HasColumnName("ACC_UD13_BIT");

                entity.Property(e => e.AccUd14)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD14");

                entity.Property(e => e.AccUd14Bit).HasColumnName("ACC_UD14_BIT");

                entity.Property(e => e.AccUd15)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD15");

                entity.Property(e => e.AccUd15Bit).HasColumnName("ACC_UD15_BIT");

                entity.Property(e => e.AccUd16Bit).HasColumnName("ACC_UD16_BIT");

                entity.Property(e => e.AccUd17Bit).HasColumnName("ACC_UD17_BIT");

                entity.Property(e => e.AccUd18Bit).HasColumnName("ACC_UD18_BIT");

                entity.Property(e => e.AccUd19Bit).HasColumnName("ACC_UD19_BIT");

                entity.Property(e => e.AccUd1Bit).HasColumnName("ACC_UD1_BIT");

                entity.Property(e => e.AccUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD1_DATE");

                entity.Property(e => e.AccUd1Id).HasColumnName("ACC_UD1_ID");

                entity.Property(e => e.AccUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD1_ID_NAME");

                entity.Property(e => e.AccUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD1_NUMERIC");

                entity.Property(e => e.AccUd2)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD2");

                entity.Property(e => e.AccUd20Bit).HasColumnName("ACC_UD20_BIT");

                entity.Property(e => e.AccUd21Bit).HasColumnName("ACC_UD21_BIT");

                entity.Property(e => e.AccUd22Bit).HasColumnName("ACC_UD22_BIT");

                entity.Property(e => e.AccUd23Bit).HasColumnName("ACC_UD23_BIT");

                entity.Property(e => e.AccUd24Bit).HasColumnName("ACC_UD24_BIT");

                entity.Property(e => e.AccUd2Bit).HasColumnName("ACC_UD2_BIT");

                entity.Property(e => e.AccUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD2_DATE");

                entity.Property(e => e.AccUd2Id).HasColumnName("ACC_UD2_ID");

                entity.Property(e => e.AccUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD2_ID_NAME");

                entity.Property(e => e.AccUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD2_NUMERIC");

                entity.Property(e => e.AccUd3)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD3");

                entity.Property(e => e.AccUd3Bit).HasColumnName("ACC_UD3_BIT");

                entity.Property(e => e.AccUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD3_DATE");

                entity.Property(e => e.AccUd3Id).HasColumnName("ACC_UD3_ID");

                entity.Property(e => e.AccUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD3_ID_NAME");

                entity.Property(e => e.AccUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD3_NUMERIC");

                entity.Property(e => e.AccUd4)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD4");

                entity.Property(e => e.AccUd4Bit).HasColumnName("ACC_UD4_BIT");

                entity.Property(e => e.AccUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD4_DATE");

                entity.Property(e => e.AccUd4Id).HasColumnName("ACC_UD4_ID");

                entity.Property(e => e.AccUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD4_ID_NAME");

                entity.Property(e => e.AccUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD4_NUMERIC");

                entity.Property(e => e.AccUd5)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD5");

                entity.Property(e => e.AccUd5Bit).HasColumnName("ACC_UD5_BIT");

                entity.Property(e => e.AccUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD5_DATE");

                entity.Property(e => e.AccUd5Id).HasColumnName("ACC_UD5_ID");

                entity.Property(e => e.AccUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD5_ID_NAME");

                entity.Property(e => e.AccUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD5_NUMERIC");

                entity.Property(e => e.AccUd6)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD6");

                entity.Property(e => e.AccUd6Bit).HasColumnName("ACC_UD6_BIT");

                entity.Property(e => e.AccUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD6_DATE");

                entity.Property(e => e.AccUd6Id).HasColumnName("ACC_UD6_ID");

                entity.Property(e => e.AccUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD6_ID_NAME");

                entity.Property(e => e.AccUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD6_NUMERIC");

                entity.Property(e => e.AccUd7)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD7");

                entity.Property(e => e.AccUd7Bit).HasColumnName("ACC_UD7_BIT");

                entity.Property(e => e.AccUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD7_DATE");

                entity.Property(e => e.AccUd7Id).HasColumnName("ACC_UD7_ID");

                entity.Property(e => e.AccUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD7_ID_NAME");

                entity.Property(e => e.AccUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD7_NUMERIC");

                entity.Property(e => e.AccUd8)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD8");

                entity.Property(e => e.AccUd8Bit).HasColumnName("ACC_UD8_BIT");

                entity.Property(e => e.AccUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD8_DATE");

                entity.Property(e => e.AccUd8Id).HasColumnName("ACC_UD8_ID");

                entity.Property(e => e.AccUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD8_ID_NAME");

                entity.Property(e => e.AccUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD8_NUMERIC");

                entity.Property(e => e.AccUd9)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD9");

                entity.Property(e => e.AccUd9Bit).HasColumnName("ACC_UD9_BIT");

                entity.Property(e => e.AccUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD9_DATE");

                entity.Property(e => e.AccUd9Id).HasColumnName("ACC_UD9_ID");

                entity.Property(e => e.AccUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD9_ID_NAME");

                entity.Property(e => e.AccUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD9_NUMERIC");

                entity.Property(e => e.Account).HasMaxLength(255);

                entity.Property(e => e.AccountName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_NAME");

                entity.Property(e => e.AcgId).HasColumnName("ACG_ID");

                entity.Property(e => e.Anniversary).HasMaxLength(255);

                entity.Property(e => e.AssistantTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Assistantname).HasMaxLength(255);

                entity.Property(e => e.BillingInformation).HasMaxLength(255);

                entity.Property(e => e.Birthday).HasMaxLength(255);

                entity.Property(e => e.Business2TelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.BusinessAddress).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressCity).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressCountry).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressState).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.BusinessFaxNumber).HasMaxLength(255);

                entity.Property(e => e.BusinessFaxNumberFormatted).HasMaxLength(267);

                entity.Property(e => e.BusinessHomePage).HasMaxLength(255);

                entity.Property(e => e.BusinessTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.CallbackTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.CarTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Categories).HasMaxLength(500);

                entity.Property(e => e.Children).HasMaxLength(255);

                entity.Property(e => e.Companies).HasMaxLength(255);

                entity.Property(e => e.CompanyAndFullName).HasMaxLength(255);

                entity.Property(e => e.CompanyLastFirstNoSpace).HasMaxLength(255);

                entity.Property(e => e.CompanyLastFirstSpaceOnly).HasMaxLength(255);

                entity.Property(e => e.CompanyMainTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.CompanyName).HasMaxLength(255);

                entity.Property(e => e.ComputerNetworkName).HasMaxLength(255);

                entity.Property(e => e.ConnectOptIn).HasColumnName("CONNECT_OPT_IN");

                entity.Property(e => e.ConnectOptInDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CONNECT_OPT_IN_DATE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CreationTime).HasMaxLength(255);

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Department).HasMaxLength(255);

                entity.Property(e => e.Email1Address).HasMaxLength(255);

                entity.Property(e => e.Email1AddressType).HasMaxLength(255);

                entity.Property(e => e.Email1DisplayName).HasMaxLength(255);

                entity.Property(e => e.Email1EntryId)
                    .HasMaxLength(255)
                    .HasColumnName("Email1EntryID");

                entity.Property(e => e.Email2Address).HasMaxLength(255);

                entity.Property(e => e.Email2AddressType).HasMaxLength(255);

                entity.Property(e => e.Email2DisplayName).HasMaxLength(255);

                entity.Property(e => e.Email2EntryId)
                    .HasMaxLength(255)
                    .HasColumnName("Email2EntryID");

                entity.Property(e => e.Email3Address).HasMaxLength(255);

                entity.Property(e => e.Email3AddressType).HasMaxLength(255);

                entity.Property(e => e.Email3DisplayName).HasMaxLength(255);

                entity.Property(e => e.Email3EntryId)
                    .HasMaxLength(255)
                    .HasColumnName("Email3EntryID");

                entity.Property(e => e.Exported).HasColumnName("EXPORTED");

                entity.Property(e => e.FacebookImage)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_IMAGE");

                entity.Property(e => e.FacebookName)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_NAME");

                entity.Property(e => e.FacebookPrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_PRIVATE_ID");

                entity.Property(e => e.FacebookProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_PROFILE_URL");

                entity.Property(e => e.FacebookPublicId)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_PUBLIC_ID");

                entity.Property(e => e.FirstName).HasMaxLength(255);

                entity.Property(e => e.Ftpsite)
                    .HasMaxLength(255)
                    .HasColumnName("FTPSite");

                entity.Property(e => e.FullName).HasMaxLength(255);

                entity.Property(e => e.FullNameAndCompany).HasMaxLength(255);

                entity.Property(e => e.GplusImage)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_IMAGE");

                entity.Property(e => e.GplusName)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_NAME");

                entity.Property(e => e.GplusPrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_PRIVATE_ID");

                entity.Property(e => e.GplusProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_PROFILE_URL");

                entity.Property(e => e.GplusPublicId)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_PUBLIC_ID");

                entity.Property(e => e.Hobby).HasMaxLength(255);

                entity.Property(e => e.Home2TelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.HomeAddress).HasMaxLength(255);

                entity.Property(e => e.HomeAddressCity).HasMaxLength(255);

                entity.Property(e => e.HomeAddressCountry).HasMaxLength(255);

                entity.Property(e => e.HomeAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.HomeAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.HomeAddressState).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.HomeFaxNumber).HasMaxLength(255);

                entity.Property(e => e.HomeFaxNumberFormatted).HasMaxLength(267);

                entity.Property(e => e.HomeTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.ImSummary)
                    .HasMaxLength(255)
                    .HasColumnName("IM_SUMMARY");

                entity.Property(e => e.Initials).HasMaxLength(255);

                entity.Property(e => e.InternetFreeBusyAddress).HasMaxLength(255);

                entity.Property(e => e.Isdnnumber)
                    .HasMaxLength(255)
                    .HasColumnName("ISDNNumber");

                entity.Property(e => e.JobTitle).HasMaxLength(255);

                entity.Property(e => e.LastFirstAndSuffix).HasMaxLength(255);

                entity.Property(e => e.LastFirstNoSpaceCompany).HasMaxLength(255);

                entity.Property(e => e.LastFirstSpaceOnly).HasMaxLength(255);

                entity.Property(e => e.LastFirstSpaceOnlyCompany).HasMaxLength(255);

                entity.Property(e => e.LastModificationTime).HasMaxLength(255);

                entity.Property(e => e.LastName).HasMaxLength(255);

                entity.Property(e => e.LastNameAndFirstName).HasMaxLength(255);

                entity.Property(e => e.LinkedinImage)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_IMAGE");

                entity.Property(e => e.LinkedinName)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_NAME");

                entity.Property(e => e.LinkedinPrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_PRIVATE_ID");

                entity.Property(e => e.LinkedinProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_PROFILE_URL");

                entity.Property(e => e.LinkedinPublicId)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_PUBLIC_ID");

                entity.Property(e => e.MailingAddress).HasMaxLength(255);

                entity.Property(e => e.MailingAddressCity).HasMaxLength(255);

                entity.Property(e => e.MailingAddressCountry).HasMaxLength(255);

                entity.Property(e => e.MailingAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.MailingAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.MailingAddressState).HasMaxLength(255);

                entity.Property(e => e.MailingAddressStreet).HasMaxLength(255);

                entity.Property(e => e.MailingAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.MailingAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.ManagerName).HasMaxLength(255);

                entity.Property(e => e.MiddleName).HasMaxLength(255);

                entity.Property(e => e.Mileage).HasMaxLength(255);

                entity.Property(e => e.MobileTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.NetMeetingAlias).HasMaxLength(255);

                entity.Property(e => e.NetMeetingServer).HasMaxLength(255);

                entity.Property(e => e.NickName).HasMaxLength(255);

                entity.Property(e => e.OfficeLocation).HasMaxLength(255);

                entity.Property(e => e.OtherAddress).HasMaxLength(255);

                entity.Property(e => e.OtherAddressCity).HasMaxLength(255);

                entity.Property(e => e.OtherAddressCountry).HasMaxLength(255);

                entity.Property(e => e.OtherAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.OtherAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.OtherAddressState).HasMaxLength(255);

                entity.Property(e => e.OtherAddressStreet).HasMaxLength(255);

                entity.Property(e => e.OtherAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.OtherAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.OtherFaxNumber).HasMaxLength(255);

                entity.Property(e => e.OtherTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.PersonalHomePage).HasMaxLength(255);

                entity.Property(e => e.PrefAddress).HasColumnName("PREF_ADDRESS");

                entity.Property(e => e.PrefEmail).HasColumnName("PREF_EMAIL");

                entity.Property(e => e.PrefPhone).HasColumnName("PREF_PHONE");

                entity.Property(e => e.PreferredContact).HasColumnName("PREFERRED_CONTACT");

                entity.Property(e => e.PreferredContactEmail).HasColumnName("PREFERRED_CONTACT_EMAIL");

                entity.Property(e => e.PreferredContactFax).HasColumnName("PREFERRED_CONTACT_FAX");

                entity.Property(e => e.PreferredContactLetter).HasColumnName("PREFERRED_CONTACT_LETTER");

                entity.Property(e => e.PreferredContactPhone).HasColumnName("PREFERRED_CONTACT_PHONE");

                entity.Property(e => e.PrimaryContact).HasColumnName("PRIMARY_CONTACT");

                entity.Property(e => e.PrimaryTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.PrivacyNotified).HasColumnName("PRIVACY_NOTIFIED");

                entity.Property(e => e.PrivacyNotifiedBy)
                    .HasMaxLength(255)
                    .HasColumnName("PRIVACY_NOTIFIED_BY");

                entity.Property(e => e.PrivacyNotifiedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRIVACY_NOTIFIED_DATE");

                entity.Property(e => e.PrivacyNotifiedMethod)
                    .HasMaxLength(255)
                    .HasColumnName("PRIVACY_NOTIFIED_METHOD");

                entity.Property(e => e.Profession).HasMaxLength(255);

                entity.Property(e => e.RadioTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.ReferredBy).HasMaxLength(255);

                entity.Property(e => e.Relationship)
                    .HasMaxLength(255)
                    .HasColumnName("RELATIONSHIP");

                entity.Property(e => e.RemovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("REMOVAL_DATE");

                entity.Property(e => e.Salutation)
                    .HasMaxLength(255)
                    .HasColumnName("SALUTATION");

                entity.Property(e => e.SelectedMailingAddress).HasMaxLength(255);

                entity.Property(e => e.Sensitivity).HasMaxLength(255);

                entity.Property(e => e.Spouse).HasMaxLength(255);

                entity.Property(e => e.State)
                    .HasMaxLength(10)
                    .HasColumnName("STATE");

                entity.Property(e => e.Status)
                    .HasMaxLength(255)
                    .HasColumnName("STATUS");

                entity.Property(e => e.Subject).HasMaxLength(255);

                entity.Property(e => e.Suffix).HasMaxLength(255);

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TelexNumber).HasMaxLength(255);

                entity.Property(e => e.Title).HasMaxLength(255);

                entity.Property(e => e.TtytddtelephoneNumber)
                    .HasMaxLength(255)
                    .HasColumnName("TTYTDDTelephoneNumber");

                entity.Property(e => e.Twitter1Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_IMAGE");

                entity.Property(e => e.Twitter1Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_NAME");

                entity.Property(e => e.Twitter1PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_PRIVATE_ID");

                entity.Property(e => e.Twitter1ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_PROFILE_URL");

                entity.Property(e => e.Twitter1PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_PUBLIC_ID");

                entity.Property(e => e.Twitter2Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_IMAGE");

                entity.Property(e => e.Twitter2Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_NAME");

                entity.Property(e => e.Twitter2PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_PRIVATE_ID");

                entity.Property(e => e.Twitter2ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_PROFILE_URL");

                entity.Property(e => e.Twitter2PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_PUBLIC_ID");

                entity.Property(e => e.Twitter3Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_IMAGE");

                entity.Property(e => e.Twitter3Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_NAME");

                entity.Property(e => e.Twitter3PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_PRIVATE_ID");

                entity.Property(e => e.Twitter3ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_PROFILE_URL");

                entity.Property(e => e.Twitter3PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_PUBLIC_ID");

                entity.Property(e => e.Twitter4Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_IMAGE");

                entity.Property(e => e.Twitter4Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_NAME");

                entity.Property(e => e.Twitter4PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_PRIVATE_ID");

                entity.Property(e => e.Twitter4ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_PROFILE_URL");

                entity.Property(e => e.Twitter4PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_PUBLIC_ID");

                entity.Property(e => e.Twitter5Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_IMAGE");

                entity.Property(e => e.Twitter5Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_NAME");

                entity.Property(e => e.Twitter5PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_PRIVATE_ID");

                entity.Property(e => e.Twitter5ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_PROFILE_URL");

                entity.Property(e => e.Twitter5PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_PUBLIC_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");

                entity.Property(e => e.UsIdSupport).HasColumnName("US_ID_SUPPORT");

                entity.Property(e => e.UsName)
                    .HasMaxLength(255)
                    .HasColumnName("US_NAME");

                entity.Property(e => e.UsgName)
                    .HasMaxLength(255)
                    .HasColumnName("USG_NAME");

                entity.Property(e => e.WebPage).HasMaxLength(255);

                entity.Property(e => e.YomiCompanyName).HasMaxLength(255);

                entity.Property(e => e.YomiFirstName).HasMaxLength(255);

                entity.Property(e => e.YomiLastName).HasMaxLength(255);
            });

            modelBuilder.Entity<VContactsSeminarBooking>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vContactsSeminarBookings");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.AccBusinesstelephonenumber)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BUSINESSTELEPHONENUMBER");

                entity.Property(e => e.AccEmail1address)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_EMAIL1ADDRESS");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_NAME");

                entity.Property(e => e.Attendees).HasColumnName("ATTENDEES");

                entity.Property(e => e.BookedSessions).HasColumnName("BOOKED_SESSIONS");

                entity.Property(e => e.Booking)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("BOOKING");

                entity.Property(e => e.BookingDate)
                    .HasColumnType("datetime")
                    .HasColumnName("BOOKING_DATE");

                entity.Property(e => e.Confirmed).HasColumnName("CONFIRMED");

                entity.Property(e => e.CostBooking)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_BOOKING");

                entity.Property(e => e.CostItems)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_ITEMS");

                entity.Property(e => e.CostSub)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_SUB");

                entity.Property(e => e.CostTotal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_TOTAL");

                entity.Property(e => e.CostUpdatedSub)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_UPDATED_SUB");

                entity.Property(e => e.CostVat)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_VAT");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.DiscountAccount).HasColumnName("DISCOUNT_ACCOUNT");

                entity.Property(e => e.DiscountItems).HasColumnName("DISCOUNT_ITEMS");

                entity.Property(e => e.ExternalEventbriteId)
                    .HasMaxLength(255)
                    .HasColumnName("EXTERNAL_EVENTBRITE_ID");

                entity.Property(e => e.NumberOfItems).HasColumnName("NUMBER_OF_ITEMS");

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.SemName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_NAME");

                entity.Property(e => e.SembId).HasColumnName("SEMB_ID");

                entity.Property(e => e.SembaId).HasColumnName("SEMBA_ID");

                entity.Property(e => e.SembaNumber).HasColumnName("SEMBA_NUMBER");

                entity.Property(e => e.SembaOrder)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_ORDER");

                entity.Property(e => e.SembaUd10Bit).HasColumnName("SEMBA_UD10_BIT");

                entity.Property(e => e.SembaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD10_DATE");

                entity.Property(e => e.SembaUd10Id).HasColumnName("SEMBA_UD10_ID");

                entity.Property(e => e.SembaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD10_NUMERIC");

                entity.Property(e => e.SembaUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD10_TEXT");

                entity.Property(e => e.SembaUd11Bit).HasColumnName("SEMBA_UD11_BIT");

                entity.Property(e => e.SembaUd12Bit).HasColumnName("SEMBA_UD12_BIT");

                entity.Property(e => e.SembaUd13Bit).HasColumnName("SEMBA_UD13_BIT");

                entity.Property(e => e.SembaUd14Bit).HasColumnName("SEMBA_UD14_BIT");

                entity.Property(e => e.SembaUd15Bit).HasColumnName("SEMBA_UD15_BIT");

                entity.Property(e => e.SembaUd16Bit).HasColumnName("SEMBA_UD16_BIT");

                entity.Property(e => e.SembaUd17Bit).HasColumnName("SEMBA_UD17_BIT");

                entity.Property(e => e.SembaUd18Bit).HasColumnName("SEMBA_UD18_BIT");

                entity.Property(e => e.SembaUd19Bit).HasColumnName("SEMBA_UD19_BIT");

                entity.Property(e => e.SembaUd1Bit).HasColumnName("SEMBA_UD1_BIT");

                entity.Property(e => e.SembaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD1_DATE");

                entity.Property(e => e.SembaUd1Id).HasColumnName("SEMBA_UD1_ID");

                entity.Property(e => e.SembaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD1_NUMERIC");

                entity.Property(e => e.SembaUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD1_TEXT");

                entity.Property(e => e.SembaUd20Bit).HasColumnName("SEMBA_UD20_BIT");

                entity.Property(e => e.SembaUd21Bit).HasColumnName("SEMBA_UD21_BIT");

                entity.Property(e => e.SembaUd22Bit).HasColumnName("SEMBA_UD22_BIT");

                entity.Property(e => e.SembaUd23Bit).HasColumnName("SEMBA_UD23_BIT");

                entity.Property(e => e.SembaUd24Bit).HasColumnName("SEMBA_UD24_BIT");

                entity.Property(e => e.SembaUd2Bit).HasColumnName("SEMBA_UD2_BIT");

                entity.Property(e => e.SembaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD2_DATE");

                entity.Property(e => e.SembaUd2Id).HasColumnName("SEMBA_UD2_ID");

                entity.Property(e => e.SembaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD2_NUMERIC");

                entity.Property(e => e.SembaUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD2_TEXT");

                entity.Property(e => e.SembaUd3Bit).HasColumnName("SEMBA_UD3_BIT");

                entity.Property(e => e.SembaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD3_DATE");

                entity.Property(e => e.SembaUd3Id).HasColumnName("SEMBA_UD3_ID");

                entity.Property(e => e.SembaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD3_NUMERIC");

                entity.Property(e => e.SembaUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD3_TEXT");

                entity.Property(e => e.SembaUd4Bit).HasColumnName("SEMBA_UD4_BIT");

                entity.Property(e => e.SembaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD4_DATE");

                entity.Property(e => e.SembaUd4Id).HasColumnName("SEMBA_UD4_ID");

                entity.Property(e => e.SembaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD4_NUMERIC");

                entity.Property(e => e.SembaUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD4_TEXT");

                entity.Property(e => e.SembaUd5Bit).HasColumnName("SEMBA_UD5_BIT");

                entity.Property(e => e.SembaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD5_DATE");

                entity.Property(e => e.SembaUd5Id).HasColumnName("SEMBA_UD5_ID");

                entity.Property(e => e.SembaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD5_NUMERIC");

                entity.Property(e => e.SembaUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD5_TEXT");

                entity.Property(e => e.SembaUd6Bit).HasColumnName("SEMBA_UD6_BIT");

                entity.Property(e => e.SembaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD6_DATE");

                entity.Property(e => e.SembaUd6Id).HasColumnName("SEMBA_UD6_ID");

                entity.Property(e => e.SembaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD6_NUMERIC");

                entity.Property(e => e.SembaUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD6_TEXT");

                entity.Property(e => e.SembaUd7Bit).HasColumnName("SEMBA_UD7_BIT");

                entity.Property(e => e.SembaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD7_DATE");

                entity.Property(e => e.SembaUd7Id).HasColumnName("SEMBA_UD7_ID");

                entity.Property(e => e.SembaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD7_NUMERIC");

                entity.Property(e => e.SembaUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD7_TEXT");

                entity.Property(e => e.SembaUd8Bit).HasColumnName("SEMBA_UD8_BIT");

                entity.Property(e => e.SembaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD8_DATE");

                entity.Property(e => e.SembaUd8Id).HasColumnName("SEMBA_UD8_ID");

                entity.Property(e => e.SembaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD8_NUMERIC");

                entity.Property(e => e.SembaUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD8_TEXT");

                entity.Property(e => e.SembaUd9Bit).HasColumnName("SEMBA_UD9_BIT");

                entity.Property(e => e.SembaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD9_DATE");

                entity.Property(e => e.SembaUd9Id).HasColumnName("SEMBA_UD9_ID");

                entity.Property(e => e.SembaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD9_NUMERIC");

                entity.Property(e => e.SembaUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD9_TEXT");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.Value)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("VALUE");
            });

            modelBuilder.Entity<VContactsSmall>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vContactsSmall");

                entity.Property(e => e.AcBillingCounty)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_COUNTY");

                entity.Property(e => e.AcBillingPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_POSTCODE");

                entity.Property(e => e.AcBillingTown)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_TOWN");

                entity.Property(e => e.AcCounty)
                    .HasMaxLength(255)
                    .HasColumnName("AC_COUNTY");

                entity.Property(e => e.AcGroup)
                    .HasMaxLength(255)
                    .HasColumnName("AC_GROUP");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcIndustry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_INDUSTRY");

                entity.Property(e => e.AcIndustryHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_INDUSTRY_HLIGHT");

                entity.Property(e => e.AcLabel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LABEL");

                entity.Property(e => e.AcLabelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LABEL_HLIGHT");

                entity.Property(e => e.AcLevel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LEVEL");

                entity.Property(e => e.AcLevelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LEVEL_HLIGHT");

                entity.Property(e => e.AcManager)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER");

                entity.Property(e => e.AcManagerEmail)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_EMAIL");

                entity.Property(e => e.AcManagerSupport)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_SUPPORT");

                entity.Property(e => e.AcManagerSupportEmail)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_SUPPORT_EMAIL");

                entity.Property(e => e.AcPhone1)
                    .HasMaxLength(50)
                    .HasColumnName("AC_PHONE_1");

                entity.Property(e => e.AcPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("AC_POSTCODE");

                entity.Property(e => e.AcReference)
                    .HasMaxLength(50)
                    .HasColumnName("AC_REFERENCE");

                entity.Property(e => e.AcSource)
                    .HasMaxLength(255)
                    .HasColumnName("AC_SOURCE");

                entity.Property(e => e.AcSourceHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_SOURCE_HLIGHT");

                entity.Property(e => e.AcTown)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TOWN");

                entity.Property(e => e.AcType)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE");

                entity.Property(e => e.AcType2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_2");

                entity.Property(e => e.AcType2Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_2_HLIGHT");

                entity.Property(e => e.AcTypeHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_HLIGHT");

                entity.Property(e => e.AcUd10Bit).HasColumnName("AC_UD10_BIT");

                entity.Property(e => e.AcUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD10_DATE");

                entity.Property(e => e.AcUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_ID_NAME");

                entity.Property(e => e.AcUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd10Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD10_NUMERIC");

                entity.Property(e => e.AcUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_TEXT");

                entity.Property(e => e.AcUd11Bit).HasColumnName("AC_UD11_BIT");

                entity.Property(e => e.AcUd11Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD11_TEXT");

                entity.Property(e => e.AcUd12Bit).HasColumnName("AC_UD12_BIT");

                entity.Property(e => e.AcUd12Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD12_TEXT");

                entity.Property(e => e.AcUd13Bit).HasColumnName("AC_UD13_BIT");

                entity.Property(e => e.AcUd13Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD13_TEXT");

                entity.Property(e => e.AcUd14Bit).HasColumnName("AC_UD14_BIT");

                entity.Property(e => e.AcUd14Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD14_TEXT");

                entity.Property(e => e.AcUd15Bit).HasColumnName("AC_UD15_BIT");

                entity.Property(e => e.AcUd15Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD15_TEXT");

                entity.Property(e => e.AcUd16Bit).HasColumnName("AC_UD16_BIT");

                entity.Property(e => e.AcUd17Bit).HasColumnName("AC_UD17_BIT");

                entity.Property(e => e.AcUd18Bit).HasColumnName("AC_UD18_BIT");

                entity.Property(e => e.AcUd19Bit).HasColumnName("AC_UD19_BIT");

                entity.Property(e => e.AcUd1Bit).HasColumnName("AC_UD1_BIT");

                entity.Property(e => e.AcUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD1_DATE");

                entity.Property(e => e.AcUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_ID_NAME");

                entity.Property(e => e.AcUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd1Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD1_NUMERIC");

                entity.Property(e => e.AcUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_TEXT");

                entity.Property(e => e.AcUd20Bit).HasColumnName("AC_UD20_BIT");

                entity.Property(e => e.AcUd21Bit).HasColumnName("AC_UD21_BIT");

                entity.Property(e => e.AcUd22Bit).HasColumnName("AC_UD22_BIT");

                entity.Property(e => e.AcUd23Bit).HasColumnName("AC_UD23_BIT");

                entity.Property(e => e.AcUd24Bit).HasColumnName("AC_UD24_BIT");

                entity.Property(e => e.AcUd2Bit).HasColumnName("AC_UD2_BIT");

                entity.Property(e => e.AcUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD2_DATE");

                entity.Property(e => e.AcUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_ID_NAME");

                entity.Property(e => e.AcUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd2Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD2_NUMERIC");

                entity.Property(e => e.AcUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_TEXT");

                entity.Property(e => e.AcUd3Bit).HasColumnName("AC_UD3_BIT");

                entity.Property(e => e.AcUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD3_DATE");

                entity.Property(e => e.AcUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_ID_NAME");

                entity.Property(e => e.AcUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd3Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD3_NUMERIC");

                entity.Property(e => e.AcUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_TEXT");

                entity.Property(e => e.AcUd4Bit).HasColumnName("AC_UD4_BIT");

                entity.Property(e => e.AcUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD4_DATE");

                entity.Property(e => e.AcUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_ID_NAME");

                entity.Property(e => e.AcUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd4Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD4_NUMERIC");

                entity.Property(e => e.AcUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_TEXT");

                entity.Property(e => e.AcUd5Bit).HasColumnName("AC_UD5_BIT");

                entity.Property(e => e.AcUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD5_DATE");

                entity.Property(e => e.AcUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_ID_NAME");

                entity.Property(e => e.AcUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd5Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD5_NUMERIC");

                entity.Property(e => e.AcUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_TEXT");

                entity.Property(e => e.AcUd6Bit).HasColumnName("AC_UD6_BIT");

                entity.Property(e => e.AcUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD6_DATE");

                entity.Property(e => e.AcUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_ID_NAME");

                entity.Property(e => e.AcUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd6Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD6_NUMERIC");

                entity.Property(e => e.AcUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_TEXT");

                entity.Property(e => e.AcUd7Bit).HasColumnName("AC_UD7_BIT");

                entity.Property(e => e.AcUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD7_DATE");

                entity.Property(e => e.AcUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_ID_NAME");

                entity.Property(e => e.AcUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd7Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD7_NUMERIC");

                entity.Property(e => e.AcUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_TEXT");

                entity.Property(e => e.AcUd8Bit).HasColumnName("AC_UD8_BIT");

                entity.Property(e => e.AcUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD8_DATE");

                entity.Property(e => e.AcUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_ID_NAME");

                entity.Property(e => e.AcUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd8Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD8_NUMERIC");

                entity.Property(e => e.AcUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_TEXT");

                entity.Property(e => e.AcUd9Bit).HasColumnName("AC_UD9_BIT");

                entity.Property(e => e.AcUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD9_DATE");

                entity.Property(e => e.AcUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_ID_NAME");

                entity.Property(e => e.AcUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd9Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD9_NUMERIC");

                entity.Property(e => e.AcUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_TEXT");

                entity.Property(e => e.AccDeleted).HasColumnName("ACC_DELETED");

                entity.Property(e => e.AccExternal)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_EXTERNAL");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccImport).HasColumnName("ACC_IMPORT");

                entity.Property(e => e.AccPrefEmail)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_EMAIL");

                entity.Property(e => e.AccPrefPhone)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_PHONE");

                entity.Property(e => e.AccUd1)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD1");

                entity.Property(e => e.AccUd10)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD10");

                entity.Property(e => e.AccUd10Bit).HasColumnName("ACC_UD10_BIT");

                entity.Property(e => e.AccUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD10_DATE");

                entity.Property(e => e.AccUd10Id).HasColumnName("ACC_UD10_ID");

                entity.Property(e => e.AccUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD10_NUMERIC");

                entity.Property(e => e.AccUd11)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD11");

                entity.Property(e => e.AccUd11Bit).HasColumnName("ACC_UD11_BIT");

                entity.Property(e => e.AccUd12)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD12");

                entity.Property(e => e.AccUd12Bit).HasColumnName("ACC_UD12_BIT");

                entity.Property(e => e.AccUd13)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD13");

                entity.Property(e => e.AccUd13Bit).HasColumnName("ACC_UD13_BIT");

                entity.Property(e => e.AccUd14)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD14");

                entity.Property(e => e.AccUd14Bit).HasColumnName("ACC_UD14_BIT");

                entity.Property(e => e.AccUd15)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD15");

                entity.Property(e => e.AccUd15Bit).HasColumnName("ACC_UD15_BIT");

                entity.Property(e => e.AccUd16Bit).HasColumnName("ACC_UD16_BIT");

                entity.Property(e => e.AccUd17Bit).HasColumnName("ACC_UD17_BIT");

                entity.Property(e => e.AccUd18Bit).HasColumnName("ACC_UD18_BIT");

                entity.Property(e => e.AccUd19Bit).HasColumnName("ACC_UD19_BIT");

                entity.Property(e => e.AccUd1Bit).HasColumnName("ACC_UD1_BIT");

                entity.Property(e => e.AccUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD1_DATE");

                entity.Property(e => e.AccUd1Id).HasColumnName("ACC_UD1_ID");

                entity.Property(e => e.AccUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD1_NUMERIC");

                entity.Property(e => e.AccUd2)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD2");

                entity.Property(e => e.AccUd20Bit).HasColumnName("ACC_UD20_BIT");

                entity.Property(e => e.AccUd21Bit).HasColumnName("ACC_UD21_BIT");

                entity.Property(e => e.AccUd22Bit).HasColumnName("ACC_UD22_BIT");

                entity.Property(e => e.AccUd23Bit).HasColumnName("ACC_UD23_BIT");

                entity.Property(e => e.AccUd24Bit).HasColumnName("ACC_UD24_BIT");

                entity.Property(e => e.AccUd2Bit).HasColumnName("ACC_UD2_BIT");

                entity.Property(e => e.AccUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD2_DATE");

                entity.Property(e => e.AccUd2Id).HasColumnName("ACC_UD2_ID");

                entity.Property(e => e.AccUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD2_NUMERIC");

                entity.Property(e => e.AccUd3)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD3");

                entity.Property(e => e.AccUd3Bit).HasColumnName("ACC_UD3_BIT");

                entity.Property(e => e.AccUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD3_DATE");

                entity.Property(e => e.AccUd3Id).HasColumnName("ACC_UD3_ID");

                entity.Property(e => e.AccUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD3_NUMERIC");

                entity.Property(e => e.AccUd4)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD4");

                entity.Property(e => e.AccUd4Bit).HasColumnName("ACC_UD4_BIT");

                entity.Property(e => e.AccUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD4_DATE");

                entity.Property(e => e.AccUd4Id).HasColumnName("ACC_UD4_ID");

                entity.Property(e => e.AccUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD4_NUMERIC");

                entity.Property(e => e.AccUd5)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD5");

                entity.Property(e => e.AccUd5Bit).HasColumnName("ACC_UD5_BIT");

                entity.Property(e => e.AccUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD5_DATE");

                entity.Property(e => e.AccUd5Id).HasColumnName("ACC_UD5_ID");

                entity.Property(e => e.AccUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD5_NUMERIC");

                entity.Property(e => e.AccUd6)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD6");

                entity.Property(e => e.AccUd6Bit).HasColumnName("ACC_UD6_BIT");

                entity.Property(e => e.AccUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD6_DATE");

                entity.Property(e => e.AccUd6Id).HasColumnName("ACC_UD6_ID");

                entity.Property(e => e.AccUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD6_NUMERIC");

                entity.Property(e => e.AccUd7)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD7");

                entity.Property(e => e.AccUd7Bit).HasColumnName("ACC_UD7_BIT");

                entity.Property(e => e.AccUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD7_DATE");

                entity.Property(e => e.AccUd7Id).HasColumnName("ACC_UD7_ID");

                entity.Property(e => e.AccUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD7_NUMERIC");

                entity.Property(e => e.AccUd8)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD8");

                entity.Property(e => e.AccUd8Bit).HasColumnName("ACC_UD8_BIT");

                entity.Property(e => e.AccUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD8_DATE");

                entity.Property(e => e.AccUd8Id).HasColumnName("ACC_UD8_ID");

                entity.Property(e => e.AccUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD8_NUMERIC");

                entity.Property(e => e.AccUd9)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD9");

                entity.Property(e => e.AccUd9Bit).HasColumnName("ACC_UD9_BIT");

                entity.Property(e => e.AccUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD9_DATE");

                entity.Property(e => e.AccUd9Id).HasColumnName("ACC_UD9_ID");

                entity.Property(e => e.AccUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD9_NUMERIC");

                entity.Property(e => e.Account).HasMaxLength(255);

                entity.Property(e => e.AccountName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_NAME");

                entity.Property(e => e.AcgId).HasColumnName("ACG_ID");

                entity.Property(e => e.Anniversary).HasMaxLength(255);

                entity.Property(e => e.AssistantTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Assistantname).HasMaxLength(255);

                entity.Property(e => e.BillingInformation).HasMaxLength(255);

                entity.Property(e => e.Birthday).HasMaxLength(255);

                entity.Property(e => e.Business2TelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.BusinessAddress).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressCity).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressCountry).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressState).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.BusinessFaxNumber).HasMaxLength(255);

                entity.Property(e => e.BusinessFaxNumberFormatted).HasMaxLength(267);

                entity.Property(e => e.BusinessHomePage).HasMaxLength(255);

                entity.Property(e => e.BusinessTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.CallbackTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.CarTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Categories).HasMaxLength(500);

                entity.Property(e => e.Children).HasMaxLength(255);

                entity.Property(e => e.Companies).HasMaxLength(255);

                entity.Property(e => e.CompanyAndFullName).HasMaxLength(255);

                entity.Property(e => e.CompanyLastFirstNoSpace).HasMaxLength(255);

                entity.Property(e => e.CompanyLastFirstSpaceOnly).HasMaxLength(255);

                entity.Property(e => e.CompanyMainTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.CompanyName).HasMaxLength(255);

                entity.Property(e => e.ComputerNetworkName).HasMaxLength(255);

                entity.Property(e => e.ConnectOptIn)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("CONNECT_OPT_IN");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CreationTime).HasMaxLength(255);

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Department).HasMaxLength(255);

                entity.Property(e => e.Email1Address).HasMaxLength(255);

                entity.Property(e => e.Email1AddressType).HasMaxLength(255);

                entity.Property(e => e.Email1DisplayName).HasMaxLength(255);

                entity.Property(e => e.Email1EntryId)
                    .HasMaxLength(255)
                    .HasColumnName("Email1EntryID");

                entity.Property(e => e.Email2Address).HasMaxLength(255);

                entity.Property(e => e.Email2AddressType).HasMaxLength(255);

                entity.Property(e => e.Email2DisplayName).HasMaxLength(255);

                entity.Property(e => e.Email2EntryId)
                    .HasMaxLength(255)
                    .HasColumnName("Email2EntryID");

                entity.Property(e => e.Email3Address).HasMaxLength(255);

                entity.Property(e => e.Email3AddressType).HasMaxLength(255);

                entity.Property(e => e.Email3DisplayName).HasMaxLength(255);

                entity.Property(e => e.Email3EntryId)
                    .HasMaxLength(255)
                    .HasColumnName("Email3EntryID");

                entity.Property(e => e.Exported).HasColumnName("EXPORTED");

                entity.Property(e => e.FirstName).HasMaxLength(255);

                entity.Property(e => e.Ftpsite)
                    .HasMaxLength(255)
                    .HasColumnName("FTPSite");

                entity.Property(e => e.FullName).HasMaxLength(255);

                entity.Property(e => e.FullNameAndCompany).HasMaxLength(255);

                entity.Property(e => e.Hobby).HasMaxLength(255);

                entity.Property(e => e.Home2TelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.HomeAddress).HasMaxLength(255);

                entity.Property(e => e.HomeAddressCity).HasMaxLength(255);

                entity.Property(e => e.HomeAddressCountry).HasMaxLength(255);

                entity.Property(e => e.HomeAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.HomeAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.HomeAddressState).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.HomeFaxNumber).HasMaxLength(255);

                entity.Property(e => e.HomeFaxNumberFormatted).HasMaxLength(267);

                entity.Property(e => e.HomeTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Initials).HasMaxLength(255);

                entity.Property(e => e.InternetFreeBusyAddress).HasMaxLength(255);

                entity.Property(e => e.Isdnnumber)
                    .HasMaxLength(255)
                    .HasColumnName("ISDNNumber");

                entity.Property(e => e.JobTitle).HasMaxLength(255);

                entity.Property(e => e.LastFirstAndSuffix).HasMaxLength(255);

                entity.Property(e => e.LastFirstNoSpaceCompany).HasMaxLength(255);

                entity.Property(e => e.LastFirstSpaceOnly).HasMaxLength(255);

                entity.Property(e => e.LastFirstSpaceOnlyCompany).HasMaxLength(255);

                entity.Property(e => e.LastModificationTime).HasMaxLength(255);

                entity.Property(e => e.LastName).HasMaxLength(255);

                entity.Property(e => e.LastNameAndFirstName).HasMaxLength(255);

                entity.Property(e => e.MailingAddress).HasMaxLength(255);

                entity.Property(e => e.MailingAddressCity).HasMaxLength(255);

                entity.Property(e => e.MailingAddressCountry).HasMaxLength(255);

                entity.Property(e => e.MailingAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.MailingAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.MailingAddressState).HasMaxLength(255);

                entity.Property(e => e.MailingAddressStreet).HasMaxLength(255);

                entity.Property(e => e.MailingAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.MailingAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.ManagerName).HasMaxLength(255);

                entity.Property(e => e.MiddleName).HasMaxLength(255);

                entity.Property(e => e.Mileage).HasMaxLength(255);

                entity.Property(e => e.MobileTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.NetMeetingAlias).HasMaxLength(255);

                entity.Property(e => e.NetMeetingServer).HasMaxLength(255);

                entity.Property(e => e.NickName).HasMaxLength(255);

                entity.Property(e => e.OfficeLocation).HasMaxLength(255);

                entity.Property(e => e.OtherAddress).HasMaxLength(255);

                entity.Property(e => e.OtherAddressCity).HasMaxLength(255);

                entity.Property(e => e.OtherAddressCountry).HasMaxLength(255);

                entity.Property(e => e.OtherAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.OtherAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.OtherAddressState).HasMaxLength(255);

                entity.Property(e => e.OtherAddressStreet).HasMaxLength(255);

                entity.Property(e => e.OtherAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.OtherAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.OtherFaxNumber).HasMaxLength(255);

                entity.Property(e => e.OtherTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.PersonalHomePage).HasMaxLength(255);

                entity.Property(e => e.PrefAddress).HasColumnName("PREF_ADDRESS");

                entity.Property(e => e.PrefEmail).HasColumnName("PREF_EMAIL");

                entity.Property(e => e.PrefPhone).HasColumnName("PREF_PHONE");

                entity.Property(e => e.PreferredContact).HasColumnName("PREFERRED_CONTACT");

                entity.Property(e => e.PreferredContactEmail).HasColumnName("PREFERRED_CONTACT_EMAIL");

                entity.Property(e => e.PreferredContactFax).HasColumnName("PREFERRED_CONTACT_FAX");

                entity.Property(e => e.PreferredContactLetter).HasColumnName("PREFERRED_CONTACT_LETTER");

                entity.Property(e => e.PreferredContactPhone).HasColumnName("PREFERRED_CONTACT_PHONE");

                entity.Property(e => e.PrimaryContact).HasColumnName("PRIMARY_CONTACT");

                entity.Property(e => e.PrimaryTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Profession).HasMaxLength(255);

                entity.Property(e => e.RadioTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.ReferredBy).HasMaxLength(255);

                entity.Property(e => e.Salutation)
                    .HasMaxLength(255)
                    .HasColumnName("SALUTATION");

                entity.Property(e => e.SelectedMailingAddress).HasMaxLength(255);

                entity.Property(e => e.Sensitivity).HasMaxLength(255);

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Spouse).HasMaxLength(255);

                entity.Property(e => e.Subject).HasMaxLength(255);

                entity.Property(e => e.Suffix).HasMaxLength(255);

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TelexNumber).HasMaxLength(255);

                entity.Property(e => e.Title).HasMaxLength(255);

                entity.Property(e => e.TtytddtelephoneNumber)
                    .HasMaxLength(255)
                    .HasColumnName("TTYTDDTelephoneNumber");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");

                entity.Property(e => e.UsName)
                    .HasMaxLength(255)
                    .HasColumnName("US_NAME");

                entity.Property(e => e.UsgName)
                    .HasMaxLength(255)
                    .HasColumnName("USG_NAME");

                entity.Property(e => e.WebPage).HasMaxLength(255);

                entity.Property(e => e.YomiCompanyName).HasMaxLength(255);

                entity.Property(e => e.YomiFirstName).HasMaxLength(255);

                entity.Property(e => e.YomiLastName).HasMaxLength(255);
            });

            modelBuilder.Entity<VCorrespondence>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vCorrespondence");

                entity.Property(e => e.AcGroup)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("AC_GROUP");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcIndustry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_INDUSTRY");

                entity.Property(e => e.AcIndustryHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_INDUSTRY_HLIGHT");

                entity.Property(e => e.AcLabel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LABEL");

                entity.Property(e => e.AcLabelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LABEL_HLIGHT");

                entity.Property(e => e.AcLevel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LEVEL");

                entity.Property(e => e.AcLevelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LEVEL_HLIGHT");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.AcSource)
                    .HasMaxLength(255)
                    .HasColumnName("AC_SOURCE");

                entity.Property(e => e.AcSourceHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_SOURCE_HLIGHT");

                entity.Property(e => e.AcType)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE");

                entity.Property(e => e.AcType2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_2");

                entity.Property(e => e.AcType2Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_2_HLIGHT");

                entity.Property(e => e.AcTypeHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_HLIGHT");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_NAME");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_MANAGER");

                entity.Property(e => e.Attachments).HasColumnName("ATTACHMENTS");

                entity.Property(e => e.Body).HasColumnName("BODY");

                entity.Property(e => e.CoAccId).HasColumnName("CO_ACC_ID");

                entity.Property(e => e.CoDeleted).HasColumnName("CO_DELETED");

                entity.Property(e => e.CoId).HasColumnName("CO_ID");

                entity.Property(e => e.CoMapiId)
                    .HasMaxLength(350)
                    .HasColumnName("CO_MAPI_ID");

                entity.Property(e => e.CoRef).HasColumnName("CO_REF");

                entity.Property(e => e.CoStoreId)
                    .HasMaxLength(800)
                    .HasColumnName("CO_STORE_ID");

                entity.Property(e => e.CoType).HasColumnName("CO_TYPE");

                entity.Property(e => e.CoTypeName)
                    .HasMaxLength(255)
                    .HasColumnName("CO_TYPE_NAME");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DateSent)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_SENT");

                entity.Property(e => e.Email1Address).HasMaxLength(255);

                entity.Property(e => e.From)
                    .HasMaxLength(255)
                    .HasColumnName("FROM");

                entity.Property(e => e.HtmlBody)
                    .HasColumnType("text")
                    .HasColumnName("HTML_BODY");

                entity.Property(e => e.MailboxUsId).HasColumnName("MAILBOX_US_ID");

                entity.Property(e => e.ManualCreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("MANUAL_CREATED_DATE");

                entity.Property(e => e.ManualPending).HasColumnName("MANUAL_PENDING");

                entity.Property(e => e.ManualUsId).HasColumnName("MANUAL_US_ID");

                entity.Property(e => e.Private).HasColumnName("PRIVATE");

                entity.Property(e => e.Recipient)
                    .HasMaxLength(255)
                    .HasColumnName("RECIPIENT");

                entity.Property(e => e.RecipientAddress)
                    .HasMaxLength(255)
                    .HasColumnName("RECIPIENT_ADDRESS");

                entity.Property(e => e.Sender)
                    .HasMaxLength(255)
                    .HasColumnName("SENDER");

                entity.Property(e => e.SenderAddress)
                    .HasMaxLength(255)
                    .HasColumnName("SENDER_ADDRESS");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Subject)
                    .HasMaxLength(255)
                    .HasColumnName("SUBJECT");

                entity.Property(e => e.To)
                    .HasMaxLength(255)
                    .HasColumnName("TO");

                entity.Property(e => e.Type)
                    .HasMaxLength(50)
                    .HasColumnName("TYPE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");

                entity.Property(e => e.UsgName)
                    .HasMaxLength(255)
                    .HasColumnName("USG_NAME");
            });

            modelBuilder.Entity<VCorrespondenceAttachment>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vCorrespondenceAttachments");

                entity.Property(e => e.AcGroup)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("AC_GROUP");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_NAME");

                entity.Property(e => e.Body).HasColumnName("BODY");

                entity.Property(e => e.CoAccId).HasColumnName("CO_ACC_ID");

                entity.Property(e => e.CoDeleted).HasColumnName("CO_DELETED");

                entity.Property(e => e.CoId).HasColumnName("CO_ID");

                entity.Property(e => e.CoMapiId)
                    .HasMaxLength(350)
                    .HasColumnName("CO_MAPI_ID");

                entity.Property(e => e.CoRef).HasColumnName("CO_REF");

                entity.Property(e => e.CoStoreId)
                    .HasMaxLength(800)
                    .HasColumnName("CO_STORE_ID");

                entity.Property(e => e.CoaId).HasColumnName("COA_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DateSent)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_SENT");

                entity.Property(e => e.Email1Address).HasMaxLength(255);

                entity.Property(e => e.From)
                    .HasMaxLength(255)
                    .HasColumnName("FROM");

                entity.Property(e => e.MailboxUsId).HasColumnName("MAILBOX_US_ID");

                entity.Property(e => e.ManualCreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("MANUAL_CREATED_DATE");

                entity.Property(e => e.ManualPending).HasColumnName("MANUAL_PENDING");

                entity.Property(e => e.ManualUsId).HasColumnName("MANUAL_US_ID");

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .HasColumnName("NAME");

                entity.Property(e => e.Private).HasColumnName("PRIVATE");

                entity.Property(e => e.Recipient)
                    .HasMaxLength(255)
                    .HasColumnName("RECIPIENT");

                entity.Property(e => e.RecipientAddress)
                    .HasMaxLength(255)
                    .HasColumnName("RECIPIENT_ADDRESS");

                entity.Property(e => e.Sender)
                    .HasMaxLength(255)
                    .HasColumnName("SENDER");

                entity.Property(e => e.SenderAddress)
                    .HasMaxLength(255)
                    .HasColumnName("SENDER_ADDRESS");

                entity.Property(e => e.Subject)
                    .HasMaxLength(255)
                    .HasColumnName("SUBJECT");

                entity.Property(e => e.Summary).HasColumnName("SUMMARY");

                entity.Property(e => e.To)
                    .HasMaxLength(255)
                    .HasColumnName("TO");

                entity.Property(e => e.Type)
                    .HasMaxLength(50)
                    .HasColumnName("TYPE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");
            });

            modelBuilder.Entity<VCurrenciesPriceList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vCurrenciesPriceLists");

                entity.Property(e => e.BaseExchange).HasColumnName("BASE_EXCHANGE");

                entity.Property(e => e.Code)
                    .HasMaxLength(3)
                    .HasColumnName("CODE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CurDeleted).HasColumnName("CUR_DELETED");

                entity.Property(e => e.CurExternal)
                    .HasMaxLength(255)
                    .HasColumnName("CUR_EXTERNAL");

                entity.Property(e => e.CurId).HasColumnName("CUR_ID");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Discount).HasColumnName("DISCOUNT");

                entity.Property(e => e.EditPrices)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("EDIT_PRICES");

                entity.Property(e => e.Exclusive).HasColumnName("EXCLUSIVE");

                entity.Property(e => e.FneId).HasColumnName("FNE_ID");

                entity.Property(e => e.Order).HasColumnName("ORDER");

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.PriceList).HasColumnName("PRICE_LIST");

                entity.Property(e => e.PriceListEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRICE_LIST_END_DATE");

                entity.Property(e => e.PriceListStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRICE_LIST_START_DATE");

                entity.Property(e => e.PriceListState).HasColumnName("PRICE_LIST_STATE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Symbol)
                    .HasMaxLength(3)
                    .HasColumnName("SYMBOL");

                entity.Property(e => e.TxcId).HasColumnName("TXC_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<VCurrency>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vCurrencies");

                entity.Property(e => e.BaseExchange).HasColumnName("BASE_EXCHANGE");

                entity.Property(e => e.Code)
                    .HasMaxLength(3)
                    .HasColumnName("CODE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CurDeleted).HasColumnName("CUR_DELETED");

                entity.Property(e => e.CurExternal)
                    .HasMaxLength(255)
                    .HasColumnName("CUR_EXTERNAL");

                entity.Property(e => e.CurId).HasColumnName("CUR_ID");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Discount).HasColumnName("DISCOUNT");

                entity.Property(e => e.EditPrices)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("EDIT_PRICES");

                entity.Property(e => e.Exclusive).HasColumnName("EXCLUSIVE");

                entity.Property(e => e.FneId).HasColumnName("FNE_ID");

                entity.Property(e => e.FneSummary)
                    .HasMaxLength(255)
                    .HasColumnName("FNE_SUMMARY");

                entity.Property(e => e.Order).HasColumnName("ORDER");

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.PriceList).HasColumnName("PRICE_LIST");

                entity.Property(e => e.PriceListEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRICE_LIST_END_DATE");

                entity.Property(e => e.PriceListStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRICE_LIST_START_DATE");

                entity.Property(e => e.PriceListState).HasColumnName("PRICE_LIST_STATE");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Symbol)
                    .HasMaxLength(3)
                    .HasColumnName("SYMBOL");

                entity.Property(e => e.TxcId).HasColumnName("TXC_ID");

                entity.Property(e => e.TxcSummary)
                    .HasMaxLength(255)
                    .HasColumnName("TXC_SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<VDataAccessRequest>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vDataAccessRequests");

                entity.Property(e => e.AccessRequest)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ACCESS_REQUEST");

                entity.Property(e => e.Completed).HasColumnName("COMPLETED");

                entity.Property(e => e.CompletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("COMPLETED_BY");

                entity.Property(e => e.CompletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("COMPLETED_DATE");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Id)
                    .HasMaxLength(36)
                    .HasColumnName("ID");

                entity.Property(e => e.PrlId).HasColumnName("PRL_ID");

                entity.Property(e => e.RequestBy)
                    .HasMaxLength(255)
                    .HasColumnName("REQUEST_BY");

                entity.Property(e => e.RequestDate)
                    .HasColumnType("datetime")
                    .HasColumnName("REQUEST_DATE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Type)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("TYPE");
            });

            modelBuilder.Entity<VDataRemovalRequest>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vDataRemovalRequests");

                entity.Property(e => e.Completed).HasColumnName("COMPLETED");

                entity.Property(e => e.CompletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("COMPLETED_BY");

                entity.Property(e => e.CompletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("COMPLETED_DATE");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Id)
                    .HasMaxLength(36)
                    .HasColumnName("ID");

                entity.Property(e => e.RequestBy)
                    .HasMaxLength(255)
                    .HasColumnName("REQUEST_BY");

                entity.Property(e => e.RequestDate)
                    .HasColumnType("datetime")
                    .HasColumnName("REQUEST_DATE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Type)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("TYPE");
            });

            modelBuilder.Entity<VDate>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vDate");

                entity.Property(e => e.DateToday)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_TODAY");
            });

            modelBuilder.Entity<VDeletedCorrespondence>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vDeletedCorrespondence");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.Body).HasColumnName("BODY");

                entity.Property(e => e.CoAccId).HasColumnName("CO_ACC_ID");

                entity.Property(e => e.CoDeleted).HasColumnName("CO_DELETED");

                entity.Property(e => e.CoId).HasColumnName("CO_ID");

                entity.Property(e => e.CoMapiId)
                    .HasMaxLength(350)
                    .HasColumnName("CO_MAPI_ID");

                entity.Property(e => e.CoRef).HasColumnName("CO_REF");

                entity.Property(e => e.CoStoreId)
                    .HasMaxLength(800)
                    .HasColumnName("CO_STORE_ID");

                entity.Property(e => e.CoType).HasColumnName("CO_TYPE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DateSent)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_SENT");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.From)
                    .HasMaxLength(255)
                    .HasColumnName("FROM");

                entity.Property(e => e.HtmlBody)
                    .HasColumnType("text")
                    .HasColumnName("HTML_BODY");

                entity.Property(e => e.MailKey)
                    .HasMaxLength(255)
                    .HasColumnName("MAIL_KEY");

                entity.Property(e => e.MailboxUsId).HasColumnName("MAILBOX_US_ID");

                entity.Property(e => e.ManualCreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("MANUAL_CREATED_DATE");

                entity.Property(e => e.ManualPending).HasColumnName("MANUAL_PENDING");

                entity.Property(e => e.ManualUsId).HasColumnName("MANUAL_US_ID");

                entity.Property(e => e.Private).HasColumnName("PRIVATE");

                entity.Property(e => e.RecipientAddress)
                    .HasMaxLength(255)
                    .HasColumnName("RECIPIENT_ADDRESS");

                entity.Property(e => e.SenderAddress)
                    .HasMaxLength(255)
                    .HasColumnName("SENDER_ADDRESS");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Subject)
                    .HasMaxLength(255)
                    .HasColumnName("SUBJECT");

                entity.Property(e => e.To)
                    .HasMaxLength(255)
                    .HasColumnName("TO");

                entity.Property(e => e.Type)
                    .HasMaxLength(50)
                    .HasColumnName("TYPE");

                entity.Property(e => e.Ud1)
                    .HasMaxLength(255)
                    .HasColumnName("UD1");

                entity.Property(e => e.Ud10)
                    .HasMaxLength(255)
                    .HasColumnName("UD10");

                entity.Property(e => e.Ud11)
                    .HasMaxLength(255)
                    .HasColumnName("UD11");

                entity.Property(e => e.Ud12)
                    .HasMaxLength(255)
                    .HasColumnName("UD12");

                entity.Property(e => e.Ud13)
                    .HasMaxLength(255)
                    .HasColumnName("UD13");

                entity.Property(e => e.Ud14)
                    .HasMaxLength(255)
                    .HasColumnName("UD14");

                entity.Property(e => e.Ud15)
                    .HasMaxLength(255)
                    .HasColumnName("UD15");

                entity.Property(e => e.Ud2)
                    .HasMaxLength(255)
                    .HasColumnName("UD2");

                entity.Property(e => e.Ud3)
                    .HasMaxLength(255)
                    .HasColumnName("UD3");

                entity.Property(e => e.Ud4)
                    .HasMaxLength(255)
                    .HasColumnName("UD4");

                entity.Property(e => e.Ud5)
                    .HasMaxLength(255)
                    .HasColumnName("UD5");

                entity.Property(e => e.Ud6)
                    .HasMaxLength(255)
                    .HasColumnName("UD6");

                entity.Property(e => e.Ud7)
                    .HasMaxLength(255)
                    .HasColumnName("UD7");

                entity.Property(e => e.Ud8)
                    .HasMaxLength(255)
                    .HasColumnName("UD8");

                entity.Property(e => e.Ud9)
                    .HasMaxLength(255)
                    .HasColumnName("UD9");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<VDeletedProduct>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vDeletedProducts");

                entity.Property(e => e.Code)
                    .HasMaxLength(255)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cost)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("COST");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.Discount).HasColumnName("DISCOUNT");

                entity.Property(e => e.FneId).HasColumnName("FNE_ID");

                entity.Property(e => e.GroupName)
                    .HasMaxLength(255)
                    .HasColumnName("GROUP_NAME");

                entity.Property(e => e.Manufacturer)
                    .HasMaxLength(50)
                    .HasColumnName("MANUFACTURER");

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .HasColumnName("NAME");

                entity.Property(e => e.PrDeleted).HasColumnName("PR_DELETED");

                entity.Property(e => e.PrExternal)
                    .HasMaxLength(255)
                    .HasColumnName("PR_EXTERNAL");

                entity.Property(e => e.PrId).HasColumnName("PR_ID");

                entity.Property(e => e.PrImport).HasColumnName("PR_IMPORT");

                entity.Property(e => e.PrSelect).HasColumnName("PR_SELECT");

                entity.Property(e => e.PrUd1)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD1");

                entity.Property(e => e.PrUd10)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD10");

                entity.Property(e => e.PrUd10Bit).HasColumnName("PR_UD10_BIT");

                entity.Property(e => e.PrUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD10_DATE");

                entity.Property(e => e.PrUd10Id).HasColumnName("PR_UD10_ID");

                entity.Property(e => e.PrUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD10_NUMERIC");

                entity.Property(e => e.PrUd11)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD11");

                entity.Property(e => e.PrUd11Bit).HasColumnName("PR_UD11_BIT");

                entity.Property(e => e.PrUd12)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD12");

                entity.Property(e => e.PrUd12Bit).HasColumnName("PR_UD12_BIT");

                entity.Property(e => e.PrUd13)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD13");

                entity.Property(e => e.PrUd13Bit).HasColumnName("PR_UD13_BIT");

                entity.Property(e => e.PrUd14)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD14");

                entity.Property(e => e.PrUd14Bit).HasColumnName("PR_UD14_BIT");

                entity.Property(e => e.PrUd15)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD15");

                entity.Property(e => e.PrUd15Bit).HasColumnName("PR_UD15_BIT");

                entity.Property(e => e.PrUd16Bit).HasColumnName("PR_UD16_BIT");

                entity.Property(e => e.PrUd17Bit).HasColumnName("PR_UD17_BIT");

                entity.Property(e => e.PrUd18Bit).HasColumnName("PR_UD18_BIT");

                entity.Property(e => e.PrUd19Bit).HasColumnName("PR_UD19_BIT");

                entity.Property(e => e.PrUd1Bit).HasColumnName("PR_UD1_BIT");

                entity.Property(e => e.PrUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD1_DATE");

                entity.Property(e => e.PrUd1Id).HasColumnName("PR_UD1_ID");

                entity.Property(e => e.PrUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD1_NUMERIC");

                entity.Property(e => e.PrUd2)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD2");

                entity.Property(e => e.PrUd20Bit).HasColumnName("PR_UD20_BIT");

                entity.Property(e => e.PrUd21Bit).HasColumnName("PR_UD21_BIT");

                entity.Property(e => e.PrUd22Bit).HasColumnName("PR_UD22_BIT");

                entity.Property(e => e.PrUd23Bit).HasColumnName("PR_UD23_BIT");

                entity.Property(e => e.PrUd24Bit).HasColumnName("PR_UD24_BIT");

                entity.Property(e => e.PrUd2Bit).HasColumnName("PR_UD2_BIT");

                entity.Property(e => e.PrUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD2_DATE");

                entity.Property(e => e.PrUd2Id).HasColumnName("PR_UD2_ID");

                entity.Property(e => e.PrUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD2_NUMERIC");

                entity.Property(e => e.PrUd3)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD3");

                entity.Property(e => e.PrUd3Bit).HasColumnName("PR_UD3_BIT");

                entity.Property(e => e.PrUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD3_DATE");

                entity.Property(e => e.PrUd3Id).HasColumnName("PR_UD3_ID");

                entity.Property(e => e.PrUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD3_NUMERIC");

                entity.Property(e => e.PrUd4)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD4");

                entity.Property(e => e.PrUd4Bit).HasColumnName("PR_UD4_BIT");

                entity.Property(e => e.PrUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD4_DATE");

                entity.Property(e => e.PrUd4Id).HasColumnName("PR_UD4_ID");

                entity.Property(e => e.PrUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD4_NUMERIC");

                entity.Property(e => e.PrUd5)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD5");

                entity.Property(e => e.PrUd5Bit).HasColumnName("PR_UD5_BIT");

                entity.Property(e => e.PrUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD5_DATE");

                entity.Property(e => e.PrUd5Id).HasColumnName("PR_UD5_ID");

                entity.Property(e => e.PrUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD5_NUMERIC");

                entity.Property(e => e.PrUd6)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD6");

                entity.Property(e => e.PrUd6Bit).HasColumnName("PR_UD6_BIT");

                entity.Property(e => e.PrUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD6_DATE");

                entity.Property(e => e.PrUd6Id).HasColumnName("PR_UD6_ID");

                entity.Property(e => e.PrUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD6_NUMERIC");

                entity.Property(e => e.PrUd7)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD7");

                entity.Property(e => e.PrUd7Bit).HasColumnName("PR_UD7_BIT");

                entity.Property(e => e.PrUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD7_DATE");

                entity.Property(e => e.PrUd7Id).HasColumnName("PR_UD7_ID");

                entity.Property(e => e.PrUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD7_NUMERIC");

                entity.Property(e => e.PrUd8)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD8");

                entity.Property(e => e.PrUd8Bit).HasColumnName("PR_UD8_BIT");

                entity.Property(e => e.PrUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD8_DATE");

                entity.Property(e => e.PrUd8Id).HasColumnName("PR_UD8_ID");

                entity.Property(e => e.PrUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD8_NUMERIC");

                entity.Property(e => e.PrUd9)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD9");

                entity.Property(e => e.PrUd9Bit).HasColumnName("PR_UD9_BIT");

                entity.Property(e => e.PrUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD9_DATE");

                entity.Property(e => e.PrUd9Id).HasColumnName("PR_UD9_ID");

                entity.Property(e => e.PrUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD9_NUMERIC");

                entity.Property(e => e.PrgId).HasColumnName("PRG_ID");

                entity.Property(e => e.Price)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("PRICE");

                entity.Property(e => e.Quantity)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("QUANTITY");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Support)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("SUPPORT");

                entity.Property(e => e.TxcId).HasColumnName("TXC_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.Vat)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("VAT");
            });

            modelBuilder.Entity<VDeletedProductGroup>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vDeletedProductGroups");

                entity.Property(e => e.Code)
                    .HasMaxLength(50)
                    .HasColumnName("CODE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.Discount).HasColumnName("DISCOUNT");

                entity.Property(e => e.PrgDeleted).HasColumnName("PRG_DELETED");

                entity.Property(e => e.PrgId).HasColumnName("PRG_ID");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Type)
                    .HasMaxLength(50)
                    .HasColumnName("TYPE");

                entity.Property(e => e.Ud1)
                    .HasMaxLength(255)
                    .HasColumnName("UD1");

                entity.Property(e => e.Ud10)
                    .HasMaxLength(255)
                    .HasColumnName("UD10");

                entity.Property(e => e.Ud11)
                    .HasMaxLength(255)
                    .HasColumnName("UD11");

                entity.Property(e => e.Ud12)
                    .HasMaxLength(255)
                    .HasColumnName("UD12");

                entity.Property(e => e.Ud13)
                    .HasMaxLength(255)
                    .HasColumnName("UD13");

                entity.Property(e => e.Ud14)
                    .HasMaxLength(255)
                    .HasColumnName("UD14");

                entity.Property(e => e.Ud15)
                    .HasMaxLength(255)
                    .HasColumnName("UD15");

                entity.Property(e => e.Ud2)
                    .HasMaxLength(255)
                    .HasColumnName("UD2");

                entity.Property(e => e.Ud3)
                    .HasMaxLength(255)
                    .HasColumnName("UD3");

                entity.Property(e => e.Ud4)
                    .HasMaxLength(255)
                    .HasColumnName("UD4");

                entity.Property(e => e.Ud5)
                    .HasMaxLength(255)
                    .HasColumnName("UD5");

                entity.Property(e => e.Ud6)
                    .HasMaxLength(255)
                    .HasColumnName("UD6");

                entity.Property(e => e.Ud7)
                    .HasMaxLength(255)
                    .HasColumnName("UD7");

                entity.Property(e => e.Ud8)
                    .HasMaxLength(255)
                    .HasColumnName("UD8");

                entity.Property(e => e.Ud9)
                    .HasMaxLength(255)
                    .HasColumnName("UD9");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<VDesignDefaultAccountView>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vDesign_DefaultAccountView", "gv");

                entity.Property(e => e.AcDeleted).HasColumnName("AC_DELETED");

                entity.Property(e => e.AcDiscount)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("AC_DISCOUNT");

                entity.Property(e => e.AcDormant).HasColumnName("AC_DORMANT");

                entity.Property(e => e.AcExternal)
                    .HasMaxLength(255)
                    .HasColumnName("AC_EXTERNAL");

                entity.Property(e => e.AcFlag).HasColumnName("AC_FLAG");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcImport).HasColumnName("AC_IMPORT");

                entity.Property(e => e.AcNumber)
                    .HasMaxLength(10)
                    .HasColumnName("AC_NUMBER")
                    .IsFixedLength(true);

                entity.Property(e => e.AcPotential)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("AC_POTENTIAL");

                entity.Property(e => e.AcSales)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("AC_SALES");

                entity.Property(e => e.AcUd1)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1");

                entity.Property(e => e.AcUd10)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10");

                entity.Property(e => e.AcUd10Bit).HasColumnName("AC_UD10_BIT");

                entity.Property(e => e.AcUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD10_DATE");

                entity.Property(e => e.AcUd10Id).HasColumnName("AC_UD10_ID");

                entity.Property(e => e.AcUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD10_NUMERIC");

                entity.Property(e => e.AcUd11)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD11");

                entity.Property(e => e.AcUd11Bit).HasColumnName("AC_UD11_BIT");

                entity.Property(e => e.AcUd12)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD12");

                entity.Property(e => e.AcUd12Bit).HasColumnName("AC_UD12_BIT");

                entity.Property(e => e.AcUd13)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD13");

                entity.Property(e => e.AcUd13Bit).HasColumnName("AC_UD13_BIT");

                entity.Property(e => e.AcUd14)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD14");

                entity.Property(e => e.AcUd14Bit).HasColumnName("AC_UD14_BIT");

                entity.Property(e => e.AcUd15)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD15");

                entity.Property(e => e.AcUd15Bit).HasColumnName("AC_UD15_BIT");

                entity.Property(e => e.AcUd16Bit).HasColumnName("AC_UD16_BIT");

                entity.Property(e => e.AcUd17Bit).HasColumnName("AC_UD17_BIT");

                entity.Property(e => e.AcUd18Bit).HasColumnName("AC_UD18_BIT");

                entity.Property(e => e.AcUd19Bit).HasColumnName("AC_UD19_BIT");

                entity.Property(e => e.AcUd1Bit).HasColumnName("AC_UD1_BIT");

                entity.Property(e => e.AcUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD1_DATE");

                entity.Property(e => e.AcUd1Id).HasColumnName("AC_UD1_ID");

                entity.Property(e => e.AcUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD1_NUMERIC");

                entity.Property(e => e.AcUd2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2");

                entity.Property(e => e.AcUd20Bit).HasColumnName("AC_UD20_BIT");

                entity.Property(e => e.AcUd21Bit).HasColumnName("AC_UD21_BIT");

                entity.Property(e => e.AcUd22Bit).HasColumnName("AC_UD22_BIT");

                entity.Property(e => e.AcUd23Bit).HasColumnName("AC_UD23_BIT");

                entity.Property(e => e.AcUd24Bit).HasColumnName("AC_UD24_BIT");

                entity.Property(e => e.AcUd2Bit).HasColumnName("AC_UD2_BIT");

                entity.Property(e => e.AcUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD2_DATE");

                entity.Property(e => e.AcUd2Id).HasColumnName("AC_UD2_ID");

                entity.Property(e => e.AcUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD2_NUMERIC");

                entity.Property(e => e.AcUd3)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3");

                entity.Property(e => e.AcUd3Bit).HasColumnName("AC_UD3_BIT");

                entity.Property(e => e.AcUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD3_DATE");

                entity.Property(e => e.AcUd3Id).HasColumnName("AC_UD3_ID");

                entity.Property(e => e.AcUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD3_NUMERIC");

                entity.Property(e => e.AcUd4)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4");

                entity.Property(e => e.AcUd4Bit).HasColumnName("AC_UD4_BIT");

                entity.Property(e => e.AcUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD4_DATE");

                entity.Property(e => e.AcUd4Id).HasColumnName("AC_UD4_ID");

                entity.Property(e => e.AcUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD4_NUMERIC");

                entity.Property(e => e.AcUd5)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5");

                entity.Property(e => e.AcUd5Bit).HasColumnName("AC_UD5_BIT");

                entity.Property(e => e.AcUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD5_DATE");

                entity.Property(e => e.AcUd5Id).HasColumnName("AC_UD5_ID");

                entity.Property(e => e.AcUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD5_NUMERIC");

                entity.Property(e => e.AcUd6)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6");

                entity.Property(e => e.AcUd6Bit).HasColumnName("AC_UD6_BIT");

                entity.Property(e => e.AcUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD6_DATE");

                entity.Property(e => e.AcUd6Id).HasColumnName("AC_UD6_ID");

                entity.Property(e => e.AcUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD6_NUMERIC");

                entity.Property(e => e.AcUd7)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7");

                entity.Property(e => e.AcUd7Bit).HasColumnName("AC_UD7_BIT");

                entity.Property(e => e.AcUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD7_DATE");

                entity.Property(e => e.AcUd7Id).HasColumnName("AC_UD7_ID");

                entity.Property(e => e.AcUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD7_NUMERIC");

                entity.Property(e => e.AcUd8)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8");

                entity.Property(e => e.AcUd8Bit).HasColumnName("AC_UD8_BIT");

                entity.Property(e => e.AcUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD8_DATE");

                entity.Property(e => e.AcUd8Id).HasColumnName("AC_UD8_ID");

                entity.Property(e => e.AcUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD8_NUMERIC");

                entity.Property(e => e.AcUd9)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9");

                entity.Property(e => e.AcUd9Bit).HasColumnName("AC_UD9_BIT");

                entity.Property(e => e.AcUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD9_DATE");

                entity.Property(e => e.AcUd9Id).HasColumnName("AC_UD9_ID");

                entity.Property(e => e.AcUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD9_NUMERIC");

                entity.Property(e => e.AccIdSales).HasColumnName("ACC_ID_SALES");

                entity.Property(e => e.AccIdSupport).HasColumnName("ACC_ID_SUPPORT");

                entity.Property(e => e.AcgId).HasColumnName("ACG_ID");

                entity.Property(e => e.Address1)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_1");

                entity.Property(e => e.Address2)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_2");

                entity.Property(e => e.Address3)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_3");

                entity.Property(e => e.BillingAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_ADDRESS_1");

                entity.Property(e => e.BillingAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_ADDRESS_2");

                entity.Property(e => e.BillingAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_ADDRESS_3");

                entity.Property(e => e.BillingCountry)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_COUNTRY");

                entity.Property(e => e.BillingCounty)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_COUNTY");

                entity.Property(e => e.BillingPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_POSTCODE");

                entity.Property(e => e.BillingTown)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_TOWN");

                entity.Property(e => e.Country)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.County)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTY");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CsId).HasColumnName("CS_ID");

                entity.Property(e => e.CurId).HasColumnName("CUR_ID");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.EmailDomains)
                    .HasMaxLength(1024)
                    .HasColumnName("EMAIL_DOMAINS");

                entity.Property(e => e.Fax1)
                    .HasMaxLength(50)
                    .HasColumnName("FAX_1");

                entity.Property(e => e.Fax2)
                    .HasMaxLength(50)
                    .HasColumnName("FAX_2");

                entity.Property(e => e.Fax3)
                    .HasMaxLength(50)
                    .HasColumnName("FAX_3");

                entity.Property(e => e.Industry).HasColumnName("INDUSTRY");

                entity.Property(e => e.Label).HasColumnName("LABEL");

                entity.Property(e => e.Level).HasColumnName("LEVEL");

                entity.Property(e => e.LinkedinName)
                    .HasMaxLength(255)
                    .HasColumnName("LINKEDIN_NAME");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .HasColumnName("NAME");

                entity.Property(e => e.NameLongestWord)
                    .HasMaxLength(255)
                    .HasColumnName("NAME_LONGEST_WORD");

                entity.Property(e => e.NameSoundex)
                    .HasMaxLength(4)
                    .HasColumnName("NAME_SOUNDEX");

                entity.Property(e => e.NumberEmployees)
                    .HasMaxLength(10)
                    .HasColumnName("NUMBER_EMPLOYEES");

                entity.Property(e => e.Parent).HasColumnName("PARENT");

                entity.Property(e => e.Phone1)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_1");

                entity.Property(e => e.Phone2)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_2");

                entity.Property(e => e.Phone3)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_3");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(255)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.ReferenceSeed).HasColumnName("REFERENCE_SEED");

                entity.Property(e => e.Sentiment)
                    .HasMaxLength(8)
                    .HasColumnName("SENTIMENT");

                entity.Property(e => e.Site)
                    .HasMaxLength(100)
                    .HasColumnName("SITE");

                entity.Property(e => e.Source).HasColumnName("SOURCE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Town)
                    .HasMaxLength(255)
                    .HasColumnName("TOWN");

                entity.Property(e => e.Type1).HasColumnName("TYPE_1");

                entity.Property(e => e.Type2).HasColumnName("TYPE_2");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");

                entity.Property(e => e.UsIdSupport).HasColumnName("US_ID_SUPPORT");

                entity.Property(e => e.Validationmessage)
                    .HasMaxLength(255)
                    .HasColumnName("VALIDATIONMESSAGE");

                entity.Property(e => e.WebSite1)
                    .HasMaxLength(100)
                    .HasColumnName("WEB_SITE_1");

                entity.Property(e => e.WebSite2)
                    .HasMaxLength(100)
                    .HasColumnName("WEB_SITE_2");
            });

            modelBuilder.Entity<VDesignDefaultContactView>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vDesign_DefaultContactView", "gv");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccDeleted).HasColumnName("ACC_DELETED");

                entity.Property(e => e.AccDormant).HasColumnName("ACC_DORMANT");

                entity.Property(e => e.AccExternal)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_EXTERNAL");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccImport).HasColumnName("ACC_IMPORT");

                entity.Property(e => e.AccStatus).HasColumnName("ACC_STATUS");

                entity.Property(e => e.AccUd1)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD1");

                entity.Property(e => e.AccUd10)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD10");

                entity.Property(e => e.AccUd10Bit).HasColumnName("ACC_UD10_BIT");

                entity.Property(e => e.AccUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD10_DATE");

                entity.Property(e => e.AccUd10Id).HasColumnName("ACC_UD10_ID");

                entity.Property(e => e.AccUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD10_NUMERIC");

                entity.Property(e => e.AccUd11)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD11");

                entity.Property(e => e.AccUd11Bit).HasColumnName("ACC_UD11_BIT");

                entity.Property(e => e.AccUd12)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD12");

                entity.Property(e => e.AccUd12Bit).HasColumnName("ACC_UD12_BIT");

                entity.Property(e => e.AccUd13)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD13");

                entity.Property(e => e.AccUd13Bit).HasColumnName("ACC_UD13_BIT");

                entity.Property(e => e.AccUd14)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD14");

                entity.Property(e => e.AccUd14Bit).HasColumnName("ACC_UD14_BIT");

                entity.Property(e => e.AccUd15)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD15");

                entity.Property(e => e.AccUd15Bit).HasColumnName("ACC_UD15_BIT");

                entity.Property(e => e.AccUd16Bit).HasColumnName("ACC_UD16_BIT");

                entity.Property(e => e.AccUd17Bit).HasColumnName("ACC_UD17_BIT");

                entity.Property(e => e.AccUd18Bit).HasColumnName("ACC_UD18_BIT");

                entity.Property(e => e.AccUd19Bit).HasColumnName("ACC_UD19_BIT");

                entity.Property(e => e.AccUd1Bit).HasColumnName("ACC_UD1_BIT");

                entity.Property(e => e.AccUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD1_DATE");

                entity.Property(e => e.AccUd1Id).HasColumnName("ACC_UD1_ID");

                entity.Property(e => e.AccUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD1_NUMERIC");

                entity.Property(e => e.AccUd2)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD2");

                entity.Property(e => e.AccUd20Bit).HasColumnName("ACC_UD20_BIT");

                entity.Property(e => e.AccUd21Bit).HasColumnName("ACC_UD21_BIT");

                entity.Property(e => e.AccUd22Bit).HasColumnName("ACC_UD22_BIT");

                entity.Property(e => e.AccUd23Bit).HasColumnName("ACC_UD23_BIT");

                entity.Property(e => e.AccUd24Bit).HasColumnName("ACC_UD24_BIT");

                entity.Property(e => e.AccUd2Bit).HasColumnName("ACC_UD2_BIT");

                entity.Property(e => e.AccUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD2_DATE");

                entity.Property(e => e.AccUd2Id).HasColumnName("ACC_UD2_ID");

                entity.Property(e => e.AccUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD2_NUMERIC");

                entity.Property(e => e.AccUd3)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD3");

                entity.Property(e => e.AccUd3Bit).HasColumnName("ACC_UD3_BIT");

                entity.Property(e => e.AccUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD3_DATE");

                entity.Property(e => e.AccUd3Id).HasColumnName("ACC_UD3_ID");

                entity.Property(e => e.AccUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD3_NUMERIC");

                entity.Property(e => e.AccUd4)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD4");

                entity.Property(e => e.AccUd4Bit).HasColumnName("ACC_UD4_BIT");

                entity.Property(e => e.AccUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD4_DATE");

                entity.Property(e => e.AccUd4Id).HasColumnName("ACC_UD4_ID");

                entity.Property(e => e.AccUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD4_NUMERIC");

                entity.Property(e => e.AccUd5)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD5");

                entity.Property(e => e.AccUd5Bit).HasColumnName("ACC_UD5_BIT");

                entity.Property(e => e.AccUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD5_DATE");

                entity.Property(e => e.AccUd5Id).HasColumnName("ACC_UD5_ID");

                entity.Property(e => e.AccUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD5_NUMERIC");

                entity.Property(e => e.AccUd6)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD6");

                entity.Property(e => e.AccUd6Bit).HasColumnName("ACC_UD6_BIT");

                entity.Property(e => e.AccUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD6_DATE");

                entity.Property(e => e.AccUd6Id).HasColumnName("ACC_UD6_ID");

                entity.Property(e => e.AccUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD6_NUMERIC");

                entity.Property(e => e.AccUd7)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD7");

                entity.Property(e => e.AccUd7Bit).HasColumnName("ACC_UD7_BIT");

                entity.Property(e => e.AccUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD7_DATE");

                entity.Property(e => e.AccUd7Id).HasColumnName("ACC_UD7_ID");

                entity.Property(e => e.AccUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD7_NUMERIC");

                entity.Property(e => e.AccUd8)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD8");

                entity.Property(e => e.AccUd8Bit).HasColumnName("ACC_UD8_BIT");

                entity.Property(e => e.AccUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD8_DATE");

                entity.Property(e => e.AccUd8Id).HasColumnName("ACC_UD8_ID");

                entity.Property(e => e.AccUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD8_NUMERIC");

                entity.Property(e => e.AccUd9)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD9");

                entity.Property(e => e.AccUd9Bit).HasColumnName("ACC_UD9_BIT");

                entity.Property(e => e.AccUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD9_DATE");

                entity.Property(e => e.AccUd9Id).HasColumnName("ACC_UD9_ID");

                entity.Property(e => e.AccUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD9_NUMERIC");

                entity.Property(e => e.Account).HasMaxLength(255);

                entity.Property(e => e.AccountSummary)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_SUMMARY");

                entity.Property(e => e.Anniversary).HasMaxLength(255);

                entity.Property(e => e.AssistantTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Assistantname).HasMaxLength(255);

                entity.Property(e => e.BillingInformation).HasMaxLength(255);

                entity.Property(e => e.Birthday).HasMaxLength(255);

                entity.Property(e => e.Business2TelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.BusinessAddress).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressCity).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressCountry).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressState).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.BusinessFaxNumber).HasMaxLength(255);

                entity.Property(e => e.BusinessHomePage).HasMaxLength(255);

                entity.Property(e => e.BusinessTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.CallbackTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.CarTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Categories).HasMaxLength(500);

                entity.Property(e => e.Children).HasMaxLength(255);

                entity.Property(e => e.Companies).HasMaxLength(255);

                entity.Property(e => e.CompanyAndFullName).HasMaxLength(255);

                entity.Property(e => e.CompanyLastFirstNoSpace).HasMaxLength(255);

                entity.Property(e => e.CompanyLastFirstSpaceOnly).HasMaxLength(255);

                entity.Property(e => e.CompanyMainTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.CompanyName).HasMaxLength(255);

                entity.Property(e => e.ComputerNetworkName).HasMaxLength(255);

                entity.Property(e => e.ConnectOptIn).HasColumnName("CONNECT_OPT_IN");

                entity.Property(e => e.ConnectOptInDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CONNECT_OPT_IN_DATE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CreationTime).HasMaxLength(255);

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Department).HasMaxLength(255);

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.Email1Address).HasMaxLength(255);

                entity.Property(e => e.Email1AddressType).HasMaxLength(255);

                entity.Property(e => e.Email1DisplayName).HasMaxLength(255);

                entity.Property(e => e.Email1EntryId)
                    .HasMaxLength(255)
                    .HasColumnName("Email1EntryID");

                entity.Property(e => e.Email2Address).HasMaxLength(255);

                entity.Property(e => e.Email2AddressType).HasMaxLength(255);

                entity.Property(e => e.Email2DisplayName).HasMaxLength(255);

                entity.Property(e => e.Email2EntryId)
                    .HasMaxLength(255)
                    .HasColumnName("Email2EntryID");

                entity.Property(e => e.Email3Address).HasMaxLength(255);

                entity.Property(e => e.Email3AddressType).HasMaxLength(255);

                entity.Property(e => e.Email3DisplayName).HasMaxLength(255);

                entity.Property(e => e.Email3EntryId)
                    .HasMaxLength(255)
                    .HasColumnName("Email3EntryID");

                entity.Property(e => e.Erased).HasColumnName("ERASED");

                entity.Property(e => e.ErasedBy)
                    .HasMaxLength(255)
                    .HasColumnName("ERASED_BY");

                entity.Property(e => e.ErasedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ERASED_DATE");

                entity.Property(e => e.Exported).HasColumnName("EXPORTED");

                entity.Property(e => e.FirstName).HasMaxLength(255);

                entity.Property(e => e.Ftpsite)
                    .HasMaxLength(255)
                    .HasColumnName("FTPSite");

                entity.Property(e => e.FullName).HasMaxLength(255);

                entity.Property(e => e.FullNameAndCompany).HasMaxLength(255);

                entity.Property(e => e.Hobby).HasMaxLength(255);

                entity.Property(e => e.Home2TelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.HomeAddress).HasMaxLength(255);

                entity.Property(e => e.HomeAddressCity).HasMaxLength(255);

                entity.Property(e => e.HomeAddressCountry).HasMaxLength(255);

                entity.Property(e => e.HomeAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.HomeAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.HomeAddressState).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.HomeFaxNumber).HasMaxLength(255);

                entity.Property(e => e.HomeTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Initials).HasMaxLength(255);

                entity.Property(e => e.InternetFreeBusyAddress).HasMaxLength(255);

                entity.Property(e => e.Isdnnumber)
                    .HasMaxLength(255)
                    .HasColumnName("ISDNNumber");

                entity.Property(e => e.JobTitle).HasMaxLength(255);

                entity.Property(e => e.LastFirstAndSuffix).HasMaxLength(255);

                entity.Property(e => e.LastFirstNoSpaceCompany).HasMaxLength(255);

                entity.Property(e => e.LastFirstSpaceOnly).HasMaxLength(255);

                entity.Property(e => e.LastFirstSpaceOnlyCompany).HasMaxLength(255);

                entity.Property(e => e.LastModificationTime).HasMaxLength(255);

                entity.Property(e => e.LastName).HasMaxLength(255);

                entity.Property(e => e.LastNameAndFirstName).HasMaxLength(255);

                entity.Property(e => e.LinkedinName)
                    .HasMaxLength(255)
                    .HasColumnName("LINKEDIN_NAME");

                entity.Property(e => e.MailingAddress).HasMaxLength(255);

                entity.Property(e => e.MailingAddressCity).HasMaxLength(255);

                entity.Property(e => e.MailingAddressCountry).HasMaxLength(255);

                entity.Property(e => e.MailingAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.MailingAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.MailingAddressState).HasMaxLength(255);

                entity.Property(e => e.MailingAddressStreet).HasMaxLength(255);

                entity.Property(e => e.MailingAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.MailingAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.ManagerName).HasMaxLength(255);

                entity.Property(e => e.MiddleName).HasMaxLength(255);

                entity.Property(e => e.Mileage).HasMaxLength(255);

                entity.Property(e => e.MobileTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.NetMeetingAlias).HasMaxLength(255);

                entity.Property(e => e.NetMeetingServer).HasMaxLength(255);

                entity.Property(e => e.NickName).HasMaxLength(255);

                entity.Property(e => e.NtIdOutlook).HasColumnName("NT_ID_OUTLOOK");

                entity.Property(e => e.OfficeLocation).HasMaxLength(255);

                entity.Property(e => e.OtherAddress).HasMaxLength(255);

                entity.Property(e => e.OtherAddressCity).HasMaxLength(255);

                entity.Property(e => e.OtherAddressCountry).HasMaxLength(255);

                entity.Property(e => e.OtherAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.OtherAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.OtherAddressState).HasMaxLength(255);

                entity.Property(e => e.OtherAddressStreet).HasMaxLength(255);

                entity.Property(e => e.OtherAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.OtherAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.OtherFaxNumber).HasMaxLength(255);

                entity.Property(e => e.OtherTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.PersonalHomePage).HasMaxLength(255);

                entity.Property(e => e.PrefAddress).HasColumnName("PREF_ADDRESS");

                entity.Property(e => e.PrefEmail).HasColumnName("PREF_EMAIL");

                entity.Property(e => e.PrefPhone).HasColumnName("PREF_PHONE");

                entity.Property(e => e.PreferredContact).HasColumnName("PREFERRED_CONTACT");

                entity.Property(e => e.PreferredContactEmail).HasColumnName("PREFERRED_CONTACT_EMAIL");

                entity.Property(e => e.PreferredContactFax).HasColumnName("PREFERRED_CONTACT_FAX");

                entity.Property(e => e.PreferredContactLetter).HasColumnName("PREFERRED_CONTACT_LETTER");

                entity.Property(e => e.PreferredContactPhone).HasColumnName("PREFERRED_CONTACT_PHONE");

                entity.Property(e => e.PrimaryTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.PrivacyNotified).HasColumnName("PRIVACY_NOTIFIED");

                entity.Property(e => e.PrivacyNotifiedBy)
                    .HasMaxLength(255)
                    .HasColumnName("PRIVACY_NOTIFIED_BY");

                entity.Property(e => e.PrivacyNotifiedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRIVACY_NOTIFIED_DATE");

                entity.Property(e => e.PrivacyNotifiedMethod)
                    .HasMaxLength(255)
                    .HasColumnName("PRIVACY_NOTIFIED_METHOD");

                entity.Property(e => e.Profession).HasMaxLength(255);

                entity.Property(e => e.RadioTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.ReferredBy).HasMaxLength(255);

                entity.Property(e => e.RemovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("REMOVAL_DATE");

                entity.Property(e => e.Salutation)
                    .HasMaxLength(255)
                    .HasColumnName("SALUTATION");

                entity.Property(e => e.SelectedMailingAddress).HasMaxLength(255);

                entity.Property(e => e.Sensitivity).HasMaxLength(255);

                entity.Property(e => e.Spouse).HasMaxLength(255);

                entity.Property(e => e.Subject).HasMaxLength(255);

                entity.Property(e => e.Suffix).HasMaxLength(255);

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.SyncUpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYNC_UPDATED_DATE");

                entity.Property(e => e.TelexNumber).HasMaxLength(255);

                entity.Property(e => e.Title).HasMaxLength(255);

                entity.Property(e => e.TtytddtelephoneNumber)
                    .HasMaxLength(255)
                    .HasColumnName("TTYTDDTelephoneNumber");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.WebPage).HasMaxLength(255);

                entity.Property(e => e.YomiCompanyName).HasMaxLength(255);

                entity.Property(e => e.YomiFirstName).HasMaxLength(255);

                entity.Property(e => e.YomiLastName).HasMaxLength(255);
            });

            modelBuilder.Entity<VDocument>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vDocuments");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.DocDeleted).HasColumnName("DOC_DELETED");

                entity.Property(e => e.DocId).HasColumnName("DOC_ID");

                entity.Property(e => e.NicePath)
                    .HasMaxLength(2000)
                    .HasColumnName("NICE_PATH");

                entity.Property(e => e.Path)
                    .HasMaxLength(2000)
                    .HasColumnName("PATH");

                entity.Property(e => e.RefId).HasColumnName("REF_ID");

                entity.Property(e => e.SecurityGroup)
                    .HasMaxLength(255)
                    .HasColumnName("SECURITY_GROUP");

                entity.Property(e => e.SecurityId).HasColumnName("SECURITY_ID");

                entity.Property(e => e.SecurityObject)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SECURITY_OBJECT");

                entity.Property(e => e.SecurityOwner).HasColumnName("SECURITY_OWNER");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Type)
                    .HasMaxLength(50)
                    .HasColumnName("TYPE");

                entity.Property(e => e.Ud1)
                    .HasMaxLength(255)
                    .HasColumnName("UD1");

                entity.Property(e => e.Ud10)
                    .HasMaxLength(255)
                    .HasColumnName("UD10");

                entity.Property(e => e.Ud11)
                    .HasMaxLength(255)
                    .HasColumnName("UD11");

                entity.Property(e => e.Ud12)
                    .HasMaxLength(255)
                    .HasColumnName("UD12");

                entity.Property(e => e.Ud13)
                    .HasMaxLength(255)
                    .HasColumnName("UD13");

                entity.Property(e => e.Ud14)
                    .HasMaxLength(255)
                    .HasColumnName("UD14");

                entity.Property(e => e.Ud15)
                    .HasMaxLength(255)
                    .HasColumnName("UD15");

                entity.Property(e => e.Ud2)
                    .HasMaxLength(255)
                    .HasColumnName("UD2");

                entity.Property(e => e.Ud3)
                    .HasMaxLength(255)
                    .HasColumnName("UD3");

                entity.Property(e => e.Ud4)
                    .HasMaxLength(255)
                    .HasColumnName("UD4");

                entity.Property(e => e.Ud5)
                    .HasMaxLength(255)
                    .HasColumnName("UD5");

                entity.Property(e => e.Ud6)
                    .HasMaxLength(255)
                    .HasColumnName("UD6");

                entity.Property(e => e.Ud7)
                    .HasMaxLength(255)
                    .HasColumnName("UD7");

                entity.Property(e => e.Ud8)
                    .HasMaxLength(255)
                    .HasColumnName("UD8");

                entity.Property(e => e.Ud9)
                    .HasMaxLength(255)
                    .HasColumnName("UD9");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<VDocumentsAccount>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vDocumentsAccount");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.DocDeleted).HasColumnName("DOC_DELETED");

                entity.Property(e => e.DocId).HasColumnName("DOC_ID");

                entity.Property(e => e.NicePath)
                    .HasMaxLength(4000)
                    .HasColumnName("NICE_PATH");

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.ParentSummary)
                    .HasMaxLength(255)
                    .HasColumnName("PARENT_SUMMARY");

                entity.Property(e => e.Path)
                    .HasMaxLength(2000)
                    .HasColumnName("PATH");

                entity.Property(e => e.RefId).HasColumnName("REF_ID");

                entity.Property(e => e.SecurityGroup)
                    .HasMaxLength(255)
                    .HasColumnName("SECURITY_GROUP");

                entity.Property(e => e.SecurityId).HasColumnName("SECURITY_ID");

                entity.Property(e => e.SecurityObject)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SECURITY_OBJECT");

                entity.Property(e => e.SecurityOwner).HasColumnName("SECURITY_OWNER");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Type)
                    .HasMaxLength(50)
                    .HasColumnName("TYPE");

                entity.Property(e => e.Ud1)
                    .HasMaxLength(255)
                    .HasColumnName("UD1");

                entity.Property(e => e.Ud10)
                    .HasMaxLength(255)
                    .HasColumnName("UD10");

                entity.Property(e => e.Ud11)
                    .HasMaxLength(255)
                    .HasColumnName("UD11");

                entity.Property(e => e.Ud12)
                    .HasMaxLength(255)
                    .HasColumnName("UD12");

                entity.Property(e => e.Ud13)
                    .HasMaxLength(255)
                    .HasColumnName("UD13");

                entity.Property(e => e.Ud14)
                    .HasMaxLength(255)
                    .HasColumnName("UD14");

                entity.Property(e => e.Ud15)
                    .HasMaxLength(255)
                    .HasColumnName("UD15");

                entity.Property(e => e.Ud2)
                    .HasMaxLength(255)
                    .HasColumnName("UD2");

                entity.Property(e => e.Ud3)
                    .HasMaxLength(255)
                    .HasColumnName("UD3");

                entity.Property(e => e.Ud4)
                    .HasMaxLength(255)
                    .HasColumnName("UD4");

                entity.Property(e => e.Ud5)
                    .HasMaxLength(255)
                    .HasColumnName("UD5");

                entity.Property(e => e.Ud6)
                    .HasMaxLength(255)
                    .HasColumnName("UD6");

                entity.Property(e => e.Ud7)
                    .HasMaxLength(255)
                    .HasColumnName("UD7");

                entity.Property(e => e.Ud8)
                    .HasMaxLength(255)
                    .HasColumnName("UD8");

                entity.Property(e => e.Ud9)
                    .HasMaxLength(255)
                    .HasColumnName("UD9");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<VDocumentsGenerated>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vDocumentsGenerated");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.ErrorMessage).HasMaxLength(255);

                entity.Property(e => e.MergedFilePath).HasMaxLength(2000);

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.ParentSummary)
                    .HasMaxLength(255)
                    .HasColumnName("PARENT_SUMMARY");

                entity.Property(e => e.ParentType)
                    .HasMaxLength(4000)
                    .HasColumnName("PARENT_TYPE");

                entity.Property(e => e.Status)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("STATUS");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Template)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("TEMPLATE");

                entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<VDropsList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vDropsList");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.DrId).HasColumnName("DR_ID");

                entity.Property(e => e.ExternalId)
                    .HasMaxLength(50)
                    .HasColumnName("EXTERNAL_ID");

                entity.Property(e => e.Label)
                    .HasMaxLength(255)
                    .HasColumnName("LABEL");

                entity.Property(e => e.ObjectName)
                    .HasMaxLength(50)
                    .HasColumnName("OBJECT_NAME");

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<VDropsOptionsActive>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vDropsOptionsActive");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.DrId).HasColumnName("DR_ID");

                entity.Property(e => e.DrSummary)
                    .HasMaxLength(255)
                    .HasColumnName("DR_SUMMARY");

                entity.Property(e => e.DroDeleted).HasColumnName("DRO_DELETED");

                entity.Property(e => e.DroId).HasColumnName("DRO_ID");

                entity.Property(e => e.DroOrder).HasColumnName("DRO_ORDER");

                entity.Property(e => e.ExternalId)
                    .HasMaxLength(50)
                    .HasColumnName("EXTERNAL_ID");

                entity.Property(e => e.Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("HLIGHT");

                entity.Property(e => e.PaId).HasColumnName("PA_ID");

                entity.Property(e => e.State)
                    .HasMaxLength(10)
                    .HasColumnName("STATE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<VDropsOptionsInActive>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vDropsOptionsInActive");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.DrId).HasColumnName("DR_ID");

                entity.Property(e => e.DrSummary)
                    .HasMaxLength(255)
                    .HasColumnName("DR_SUMMARY");

                entity.Property(e => e.DroDeleted).HasColumnName("DRO_DELETED");

                entity.Property(e => e.DroId).HasColumnName("DRO_ID");

                entity.Property(e => e.DroOrder).HasColumnName("DRO_ORDER");

                entity.Property(e => e.ExternalId)
                    .HasMaxLength(50)
                    .HasColumnName("EXTERNAL_ID");

                entity.Property(e => e.Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("HLIGHT");

                entity.Property(e => e.PaId).HasColumnName("PA_ID");

                entity.Property(e => e.State)
                    .HasMaxLength(10)
                    .HasColumnName("STATE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<VEmailSecurityUser>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vEmailSecurityUsers");

                entity.Property(e => e.CoId).HasColumnName("CO_ID");

                entity.Property(e => e.UsId).HasColumnName("US_ID");
            });

            modelBuilder.Entity<VEsignDocument>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vESignDocuments");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_NAME");

                entity.Property(e => e.AcpId).HasColumnName("ACP_ID");

                entity.Property(e => e.ActId).HasColumnName("ACT_ID");

                entity.Property(e => e.AgrDeleted).HasColumnName("AGR_DELETED");

                entity.Property(e => e.AgrId).HasColumnName("AGR_ID");

                entity.Property(e => e.AgreementCancelled).HasColumnName("AGREEMENT_CANCELLED");

                entity.Property(e => e.AgreementDocumentFolder)
                    .IsRequired()
                    .HasMaxLength(2000)
                    .HasColumnName("AGREEMENT_DOCUMENT_FOLDER");

                entity.Property(e => e.AgreementDocumentName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("AGREEMENT_DOCUMENT_NAME");

                entity.Property(e => e.AgreementName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("AGREEMENT_NAME");

                entity.Property(e => e.AgreementProvider).HasColumnName("AGREEMENT_PROVIDER");

                entity.Property(e => e.AgreementStatus).HasColumnName("AGREEMENT_STATUS");

                entity.Property(e => e.CancelledBy)
                    .HasMaxLength(255)
                    .HasColumnName("CANCELLED_BY");

                entity.Property(e => e.CancelledDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CANCELLED_DATE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.DocId).HasColumnName("DOC_ID");

                entity.Property(e => e.DocfId).HasColumnName("DOCF_ID");

                entity.Property(e => e.IsDownloaded).HasColumnName("IS_DOWNLOADED");

                entity.Property(e => e.OpId).HasColumnName("OP_ID");

                entity.Property(e => e.OpqId).HasColumnName("OPQ_ID");

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.ParentOwner)
                    .HasMaxLength(255)
                    .HasColumnName("PARENT_OWNER");

                entity.Property(e => e.ParentOwnerId).HasColumnName("PARENT_OWNER_ID");

                entity.Property(e => e.ParentSummary).HasColumnName("PARENT_SUMMARY");

                entity.Property(e => e.Path)
                    .HasMaxLength(4000)
                    .HasColumnName("PATH");

                entity.Property(e => e.PjId).HasColumnName("PJ_ID");

                entity.Property(e => e.ProviderId)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("PROVIDER_ID");

                entity.Property(e => e.ProviderLink)
                    .HasMaxLength(255)
                    .HasColumnName("PROVIDER_LINK")
                    .IsFixedLength(true);

                entity.Property(e => e.ProviderStatus)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("PROVIDER_STATUS");

                entity.Property(e => e.SecurityGroup)
                    .HasMaxLength(255)
                    .HasColumnName("SECURITY_GROUP");

                entity.Property(e => e.SecurityId).HasColumnName("SECURITY_ID");

                entity.Property(e => e.SecurityObject)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SECURITY_OBJECT");

                entity.Property(e => e.SecurityOwner).HasColumnName("SECURITY_OWNER");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.SembId).HasColumnName("SEMB_ID");

                entity.Property(e => e.SembaId).HasColumnName("SEMBA_ID");

                entity.Property(e => e.SemsId).HasColumnName("SEMS_ID");

                entity.Property(e => e.SemsaId).HasColumnName("SEMSA_ID");

                entity.Property(e => e.Status)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("STATUS");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Type)
                    .HasMaxLength(22)
                    .IsUnicode(false)
                    .HasColumnName("TYPE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsaId).HasColumnName("USA_ID");

                entity.Property(e => e.User)
                    .HasMaxLength(255)
                    .HasColumnName("USER");
            });

            modelBuilder.Entity<VEvent>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vEvents");

                entity.Property(e => e.AcGroup)
                    .HasMaxLength(255)
                    .HasColumnName("AC_GROUP");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.AcType1)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_1");

                entity.Property(e => e.AcType1Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_1_HLIGHT");

                entity.Property(e => e.AcType2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_2");

                entity.Property(e => e.AcType2Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_2_HLIGHT");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_MANAGER");

                entity.Property(e => e.AcdPath)
                    .HasMaxLength(2000)
                    .HasColumnName("ACD_PATH");

                entity.Property(e => e.AcoId).HasColumnName("ACO_ID");

                entity.Property(e => e.AcoPluralLabel)
                    .HasMaxLength(50)
                    .HasColumnName("ACO_Plural_Label");

                entity.Property(e => e.AcoSingularLabel)
                    .HasMaxLength(50)
                    .HasColumnName("ACO_Singular_Label");

                entity.Property(e => e.AcoSummary)
                    .HasMaxLength(255)
                    .HasColumnName("ACO_SUMMARY");

                entity.Property(e => e.ActId).HasColumnName("ACT_ID");

                entity.Property(e => e.Class)
                    .HasMaxLength(10)
                    .HasColumnName("CLASS");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Details)
                    .HasMaxLength(255)
                    .HasColumnName("DETAILS");

                entity.Property(e => e.EvId).HasColumnName("EV_ID");

                entity.Property(e => e.OpId).HasColumnName("OP_ID");

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.ParentSummary)
                    .HasMaxLength(255)
                    .HasColumnName("PARENT_SUMMARY");

                entity.Property(e => e.ParentType)
                    .HasMaxLength(50)
                    .HasColumnName("PARENT_TYPE");

                entity.Property(e => e.Path)
                    .HasMaxLength(2000)
                    .HasColumnName("PATH");

                entity.Property(e => e.PjId).HasColumnName("PJ_ID");

                entity.Property(e => e.RefId).HasColumnName("REF_ID");

                entity.Property(e => e.SecurityGroup)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("SECURITY_GROUP");

                entity.Property(e => e.SecurityId).HasColumnName("SECURITY_ID");

                entity.Property(e => e.SecurityObject)
                    .IsRequired()
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .HasColumnName("SECURITY_OBJECT");

                entity.Property(e => e.SecurityOwner).HasColumnName("SECURITY_OWNER");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Type)
                    .HasMaxLength(50)
                    .HasColumnName("TYPE");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");

                entity.Property(e => e.UsIdSupport).HasColumnName("US_ID_SUPPORT");
            });

            modelBuilder.Entity<VEventbriteImport>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vEventbriteImports");

                entity.Property(e => e.Capacity).HasColumnName("CAPACITY");

                entity.Property(e => e.Category)
                    .HasMaxLength(255)
                    .HasColumnName("CATEGORY");

                entity.Property(e => e.Changed)
                    .HasColumnType("datetime")
                    .HasColumnName("CHANGED");

                entity.Property(e => e.Created)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Currency)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CURRENCY")
                    .IsFixedLength(true);

                entity.Property(e => e.EiId).HasColumnName("EI_ID");

                entity.Property(e => e.EiIdNullable).HasColumnName("EI_ID_NULLABLE");

                entity.Property(e => e.EiStatusTranslated)
                    .IsRequired()
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("EI_STATUS_TRANSLATED");

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("END_DATE");

                entity.Property(e => e.EventId)
                    .HasMaxLength(50)
                    .HasColumnName("EVENT_ID");

                entity.Property(e => e.EventName)
                    .HasMaxLength(255)
                    .HasColumnName("EVENT_NAME");

                entity.Property(e => e.Format)
                    .HasMaxLength(255)
                    .HasColumnName("FORMAT");

                entity.Property(e => e.Import)
                    .IsRequired()
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("IMPORT");

                entity.Property(e => e.InviteOnly).HasColumnName("INVITE_ONLY");

                entity.Property(e => e.Listed).HasColumnName("LISTED");

                entity.Property(e => e.OnlineEvent).HasColumnName("ONLINE_EVENT");

                entity.Property(e => e.Organiser)
                    .HasMaxLength(255)
                    .HasColumnName("ORGANISER");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.Seminar)
                    .HasMaxLength(255)
                    .HasColumnName("SEMINAR");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("START_DATE");

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .HasColumnName("STATUS");

                entity.Property(e => e.Subcategory)
                    .HasMaxLength(255)
                    .HasColumnName("SUBCATEGORY");

                entity.Property(e => e.Timezone)
                    .HasMaxLength(255)
                    .HasColumnName("TIMEZONE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.Url)
                    .HasMaxLength(255)
                    .HasColumnName("URL");
            });

            modelBuilder.Entity<VEventbriteIntegratedEvent>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vEventbriteIntegratedEvents");

                entity.Property(e => e.Capacity).HasColumnName("CAPACITY");

                entity.Property(e => e.Category)
                    .HasMaxLength(255)
                    .HasColumnName("CATEGORY");

                entity.Property(e => e.Changed)
                    .HasColumnType("datetime")
                    .HasColumnName("CHANGED");

                entity.Property(e => e.Created)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Currency)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CURRENCY")
                    .IsFixedLength(true);

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.EiDeleted).HasColumnName("EI_DELETED");

                entity.Property(e => e.EiId).HasColumnName("EI_ID");

                entity.Property(e => e.EiStatus).HasColumnName("EI_STATUS");

                entity.Property(e => e.EiStatusTranslated)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("EI_STATUS_TRANSLATED");

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("END_DATE");

                entity.Property(e => e.EventId)
                    .HasMaxLength(50)
                    .HasColumnName("EVENT_ID");

                entity.Property(e => e.EventName)
                    .HasMaxLength(255)
                    .HasColumnName("EVENT_NAME");

                entity.Property(e => e.Format)
                    .HasMaxLength(255)
                    .HasColumnName("FORMAT");

                entity.Property(e => e.Gvobject)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("GVOBJECT");

                entity.Property(e => e.InviteOnly).HasColumnName("INVITE_ONLY");

                entity.Property(e => e.Listed).HasColumnName("LISTED");

                entity.Property(e => e.OnlineEvent).HasColumnName("ONLINE_EVENT");

                entity.Property(e => e.Organiser)
                    .HasMaxLength(255)
                    .HasColumnName("ORGANISER");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.Seminar)
                    .HasMaxLength(255)
                    .HasColumnName("SEMINAR");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("START_DATE");

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .HasColumnName("STATUS");

                entity.Property(e => e.Subcategory)
                    .HasMaxLength(255)
                    .HasColumnName("SUBCATEGORY");

                entity.Property(e => e.Timezone)
                    .HasMaxLength(255)
                    .HasColumnName("TIMEZONE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.Url)
                    .HasMaxLength(255)
                    .HasColumnName("URL");
            });

            modelBuilder.Entity<VEventsAndNote>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vEventsAndNotes");

                entity.Property(e => e.AcGroup)
                    .HasMaxLength(255)
                    .HasColumnName("AC_GROUP");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.AcType1)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_1");

                entity.Property(e => e.AcType1Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_1_HLIGHT");

                entity.Property(e => e.AcType2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_2");

                entity.Property(e => e.AcType2Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_2_HLIGHT");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_MANAGER");

                entity.Property(e => e.AcdPath)
                    .HasMaxLength(2000)
                    .HasColumnName("ACD_PATH");

                entity.Property(e => e.AcoId).HasColumnName("ACO_ID");

                entity.Property(e => e.AcoPluralLabel)
                    .HasMaxLength(50)
                    .HasColumnName("ACO_Plural_Label");

                entity.Property(e => e.AcoSingularLabel)
                    .HasMaxLength(50)
                    .HasColumnName("ACO_Singular_Label");

                entity.Property(e => e.AcoSummary)
                    .HasMaxLength(255)
                    .HasColumnName("ACO_SUMMARY");

                entity.Property(e => e.ActId).HasColumnName("ACT_ID");

                entity.Property(e => e.Class)
                    .HasMaxLength(10)
                    .HasColumnName("CLASS");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Details)
                    .IsRequired()
                    .HasMaxLength(4000)
                    .HasColumnName("DETAILS");

                entity.Property(e => e.EvId).HasColumnName("EV_ID");

                entity.Property(e => e.EventDetails)
                    .HasMaxLength(255)
                    .HasColumnName("EVENT_DETAILS");

                entity.Property(e => e.OpId).HasColumnName("OP_ID");

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.ParentSummary)
                    .HasMaxLength(255)
                    .HasColumnName("PARENT_SUMMARY");

                entity.Property(e => e.ParentType)
                    .HasMaxLength(50)
                    .HasColumnName("PARENT_TYPE");

                entity.Property(e => e.Path)
                    .HasMaxLength(2000)
                    .HasColumnName("PATH");

                entity.Property(e => e.PjId).HasColumnName("PJ_ID");

                entity.Property(e => e.RefId).HasColumnName("REF_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Type)
                    .HasMaxLength(50)
                    .HasColumnName("TYPE");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");
            });

            modelBuilder.Entity<VFinancialEntity>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vFinancialEntities");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.FneDeleted).HasColumnName("FNE_DELETED");

                entity.Property(e => e.FneExternal)
                    .HasMaxLength(255)
                    .HasColumnName("FNE_EXTERNAL");

                entity.Property(e => e.FneId).HasColumnName("FNE_ID");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<VFolder>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vFolders");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DocfDeleted).HasColumnName("DOCF_DELETED");

                entity.Property(e => e.DocfId).HasColumnName("DOCF_ID");

                entity.Property(e => e.Path)
                    .HasMaxLength(500)
                    .HasColumnName("PATH");

                entity.Property(e => e.RefId).HasColumnName("REF_ID");

                entity.Property(e => e.SecurityGroup)
                    .HasMaxLength(255)
                    .HasColumnName("SECURITY_GROUP");

                entity.Property(e => e.SecurityId).HasColumnName("SECURITY_ID");

                entity.Property(e => e.SecurityObject)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SECURITY_OBJECT");

                entity.Property(e => e.SecurityOwner).HasColumnName("SECURITY_OWNER");

                entity.Property(e => e.Subfolders).HasColumnName("SUBFOLDERS");
            });

            modelBuilder.Entity<VFormsDataIncDeleted>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vFormsDataIncDeleted");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.Address1)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_1");

                entity.Property(e => e.Address2)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_2");

                entity.Property(e => e.Address3)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_3");

                entity.Property(e => e.BillingAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_ADDRESS_1");

                entity.Property(e => e.BillingAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_ADDRESS_2");

                entity.Property(e => e.BillingAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_ADDRESS_3");

                entity.Property(e => e.BillingCountry)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_COUNTRY");

                entity.Property(e => e.BillingCounty)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_COUNTY");

                entity.Property(e => e.BillingPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_POSTCODE");

                entity.Property(e => e.BillingTown)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_TOWN");

                entity.Property(e => e.BusinessAddressCity).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressCountry).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressState).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.BusinessFaxNumber).HasMaxLength(255);

                entity.Property(e => e.BusinessHomePage).HasMaxLength(255);

                entity.Property(e => e.BusinessTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Country)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.County)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTY");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Email1Address).HasMaxLength(255);

                entity.Property(e => e.Email2Address).HasMaxLength(255);

                entity.Property(e => e.Email3Address).HasMaxLength(255);

                entity.Property(e => e.Fax1)
                    .HasMaxLength(255)
                    .HasColumnName("FAX_1");

                entity.Property(e => e.Fax2)
                    .HasMaxLength(255)
                    .HasColumnName("FAX_2");

                entity.Property(e => e.Fax3)
                    .HasMaxLength(255)
                    .HasColumnName("FAX_3");

                entity.Property(e => e.FirstName).HasMaxLength(255);

                entity.Property(e => e.FrmAcId).HasColumnName("FRM_AC_ID");

                entity.Property(e => e.FrmDeleted).HasColumnName("FRM_DELETED");

                entity.Property(e => e.FrmExternal)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_EXTERNAL");

                entity.Property(e => e.FrmId).HasColumnName("FRM_ID");

                entity.Property(e => e.FrmIdDeleted).HasColumnName("FRM_ID_DELETED");

                entity.Property(e => e.FrmIdProcessed).HasColumnName("FRM_ID_PROCESSED");

                entity.Property(e => e.FrmProcessed).HasColumnName("FRM_PROCESSED");

                entity.Property(e => e.FrmSecurity).HasColumnName("FRM_SECURITY");

                entity.Property(e => e.FrmUd10Bit).HasColumnName("FRM_UD10_BIT");

                entity.Property(e => e.FrmUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("FRM_UD10_DATE");

                entity.Property(e => e.FrmUd10Id).HasColumnName("FRM_UD10_ID");

                entity.Property(e => e.FrmUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("FRM_UD10_NUMERIC");

                entity.Property(e => e.FrmUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD10_TEXT");

                entity.Property(e => e.FrmUd11Bit).HasColumnName("FRM_UD11_BIT");

                entity.Property(e => e.FrmUd11Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD11_TEXT");

                entity.Property(e => e.FrmUd12Bit).HasColumnName("FRM_UD12_BIT");

                entity.Property(e => e.FrmUd12Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD12_TEXT");

                entity.Property(e => e.FrmUd13Bit).HasColumnName("FRM_UD13_BIT");

                entity.Property(e => e.FrmUd13Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD13_TEXT");

                entity.Property(e => e.FrmUd14Bit).HasColumnName("FRM_UD14_BIT");

                entity.Property(e => e.FrmUd14Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD14_TEXT");

                entity.Property(e => e.FrmUd15Bit).HasColumnName("FRM_UD15_BIT");

                entity.Property(e => e.FrmUd15Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD15_TEXT");

                entity.Property(e => e.FrmUd16Bit).HasColumnName("FRM_UD16_BIT");

                entity.Property(e => e.FrmUd16Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD16_TEXT");

                entity.Property(e => e.FrmUd17Bit).HasColumnName("FRM_UD17_BIT");

                entity.Property(e => e.FrmUd17Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD17_TEXT");

                entity.Property(e => e.FrmUd18Bit).HasColumnName("FRM_UD18_BIT");

                entity.Property(e => e.FrmUd18Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD18_TEXT");

                entity.Property(e => e.FrmUd19Bit).HasColumnName("FRM_UD19_BIT");

                entity.Property(e => e.FrmUd19Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD19_TEXT");

                entity.Property(e => e.FrmUd1Bit).HasColumnName("FRM_UD1_BIT");

                entity.Property(e => e.FrmUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("FRM_UD1_DATE");

                entity.Property(e => e.FrmUd1Id).HasColumnName("FRM_UD1_ID");

                entity.Property(e => e.FrmUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("FRM_UD1_NUMERIC");

                entity.Property(e => e.FrmUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD1_TEXT");

                entity.Property(e => e.FrmUd20Bit).HasColumnName("FRM_UD20_BIT");

                entity.Property(e => e.FrmUd20Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD20_TEXT");

                entity.Property(e => e.FrmUd21Bit).HasColumnName("FRM_UD21_BIT");

                entity.Property(e => e.FrmUd21Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD21_TEXT");

                entity.Property(e => e.FrmUd22Bit).HasColumnName("FRM_UD22_BIT");

                entity.Property(e => e.FrmUd22Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD22_TEXT");

                entity.Property(e => e.FrmUd23Bit).HasColumnName("FRM_UD23_BIT");

                entity.Property(e => e.FrmUd23Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD23_TEXT");

                entity.Property(e => e.FrmUd24Bit).HasColumnName("FRM_UD24_BIT");

                entity.Property(e => e.FrmUd24Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD24_TEXT");

                entity.Property(e => e.FrmUd25Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD25_TEXT");

                entity.Property(e => e.FrmUd26Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD26_TEXT");

                entity.Property(e => e.FrmUd27Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD27_TEXT");

                entity.Property(e => e.FrmUd28Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD28_TEXT");

                entity.Property(e => e.FrmUd29Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD29_TEXT");

                entity.Property(e => e.FrmUd2Bit).HasColumnName("FRM_UD2_BIT");

                entity.Property(e => e.FrmUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("FRM_UD2_DATE");

                entity.Property(e => e.FrmUd2Id).HasColumnName("FRM_UD2_ID");

                entity.Property(e => e.FrmUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("FRM_UD2_NUMERIC");

                entity.Property(e => e.FrmUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD2_TEXT");

                entity.Property(e => e.FrmUd30Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD30_TEXT");

                entity.Property(e => e.FrmUd3Bit).HasColumnName("FRM_UD3_BIT");

                entity.Property(e => e.FrmUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("FRM_UD3_DATE");

                entity.Property(e => e.FrmUd3Id).HasColumnName("FRM_UD3_ID");

                entity.Property(e => e.FrmUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("FRM_UD3_NUMERIC");

                entity.Property(e => e.FrmUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD3_TEXT");

                entity.Property(e => e.FrmUd4Bit).HasColumnName("FRM_UD4_BIT");

                entity.Property(e => e.FrmUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("FRM_UD4_DATE");

                entity.Property(e => e.FrmUd4Id).HasColumnName("FRM_UD4_ID");

                entity.Property(e => e.FrmUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("FRM_UD4_NUMERIC");

                entity.Property(e => e.FrmUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD4_TEXT");

                entity.Property(e => e.FrmUd5Bit).HasColumnName("FRM_UD5_BIT");

                entity.Property(e => e.FrmUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("FRM_UD5_DATE");

                entity.Property(e => e.FrmUd5Id).HasColumnName("FRM_UD5_ID");

                entity.Property(e => e.FrmUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("FRM_UD5_NUMERIC");

                entity.Property(e => e.FrmUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD5_TEXT");

                entity.Property(e => e.FrmUd6Bit).HasColumnName("FRM_UD6_BIT");

                entity.Property(e => e.FrmUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("FRM_UD6_DATE");

                entity.Property(e => e.FrmUd6Id).HasColumnName("FRM_UD6_ID");

                entity.Property(e => e.FrmUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("FRM_UD6_NUMERIC");

                entity.Property(e => e.FrmUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD6_TEXT");

                entity.Property(e => e.FrmUd7Bit).HasColumnName("FRM_UD7_BIT");

                entity.Property(e => e.FrmUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("FRM_UD7_DATE");

                entity.Property(e => e.FrmUd7Id).HasColumnName("FRM_UD7_ID");

                entity.Property(e => e.FrmUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("FRM_UD7_NUMERIC");

                entity.Property(e => e.FrmUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD7_TEXT");

                entity.Property(e => e.FrmUd8Bit).HasColumnName("FRM_UD8_BIT");

                entity.Property(e => e.FrmUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("FRM_UD8_DATE");

                entity.Property(e => e.FrmUd8Id).HasColumnName("FRM_UD8_ID");

                entity.Property(e => e.FrmUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("FRM_UD8_NUMERIC");

                entity.Property(e => e.FrmUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD8_TEXT");

                entity.Property(e => e.FrmUd9Bit).HasColumnName("FRM_UD9_BIT");

                entity.Property(e => e.FrmUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("FRM_UD9_DATE");

                entity.Property(e => e.FrmUd9Id).HasColumnName("FRM_UD9_ID");

                entity.Property(e => e.FrmUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("FRM_UD9_NUMERIC");

                entity.Property(e => e.FrmUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD9_TEXT");

                entity.Property(e => e.HomeAddressCity).HasMaxLength(255);

                entity.Property(e => e.HomeAddressCountry).HasMaxLength(255);

                entity.Property(e => e.HomeAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.HomeAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.HomeAddressState).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.HomeFaxNumber).HasMaxLength(255);

                entity.Property(e => e.HomeTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.JobTitle).HasMaxLength(255);

                entity.Property(e => e.LastName).HasMaxLength(255);

                entity.Property(e => e.MiddleName).HasMaxLength(255);

                entity.Property(e => e.MobileTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Notes)
                    .HasMaxLength(4000)
                    .HasColumnName("NOTES");

                entity.Property(e => e.Phone1)
                    .HasMaxLength(255)
                    .HasColumnName("PHONE_1");

                entity.Property(e => e.Phone2)
                    .HasMaxLength(255)
                    .HasColumnName("PHONE_2");

                entity.Property(e => e.Phone3)
                    .HasMaxLength(255)
                    .HasColumnName("PHONE_3");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(255)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.PreferredContactEmail).HasColumnName("PREFERRED_CONTACT_EMAIL");

                entity.Property(e => e.PreferredContactFax).HasColumnName("PREFERRED_CONTACT_FAX");

                entity.Property(e => e.PreferredContactLetter).HasColumnName("PREFERRED_CONTACT_LETTER");

                entity.Property(e => e.PreferredContactPhone).HasColumnName("PREFERRED_CONTACT_PHONE");

                entity.Property(e => e.Source)
                    .HasMaxLength(255)
                    .HasColumnName("SOURCE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Title).HasMaxLength(255);

                entity.Property(e => e.Town)
                    .HasMaxLength(255)
                    .HasColumnName("TOWN");

                entity.Property(e => e.Type).HasColumnName("TYPE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.WebSite1)
                    .HasMaxLength(255)
                    .HasColumnName("WEB_SITE_1");

                entity.Property(e => e.WebSite2)
                    .HasMaxLength(255)
                    .HasColumnName("WEB_SITE_2");
            });

            modelBuilder.Entity<VFormsDatum>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vFormsData");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.Address1)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_1");

                entity.Property(e => e.Address2)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_2");

                entity.Property(e => e.Address3)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_3");

                entity.Property(e => e.BillingAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_ADDRESS_1");

                entity.Property(e => e.BillingAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_ADDRESS_2");

                entity.Property(e => e.BillingAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_ADDRESS_3");

                entity.Property(e => e.BillingCountry)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_COUNTRY");

                entity.Property(e => e.BillingCounty)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_COUNTY");

                entity.Property(e => e.BillingPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_POSTCODE");

                entity.Property(e => e.BillingTown)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_TOWN");

                entity.Property(e => e.BusinessAddressCity).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressCountry).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressState).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.BusinessFaxNumber).HasMaxLength(255);

                entity.Property(e => e.BusinessHomePage).HasMaxLength(255);

                entity.Property(e => e.BusinessTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Country)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.County)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTY");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Email1Address).HasMaxLength(255);

                entity.Property(e => e.Email2Address).HasMaxLength(255);

                entity.Property(e => e.Email3Address).HasMaxLength(255);

                entity.Property(e => e.Fax1)
                    .HasMaxLength(255)
                    .HasColumnName("FAX_1");

                entity.Property(e => e.Fax2)
                    .HasMaxLength(255)
                    .HasColumnName("FAX_2");

                entity.Property(e => e.Fax3)
                    .HasMaxLength(255)
                    .HasColumnName("FAX_3");

                entity.Property(e => e.FirstName).HasMaxLength(255);

                entity.Property(e => e.FrmAcId).HasColumnName("FRM_AC_ID");

                entity.Property(e => e.FrmDeleted).HasColumnName("FRM_DELETED");

                entity.Property(e => e.FrmExternal)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_EXTERNAL");

                entity.Property(e => e.FrmId).HasColumnName("FRM_ID");

                entity.Property(e => e.FrmIdDeleted).HasColumnName("FRM_ID_DELETED");

                entity.Property(e => e.FrmIdProcessed).HasColumnName("FRM_ID_PROCESSED");

                entity.Property(e => e.FrmProcessed).HasColumnName("FRM_PROCESSED");

                entity.Property(e => e.FrmSecurity).HasColumnName("FRM_SECURITY");

                entity.Property(e => e.FrmUd10Bit).HasColumnName("FRM_UD10_BIT");

                entity.Property(e => e.FrmUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("FRM_UD10_DATE");

                entity.Property(e => e.FrmUd10Id).HasColumnName("FRM_UD10_ID");

                entity.Property(e => e.FrmUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("FRM_UD10_NUMERIC");

                entity.Property(e => e.FrmUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD10_TEXT");

                entity.Property(e => e.FrmUd11Bit).HasColumnName("FRM_UD11_BIT");

                entity.Property(e => e.FrmUd11Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD11_TEXT");

                entity.Property(e => e.FrmUd12Bit).HasColumnName("FRM_UD12_BIT");

                entity.Property(e => e.FrmUd12Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD12_TEXT");

                entity.Property(e => e.FrmUd13Bit).HasColumnName("FRM_UD13_BIT");

                entity.Property(e => e.FrmUd13Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD13_TEXT");

                entity.Property(e => e.FrmUd14Bit).HasColumnName("FRM_UD14_BIT");

                entity.Property(e => e.FrmUd14Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD14_TEXT");

                entity.Property(e => e.FrmUd15Bit).HasColumnName("FRM_UD15_BIT");

                entity.Property(e => e.FrmUd15Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD15_TEXT");

                entity.Property(e => e.FrmUd16Bit).HasColumnName("FRM_UD16_BIT");

                entity.Property(e => e.FrmUd16Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD16_TEXT");

                entity.Property(e => e.FrmUd17Bit).HasColumnName("FRM_UD17_BIT");

                entity.Property(e => e.FrmUd17Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD17_TEXT");

                entity.Property(e => e.FrmUd18Bit).HasColumnName("FRM_UD18_BIT");

                entity.Property(e => e.FrmUd18Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD18_TEXT");

                entity.Property(e => e.FrmUd19Bit).HasColumnName("FRM_UD19_BIT");

                entity.Property(e => e.FrmUd19Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD19_TEXT");

                entity.Property(e => e.FrmUd1Bit).HasColumnName("FRM_UD1_BIT");

                entity.Property(e => e.FrmUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("FRM_UD1_DATE");

                entity.Property(e => e.FrmUd1Id).HasColumnName("FRM_UD1_ID");

                entity.Property(e => e.FrmUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("FRM_UD1_NUMERIC");

                entity.Property(e => e.FrmUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD1_TEXT");

                entity.Property(e => e.FrmUd20Bit).HasColumnName("FRM_UD20_BIT");

                entity.Property(e => e.FrmUd20Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD20_TEXT");

                entity.Property(e => e.FrmUd21Bit).HasColumnName("FRM_UD21_BIT");

                entity.Property(e => e.FrmUd21Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD21_TEXT");

                entity.Property(e => e.FrmUd22Bit).HasColumnName("FRM_UD22_BIT");

                entity.Property(e => e.FrmUd22Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD22_TEXT");

                entity.Property(e => e.FrmUd23Bit).HasColumnName("FRM_UD23_BIT");

                entity.Property(e => e.FrmUd23Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD23_TEXT");

                entity.Property(e => e.FrmUd24Bit).HasColumnName("FRM_UD24_BIT");

                entity.Property(e => e.FrmUd24Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD24_TEXT");

                entity.Property(e => e.FrmUd25Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD25_TEXT");

                entity.Property(e => e.FrmUd26Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD26_TEXT");

                entity.Property(e => e.FrmUd27Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD27_TEXT");

                entity.Property(e => e.FrmUd28Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD28_TEXT");

                entity.Property(e => e.FrmUd29Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD29_TEXT");

                entity.Property(e => e.FrmUd2Bit).HasColumnName("FRM_UD2_BIT");

                entity.Property(e => e.FrmUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("FRM_UD2_DATE");

                entity.Property(e => e.FrmUd2Id).HasColumnName("FRM_UD2_ID");

                entity.Property(e => e.FrmUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("FRM_UD2_NUMERIC");

                entity.Property(e => e.FrmUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD2_TEXT");

                entity.Property(e => e.FrmUd30Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD30_TEXT");

                entity.Property(e => e.FrmUd3Bit).HasColumnName("FRM_UD3_BIT");

                entity.Property(e => e.FrmUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("FRM_UD3_DATE");

                entity.Property(e => e.FrmUd3Id).HasColumnName("FRM_UD3_ID");

                entity.Property(e => e.FrmUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("FRM_UD3_NUMERIC");

                entity.Property(e => e.FrmUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD3_TEXT");

                entity.Property(e => e.FrmUd4Bit).HasColumnName("FRM_UD4_BIT");

                entity.Property(e => e.FrmUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("FRM_UD4_DATE");

                entity.Property(e => e.FrmUd4Id).HasColumnName("FRM_UD4_ID");

                entity.Property(e => e.FrmUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("FRM_UD4_NUMERIC");

                entity.Property(e => e.FrmUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD4_TEXT");

                entity.Property(e => e.FrmUd5Bit).HasColumnName("FRM_UD5_BIT");

                entity.Property(e => e.FrmUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("FRM_UD5_DATE");

                entity.Property(e => e.FrmUd5Id).HasColumnName("FRM_UD5_ID");

                entity.Property(e => e.FrmUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("FRM_UD5_NUMERIC");

                entity.Property(e => e.FrmUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD5_TEXT");

                entity.Property(e => e.FrmUd6Bit).HasColumnName("FRM_UD6_BIT");

                entity.Property(e => e.FrmUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("FRM_UD6_DATE");

                entity.Property(e => e.FrmUd6Id).HasColumnName("FRM_UD6_ID");

                entity.Property(e => e.FrmUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("FRM_UD6_NUMERIC");

                entity.Property(e => e.FrmUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD6_TEXT");

                entity.Property(e => e.FrmUd7Bit).HasColumnName("FRM_UD7_BIT");

                entity.Property(e => e.FrmUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("FRM_UD7_DATE");

                entity.Property(e => e.FrmUd7Id).HasColumnName("FRM_UD7_ID");

                entity.Property(e => e.FrmUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("FRM_UD7_NUMERIC");

                entity.Property(e => e.FrmUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD7_TEXT");

                entity.Property(e => e.FrmUd8Bit).HasColumnName("FRM_UD8_BIT");

                entity.Property(e => e.FrmUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("FRM_UD8_DATE");

                entity.Property(e => e.FrmUd8Id).HasColumnName("FRM_UD8_ID");

                entity.Property(e => e.FrmUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("FRM_UD8_NUMERIC");

                entity.Property(e => e.FrmUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD8_TEXT");

                entity.Property(e => e.FrmUd9Bit).HasColumnName("FRM_UD9_BIT");

                entity.Property(e => e.FrmUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("FRM_UD9_DATE");

                entity.Property(e => e.FrmUd9Id).HasColumnName("FRM_UD9_ID");

                entity.Property(e => e.FrmUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("FRM_UD9_NUMERIC");

                entity.Property(e => e.FrmUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("FRM_UD9_TEXT");

                entity.Property(e => e.HomeAddressCity).HasMaxLength(255);

                entity.Property(e => e.HomeAddressCountry).HasMaxLength(255);

                entity.Property(e => e.HomeAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.HomeAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.HomeAddressState).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.HomeFaxNumber).HasMaxLength(255);

                entity.Property(e => e.HomeTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.JobTitle).HasMaxLength(255);

                entity.Property(e => e.LastName).HasMaxLength(255);

                entity.Property(e => e.MiddleName).HasMaxLength(255);

                entity.Property(e => e.MobileTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Notes)
                    .HasMaxLength(4000)
                    .HasColumnName("NOTES");

                entity.Property(e => e.Phone1)
                    .HasMaxLength(255)
                    .HasColumnName("PHONE_1");

                entity.Property(e => e.Phone2)
                    .HasMaxLength(255)
                    .HasColumnName("PHONE_2");

                entity.Property(e => e.Phone3)
                    .HasMaxLength(255)
                    .HasColumnName("PHONE_3");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(255)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.PreferredContactEmail).HasColumnName("PREFERRED_CONTACT_EMAIL");

                entity.Property(e => e.PreferredContactFax).HasColumnName("PREFERRED_CONTACT_FAX");

                entity.Property(e => e.PreferredContactLetter).HasColumnName("PREFERRED_CONTACT_LETTER");

                entity.Property(e => e.PreferredContactPhone).HasColumnName("PREFERRED_CONTACT_PHONE");

                entity.Property(e => e.Source)
                    .HasMaxLength(255)
                    .HasColumnName("SOURCE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Title).HasMaxLength(255);

                entity.Property(e => e.Town)
                    .HasMaxLength(255)
                    .HasColumnName("TOWN");

                entity.Property(e => e.Type).HasColumnName("TYPE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.WebSite1)
                    .HasMaxLength(255)
                    .HasColumnName("WEB_SITE_1");

                entity.Property(e => e.WebSite2)
                    .HasMaxLength(255)
                    .HasColumnName("WEB_SITE_2");
            });

            modelBuilder.Entity<VGeoValid>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vGeoValid");

                entity.Property(e => e.GeoAcId).HasColumnName("GEO_AC_ID");

                entity.Property(e => e.GeoAddress)
                    .HasMaxLength(1000)
                    .HasColumnName("GEO_ADDRESS");

                entity.Property(e => e.GeoColumnName)
                    .HasMaxLength(50)
                    .HasColumnName("GEO_COLUMN_NAME");

                entity.Property(e => e.GeoCountry).HasColumnName("GEO_COUNTRY");

                entity.Property(e => e.GeoExpiry)
                    .HasColumnType("datetime")
                    .HasColumnName("GEO_EXPIRY");

                entity.Property(e => e.GeoHash)
                    .HasMaxLength(20)
                    .HasColumnName("GEO_HASH")
                    .IsFixedLength(true);

                entity.Property(e => e.GeoId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("GEO_ID");

                entity.Property(e => e.GeoIsExtension).HasColumnName("GEO_IS_EXTENSION");

                entity.Property(e => e.GeoLatitude).HasColumnName("GEO_LATITUDE");

                entity.Property(e => e.GeoLongitude).HasColumnName("GEO_LONGITUDE");

                entity.Property(e => e.GeoObjId).HasColumnName("GEO_OBJ_ID");

                entity.Property(e => e.GeoObjectName)
                    .HasMaxLength(100)
                    .HasColumnName("GEO_OBJECT_NAME");

                entity.Property(e => e.GeoPendingLookup).HasColumnName("GEO_PENDING_LOOKUP");

                entity.Property(e => e.GeoPostCode)
                    .HasMaxLength(50)
                    .HasColumnName("GEO_POST_CODE");

                entity.Property(e => e.GeoTableName)
                    .HasMaxLength(50)
                    .HasColumnName("GEO_TABLE_NAME");

                entity.Property(e => e.GeoUpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("GEO_UPDATED_DATE");
            });

            modelBuilder.Entity<VGeocodesCodedToday>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vGeocodesCodedToday");

                entity.Property(e => e.GeoId).HasColumnName("GEO_ID");
            });

            modelBuilder.Entity<VGeocodesExpirationByDay>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vGeocodesExpirationByDay");

                entity.Property(e => e.Dayno).HasColumnName("DAYNO");

                entity.Property(e => e.Total).HasColumnName("TOTAL");
            });

            modelBuilder.Entity<VGeocodesForCoding>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vGeocodesForCoding");

                entity.Property(e => e.GeoAddress)
                    .HasMaxLength(1000)
                    .HasColumnName("GEO_ADDRESS");

                entity.Property(e => e.GeoExpiry)
                    .HasColumnType("datetime")
                    .HasColumnName("GEO_EXPIRY");

                entity.Property(e => e.GeoId).HasColumnName("GEO_ID");

                entity.Property(e => e.GeoPendingLookup).HasColumnName("GEO_PENDING_LOOKUP");

                entity.Property(e => e.GeoPostCode)
                    .HasMaxLength(50)
                    .HasColumnName("GEO_POST_CODE");

                entity.Property(e => e.Iso2code)
                    .HasMaxLength(2)
                    .HasColumnName("ISO_2CODE")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<VGeocodingFlag>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vGeocodingFlags");

                entity.Property(e => e.GeoId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("GEO_ID");

                entity.Property(e => e.IsGeocoded).HasColumnName("IS_GEOCODED");

                entity.Property(e => e.LastGeocoded)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_GEOCODED");
            });

            modelBuilder.Entity<VGeocodingStatistic>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vGeocodingStatistics");

                entity.Property(e => e.Colour)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VGetAgreement>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vGetAgreements");

                entity.Property(e => e.AgrId).HasColumnName("AGR_ID");

                entity.Property(e => e.AgreementDocumentFolder)
                    .IsRequired()
                    .HasMaxLength(2000)
                    .HasColumnName("AGREEMENT_DOCUMENT_FOLDER");

                entity.Property(e => e.AgreementDocumentName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("AGREEMENT_DOCUMENT_NAME");

                entity.Property(e => e.AgreementName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("AGREEMENT_NAME");

                entity.Property(e => e.AgreementStatus).HasColumnName("AGREEMENT_STATUS");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DocId).HasColumnName("DOC_ID");

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.ProviderLink)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("PROVIDER_LINK")
                    .IsFixedLength(true);

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UsId).HasColumnName("US_ID");
            });

            modelBuilder.Entity<VGetAllAgreement>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vGetAllAgreements");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AcpId).HasColumnName("ACP_ID");

                entity.Property(e => e.ActId).HasColumnName("ACT_ID");

                entity.Property(e => e.AgrId).HasColumnName("AGR_ID");

                entity.Property(e => e.AgreementCancelled).HasColumnName("AGREEMENT_CANCELLED");

                entity.Property(e => e.AgreementDocumentFolder)
                    .IsRequired()
                    .HasMaxLength(2000)
                    .HasColumnName("AGREEMENT_DOCUMENT_FOLDER");

                entity.Property(e => e.AgreementDocumentName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("AGREEMENT_DOCUMENT_NAME");

                entity.Property(e => e.AgreementName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("AGREEMENT_NAME");

                entity.Property(e => e.AgreementProvider).HasColumnName("AGREEMENT_PROVIDER");

                entity.Property(e => e.AgreementStatus).HasColumnName("AGREEMENT_STATUS");

                entity.Property(e => e.CancelledBy)
                    .HasMaxLength(255)
                    .HasColumnName("CANCELLED_BY");

                entity.Property(e => e.CancelledDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CANCELLED_DATE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DocfId).HasColumnName("DOCF_ID");

                entity.Property(e => e.ExternalSocId).HasColumnName("EXTERNAL_SOC_ID");

                entity.Property(e => e.IsDownloaded).HasColumnName("IS_DOWNLOADED");

                entity.Property(e => e.IsPortalAgreement).HasColumnName("IS_PORTAL_AGREEMENT");

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .HasColumnName("NAME");

                entity.Property(e => e.OpId).HasColumnName("OP_ID");

                entity.Property(e => e.OpqId).HasColumnName("OPQ_ID");

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.ParentType)
                    .HasMaxLength(19)
                    .IsUnicode(false)
                    .HasColumnName("PARENT_TYPE");

                entity.Property(e => e.PjId).HasColumnName("PJ_ID");

                entity.Property(e => e.ProviderId)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("PROVIDER_ID");

                entity.Property(e => e.ProviderLink)
                    .HasMaxLength(255)
                    .HasColumnName("PROVIDER_LINK")
                    .IsFixedLength(true);

                entity.Property(e => e.ProviderStatus)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("PROVIDER_STATUS");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.SembId).HasColumnName("SEMB_ID");

                entity.Property(e => e.SembaId).HasColumnName("SEMBA_ID");

                entity.Property(e => e.SemsId).HasColumnName("SEMS_ID");

                entity.Property(e => e.SemsaId).HasColumnName("SEMSA_ID");

                entity.Property(e => e.SiId).HasColumnName("SI_ID");

                entity.Property(e => e.SitId).HasColumnName("SIT_ID");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsaId).HasColumnName("USA_ID");
            });

            modelBuilder.Entity<VGetConnectPendingLmupload>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vGetConnectPendingLMUploads");

                entity.Property(e => e.LmrId).HasColumnName("LMR_ID");

                entity.Property(e => e.MailRunType).HasColumnName("MAIL_RUN_TYPE");

                entity.Property(e => e.Owner).HasColumnName("OWNER");

                entity.Property(e => e.RecipientFilter)
                    .HasMaxLength(2000)
                    .HasColumnName("RECIPIENT_FILTER");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");
            });

            modelBuilder.Entity<VGetConnectPendingUpload>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vGetConnectPendingUploads");

                entity.Property(e => e.ConnectOptInType).HasColumnName("CONNECT_OPT_IN_TYPE");

                entity.Property(e => e.GvConnectUploaded).HasColumnName("GV_CONNECT_UPLOADED");

                entity.Property(e => e.GvConnectUploadedBy)
                    .HasMaxLength(255)
                    .HasColumnName("GV_CONNECT_UPLOADED_BY");

                entity.Property(e => e.GvConnectUploadedId).HasColumnName("GV_CONNECT_UPLOADED_ID");

                entity.Property(e => e.MacId).HasColumnName("MAC_ID");

                entity.Property(e => e.MacType).HasColumnName("MAC_TYPE");

                entity.Property(e => e.McrId).HasColumnName("MCR_ID");

                entity.Property(e => e.NewOnly).HasColumnName("NEW_ONLY");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");
            });

            modelBuilder.Entity<VGetUserEmailInfo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vGetUserEmailInfo");

                entity.Property(e => e.EmailAddress)
                    .HasMaxLength(255)
                    .HasColumnName("EMAIL_ADDRESS");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UsId).HasColumnName("US_ID");
            });

            modelBuilder.Entity<VGetUserScanInfo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vGetUserScanInfo");

                entity.Property(e => e.EmailAddress)
                    .HasMaxLength(255)
                    .HasColumnName("EMAIL_ADDRESS");

                entity.Property(e => e.EmailScanAppointments).HasColumnName("EMAIL_SCAN_APPOINTMENTS");

                entity.Property(e => e.EmailScanContacts).HasColumnName("EMAIL_SCAN_CONTACTS");

                entity.Property(e => e.EmailScanDetails)
                    .HasMaxLength(512)
                    .HasColumnName("EMAIL_SCAN_DETAILS");

                entity.Property(e => e.EmailScanEmails).HasColumnName("EMAIL_SCAN_EMAILS");

                entity.Property(e => e.EmailScanExclusions)
                    .HasMaxLength(1024)
                    .HasColumnName("EMAIL_SCAN_EXCLUSIONS");

                entity.Property(e => e.EmailScanFolders)
                    .HasMaxLength(1024)
                    .HasColumnName("EMAIL_SCAN_FOLDERS");

                entity.Property(e => e.EmailScanMaxSensitivity).HasColumnName("EMAIL_SCAN_MAX_SENSITIVITY");

                entity.Property(e => e.EmailScanTasks).HasColumnName("EMAIL_SCAN_TASKS");

                entity.Property(e => e.LastScanned)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_SCANNED");

                entity.Property(e => e.NtAccount)
                    .HasMaxLength(100)
                    .HasColumnName("NT_ACCOUNT");

                entity.Property(e => e.PrivateEmail).HasColumnName("PRIVATE_EMAIL");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UsId).HasColumnName("US_ID");
            });

            modelBuilder.Entity<VHybridUser>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vHybridUsers");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.HybridDefaultMode)
                    .HasMaxLength(255)
                    .HasColumnName("HYBRID_DEFAULT_MODE");

                entity.Property(e => e.HybridEnabled).HasColumnName("HYBRID_ENABLED");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UserGroupName)
                    .HasMaxLength(255)
                    .HasColumnName("USER_GROUP_NAME");
            });

            modelBuilder.Entity<VIntegrationLink>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vIntegrationLinks");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.FinancialEntity)
                    .HasMaxLength(255)
                    .HasColumnName("FINANCIAL_ENTITY");

                entity.Property(e => e.FneId).HasColumnName("FNE_ID");

                entity.Property(e => e.Gvname)
                    .HasMaxLength(255)
                    .HasColumnName("GVNAME")
                    .UseCollation("Latin1_General_CI_AS");

                entity.Property(e => e.Gvobject)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("GVOBJECT");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.IiId).HasColumnName("II_ID");

                entity.Property(e => e.IntegrationId)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("INTEGRATION_ID");

                entity.Property(e => e.IntegrationName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("INTEGRATION_NAME");

                entity.Property(e => e.IntegrationType)
                    .HasMaxLength(255)
                    .HasColumnName("INTEGRATION_TYPE");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.Primary).HasColumnName("PRIMARY");

                entity.Property(e => e.Secondary).HasColumnName("SECONDARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<VIntegrationsList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vIntegrationsList");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.DisabledByUpgrade).HasColumnName("DISABLED_BY_UPGRADE");

                entity.Property(e => e.Enabled).HasColumnName("ENABLED");

                entity.Property(e => e.InstalledVersion)
                    .HasMaxLength(50)
                    .HasColumnName("INSTALLED_VERSION");

                entity.Property(e => e.IntegrationType).HasColumnName("INTEGRATION_TYPE");

                entity.Property(e => e.IntegrationVersion)
                    .HasMaxLength(50)
                    .HasColumnName("INTEGRATION_VERSION");

                entity.Property(e => e.IsUpdating).HasColumnName("IS_UPDATING");

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .HasColumnName("NAME");

                entity.Property(e => e.SiId).HasColumnName("SI_ID");

                entity.Property(e => e.SitId).HasColumnName("SIT_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<VItemAction>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vItemActions");

                entity.Property(e => e.Body).HasColumnName("BODY");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DateReceived)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_RECEIVED");

                entity.Property(e => e.DateSent)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_SENT");

                entity.Property(e => e.FilePath)
                    .HasMaxLength(2000)
                    .HasColumnName("FILE_PATH");

                entity.Property(e => e.HtmlBody)
                    .HasColumnType("text")
                    .HasColumnName("HTML_BODY");

                entity.Property(e => e.IsSticky).HasColumnName("IS_STICKY");

                entity.Property(e => e.LinkedItemType)
                    .HasMaxLength(50)
                    .HasColumnName("LINKED_ITEM_TYPE");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.ObjectType)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("OBJECT_TYPE");

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.ParentType)
                    .HasMaxLength(255)
                    .HasColumnName("PARENT_TYPE");

                entity.Property(e => e.Recipient)
                    .HasMaxLength(255)
                    .HasColumnName("RECIPIENT");

                entity.Property(e => e.RecipientAddress)
                    .HasMaxLength(255)
                    .HasColumnName("RECIPIENT_ADDRESS");

                entity.Property(e => e.Sender)
                    .HasMaxLength(255)
                    .HasColumnName("SENDER");

                entity.Property(e => e.SenderAddress)
                    .HasMaxLength(255)
                    .HasColumnName("SENDER_ADDRESS");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");
            });

            modelBuilder.Entity<VItemReport>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vItemReports");

                entity.Property(e => e.AcGroup)
                    .HasMaxLength(255)
                    .HasColumnName("AC_GROUP");

                entity.Property(e => e.AccessOptionName)
                    .HasMaxLength(50)
                    .HasColumnName("ACCESS_OPTION_NAME");

                entity.Property(e => e.AccessOptionType)
                    .HasMaxLength(255)
                    .HasColumnName("ACCESS_OPTION_TYPE");

                entity.Property(e => e.AcoId).HasColumnName("ACO_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.NotLegacy).HasColumnName("NOT_LEGACY");

                entity.Property(e => e.NotSrs).HasColumnName("NOT_SRS");

                entity.Property(e => e.OwnerName)
                    .HasMaxLength(255)
                    .HasColumnName("OWNER_NAME");

                entity.Property(e => e.ReId).HasColumnName("RE_ID");

                entity.Property(e => e.ReIdStandardnull).HasColumnName("RE_ID_STANDARDNULL");

                entity.Property(e => e.ReIdValidChart).HasColumnName("RE_ID_VALID_CHART");

                entity.Property(e => e.ReOwner).HasColumnName("RE_OWNER");

                entity.Property(e => e.ReQuery).HasColumnName("RE_QUERY");

                entity.Property(e => e.ReType)
                    .HasMaxLength(255)
                    .HasColumnName("RE_TYPE");

                entity.Property(e => e.ReportArea)
                    .HasMaxLength(255)
                    .HasColumnName("REPORT_AREA");

                entity.Property(e => e.ReportType)
                    .HasMaxLength(32)
                    .HasColumnName("REPORT_TYPE")
                    .UseCollation("Latin1_General_CI_AS");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.SystemReport).HasColumnName("SYSTEM_REPORT");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");
            });

            modelBuilder.Entity<VJob>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vJobs");

                entity.Property(e => e.Accountname)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNTNAME");

                entity.Property(e => e.Command)
                    .HasMaxLength(255)
                    .HasColumnName("COMMAND");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Deletetext)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("DELETETEXT");

                entity.Property(e => e.Detailstext)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("DETAILSTEXT");

                entity.Property(e => e.Failed).HasColumnName("FAILED");

                entity.Property(e => e.Holdtext)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("HOLDTEXT");

                entity.Property(e => e.JobId).HasColumnName("JOB_ID");

                entity.Property(e => e.JobType)
                    .HasMaxLength(255)
                    .HasColumnName("JOB_TYPE");

                entity.Property(e => e.Jobstatus).HasColumnName("JOBSTATUS");

                entity.Property(e => e.ObjId)
                    .HasMaxLength(50)
                    .HasColumnName("OBJ_ID");

                entity.Property(e => e.ObjectType)
                    .HasMaxLength(50)
                    .HasColumnName("OBJECT_TYPE");

                entity.Property(e => e.Readytext)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("READYTEXT");

                entity.Property(e => e.Result)
                    .HasMaxLength(255)
                    .HasColumnName("RESULT");

                entity.Property(e => e.RunDate)
                    .HasColumnType("datetime")
                    .HasColumnName("RUN_DATE");

                entity.Property(e => e.Statustext)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("STATUSTEXT");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<VLeadConnectMailshotRecipient>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vLeadConnectMailshotRecipients");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AssignedBy)
                    .HasMaxLength(100)
                    .HasColumnName("ASSIGNED_BY");

                entity.Property(e => e.AssignedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ASSIGNED_DATE");

                entity.Property(e => e.BatchId).HasColumnName("BATCH_ID");

                entity.Property(e => e.CallbackDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CALLBACK_DATE");

                entity.Property(e => e.ClickCount).HasColumnName("CLICK_COUNT");

                entity.Property(e => e.CompanyAddress1)
                    .HasMaxLength(100)
                    .HasColumnName("COMPANY_ADDRESS1");

                entity.Property(e => e.CompanyAddress2)
                    .HasMaxLength(100)
                    .HasColumnName("COMPANY_ADDRESS2");

                entity.Property(e => e.CompanyAddress3)
                    .HasMaxLength(100)
                    .HasColumnName("COMPANY_ADDRESS3");

                entity.Property(e => e.CompanyCountry)
                    .HasMaxLength(100)
                    .HasColumnName("COMPANY_COUNTRY");

                entity.Property(e => e.CompanyCounty)
                    .HasMaxLength(100)
                    .HasColumnName("COMPANY_COUNTY");

                entity.Property(e => e.CompanyFax)
                    .HasMaxLength(25)
                    .HasColumnName("COMPANY_FAX");

                entity.Property(e => e.CompanyLongestword)
                    .HasMaxLength(100)
                    .HasColumnName("COMPANY_LONGESTWORD");

                entity.Property(e => e.CompanyName)
                    .HasMaxLength(100)
                    .HasColumnName("COMPANY_NAME");

                entity.Property(e => e.CompanyPhone)
                    .HasMaxLength(25)
                    .HasColumnName("COMPANY_PHONE");

                entity.Property(e => e.CompanyPhoneDd)
                    .HasMaxLength(10)
                    .HasColumnName("COMPANY_PHONE_DD");

                entity.Property(e => e.CompanyPostcode)
                    .HasMaxLength(10)
                    .HasColumnName("COMPANY_POSTCODE");

                entity.Property(e => e.CompanyPostcodeDd)
                    .HasMaxLength(10)
                    .HasColumnName("COMPANY_POSTCODE_DD");

                entity.Property(e => e.CompanySoundex)
                    .HasMaxLength(5)
                    .HasColumnName("COMPANY_SOUNDEX");

                entity.Property(e => e.CompanyTown)
                    .HasMaxLength(100)
                    .HasColumnName("COMPANY_TOWN");

                entity.Property(e => e.CompanyWebdomain)
                    .HasMaxLength(255)
                    .HasColumnName("COMPANY_WEBDOMAIN");

                entity.Property(e => e.CompanyWebdomainDd)
                    .HasMaxLength(255)
                    .HasColumnName("COMPANY_WEBDOMAIN_DD");

                entity.Property(e => e.ConnectOptIn).HasColumnName("CONNECT_OPT_IN");

                entity.Property(e => e.ConnectOptInDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CONNECT_OPT_IN_DATE");

                entity.Property(e => e.ContactEmail)
                    .HasMaxLength(100)
                    .HasColumnName("CONTACT_EMAIL");

                entity.Property(e => e.ContactEmailDd)
                    .HasMaxLength(100)
                    .HasColumnName("CONTACT_EMAIL_DD");

                entity.Property(e => e.ContactFirstname)
                    .HasMaxLength(100)
                    .HasColumnName("CONTACT_FIRSTNAME");

                entity.Property(e => e.ContactFirstnameSoundex)
                    .HasMaxLength(5)
                    .HasColumnName("CONTACT_FIRSTNAME_SOUNDEX");

                entity.Property(e => e.ContactJobtitle)
                    .HasMaxLength(100)
                    .HasColumnName("CONTACT_JOBTITLE");

                entity.Property(e => e.ContactLastname)
                    .HasMaxLength(100)
                    .HasColumnName("CONTACT_LASTNAME");

                entity.Property(e => e.ContactLastnameSoundex)
                    .HasMaxLength(5)
                    .HasColumnName("CONTACT_LASTNAME_SOUNDEX");

                entity.Property(e => e.ContactMobile)
                    .HasMaxLength(25)
                    .HasColumnName("CONTACT_MOBILE");

                entity.Property(e => e.ContactMobileDd)
                    .HasMaxLength(10)
                    .HasColumnName("CONTACT_MOBILE_DD");

                entity.Property(e => e.ContactPhone)
                    .HasMaxLength(25)
                    .HasColumnName("CONTACT_PHONE");

                entity.Property(e => e.ContactPhoneDd)
                    .HasMaxLength(10)
                    .HasColumnName("CONTACT_PHONE_DD");

                entity.Property(e => e.ContactSoundex)
                    .HasMaxLength(5)
                    .HasColumnName("CONTACT_SOUNDEX");

                entity.Property(e => e.ContactTitle)
                    .HasMaxLength(25)
                    .HasColumnName("CONTACT_TITLE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(100)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CsDeleted).HasColumnName("CS_DELETED");

                entity.Property(e => e.CsDiscarded).HasColumnName("CS_DISCARDED");

                entity.Property(e => e.CsId).HasColumnName("CS_ID");

                entity.Property(e => e.CsMigrated).HasColumnName("CS_MIGRATED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(100)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.DuplicateCount).HasColumnName("DUPLICATE_COUNT");

                entity.Property(e => e.DuplicateScore).HasColumnName("DUPLICATE_SCORE");

                entity.Property(e => e.Erased).HasColumnName("ERASED");

                entity.Property(e => e.ErasedBy)
                    .HasMaxLength(255)
                    .HasColumnName("ERASED_BY");

                entity.Property(e => e.ErasedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ERASED_DATE");

                entity.Property(e => e.FacebookImage)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_IMAGE");

                entity.Property(e => e.FacebookName)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_NAME");

                entity.Property(e => e.FacebookPrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_PRIVATE_ID");

                entity.Property(e => e.FacebookProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_PROFILE_URL");

                entity.Property(e => e.FacebookPublicId)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_PUBLIC_ID");

                entity.Property(e => e.GplusImage)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_IMAGE");

                entity.Property(e => e.GplusName)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_NAME");

                entity.Property(e => e.GplusPrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_PRIVATE_ID");

                entity.Property(e => e.GplusProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_PROFILE_URL");

                entity.Property(e => e.GplusPublicId)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_PUBLIC_ID");

                entity.Property(e => e.GvcBounceCode)
                    .HasMaxLength(20)
                    .HasColumnName("GVC_BOUNCE_CODE");

                entity.Property(e => e.GvcBounceFlag).HasColumnName("GVC_BOUNCE_FLAG");

                entity.Property(e => e.GvcBounceText)
                    .HasMaxLength(255)
                    .HasColumnName("GVC_BOUNCE_TEXT");

                entity.Property(e => e.GvcClickThruDate)
                    .HasColumnType("datetime")
                    .HasColumnName("GVC_CLICK_THRU_DATE");

                entity.Property(e => e.GvcClickThruFlag).HasColumnName("GVC_CLICK_THRU_FLAG");

                entity.Property(e => e.GvcForwardCount).HasColumnName("GVC_FORWARD_COUNT");

                entity.Property(e => e.GvcForwardDate)
                    .HasColumnType("datetime")
                    .HasColumnName("GVC_FORWARD_DATE");

                entity.Property(e => e.GvcForwardFlag).HasColumnName("GVC_FORWARD_FLAG");

                entity.Property(e => e.GvcLinksClickedCount).HasColumnName("GVC_LINKS_CLICKED_COUNT");

                entity.Property(e => e.GvcReadDate)
                    .HasColumnType("datetime")
                    .HasColumnName("GVC_READ_DATE");

                entity.Property(e => e.GvcReadFlag).HasColumnName("GVC_READ_FLAG");

                entity.Property(e => e.GvcRepliedCount).HasColumnName("GVC_REPLIED_COUNT");

                entity.Property(e => e.GvcRepliedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("GVC_REPLIED_DATE");

                entity.Property(e => e.GvcRepliedFlag).HasColumnName("GVC_REPLIED_FLAG");

                entity.Property(e => e.GvcSentDate)
                    .HasColumnType("datetime")
                    .HasColumnName("GVC_SENT_DATE");

                entity.Property(e => e.GvcSentFlag).HasColumnName("GVC_SENT_FLAG");

                entity.Property(e => e.GvcUnsubAll).HasColumnName("GVC_UNSUB_ALL");

                entity.Property(e => e.GvcUnsubDate)
                    .HasColumnType("datetime")
                    .HasColumnName("GVC_UNSUB_DATE");

                entity.Property(e => e.GvcUnsubThis).HasColumnName("GVC_UNSUB_THIS");

                entity.Property(e => e.IsClaimed).HasColumnName("IS_CLAIMED");

                entity.Property(e => e.LastactionBy)
                    .HasMaxLength(100)
                    .HasColumnName("LASTACTION_BY");

                entity.Property(e => e.LastactionById).HasColumnName("LASTACTION_BY_ID");

                entity.Property(e => e.LastactionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LASTACTION_DATE");

                entity.Property(e => e.LcId).HasColumnName("LC_ID");

                entity.Property(e => e.LcListtypeName)
                    .HasMaxLength(255)
                    .HasColumnName("LC_LISTTYPE_NAME");

                entity.Property(e => e.LeadAllocationMode).HasColumnName("LEAD_ALLOCATION_MODE");

                entity.Property(e => e.LinkedinImage)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_IMAGE");

                entity.Property(e => e.LinkedinName)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_NAME");

                entity.Property(e => e.LinkedinPrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_PRIVATE_ID");

                entity.Property(e => e.LinkedinProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_PROFILE_URL");

                entity.Property(e => e.LinkedinPublicId)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_PUBLIC_ID");

                entity.Property(e => e.ListName)
                    .HasMaxLength(255)
                    .HasColumnName("LIST_NAME");

                entity.Property(e => e.ListOpen).HasColumnName("LIST_OPEN");

                entity.Property(e => e.ListOwnerName)
                    .HasMaxLength(255)
                    .HasColumnName("LIST_OWNER_NAME");

                entity.Property(e => e.LmrCreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("LMR_CREATED_BY");

                entity.Property(e => e.LmrCreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LMR_CREATED_DATE");

                entity.Property(e => e.LmrId).HasColumnName("LMR_ID");

                entity.Property(e => e.LmrrId).HasColumnName("LMRR_ID");

                entity.Property(e => e.LsId).HasColumnName("LS_ID");

                entity.Property(e => e.MigratedBy)
                    .HasMaxLength(100)
                    .HasColumnName("MIGRATED_BY");

                entity.Property(e => e.MigratedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("MIGRATED_DATE");

                entity.Property(e => e.Overdue).HasColumnName("OVERDUE");

                entity.Property(e => e.PendingUpgrade).HasColumnName("PENDING_UPGRADE");

                entity.Property(e => e.PotentialAccount).HasColumnName("POTENTIAL_ACCOUNT");

                entity.Property(e => e.PreferredContactEmail).HasColumnName("PREFERRED_CONTACT_EMAIL");

                entity.Property(e => e.PreferredContactFax).HasColumnName("PREFERRED_CONTACT_FAX");

                entity.Property(e => e.PreferredContactLetter).HasColumnName("PREFERRED_CONTACT_LETTER");

                entity.Property(e => e.PreferredContactPhone).HasColumnName("PREFERRED_CONTACT_PHONE");

                entity.Property(e => e.PrivacyNotified).HasColumnName("PRIVACY_NOTIFIED");

                entity.Property(e => e.PrivacyNotifiedBy)
                    .HasMaxLength(255)
                    .HasColumnName("PRIVACY_NOTIFIED_BY");

                entity.Property(e => e.PrivacyNotifiedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRIVACY_NOTIFIED_DATE");

                entity.Property(e => e.PrivacyNotifiedMethod)
                    .HasMaxLength(255)
                    .HasColumnName("PRIVACY_NOTIFIED_METHOD");

                entity.Property(e => e.RecordOwnerName)
                    .HasMaxLength(255)
                    .HasColumnName("RECORD_OWNER_NAME");

                entity.Property(e => e.RecordOwnerTeam)
                    .HasMaxLength(255)
                    .HasColumnName("RECORD_OWNER_TEAM");

                entity.Property(e => e.RemovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("REMOVAL_DATE");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Status)
                    .HasMaxLength(100)
                    .HasColumnName("STATUS");

                entity.Property(e => e.StatusId).HasColumnName("STATUS_ID");

                entity.Property(e => e.Summary)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TimeSpentSecs).HasColumnName("TIME_SPENT_SECS");

                entity.Property(e => e.Twitter1Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_IMAGE");

                entity.Property(e => e.Twitter1Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_NAME");

                entity.Property(e => e.Twitter1PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_PRIVATE_ID");

                entity.Property(e => e.Twitter1ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_PROFILE_URL");

                entity.Property(e => e.Twitter1PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_PUBLIC_ID");

                entity.Property(e => e.Twitter2Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_IMAGE");

                entity.Property(e => e.Twitter2Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_NAME");

                entity.Property(e => e.Twitter2PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_PRIVATE_ID");

                entity.Property(e => e.Twitter2ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_PROFILE_URL");

                entity.Property(e => e.Twitter2PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_PUBLIC_ID");

                entity.Property(e => e.Twitter3Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_IMAGE");

                entity.Property(e => e.Twitter3Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_NAME");

                entity.Property(e => e.Twitter3PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_PRIVATE_ID");

                entity.Property(e => e.Twitter3ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_PROFILE_URL");

                entity.Property(e => e.Twitter3PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_PUBLIC_ID");

                entity.Property(e => e.Twitter4Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_IMAGE");

                entity.Property(e => e.Twitter4Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_NAME");

                entity.Property(e => e.Twitter4PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_PRIVATE_ID");

                entity.Property(e => e.Twitter4ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_PROFILE_URL");

                entity.Property(e => e.Twitter4PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_PUBLIC_ID");

                entity.Property(e => e.Twitter5Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_IMAGE");

                entity.Property(e => e.Twitter5Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_NAME");

                entity.Property(e => e.Twitter5PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_PRIVATE_ID");

                entity.Property(e => e.Twitter5ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_PROFILE_URL");

                entity.Property(e => e.Twitter5PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_PUBLIC_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(100)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsIdControl).HasColumnName("US_ID_CONTROL");

                entity.Property(e => e.UsIdOwner).HasColumnName("US_ID_OWNER");

                entity.Property(e => e.UsgIdOwner).HasColumnName("USG_ID_OWNER");
            });

            modelBuilder.Entity<VLeadControlList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vLeadControlList");

                entity.Property(e => e.CClaimed).HasColumnName("C_CLAIMED");

                entity.Property(e => e.CFailed).HasColumnName("C_FAILED");

                entity.Property(e => e.CPromoted).HasColumnName("C_PROMOTED");

                entity.Property(e => e.CSucceeded).HasColumnName("C_SUCCEEDED");

                entity.Property(e => e.CTotal).HasColumnName("C_TOTAL");

                entity.Property(e => e.CWorkingTotal).HasColumnName("C_WORKING_TOTAL");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DedupePackage)
                    .HasMaxLength(255)
                    .HasColumnName("DEDUPE_PACKAGE");

                entity.Property(e => e.DedupeStatus).HasColumnName("DEDUPE_STATUS");

                entity.Property(e => e.DedupeStatusText)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEDUPE_STATUS_TEXT");

                entity.Property(e => e.Deduping).HasColumnName("DEDUPING");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.LcDeleted).HasColumnName("LC_DELETED");

                entity.Property(e => e.LcId).HasColumnName("LC_ID");

                entity.Property(e => e.LcIdOpen).HasColumnName("LC_ID_OPEN");

                entity.Property(e => e.LcListtype).HasColumnName("LC_LISTTYPE");

                entity.Property(e => e.LcListtypeName)
                    .HasMaxLength(255)
                    .HasColumnName("LC_LISTTYPE_NAME");

                entity.Property(e => e.LeadAllocationMode).HasColumnName("LEAD_ALLOCATION_MODE");

                entity.Property(e => e.ListLayoutname)
                    .HasMaxLength(255)
                    .HasColumnName("LIST_LAYOUTNAME");

                entity.Property(e => e.ListLayoutnameOpen)
                    .HasMaxLength(255)
                    .HasColumnName("LIST_LAYOUTNAME_OPEN");

                entity.Property(e => e.ListObjectname)
                    .HasMaxLength(255)
                    .HasColumnName("LIST_OBJECTNAME");

                entity.Property(e => e.ListOpen).HasColumnName("LIST_OPEN");

                entity.Property(e => e.ListTablename)
                    .HasMaxLength(255)
                    .HasColumnName("LIST_TABLENAME");

                entity.Property(e => e.LlId).HasColumnName("LL_ID");

                entity.Property(e => e.ManageList)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("MANAGE_LIST");

                entity.Property(e => e.PiId).HasColumnName("PI_ID");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UpgradeMode).HasColumnName("UPGRADE_MODE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsName)
                    .HasMaxLength(255)
                    .HasColumnName("US_NAME");

                entity.Property(e => e.Version).HasColumnName("VERSION");

                entity.Property(e => e.ViewRecords)
                    .HasMaxLength(68)
                    .HasColumnName("VIEW_RECORDS");
            });

            modelBuilder.Entity<VLeadsConnectSummary>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vLeadsConnectSummary");

                entity.Property(e => e.Bounced).HasColumnName("BOUNCED");

                entity.Property(e => e.Clicked).HasColumnName("CLICKED");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Forwarded).HasColumnName("FORWARDED");

                entity.Property(e => e.GvConnectUploadStatus)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("GV_CONNECT_UPLOAD_STATUS");

                entity.Property(e => e.ListLayoutname)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("LIST_LAYOUTNAME");

                entity.Property(e => e.ListLayoutnameNullable)
                    .HasMaxLength(255)
                    .HasColumnName("LIST_LAYOUTNAME_NULLABLE");

                entity.Property(e => e.ListName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("LIST_NAME");

                entity.Property(e => e.LmrDeleted)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("LMR_DELETED");

                entity.Property(e => e.LmrId).HasColumnName("LMR_ID");

                entity.Property(e => e.LmrIdNullable).HasColumnName("LMR_ID_NULLABLE");

                entity.Property(e => e.MailRunTypeName)
                    .HasMaxLength(255)
                    .HasColumnName("MAIL_RUN_TYPE_NAME");

                entity.Property(e => e.Read).HasColumnName("READ");

                entity.Property(e => e.Replied).HasColumnName("REPLIED");

                entity.Property(e => e.Sent).HasColumnName("SENT");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UnsubbedAll).HasColumnName("UNSUBBED_ALL");

                entity.Property(e => e.UnsubbedThis).HasColumnName("UNSUBBED_THIS");

                entity.Property(e => e.Uploaded).HasColumnName("UPLOADED");
            });

            modelBuilder.Entity<VLeadsLink>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vLeadsLinks");

                entity.Property(e => e.ContactEmailFrom)
                    .HasMaxLength(100)
                    .HasColumnName("CONTACT_EMAIL_FROM");

                entity.Property(e => e.ContactEmailTo)
                    .HasMaxLength(100)
                    .HasColumnName("CONTACT_EMAIL_TO");

                entity.Property(e => e.ContactJobtitleFrom)
                    .HasMaxLength(100)
                    .HasColumnName("CONTACT_JOBTITLE_FROM");

                entity.Property(e => e.ContactJobtitleTo)
                    .HasMaxLength(100)
                    .HasColumnName("CONTACT_JOBTITLE_TO");

                entity.Property(e => e.ContactPhoneFrom)
                    .HasMaxLength(25)
                    .HasColumnName("CONTACT_PHONE_FROM");

                entity.Property(e => e.ContactPhoneTo)
                    .HasMaxLength(25)
                    .HasColumnName("CONTACT_PHONE_TO");

                entity.Property(e => e.CsDiscardedFrom).HasColumnName("CS_DISCARDED_FROM");

                entity.Property(e => e.CsDiscardedTo).HasColumnName("CS_DISCARDED_TO");

                entity.Property(e => e.CsFromSummary)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("CS_FROM_SUMMARY");

                entity.Property(e => e.CsMigratedFrom).HasColumnName("CS_MIGRATED_FROM");

                entity.Property(e => e.CsMigratedTo).HasColumnName("CS_MIGRATED_TO");

                entity.Property(e => e.CsToSummary)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("CS_TO_SUMMARY");

                entity.Property(e => e.ListSummaryFrom)
                    .HasMaxLength(255)
                    .HasColumnName("LIST_SUMMARY_FROM");

                entity.Property(e => e.ListSummaryTo)
                    .HasMaxLength(255)
                    .HasColumnName("LIST_SUMMARY_TO");

                entity.Property(e => e.LmlCreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("LML_CREATED_BY");

                entity.Property(e => e.LmlCreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LML_CREATED_DATE");

                entity.Property(e => e.LmlCsIdFrom).HasColumnName("LML_CS_ID_FROM");

                entity.Property(e => e.LmlCsIdTo).HasColumnName("LML_CS_ID_TO");

                entity.Property(e => e.LmlDeleted).HasColumnName("LML_DELETED");

                entity.Property(e => e.LmlId).HasColumnName("LML_ID");

                entity.Property(e => e.LmlRelationship)
                    .HasMaxLength(255)
                    .HasColumnName("LML_RELATIONSHIP");
            });

            modelBuilder.Entity<VLeadsSpine>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vLeadsSpine");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AssignedBy)
                    .HasMaxLength(100)
                    .HasColumnName("ASSIGNED_BY");

                entity.Property(e => e.AssignedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ASSIGNED_DATE");

                entity.Property(e => e.BatchId).HasColumnName("BATCH_ID");

                entity.Property(e => e.CallbackDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CALLBACK_DATE");

                entity.Property(e => e.CompanyAddress1)
                    .HasMaxLength(100)
                    .HasColumnName("COMPANY_ADDRESS1");

                entity.Property(e => e.CompanyAddress2)
                    .HasMaxLength(100)
                    .HasColumnName("COMPANY_ADDRESS2");

                entity.Property(e => e.CompanyAddress3)
                    .HasMaxLength(100)
                    .HasColumnName("COMPANY_ADDRESS3");

                entity.Property(e => e.CompanyCountry)
                    .HasMaxLength(100)
                    .HasColumnName("COMPANY_COUNTRY");

                entity.Property(e => e.CompanyCounty)
                    .HasMaxLength(100)
                    .HasColumnName("COMPANY_COUNTY");

                entity.Property(e => e.CompanyFax)
                    .HasMaxLength(25)
                    .HasColumnName("COMPANY_FAX");

                entity.Property(e => e.CompanyLongestword)
                    .HasMaxLength(100)
                    .HasColumnName("COMPANY_LONGESTWORD");

                entity.Property(e => e.CompanyName)
                    .HasMaxLength(100)
                    .HasColumnName("COMPANY_NAME");

                entity.Property(e => e.CompanyPhone)
                    .HasMaxLength(25)
                    .HasColumnName("COMPANY_PHONE");

                entity.Property(e => e.CompanyPhoneDd)
                    .HasMaxLength(10)
                    .HasColumnName("COMPANY_PHONE_DD");

                entity.Property(e => e.CompanyPostcode)
                    .HasMaxLength(10)
                    .HasColumnName("COMPANY_POSTCODE");

                entity.Property(e => e.CompanyPostcodeDd)
                    .HasMaxLength(10)
                    .HasColumnName("COMPANY_POSTCODE_DD");

                entity.Property(e => e.CompanySoundex)
                    .HasMaxLength(5)
                    .HasColumnName("COMPANY_SOUNDEX");

                entity.Property(e => e.CompanyTown)
                    .HasMaxLength(100)
                    .HasColumnName("COMPANY_TOWN");

                entity.Property(e => e.CompanyWebdomain)
                    .HasMaxLength(255)
                    .HasColumnName("COMPANY_WEBDOMAIN");

                entity.Property(e => e.CompanyWebdomainDd)
                    .HasMaxLength(255)
                    .HasColumnName("COMPANY_WEBDOMAIN_DD");

                entity.Property(e => e.ConnectOptIn).HasColumnName("CONNECT_OPT_IN");

                entity.Property(e => e.ConnectOptInDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CONNECT_OPT_IN_DATE");

                entity.Property(e => e.ContactEmail)
                    .HasMaxLength(100)
                    .HasColumnName("CONTACT_EMAIL");

                entity.Property(e => e.ContactEmailDd)
                    .HasMaxLength(100)
                    .HasColumnName("CONTACT_EMAIL_DD");

                entity.Property(e => e.ContactFirstname)
                    .HasMaxLength(100)
                    .HasColumnName("CONTACT_FIRSTNAME");

                entity.Property(e => e.ContactFirstnameSoundex)
                    .HasMaxLength(5)
                    .HasColumnName("CONTACT_FIRSTNAME_SOUNDEX");

                entity.Property(e => e.ContactJobtitle)
                    .HasMaxLength(100)
                    .HasColumnName("CONTACT_JOBTITLE");

                entity.Property(e => e.ContactLastname)
                    .HasMaxLength(100)
                    .HasColumnName("CONTACT_LASTNAME");

                entity.Property(e => e.ContactLastnameSoundex)
                    .HasMaxLength(5)
                    .HasColumnName("CONTACT_LASTNAME_SOUNDEX");

                entity.Property(e => e.ContactMobile)
                    .HasMaxLength(25)
                    .HasColumnName("CONTACT_MOBILE");

                entity.Property(e => e.ContactMobileDd)
                    .HasMaxLength(10)
                    .HasColumnName("CONTACT_MOBILE_DD");

                entity.Property(e => e.ContactPhone)
                    .HasMaxLength(25)
                    .HasColumnName("CONTACT_PHONE");

                entity.Property(e => e.ContactPhoneDd)
                    .HasMaxLength(10)
                    .HasColumnName("CONTACT_PHONE_DD");

                entity.Property(e => e.ContactSoundex)
                    .HasMaxLength(5)
                    .HasColumnName("CONTACT_SOUNDEX");

                entity.Property(e => e.ContactTitle)
                    .HasMaxLength(25)
                    .HasColumnName("CONTACT_TITLE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(100)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CsDeleted).HasColumnName("CS_DELETED");

                entity.Property(e => e.CsDiscarded).HasColumnName("CS_DISCARDED");

                entity.Property(e => e.CsId).HasColumnName("CS_ID");

                entity.Property(e => e.CsMigrated).HasColumnName("CS_MIGRATED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(100)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.DuplicateCount).HasColumnName("DUPLICATE_COUNT");

                entity.Property(e => e.DuplicateScore).HasColumnName("DUPLICATE_SCORE");

                entity.Property(e => e.Erased).HasColumnName("ERASED");

                entity.Property(e => e.ErasedBy)
                    .HasMaxLength(255)
                    .HasColumnName("ERASED_BY");

                entity.Property(e => e.ErasedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ERASED_DATE");

                entity.Property(e => e.FacebookImage)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_IMAGE");

                entity.Property(e => e.FacebookName)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_NAME");

                entity.Property(e => e.FacebookPrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_PRIVATE_ID");

                entity.Property(e => e.FacebookProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_PROFILE_URL");

                entity.Property(e => e.FacebookPublicId)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_PUBLIC_ID");

                entity.Property(e => e.GplusImage)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_IMAGE");

                entity.Property(e => e.GplusName)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_NAME");

                entity.Property(e => e.GplusPrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_PRIVATE_ID");

                entity.Property(e => e.GplusProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_PROFILE_URL");

                entity.Property(e => e.GplusPublicId)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_PUBLIC_ID");

                entity.Property(e => e.IsClaimed).HasColumnName("IS_CLAIMED");

                entity.Property(e => e.LastactionBy)
                    .HasMaxLength(100)
                    .HasColumnName("LASTACTION_BY");

                entity.Property(e => e.LastactionById).HasColumnName("LASTACTION_BY_ID");

                entity.Property(e => e.LastactionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LASTACTION_DATE");

                entity.Property(e => e.LcId).HasColumnName("LC_ID");

                entity.Property(e => e.LcListtypeName)
                    .HasMaxLength(255)
                    .HasColumnName("LC_LISTTYPE_NAME");

                entity.Property(e => e.LeadAllocationMode).HasColumnName("LEAD_ALLOCATION_MODE");

                entity.Property(e => e.LinkedinImage)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_IMAGE");

                entity.Property(e => e.LinkedinName)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_NAME");

                entity.Property(e => e.LinkedinPrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_PRIVATE_ID");

                entity.Property(e => e.LinkedinProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_PROFILE_URL");

                entity.Property(e => e.LinkedinPublicId)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_PUBLIC_ID");

                entity.Property(e => e.ListName)
                    .HasMaxLength(255)
                    .HasColumnName("LIST_NAME");

                entity.Property(e => e.ListOpen).HasColumnName("LIST_OPEN");

                entity.Property(e => e.ListOwnerName)
                    .HasMaxLength(255)
                    .HasColumnName("LIST_OWNER_NAME");

                entity.Property(e => e.LsId).HasColumnName("LS_ID");

                entity.Property(e => e.MigratedBy)
                    .HasMaxLength(100)
                    .HasColumnName("MIGRATED_BY");

                entity.Property(e => e.MigratedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("MIGRATED_DATE");

                entity.Property(e => e.Overdue).HasColumnName("OVERDUE");

                entity.Property(e => e.PendingUpgrade).HasColumnName("PENDING_UPGRADE");

                entity.Property(e => e.PotentialAccount).HasColumnName("POTENTIAL_ACCOUNT");

                entity.Property(e => e.PreferredContactEmail).HasColumnName("PREFERRED_CONTACT_EMAIL");

                entity.Property(e => e.PreferredContactFax).HasColumnName("PREFERRED_CONTACT_FAX");

                entity.Property(e => e.PreferredContactLetter).HasColumnName("PREFERRED_CONTACT_LETTER");

                entity.Property(e => e.PreferredContactPhone).HasColumnName("PREFERRED_CONTACT_PHONE");

                entity.Property(e => e.PrivacyNotified).HasColumnName("PRIVACY_NOTIFIED");

                entity.Property(e => e.PrivacyNotifiedBy)
                    .HasMaxLength(255)
                    .HasColumnName("PRIVACY_NOTIFIED_BY");

                entity.Property(e => e.PrivacyNotifiedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRIVACY_NOTIFIED_DATE");

                entity.Property(e => e.PrivacyNotifiedMethod)
                    .HasMaxLength(255)
                    .HasColumnName("PRIVACY_NOTIFIED_METHOD");

                entity.Property(e => e.RecordOwnerName)
                    .HasMaxLength(255)
                    .HasColumnName("RECORD_OWNER_NAME");

                entity.Property(e => e.RecordOwnerTeam)
                    .HasMaxLength(255)
                    .HasColumnName("RECORD_OWNER_TEAM");

                entity.Property(e => e.RemovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("REMOVAL_DATE");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Status)
                    .HasMaxLength(100)
                    .HasColumnName("STATUS");

                entity.Property(e => e.StatusId).HasColumnName("STATUS_ID");

                entity.Property(e => e.Summary)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TimeSpentSecs).HasColumnName("TIME_SPENT_SECS");

                entity.Property(e => e.Twitter1Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_IMAGE");

                entity.Property(e => e.Twitter1Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_NAME");

                entity.Property(e => e.Twitter1PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_PRIVATE_ID");

                entity.Property(e => e.Twitter1ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_PROFILE_URL");

                entity.Property(e => e.Twitter1PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_PUBLIC_ID");

                entity.Property(e => e.Twitter2Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_IMAGE");

                entity.Property(e => e.Twitter2Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_NAME");

                entity.Property(e => e.Twitter2PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_PRIVATE_ID");

                entity.Property(e => e.Twitter2ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_PROFILE_URL");

                entity.Property(e => e.Twitter2PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_PUBLIC_ID");

                entity.Property(e => e.Twitter3Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_IMAGE");

                entity.Property(e => e.Twitter3Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_NAME");

                entity.Property(e => e.Twitter3PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_PRIVATE_ID");

                entity.Property(e => e.Twitter3ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_PROFILE_URL");

                entity.Property(e => e.Twitter3PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_PUBLIC_ID");

                entity.Property(e => e.Twitter4Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_IMAGE");

                entity.Property(e => e.Twitter4Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_NAME");

                entity.Property(e => e.Twitter4PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_PRIVATE_ID");

                entity.Property(e => e.Twitter4ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_PROFILE_URL");

                entity.Property(e => e.Twitter4PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_PUBLIC_ID");

                entity.Property(e => e.Twitter5Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_IMAGE");

                entity.Property(e => e.Twitter5Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_NAME");

                entity.Property(e => e.Twitter5PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_PRIVATE_ID");

                entity.Property(e => e.Twitter5ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_PROFILE_URL");

                entity.Property(e => e.Twitter5PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_PUBLIC_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(100)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsIdControl).HasColumnName("US_ID_CONTROL");

                entity.Property(e => e.UsIdOwner).HasColumnName("US_ID_OWNER");

                entity.Property(e => e.UsgIdOwner).HasColumnName("USG_ID_OWNER");
            });

            modelBuilder.Entity<VLink>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vLinks");

                entity.Property(e => e.AcGroupFrom)
                    .HasMaxLength(255)
                    .HasColumnName("AC_GROUP_FROM");

                entity.Property(e => e.AcGroupTo)
                    .HasMaxLength(255)
                    .HasColumnName("AC_GROUP_TO");

                entity.Property(e => e.AcIdFrom).HasColumnName("AC_ID_FROM");

                entity.Property(e => e.AcIdTo).HasColumnName("AC_ID_TO");

                entity.Property(e => e.AcNameFrom)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME_FROM");

                entity.Property(e => e.AcNameTo)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME_TO");

                entity.Property(e => e.AcoIdTo).HasColumnName("ACO_ID_TO");

                entity.Property(e => e.Autolink).HasColumnName("AUTOLINK");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeleteText)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DELETE_TEXT");

                entity.Property(e => e.FromSummary)
                    .HasMaxLength(100)
                    .HasColumnName("FROM_SUMMARY");

                entity.Property(e => e.LnkId).HasColumnName("LNK_ID");

                entity.Property(e => e.PairId).HasColumnName("PAIR_ID");

                entity.Property(e => e.RefIdFrom).HasColumnName("REF_ID_FROM");

                entity.Property(e => e.RefIdTo).HasColumnName("REF_ID_TO");

                entity.Property(e => e.RelationshipFrom).HasColumnName("RELATIONSHIP_FROM");

                entity.Property(e => e.RelationshipFromDetails).HasColumnName("RELATIONSHIP_FROM_DETAILS");

                entity.Property(e => e.RelationshipFromLabel)
                    .HasMaxLength(255)
                    .HasColumnName("RELATIONSHIP_FROM_LABEL");

                entity.Property(e => e.RelationshipFromLabelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("RELATIONSHIP_FROM_LABEL_HLIGHT");

                entity.Property(e => e.RelationshipTo).HasColumnName("RELATIONSHIP_TO");

                entity.Property(e => e.RelationshipToDetails).HasColumnName("RELATIONSHIP_TO_DETAILS");

                entity.Property(e => e.RelationshipToLabel)
                    .HasMaxLength(255)
                    .HasColumnName("RELATIONSHIP_TO_LABEL");

                entity.Property(e => e.RelationshipToLabelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("RELATIONSHIP_TO_LABEL_HLIGHT");

                entity.Property(e => e.ToSummary)
                    .HasMaxLength(100)
                    .HasColumnName("TO_SUMMARY");

                entity.Property(e => e.TypeFrom)
                    .HasMaxLength(50)
                    .HasColumnName("TYPE_FROM");

                entity.Property(e => e.TypeTo)
                    .HasMaxLength(50)
                    .HasColumnName("TYPE_TO");

                entity.Property(e => e.TypeToLabel)
                    .HasMaxLength(50)
                    .HasColumnName("TYPE_TO_LABEL");

                entity.Property(e => e.UsIdSalesFrom).HasColumnName("US_ID_SALES_FROM");

                entity.Property(e => e.UsIdSalesTo).HasColumnName("US_ID_SALES_TO");

                entity.Property(e => e.UsIdSupportFrom).HasColumnName("US_ID_SUPPORT_FROM");

                entity.Property(e => e.UsIdSupportTo).HasColumnName("US_ID_SUPPORT_TO");
            });

            modelBuilder.Entity<VLinksDocsNote>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vLinksDocsNotes");

                entity.Property(e => e.ActionId)
                    .HasMaxLength(606)
                    .HasColumnName("ACTION_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.ObjId)
                    .HasMaxLength(2000)
                    .HasColumnName("OBJ_ID");

                entity.Property(e => e.ObjectLabel)
                    .IsRequired()
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("OBJECT_LABEL");

                entity.Property(e => e.ObjectType)
                    .HasMaxLength(50)
                    .HasColumnName("OBJECT_TYPE");

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UsEmail)
                    .HasMaxLength(255)
                    .HasColumnName("US_EMAIL");
            });

            modelBuilder.Entity<VLinksNonAuto>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vLinksNonAuto");

                entity.Property(e => e.AcGroupFrom)
                    .HasMaxLength(255)
                    .HasColumnName("AC_GROUP_FROM");

                entity.Property(e => e.AcGroupTo)
                    .HasMaxLength(255)
                    .HasColumnName("AC_GROUP_TO");

                entity.Property(e => e.AcIdFrom).HasColumnName("AC_ID_FROM");

                entity.Property(e => e.AcIdTo).HasColumnName("AC_ID_TO");

                entity.Property(e => e.AcNameFrom)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME_FROM");

                entity.Property(e => e.AcNameTo)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME_TO");

                entity.Property(e => e.AcoIdTo).HasColumnName("ACO_ID_TO");

                entity.Property(e => e.Autolink).HasColumnName("AUTOLINK");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeleteText)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DELETE_TEXT");

                entity.Property(e => e.FromSummary)
                    .HasMaxLength(100)
                    .HasColumnName("FROM_SUMMARY");

                entity.Property(e => e.LnkId).HasColumnName("LNK_ID");

                entity.Property(e => e.PairId).HasColumnName("PAIR_ID");

                entity.Property(e => e.RefIdFrom).HasColumnName("REF_ID_FROM");

                entity.Property(e => e.RefIdTo).HasColumnName("REF_ID_TO");

                entity.Property(e => e.RelationshipFrom).HasColumnName("RELATIONSHIP_FROM");

                entity.Property(e => e.RelationshipFromLabel)
                    .HasMaxLength(255)
                    .HasColumnName("RELATIONSHIP_FROM_LABEL");

                entity.Property(e => e.RelationshipFromLabelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("RELATIONSHIP_FROM_LABEL_HLIGHT");

                entity.Property(e => e.RelationshipTo).HasColumnName("RELATIONSHIP_TO");

                entity.Property(e => e.RelationshipToLabel)
                    .HasMaxLength(255)
                    .HasColumnName("RELATIONSHIP_TO_LABEL");

                entity.Property(e => e.RelationshipToLabelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("RELATIONSHIP_TO_LABEL_HLIGHT");

                entity.Property(e => e.ToSummary)
                    .HasMaxLength(100)
                    .HasColumnName("TO_SUMMARY");

                entity.Property(e => e.TypeFrom)
                    .HasMaxLength(50)
                    .HasColumnName("TYPE_FROM");

                entity.Property(e => e.TypeTo)
                    .HasMaxLength(50)
                    .HasColumnName("TYPE_TO");

                entity.Property(e => e.TypeToLabel)
                    .HasMaxLength(50)
                    .HasColumnName("TYPE_TO_LABEL");

                entity.Property(e => e.UsIdSalesFrom).HasColumnName("US_ID_SALES_FROM");

                entity.Property(e => e.UsIdSalesTo).HasColumnName("US_ID_SALES_TO");

                entity.Property(e => e.UsIdSupportFrom).HasColumnName("US_ID_SUPPORT_FROM");

                entity.Property(e => e.UsIdSupportTo).HasColumnName("US_ID_SUPPORT_TO");
            });

            modelBuilder.Entity<VLmcall>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vLMCalls");

                entity.Property(e => e.AcoId).HasColumnName("ACO_ID");

                entity.Property(e => e.CallDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CALL_DATE");

                entity.Property(e => e.ClmId).HasColumnName("CLM_ID");

                entity.Property(e => e.CompanyName)
                    .HasMaxLength(100)
                    .HasColumnName("COMPANY_NAME");

                entity.Property(e => e.ContactName)
                    .HasMaxLength(227)
                    .HasColumnName("CONTACT_NAME");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CsId).HasColumnName("CS_ID");

                entity.Property(e => e.Direction)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DIRECTION");

                entity.Property(e => e.DirectionImage)
                    .IsRequired()
                    .HasMaxLength(22)
                    .IsUnicode(false)
                    .HasColumnName("DIRECTION_IMAGE");

                entity.Property(e => e.Duration).HasColumnName("DURATION");

                entity.Property(e => e.Incomming).HasColumnName("INCOMMING");

                entity.Property(e => e.LeadAllocationMode).HasColumnName("LEAD_ALLOCATION_MODE");

                entity.Property(e => e.ListOpen).HasColumnName("LIST_OPEN");

                entity.Property(e => e.Number)
                    .HasMaxLength(255)
                    .HasColumnName("NUMBER");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsIdControl).HasColumnName("US_ID_CONTROL");

                entity.Property(e => e.UsIdOwner).HasColumnName("US_ID_OWNER");

                entity.Property(e => e.UsName)
                    .HasMaxLength(255)
                    .HasColumnName("US_NAME");

                entity.Property(e => e.UsgIdOwner).HasColumnName("USG_ID_OWNER");
            });

            modelBuilder.Entity<VMacDrop1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vMacDrop1");

                entity.Property(e => e.DroDeleted).HasColumnName("DRO_DELETED");

                entity.Property(e => e.DroOrder)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DRO_ORDER");

                entity.Property(e => e.Hlight)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("HLIGHT");

                entity.Property(e => e.Order2)
                    .HasColumnType("datetime")
                    .HasColumnName("ORDER2");

                entity.Property(e => e.State)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("STATE");

                entity.Property(e => e.Text)
                    .HasMaxLength(268)
                    .HasColumnName("TEXT");

                entity.Property(e => e.Value).HasColumnName("VALUE");
            });

            modelBuilder.Entity<VMacDrop2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vMacDrop2");

                entity.Property(e => e.DroDeleted).HasColumnName("DRO_DELETED");

                entity.Property(e => e.DroOrder)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DRO_ORDER");

                entity.Property(e => e.Hlight)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("HLIGHT");

                entity.Property(e => e.Order2)
                    .HasColumnType("datetime")
                    .HasColumnName("ORDER2");

                entity.Property(e => e.State)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("STATE");

                entity.Property(e => e.Text)
                    .HasMaxLength(268)
                    .HasColumnName("TEXT");

                entity.Property(e => e.Value).HasColumnName("VALUE");
            });

            modelBuilder.Entity<VMailCampaign>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vMailCampaigns");

                entity.Property(e => e.AccaDueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_DUE_DATE");

                entity.Property(e => e.AccaOwner).HasColumnName("ACCA_OWNER");

                entity.Property(e => e.AccaStage).HasColumnName("ACCA_STAGE");

                entity.Property(e => e.AccaStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ACCA_START_DATE");

                entity.Property(e => e.ConnectOptInType).HasColumnName("CONNECT_OPT_IN_TYPE");

                entity.Property(e => e.ConnectOptInTypeName)
                    .IsRequired()
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("CONNECT_OPT_IN_TYPE_NAME");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DefaultRecipient)
                    .HasMaxLength(255)
                    .HasColumnName("DEFAULT_RECIPIENT");

                entity.Property(e => e.DefaultSalutation)
                    .HasMaxLength(128)
                    .HasColumnName("DEFAULT_SALUTATION");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.MacActivities).HasColumnName("MAC_ACTIVITIES");

                entity.Property(e => e.MacBody).HasColumnName("MAC_BODY");

                entity.Property(e => e.MacCost)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("MAC_COST");

                entity.Property(e => e.MacDeleted).HasColumnName("MAC_DELETED");

                entity.Property(e => e.MacDonor).HasColumnName("MAC_DONOR");

                entity.Property(e => e.MacExternal)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_EXTERNAL");

                entity.Property(e => e.MacId).HasColumnName("MAC_ID");

                entity.Property(e => e.MacMedium).HasColumnName("MAC_MEDIUM");

                entity.Property(e => e.MacMediumFilter).HasColumnName("MAC_MEDIUM_FILTER");

                entity.Property(e => e.MacMediumName)
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .HasColumnName("MAC_MEDIUM_NAME");

                entity.Property(e => e.MacOwner).HasColumnName("MAC_OWNER");

                entity.Property(e => e.MacOwnerName)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_OWNER_NAME");

                entity.Property(e => e.MacQuery).HasColumnName("MAC_QUERY");

                entity.Property(e => e.MacStage).HasColumnName("MAC_STAGE");

                entity.Property(e => e.MacStageName)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_STAGE_NAME");

                entity.Property(e => e.MacStageNameHlight)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_STAGE_NAME_HLIGHT");

                entity.Property(e => e.MacState)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("MAC_STATE");

                entity.Property(e => e.MacStatus).HasColumnName("MAC_STATUS");

                entity.Property(e => e.MacSubject)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_SUBJECT");

                entity.Property(e => e.MacTarget).HasColumnName("MAC_TARGET");

                entity.Property(e => e.MacTemplate)
                    .HasMaxLength(1000)
                    .HasColumnName("MAC_TEMPLATE");

                entity.Property(e => e.MacType).HasColumnName("MAC_TYPE");

                entity.Property(e => e.MacTypeName)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_TYPE_NAME");

                entity.Property(e => e.MacTypeNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("MAC_TYPE_NAME_HLIGHT");

                entity.Property(e => e.MacUd1)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_UD1");

                entity.Property(e => e.MacUd10)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_UD10");

                entity.Property(e => e.MacUd10Bit).HasColumnName("MAC_UD10_BIT");

                entity.Property(e => e.MacUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MAC_UD10_DATE");

                entity.Property(e => e.MacUd10Id).HasColumnName("MAC_UD10_ID");

                entity.Property(e => e.MacUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_UD10_ID_NAME");

                entity.Property(e => e.MacUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("MAC_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.MacUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MAC_UD10_NUMERIC");

                entity.Property(e => e.MacUd11Bit).HasColumnName("MAC_UD11_BIT");

                entity.Property(e => e.MacUd12Bit).HasColumnName("MAC_UD12_BIT");

                entity.Property(e => e.MacUd13Bit).HasColumnName("MAC_UD13_BIT");

                entity.Property(e => e.MacUd14Bit).HasColumnName("MAC_UD14_BIT");

                entity.Property(e => e.MacUd15Bit).HasColumnName("MAC_UD15_BIT");

                entity.Property(e => e.MacUd16Bit).HasColumnName("MAC_UD16_BIT");

                entity.Property(e => e.MacUd17Bit).HasColumnName("MAC_UD17_BIT");

                entity.Property(e => e.MacUd18Bit).HasColumnName("MAC_UD18_BIT");

                entity.Property(e => e.MacUd19Bit).HasColumnName("MAC_UD19_BIT");

                entity.Property(e => e.MacUd1Bit).HasColumnName("MAC_UD1_BIT");

                entity.Property(e => e.MacUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MAC_UD1_DATE");

                entity.Property(e => e.MacUd1Id).HasColumnName("MAC_UD1_ID");

                entity.Property(e => e.MacUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_UD1_ID_NAME");

                entity.Property(e => e.MacUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("MAC_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.MacUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MAC_UD1_NUMERIC");

                entity.Property(e => e.MacUd2)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_UD2");

                entity.Property(e => e.MacUd20Bit).HasColumnName("MAC_UD20_BIT");

                entity.Property(e => e.MacUd21Bit).HasColumnName("MAC_UD21_BIT");

                entity.Property(e => e.MacUd22Bit).HasColumnName("MAC_UD22_BIT");

                entity.Property(e => e.MacUd23Bit).HasColumnName("MAC_UD23_BIT");

                entity.Property(e => e.MacUd24Bit).HasColumnName("MAC_UD24_BIT");

                entity.Property(e => e.MacUd2Bit).HasColumnName("MAC_UD2_BIT");

                entity.Property(e => e.MacUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MAC_UD2_DATE");

                entity.Property(e => e.MacUd2Id).HasColumnName("MAC_UD2_ID");

                entity.Property(e => e.MacUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_UD2_ID_NAME");

                entity.Property(e => e.MacUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("MAC_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.MacUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MAC_UD2_NUMERIC");

                entity.Property(e => e.MacUd3)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_UD3");

                entity.Property(e => e.MacUd3Bit).HasColumnName("MAC_UD3_BIT");

                entity.Property(e => e.MacUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MAC_UD3_DATE");

                entity.Property(e => e.MacUd3Id).HasColumnName("MAC_UD3_ID");

                entity.Property(e => e.MacUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_UD3_ID_NAME");

                entity.Property(e => e.MacUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("MAC_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.MacUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MAC_UD3_NUMERIC");

                entity.Property(e => e.MacUd4)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_UD4");

                entity.Property(e => e.MacUd4Bit).HasColumnName("MAC_UD4_BIT");

                entity.Property(e => e.MacUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MAC_UD4_DATE");

                entity.Property(e => e.MacUd4Id).HasColumnName("MAC_UD4_ID");

                entity.Property(e => e.MacUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_UD4_ID_NAME");

                entity.Property(e => e.MacUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("MAC_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.MacUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MAC_UD4_NUMERIC");

                entity.Property(e => e.MacUd5)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_UD5");

                entity.Property(e => e.MacUd5Bit).HasColumnName("MAC_UD5_BIT");

                entity.Property(e => e.MacUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MAC_UD5_DATE");

                entity.Property(e => e.MacUd5Id).HasColumnName("MAC_UD5_ID");

                entity.Property(e => e.MacUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_UD5_ID_NAME");

                entity.Property(e => e.MacUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("MAC_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.MacUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MAC_UD5_NUMERIC");

                entity.Property(e => e.MacUd6)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_UD6");

                entity.Property(e => e.MacUd6Bit).HasColumnName("MAC_UD6_BIT");

                entity.Property(e => e.MacUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MAC_UD6_DATE");

                entity.Property(e => e.MacUd6Id).HasColumnName("MAC_UD6_ID");

                entity.Property(e => e.MacUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_UD6_ID_NAME");

                entity.Property(e => e.MacUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("MAC_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.MacUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MAC_UD6_NUMERIC");

                entity.Property(e => e.MacUd7)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_UD7");

                entity.Property(e => e.MacUd7Bit).HasColumnName("MAC_UD7_BIT");

                entity.Property(e => e.MacUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MAC_UD7_DATE");

                entity.Property(e => e.MacUd7Id).HasColumnName("MAC_UD7_ID");

                entity.Property(e => e.MacUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_UD7_ID_NAME");

                entity.Property(e => e.MacUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("MAC_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.MacUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MAC_UD7_NUMERIC");

                entity.Property(e => e.MacUd8)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_UD8");

                entity.Property(e => e.MacUd8Bit).HasColumnName("MAC_UD8_BIT");

                entity.Property(e => e.MacUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MAC_UD8_DATE");

                entity.Property(e => e.MacUd8Id).HasColumnName("MAC_UD8_ID");

                entity.Property(e => e.MacUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_UD8_ID_NAME");

                entity.Property(e => e.MacUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("MAC_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.MacUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MAC_UD8_NUMERIC");

                entity.Property(e => e.MacUd9)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_UD9");

                entity.Property(e => e.MacUd9Bit).HasColumnName("MAC_UD9_BIT");

                entity.Property(e => e.MacUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MAC_UD9_DATE");

                entity.Property(e => e.MacUd9Id).HasColumnName("MAC_UD9_ID");

                entity.Property(e => e.MacUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_UD9_ID_NAME");

                entity.Property(e => e.MacUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("MAC_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.MacUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MAC_UD9_NUMERIC");

                entity.Property(e => e.MacUdInfo).HasColumnName("MAC_UD_INFO");

                entity.Property(e => e.MacUdMoreInfo).HasColumnName("MAC_UD_MORE_INFO");

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.RecipientCount).HasColumnName("RECIPIENT_COUNT");

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.RunDate)
                    .HasColumnType("datetime")
                    .HasColumnName("RUN_DATE");

                entity.Property(e => e.ScheduledDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SCHEDULED_DATE");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");
            });

            modelBuilder.Entity<VMailCampaignActivity>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vMailCampaignActivities");

                entity.Property(e => e.AcBillingPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_POSTCODE");

                entity.Property(e => e.AcBillingTown)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_TOWN");

                entity.Property(e => e.AcPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("AC_POSTCODE");

                entity.Property(e => e.AcTown)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TOWN");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_NAME");

                entity.Property(e => e.AccaId).HasColumnName("ACCA_ID");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_NAME");

                entity.Property(e => e.BusinessFaxNumber).HasMaxLength(255);

                entity.Property(e => e.Complete).HasColumnName("COMPLETE");

                entity.Property(e => e.Email1Address).HasMaxLength(255);

                entity.Property(e => e.MacId).HasColumnName("MAC_ID");

                entity.Property(e => e.Overdue).HasColumnName("OVERDUE");

                entity.Property(e => e.Phone).HasMaxLength(255);

                entity.Property(e => e.Stage).HasMaxLength(255);

                entity.Property(e => e.StageHlight)
                    .HasMaxLength(100)
                    .HasColumnName("Stage_HLIGHT");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UsName)
                    .HasMaxLength(255)
                    .HasColumnName("US_NAME");
            });

            modelBuilder.Entity<VMailCampaignAttachment>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vMailCampaignAttachments");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.MacId).HasColumnName("MAC_ID");

                entity.Property(e => e.MacaDeleted).HasColumnName("MACA_DELETED");

                entity.Property(e => e.MacaId).HasColumnName("MACA_ID");

                entity.Property(e => e.Path)
                    .HasMaxLength(255)
                    .HasColumnName("PATH");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Type)
                    .HasMaxLength(50)
                    .HasColumnName("TYPE");
            });

            modelBuilder.Entity<VMailCampaignContact>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vMailCampaignContacts");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_NAME");

                entity.Property(e => e.BusinessFaxNumber).HasMaxLength(255);

                entity.Property(e => e.Email1Address).HasMaxLength(255);

                entity.Property(e => e.FullName).HasMaxLength(255);

                entity.Property(e => e.MacId).HasColumnName("MAC_ID");
            });

            modelBuilder.Entity<VMailCampaignsContactsSentClick>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vMailCampaignsContactsSentClicks");

                entity.Property(e => e.AcAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("AC_ADDRESS_1");

                entity.Property(e => e.AcAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_ADDRESS_2");

                entity.Property(e => e.AcAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("AC_ADDRESS_3");

                entity.Property(e => e.AcBillingAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_ADDRESS_1");

                entity.Property(e => e.AcBillingAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_ADDRESS_2");

                entity.Property(e => e.AcBillingAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_ADDRESS_3");

                entity.Property(e => e.AcBillingCounty)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_COUNTY");

                entity.Property(e => e.AcBillingPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_POSTCODE");

                entity.Property(e => e.AcBillingTown)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_TOWN");

                entity.Property(e => e.AcCounty)
                    .HasMaxLength(255)
                    .HasColumnName("AC_COUNTY");

                entity.Property(e => e.AcExternal)
                    .HasMaxLength(255)
                    .HasColumnName("AC_EXTERNAL");

                entity.Property(e => e.AcFlag)
                    .HasMaxLength(255)
                    .HasColumnName("AC_FLAG");

                entity.Property(e => e.AcFlagHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_FLAG_HLIGHT");

                entity.Property(e => e.AcGroup)
                    .HasMaxLength(255)
                    .HasColumnName("AC_GROUP");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcIndustry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_INDUSTRY");

                entity.Property(e => e.AcIndustryHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_INDUSTRY_HLIGHT");

                entity.Property(e => e.AcLabel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LABEL");

                entity.Property(e => e.AcLabelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LABEL_HLIGHT");

                entity.Property(e => e.AcLevel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LEVEL");

                entity.Property(e => e.AcLevelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LEVEL_HLIGHT");

                entity.Property(e => e.AcManager)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER");

                entity.Property(e => e.AcManagerDept)
                    .HasMaxLength(128)
                    .HasColumnName("AC_MANAGER_DEPT");

                entity.Property(e => e.AcManagerEmail)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_EMAIL");

                entity.Property(e => e.AcManagerGroup)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_GROUP");

                entity.Property(e => e.AcManagerSupport)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_SUPPORT");

                entity.Property(e => e.AcManagerSupportEmail)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_SUPPORT_EMAIL");

                entity.Property(e => e.AcPhone1)
                    .HasMaxLength(50)
                    .HasColumnName("AC_PHONE_1");

                entity.Property(e => e.AcPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("AC_POSTCODE");

                entity.Property(e => e.AcReference)
                    .HasMaxLength(50)
                    .HasColumnName("AC_REFERENCE");

                entity.Property(e => e.AcSource)
                    .HasMaxLength(255)
                    .HasColumnName("AC_SOURCE");

                entity.Property(e => e.AcSourceHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_SOURCE_HLIGHT");

                entity.Property(e => e.AcTown)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TOWN");

                entity.Property(e => e.AcType)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE");

                entity.Property(e => e.AcType2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_2");

                entity.Property(e => e.AcType2Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_2_HLIGHT");

                entity.Property(e => e.AcTypeHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_HLIGHT");

                entity.Property(e => e.AcUd10Bit).HasColumnName("AC_UD10_BIT");

                entity.Property(e => e.AcUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD10_DATE");

                entity.Property(e => e.AcUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_ID_NAME");

                entity.Property(e => e.AcUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd10Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD10_NUMERIC");

                entity.Property(e => e.AcUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_TEXT");

                entity.Property(e => e.AcUd11Bit).HasColumnName("AC_UD11_BIT");

                entity.Property(e => e.AcUd11Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD11_TEXT");

                entity.Property(e => e.AcUd12Bit).HasColumnName("AC_UD12_BIT");

                entity.Property(e => e.AcUd12Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD12_TEXT");

                entity.Property(e => e.AcUd13Bit).HasColumnName("AC_UD13_BIT");

                entity.Property(e => e.AcUd13Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD13_TEXT");

                entity.Property(e => e.AcUd14Bit).HasColumnName("AC_UD14_BIT");

                entity.Property(e => e.AcUd14Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD14_TEXT");

                entity.Property(e => e.AcUd15Bit).HasColumnName("AC_UD15_BIT");

                entity.Property(e => e.AcUd15Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD15_TEXT");

                entity.Property(e => e.AcUd16Bit).HasColumnName("AC_UD16_BIT");

                entity.Property(e => e.AcUd17Bit).HasColumnName("AC_UD17_BIT");

                entity.Property(e => e.AcUd18Bit).HasColumnName("AC_UD18_BIT");

                entity.Property(e => e.AcUd19Bit).HasColumnName("AC_UD19_BIT");

                entity.Property(e => e.AcUd1Bit).HasColumnName("AC_UD1_BIT");

                entity.Property(e => e.AcUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD1_DATE");

                entity.Property(e => e.AcUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_ID_NAME");

                entity.Property(e => e.AcUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd1Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD1_NUMERIC");

                entity.Property(e => e.AcUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_TEXT");

                entity.Property(e => e.AcUd20Bit).HasColumnName("AC_UD20_BIT");

                entity.Property(e => e.AcUd21Bit).HasColumnName("AC_UD21_BIT");

                entity.Property(e => e.AcUd22Bit).HasColumnName("AC_UD22_BIT");

                entity.Property(e => e.AcUd23Bit).HasColumnName("AC_UD23_BIT");

                entity.Property(e => e.AcUd24Bit).HasColumnName("AC_UD24_BIT");

                entity.Property(e => e.AcUd2Bit).HasColumnName("AC_UD2_BIT");

                entity.Property(e => e.AcUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD2_DATE");

                entity.Property(e => e.AcUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_ID_NAME");

                entity.Property(e => e.AcUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd2Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD2_NUMERIC");

                entity.Property(e => e.AcUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_TEXT");

                entity.Property(e => e.AcUd3Bit).HasColumnName("AC_UD3_BIT");

                entity.Property(e => e.AcUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD3_DATE");

                entity.Property(e => e.AcUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_ID_NAME");

                entity.Property(e => e.AcUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd3Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD3_NUMERIC");

                entity.Property(e => e.AcUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_TEXT");

                entity.Property(e => e.AcUd4Bit).HasColumnName("AC_UD4_BIT");

                entity.Property(e => e.AcUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD4_DATE");

                entity.Property(e => e.AcUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_ID_NAME");

                entity.Property(e => e.AcUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd4Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD4_NUMERIC");

                entity.Property(e => e.AcUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_TEXT");

                entity.Property(e => e.AcUd5Bit).HasColumnName("AC_UD5_BIT");

                entity.Property(e => e.AcUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD5_DATE");

                entity.Property(e => e.AcUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_ID_NAME");

                entity.Property(e => e.AcUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd5Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD5_NUMERIC");

                entity.Property(e => e.AcUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_TEXT");

                entity.Property(e => e.AcUd6Bit).HasColumnName("AC_UD6_BIT");

                entity.Property(e => e.AcUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD6_DATE");

                entity.Property(e => e.AcUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_ID_NAME");

                entity.Property(e => e.AcUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd6Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD6_NUMERIC");

                entity.Property(e => e.AcUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_TEXT");

                entity.Property(e => e.AcUd7Bit).HasColumnName("AC_UD7_BIT");

                entity.Property(e => e.AcUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD7_DATE");

                entity.Property(e => e.AcUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_ID_NAME");

                entity.Property(e => e.AcUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd7Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD7_NUMERIC");

                entity.Property(e => e.AcUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_TEXT");

                entity.Property(e => e.AcUd8Bit).HasColumnName("AC_UD8_BIT");

                entity.Property(e => e.AcUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD8_DATE");

                entity.Property(e => e.AcUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_ID_NAME");

                entity.Property(e => e.AcUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd8Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD8_NUMERIC");

                entity.Property(e => e.AcUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_TEXT");

                entity.Property(e => e.AcUd9Bit).HasColumnName("AC_UD9_BIT");

                entity.Property(e => e.AcUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD9_DATE");

                entity.Property(e => e.AcUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_ID_NAME");

                entity.Property(e => e.AcUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd9Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD9_NUMERIC");

                entity.Property(e => e.AcUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_TEXT");

                entity.Property(e => e.AccDeleted).HasColumnName("ACC_DELETED");

                entity.Property(e => e.AccExternal)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_EXTERNAL");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccImport).HasColumnName("ACC_IMPORT");

                entity.Property(e => e.AccPrefAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_ADDRESS_1");

                entity.Property(e => e.AccPrefAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_ADDRESS_2");

                entity.Property(e => e.AccPrefAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_ADDRESS_3");

                entity.Property(e => e.AccPrefCountry)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_COUNTRY");

                entity.Property(e => e.AccPrefCounty)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_COUNTY");

                entity.Property(e => e.AccPrefEmail)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_EMAIL");

                entity.Property(e => e.AccPrefPhone)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_PHONE");

                entity.Property(e => e.AccPrefPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_POSTCODE");

                entity.Property(e => e.AccPrefTown)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_TOWN");

                entity.Property(e => e.AccStatus).HasColumnName("ACC_STATUS");

                entity.Property(e => e.AccUd1)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD1");

                entity.Property(e => e.AccUd10)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD10");

                entity.Property(e => e.AccUd10Bit).HasColumnName("ACC_UD10_BIT");

                entity.Property(e => e.AccUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD10_DATE");

                entity.Property(e => e.AccUd10Id).HasColumnName("ACC_UD10_ID");

                entity.Property(e => e.AccUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD10_ID_NAME");

                entity.Property(e => e.AccUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD10_NUMERIC");

                entity.Property(e => e.AccUd11)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD11");

                entity.Property(e => e.AccUd11Bit).HasColumnName("ACC_UD11_BIT");

                entity.Property(e => e.AccUd12)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD12");

                entity.Property(e => e.AccUd12Bit).HasColumnName("ACC_UD12_BIT");

                entity.Property(e => e.AccUd13)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD13");

                entity.Property(e => e.AccUd13Bit).HasColumnName("ACC_UD13_BIT");

                entity.Property(e => e.AccUd14)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD14");

                entity.Property(e => e.AccUd14Bit).HasColumnName("ACC_UD14_BIT");

                entity.Property(e => e.AccUd15)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD15");

                entity.Property(e => e.AccUd15Bit).HasColumnName("ACC_UD15_BIT");

                entity.Property(e => e.AccUd16Bit).HasColumnName("ACC_UD16_BIT");

                entity.Property(e => e.AccUd17Bit).HasColumnName("ACC_UD17_BIT");

                entity.Property(e => e.AccUd18Bit).HasColumnName("ACC_UD18_BIT");

                entity.Property(e => e.AccUd19Bit).HasColumnName("ACC_UD19_BIT");

                entity.Property(e => e.AccUd1Bit).HasColumnName("ACC_UD1_BIT");

                entity.Property(e => e.AccUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD1_DATE");

                entity.Property(e => e.AccUd1Id).HasColumnName("ACC_UD1_ID");

                entity.Property(e => e.AccUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD1_ID_NAME");

                entity.Property(e => e.AccUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD1_NUMERIC");

                entity.Property(e => e.AccUd2)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD2");

                entity.Property(e => e.AccUd20Bit).HasColumnName("ACC_UD20_BIT");

                entity.Property(e => e.AccUd21Bit).HasColumnName("ACC_UD21_BIT");

                entity.Property(e => e.AccUd22Bit).HasColumnName("ACC_UD22_BIT");

                entity.Property(e => e.AccUd23Bit).HasColumnName("ACC_UD23_BIT");

                entity.Property(e => e.AccUd24Bit).HasColumnName("ACC_UD24_BIT");

                entity.Property(e => e.AccUd2Bit).HasColumnName("ACC_UD2_BIT");

                entity.Property(e => e.AccUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD2_DATE");

                entity.Property(e => e.AccUd2Id).HasColumnName("ACC_UD2_ID");

                entity.Property(e => e.AccUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD2_ID_NAME");

                entity.Property(e => e.AccUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD2_NUMERIC");

                entity.Property(e => e.AccUd3)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD3");

                entity.Property(e => e.AccUd3Bit).HasColumnName("ACC_UD3_BIT");

                entity.Property(e => e.AccUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD3_DATE");

                entity.Property(e => e.AccUd3Id).HasColumnName("ACC_UD3_ID");

                entity.Property(e => e.AccUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD3_ID_NAME");

                entity.Property(e => e.AccUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD3_NUMERIC");

                entity.Property(e => e.AccUd4)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD4");

                entity.Property(e => e.AccUd4Bit).HasColumnName("ACC_UD4_BIT");

                entity.Property(e => e.AccUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD4_DATE");

                entity.Property(e => e.AccUd4Id).HasColumnName("ACC_UD4_ID");

                entity.Property(e => e.AccUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD4_ID_NAME");

                entity.Property(e => e.AccUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD4_NUMERIC");

                entity.Property(e => e.AccUd5)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD5");

                entity.Property(e => e.AccUd5Bit).HasColumnName("ACC_UD5_BIT");

                entity.Property(e => e.AccUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD5_DATE");

                entity.Property(e => e.AccUd5Id).HasColumnName("ACC_UD5_ID");

                entity.Property(e => e.AccUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD5_ID_NAME");

                entity.Property(e => e.AccUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD5_NUMERIC");

                entity.Property(e => e.AccUd6)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD6");

                entity.Property(e => e.AccUd6Bit).HasColumnName("ACC_UD6_BIT");

                entity.Property(e => e.AccUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD6_DATE");

                entity.Property(e => e.AccUd6Id).HasColumnName("ACC_UD6_ID");

                entity.Property(e => e.AccUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD6_ID_NAME");

                entity.Property(e => e.AccUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD6_NUMERIC");

                entity.Property(e => e.AccUd7)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD7");

                entity.Property(e => e.AccUd7Bit).HasColumnName("ACC_UD7_BIT");

                entity.Property(e => e.AccUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD7_DATE");

                entity.Property(e => e.AccUd7Id).HasColumnName("ACC_UD7_ID");

                entity.Property(e => e.AccUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD7_ID_NAME");

                entity.Property(e => e.AccUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD7_NUMERIC");

                entity.Property(e => e.AccUd8)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD8");

                entity.Property(e => e.AccUd8Bit).HasColumnName("ACC_UD8_BIT");

                entity.Property(e => e.AccUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD8_DATE");

                entity.Property(e => e.AccUd8Id).HasColumnName("ACC_UD8_ID");

                entity.Property(e => e.AccUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD8_ID_NAME");

                entity.Property(e => e.AccUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD8_NUMERIC");

                entity.Property(e => e.AccUd9)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD9");

                entity.Property(e => e.AccUd9Bit).HasColumnName("ACC_UD9_BIT");

                entity.Property(e => e.AccUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD9_DATE");

                entity.Property(e => e.AccUd9Id).HasColumnName("ACC_UD9_ID");

                entity.Property(e => e.AccUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD9_ID_NAME");

                entity.Property(e => e.AccUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD9_NUMERIC");

                entity.Property(e => e.Account).HasMaxLength(255);

                entity.Property(e => e.AccountName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_NAME");

                entity.Property(e => e.AcgId).HasColumnName("ACG_ID");

                entity.Property(e => e.Anniversary).HasMaxLength(255);

                entity.Property(e => e.AssistantTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Assistantname).HasMaxLength(255);

                entity.Property(e => e.BillingInformation).HasMaxLength(255);

                entity.Property(e => e.Birthday).HasMaxLength(255);

                entity.Property(e => e.Business2TelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.BusinessAddress).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressCity).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressCountry).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressState).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.BusinessFaxNumber).HasMaxLength(255);

                entity.Property(e => e.BusinessFaxNumberFormatted).HasMaxLength(267);

                entity.Property(e => e.BusinessHomePage).HasMaxLength(255);

                entity.Property(e => e.BusinessTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.CallbackTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.CarTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Categories).HasMaxLength(500);

                entity.Property(e => e.Children).HasMaxLength(255);

                entity.Property(e => e.ClickDateClicked)
                    .HasColumnType("datetime")
                    .HasColumnName("CLICK_DATE_CLICKED");

                entity.Property(e => e.ClickSummary)
                    .HasMaxLength(255)
                    .HasColumnName("CLICK_SUMMARY");

                entity.Property(e => e.ClickUrl)
                    .HasMaxLength(255)
                    .HasColumnName("CLICK_URL");

                entity.Property(e => e.Companies).HasMaxLength(255);

                entity.Property(e => e.CompanyAndFullName).HasMaxLength(255);

                entity.Property(e => e.CompanyLastFirstNoSpace).HasMaxLength(255);

                entity.Property(e => e.CompanyLastFirstSpaceOnly).HasMaxLength(255);

                entity.Property(e => e.CompanyMainTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.CompanyName).HasMaxLength(255);

                entity.Property(e => e.ComputerNetworkName).HasMaxLength(255);

                entity.Property(e => e.ConnectOptIn).HasColumnName("CONNECT_OPT_IN");

                entity.Property(e => e.ConnectOptInDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CONNECT_OPT_IN_DATE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CreationTime).HasMaxLength(255);

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Department).HasMaxLength(255);

                entity.Property(e => e.Email1Address).HasMaxLength(255);

                entity.Property(e => e.Email1AddressType).HasMaxLength(255);

                entity.Property(e => e.Email1DisplayName).HasMaxLength(255);

                entity.Property(e => e.Email1EntryId)
                    .HasMaxLength(255)
                    .HasColumnName("Email1EntryID");

                entity.Property(e => e.Email2Address).HasMaxLength(255);

                entity.Property(e => e.Email2AddressType).HasMaxLength(255);

                entity.Property(e => e.Email2DisplayName).HasMaxLength(255);

                entity.Property(e => e.Email2EntryId)
                    .HasMaxLength(255)
                    .HasColumnName("Email2EntryID");

                entity.Property(e => e.Email3Address).HasMaxLength(255);

                entity.Property(e => e.Email3AddressType).HasMaxLength(255);

                entity.Property(e => e.Email3DisplayName).HasMaxLength(255);

                entity.Property(e => e.Email3EntryId)
                    .HasMaxLength(255)
                    .HasColumnName("Email3EntryID");

                entity.Property(e => e.Exported).HasColumnName("EXPORTED");

                entity.Property(e => e.FacebookImage)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_IMAGE");

                entity.Property(e => e.FacebookName)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_NAME");

                entity.Property(e => e.FacebookPrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_PRIVATE_ID");

                entity.Property(e => e.FacebookProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_PROFILE_URL");

                entity.Property(e => e.FacebookPublicId)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_PUBLIC_ID");

                entity.Property(e => e.FirstName).HasMaxLength(255);

                entity.Property(e => e.Ftpsite)
                    .HasMaxLength(255)
                    .HasColumnName("FTPSite");

                entity.Property(e => e.FullName).HasMaxLength(255);

                entity.Property(e => e.FullNameAndCompany).HasMaxLength(255);

                entity.Property(e => e.GplusImage)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_IMAGE");

                entity.Property(e => e.GplusName)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_NAME");

                entity.Property(e => e.GplusPrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_PRIVATE_ID");

                entity.Property(e => e.GplusProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_PROFILE_URL");

                entity.Property(e => e.GplusPublicId)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_PUBLIC_ID");

                entity.Property(e => e.Hobby).HasMaxLength(255);

                entity.Property(e => e.Home2TelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.HomeAddress).HasMaxLength(255);

                entity.Property(e => e.HomeAddressCity).HasMaxLength(255);

                entity.Property(e => e.HomeAddressCountry).HasMaxLength(255);

                entity.Property(e => e.HomeAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.HomeAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.HomeAddressState).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.HomeFaxNumber).HasMaxLength(255);

                entity.Property(e => e.HomeFaxNumberFormatted).HasMaxLength(267);

                entity.Property(e => e.HomeTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.ImSummary)
                    .HasMaxLength(255)
                    .HasColumnName("IM_SUMMARY");

                entity.Property(e => e.Initials).HasMaxLength(255);

                entity.Property(e => e.InternetFreeBusyAddress).HasMaxLength(255);

                entity.Property(e => e.Isdnnumber)
                    .HasMaxLength(255)
                    .HasColumnName("ISDNNumber");

                entity.Property(e => e.JobTitle).HasMaxLength(255);

                entity.Property(e => e.LastFirstAndSuffix).HasMaxLength(255);

                entity.Property(e => e.LastFirstNoSpaceCompany).HasMaxLength(255);

                entity.Property(e => e.LastFirstSpaceOnly).HasMaxLength(255);

                entity.Property(e => e.LastFirstSpaceOnlyCompany).HasMaxLength(255);

                entity.Property(e => e.LastModificationTime).HasMaxLength(255);

                entity.Property(e => e.LastName).HasMaxLength(255);

                entity.Property(e => e.LastNameAndFirstName).HasMaxLength(255);

                entity.Property(e => e.LinkedinImage)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_IMAGE");

                entity.Property(e => e.LinkedinName)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_NAME");

                entity.Property(e => e.LinkedinPrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_PRIVATE_ID");

                entity.Property(e => e.LinkedinProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_PROFILE_URL");

                entity.Property(e => e.LinkedinPublicId)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_PUBLIC_ID");

                entity.Property(e => e.MacId).HasColumnName("MAC_ID");

                entity.Property(e => e.MacName)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_NAME");

                entity.Property(e => e.MaccscId).HasColumnName("MACCSC_ID");

                entity.Property(e => e.MailingAddress).HasMaxLength(255);

                entity.Property(e => e.MailingAddressCity).HasMaxLength(255);

                entity.Property(e => e.MailingAddressCountry).HasMaxLength(255);

                entity.Property(e => e.MailingAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.MailingAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.MailingAddressState).HasMaxLength(255);

                entity.Property(e => e.MailingAddressStreet).HasMaxLength(255);

                entity.Property(e => e.MailingAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.MailingAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.ManagerName).HasMaxLength(255);

                entity.Property(e => e.McrId).HasColumnName("MCR_ID");

                entity.Property(e => e.MiddleName).HasMaxLength(255);

                entity.Property(e => e.Mileage).HasMaxLength(255);

                entity.Property(e => e.MobileTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.NetMeetingAlias).HasMaxLength(255);

                entity.Property(e => e.NetMeetingServer).HasMaxLength(255);

                entity.Property(e => e.NickName).HasMaxLength(255);

                entity.Property(e => e.OfficeLocation).HasMaxLength(255);

                entity.Property(e => e.OtherAddress).HasMaxLength(255);

                entity.Property(e => e.OtherAddressCity).HasMaxLength(255);

                entity.Property(e => e.OtherAddressCountry).HasMaxLength(255);

                entity.Property(e => e.OtherAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.OtherAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.OtherAddressState).HasMaxLength(255);

                entity.Property(e => e.OtherAddressStreet).HasMaxLength(255);

                entity.Property(e => e.OtherAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.OtherAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.OtherFaxNumber).HasMaxLength(255);

                entity.Property(e => e.OtherTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.PersonalHomePage).HasMaxLength(255);

                entity.Property(e => e.PrefAddress).HasColumnName("PREF_ADDRESS");

                entity.Property(e => e.PrefEmail).HasColumnName("PREF_EMAIL");

                entity.Property(e => e.PrefPhone).HasColumnName("PREF_PHONE");

                entity.Property(e => e.PreferredContact).HasColumnName("PREFERRED_CONTACT");

                entity.Property(e => e.PreferredContactEmail).HasColumnName("PREFERRED_CONTACT_EMAIL");

                entity.Property(e => e.PreferredContactFax).HasColumnName("PREFERRED_CONTACT_FAX");

                entity.Property(e => e.PreferredContactLetter).HasColumnName("PREFERRED_CONTACT_LETTER");

                entity.Property(e => e.PreferredContactPhone).HasColumnName("PREFERRED_CONTACT_PHONE");

                entity.Property(e => e.PrimaryContact).HasColumnName("PRIMARY_CONTACT");

                entity.Property(e => e.PrimaryTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.PrivacyNotified).HasColumnName("PRIVACY_NOTIFIED");

                entity.Property(e => e.PrivacyNotifiedBy)
                    .HasMaxLength(255)
                    .HasColumnName("PRIVACY_NOTIFIED_BY");

                entity.Property(e => e.PrivacyNotifiedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRIVACY_NOTIFIED_DATE");

                entity.Property(e => e.PrivacyNotifiedMethod)
                    .HasMaxLength(255)
                    .HasColumnName("PRIVACY_NOTIFIED_METHOD");

                entity.Property(e => e.Profession).HasMaxLength(255);

                entity.Property(e => e.RadioTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.ReferredBy).HasMaxLength(255);

                entity.Property(e => e.RemovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("REMOVAL_DATE");

                entity.Property(e => e.Salutation)
                    .HasMaxLength(255)
                    .HasColumnName("SALUTATION");

                entity.Property(e => e.SelectedMailingAddress).HasMaxLength(255);

                entity.Property(e => e.Sensitivity).HasMaxLength(255);

                entity.Property(e => e.Spouse).HasMaxLength(255);

                entity.Property(e => e.State)
                    .HasMaxLength(10)
                    .HasColumnName("STATE");

                entity.Property(e => e.Status)
                    .HasMaxLength(255)
                    .HasColumnName("STATUS");

                entity.Property(e => e.Subject).HasMaxLength(255);

                entity.Property(e => e.Suffix).HasMaxLength(255);

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TelexNumber).HasMaxLength(255);

                entity.Property(e => e.Title).HasMaxLength(255);

                entity.Property(e => e.TtytddtelephoneNumber)
                    .HasMaxLength(255)
                    .HasColumnName("TTYTDDTelephoneNumber");

                entity.Property(e => e.Twitter1Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_IMAGE");

                entity.Property(e => e.Twitter1Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_NAME");

                entity.Property(e => e.Twitter1PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_PRIVATE_ID");

                entity.Property(e => e.Twitter1ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_PROFILE_URL");

                entity.Property(e => e.Twitter1PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_PUBLIC_ID");

                entity.Property(e => e.Twitter2Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_IMAGE");

                entity.Property(e => e.Twitter2Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_NAME");

                entity.Property(e => e.Twitter2PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_PRIVATE_ID");

                entity.Property(e => e.Twitter2ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_PROFILE_URL");

                entity.Property(e => e.Twitter2PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_PUBLIC_ID");

                entity.Property(e => e.Twitter3Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_IMAGE");

                entity.Property(e => e.Twitter3Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_NAME");

                entity.Property(e => e.Twitter3PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_PRIVATE_ID");

                entity.Property(e => e.Twitter3ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_PROFILE_URL");

                entity.Property(e => e.Twitter3PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_PUBLIC_ID");

                entity.Property(e => e.Twitter4Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_IMAGE");

                entity.Property(e => e.Twitter4Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_NAME");

                entity.Property(e => e.Twitter4PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_PRIVATE_ID");

                entity.Property(e => e.Twitter4ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_PROFILE_URL");

                entity.Property(e => e.Twitter4PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_PUBLIC_ID");

                entity.Property(e => e.Twitter5Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_IMAGE");

                entity.Property(e => e.Twitter5Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_NAME");

                entity.Property(e => e.Twitter5PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_PRIVATE_ID");

                entity.Property(e => e.Twitter5ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_PROFILE_URL");

                entity.Property(e => e.Twitter5PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_PUBLIC_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");

                entity.Property(e => e.UsIdSupport).HasColumnName("US_ID_SUPPORT");

                entity.Property(e => e.UsName)
                    .HasMaxLength(255)
                    .HasColumnName("US_NAME");

                entity.Property(e => e.UsgName)
                    .HasMaxLength(255)
                    .HasColumnName("USG_NAME");

                entity.Property(e => e.WebPage).HasMaxLength(255);

                entity.Property(e => e.YomiCompanyName).HasMaxLength(255);

                entity.Property(e => e.YomiFirstName).HasMaxLength(255);

                entity.Property(e => e.YomiLastName).HasMaxLength(255);
            });

            modelBuilder.Entity<VMailCampaignsSource>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vMailCampaignsSources");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.LastRefresh)
                    .HasColumnType("datetime")
                    .HasColumnName("Last_Refresh");

                entity.Property(e => e.MacId).HasColumnName("MAC_ID");

                entity.Property(e => e.ManualAdd).HasColumnName("Manual_Add");

                entity.Property(e => e.ManualDelete).HasColumnName("Manual_Delete");

                entity.Property(e => e.McsId).HasColumnName("MCS_ID");

                entity.Property(e => e.McsIdNullable).HasColumnName("MCS_ID_NULLABLE");

                entity.Property(e => e.OldId).HasColumnName("OLD_ID");

                entity.Property(e => e.SourceQuery).HasColumnName("SOURCE_QUERY");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");
            });

            modelBuilder.Entity<VMarketingCampaign>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vMarketingCampaigns");

                entity.Property(e => e.BaseCurrencySymbol)
                    .HasMaxLength(5)
                    .HasColumnName("BASE_CURRENCY_SYMBOL");

                entity.Property(e => e.CBookings).HasColumnName("C_BOOKINGS");

                entity.Property(e => e.CBookingsConfirmed).HasColumnName("C_BOOKINGS_CONFIRMED");

                entity.Property(e => e.CBookingsOpenVal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("C_BOOKINGS_OPEN_VAL");

                entity.Property(e => e.CBookingsWonVal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("C_BOOKINGS_WON_VAL");

                entity.Property(e => e.CCompleteAct).HasColumnName("C_COMPLETE_ACT");

                entity.Property(e => e.CCompleteAppointments).HasColumnName("C_COMPLETE_APPOINTMENTS");

                entity.Property(e => e.CCostVal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("C_COST_VAL");

                entity.Property(e => e.CLostOpportunities).HasColumnName("C_LOST_OPPORTUNITIES");

                entity.Property(e => e.CLostVal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("C_LOST_VAL");

                entity.Property(e => e.COpenOpportunities).HasColumnName("C_OPEN_OPPORTUNITIES");

                entity.Property(e => e.COpenVal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("C_OPEN_VAL");

                entity.Property(e => e.CProfitVal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("C_PROFIT_VAL");

                entity.Property(e => e.CTltAppointments).HasColumnName("C_TLT_APPOINTMENTS");

                entity.Property(e => e.CTltOpportunities).HasColumnName("C_TLT_OPPORTUNITIES");

                entity.Property(e => e.CTotalAct).HasColumnName("C_TOTAL_ACT");

                entity.Property(e => e.CUniqueAct).HasColumnName("C_UNIQUE_ACT");

                entity.Property(e => e.CUnqAppointments).HasColumnName("C_UNQ_APPOINTMENTS");

                entity.Property(e => e.CWonOpportunities).HasColumnName("C_WON_OPPORTUNITIES");

                entity.Property(e => e.CWonVal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("C_WON_VAL");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Deleted).HasColumnName("DELETED");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.GroupId).HasColumnName("GROUP_ID");

                entity.Property(e => e.LastRunBy)
                    .HasMaxLength(255)
                    .HasColumnName("LAST_RUN_BY");

                entity.Property(e => e.LastRunDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_RUN_DATE");

                entity.Property(e => e.McaId).HasColumnName("MCA_ID");

                entity.Property(e => e.McaType)
                    .HasMaxLength(255)
                    .HasColumnName("MCA_TYPE");

                entity.Property(e => e.McaUd1)
                    .HasMaxLength(255)
                    .HasColumnName("MCA_UD1");

                entity.Property(e => e.McaUd10)
                    .HasMaxLength(255)
                    .HasColumnName("MCA_UD10");

                entity.Property(e => e.McaUd10Bit).HasColumnName("MCA_UD10_BIT");

                entity.Property(e => e.McaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MCA_UD10_DATE");

                entity.Property(e => e.McaUd10Id).HasColumnName("MCA_UD10_ID");

                entity.Property(e => e.McaUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("MCA_UD10_ID_NAME");

                entity.Property(e => e.McaUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("MCA_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.McaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MCA_UD10_NUMERIC");

                entity.Property(e => e.McaUd11Bit).HasColumnName("MCA_UD11_BIT");

                entity.Property(e => e.McaUd12Bit).HasColumnName("MCA_UD12_BIT");

                entity.Property(e => e.McaUd13Bit).HasColumnName("MCA_UD13_BIT");

                entity.Property(e => e.McaUd14Bit).HasColumnName("MCA_UD14_BIT");

                entity.Property(e => e.McaUd15Bit).HasColumnName("MCA_UD15_BIT");

                entity.Property(e => e.McaUd16Bit).HasColumnName("MCA_UD16_BIT");

                entity.Property(e => e.McaUd17Bit).HasColumnName("MCA_UD17_BIT");

                entity.Property(e => e.McaUd18Bit).HasColumnName("MCA_UD18_BIT");

                entity.Property(e => e.McaUd19Bit).HasColumnName("MCA_UD19_BIT");

                entity.Property(e => e.McaUd1Bit).HasColumnName("MCA_UD1_BIT");

                entity.Property(e => e.McaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MCA_UD1_DATE");

                entity.Property(e => e.McaUd1Id).HasColumnName("MCA_UD1_ID");

                entity.Property(e => e.McaUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("MCA_UD1_ID_NAME");

                entity.Property(e => e.McaUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("MCA_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.McaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MCA_UD1_NUMERIC");

                entity.Property(e => e.McaUd2)
                    .HasMaxLength(255)
                    .HasColumnName("MCA_UD2");

                entity.Property(e => e.McaUd20Bit).HasColumnName("MCA_UD20_BIT");

                entity.Property(e => e.McaUd21Bit).HasColumnName("MCA_UD21_BIT");

                entity.Property(e => e.McaUd22Bit).HasColumnName("MCA_UD22_BIT");

                entity.Property(e => e.McaUd23Bit).HasColumnName("MCA_UD23_BIT");

                entity.Property(e => e.McaUd24Bit).HasColumnName("MCA_UD24_BIT");

                entity.Property(e => e.McaUd2Bit).HasColumnName("MCA_UD2_BIT");

                entity.Property(e => e.McaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MCA_UD2_DATE");

                entity.Property(e => e.McaUd2Id).HasColumnName("MCA_UD2_ID");

                entity.Property(e => e.McaUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("MCA_UD2_ID_NAME");

                entity.Property(e => e.McaUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("MCA_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.McaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MCA_UD2_NUMERIC");

                entity.Property(e => e.McaUd3)
                    .HasMaxLength(255)
                    .HasColumnName("MCA_UD3");

                entity.Property(e => e.McaUd3Bit).HasColumnName("MCA_UD3_BIT");

                entity.Property(e => e.McaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MCA_UD3_DATE");

                entity.Property(e => e.McaUd3Id).HasColumnName("MCA_UD3_ID");

                entity.Property(e => e.McaUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("MCA_UD3_ID_NAME");

                entity.Property(e => e.McaUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("MCA_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.McaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MCA_UD3_NUMERIC");

                entity.Property(e => e.McaUd4)
                    .HasMaxLength(255)
                    .HasColumnName("MCA_UD4");

                entity.Property(e => e.McaUd4Bit).HasColumnName("MCA_UD4_BIT");

                entity.Property(e => e.McaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MCA_UD4_DATE");

                entity.Property(e => e.McaUd4Id).HasColumnName("MCA_UD4_ID");

                entity.Property(e => e.McaUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("MCA_UD4_ID_NAME");

                entity.Property(e => e.McaUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("MCA_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.McaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MCA_UD4_NUMERIC");

                entity.Property(e => e.McaUd5)
                    .HasMaxLength(255)
                    .HasColumnName("MCA_UD5");

                entity.Property(e => e.McaUd5Bit).HasColumnName("MCA_UD5_BIT");

                entity.Property(e => e.McaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MCA_UD5_DATE");

                entity.Property(e => e.McaUd5Id).HasColumnName("MCA_UD5_ID");

                entity.Property(e => e.McaUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("MCA_UD5_ID_NAME");

                entity.Property(e => e.McaUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("MCA_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.McaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MCA_UD5_NUMERIC");

                entity.Property(e => e.McaUd6)
                    .HasMaxLength(255)
                    .HasColumnName("MCA_UD6");

                entity.Property(e => e.McaUd6Bit).HasColumnName("MCA_UD6_BIT");

                entity.Property(e => e.McaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MCA_UD6_DATE");

                entity.Property(e => e.McaUd6Id).HasColumnName("MCA_UD6_ID");

                entity.Property(e => e.McaUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("MCA_UD6_ID_NAME");

                entity.Property(e => e.McaUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("MCA_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.McaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MCA_UD6_NUMERIC");

                entity.Property(e => e.McaUd7)
                    .HasMaxLength(255)
                    .HasColumnName("MCA_UD7");

                entity.Property(e => e.McaUd7Bit).HasColumnName("MCA_UD7_BIT");

                entity.Property(e => e.McaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MCA_UD7_DATE");

                entity.Property(e => e.McaUd7Id).HasColumnName("MCA_UD7_ID");

                entity.Property(e => e.McaUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("MCA_UD7_ID_NAME");

                entity.Property(e => e.McaUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("MCA_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.McaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MCA_UD7_NUMERIC");

                entity.Property(e => e.McaUd8)
                    .HasMaxLength(255)
                    .HasColumnName("MCA_UD8");

                entity.Property(e => e.McaUd8Bit).HasColumnName("MCA_UD8_BIT");

                entity.Property(e => e.McaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MCA_UD8_DATE");

                entity.Property(e => e.McaUd8Id).HasColumnName("MCA_UD8_ID");

                entity.Property(e => e.McaUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("MCA_UD8_ID_NAME");

                entity.Property(e => e.McaUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("MCA_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.McaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MCA_UD8_NUMERIC");

                entity.Property(e => e.McaUd9)
                    .HasMaxLength(255)
                    .HasColumnName("MCA_UD9");

                entity.Property(e => e.McaUd9Bit).HasColumnName("MCA_UD9_BIT");

                entity.Property(e => e.McaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("MCA_UD9_DATE");

                entity.Property(e => e.McaUd9Id).HasColumnName("MCA_UD9_ID");

                entity.Property(e => e.McaUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("MCA_UD9_ID_NAME");

                entity.Property(e => e.McaUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("MCA_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.McaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("MCA_UD9_NUMERIC");

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.SecurityGroup)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("SECURITY_GROUP");

                entity.Property(e => e.SgId).HasColumnName("SG_ID");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.SitId).HasColumnName("SIT_ID");

                entity.Property(e => e.SiteName)
                    .HasMaxLength(255)
                    .HasColumnName("SITE_NAME");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Type).HasColumnName("TYPE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsName)
                    .HasMaxLength(255)
                    .HasColumnName("US_NAME");

                entity.Property(e => e.UsgName)
                    .HasMaxLength(255)
                    .HasColumnName("USG_NAME");
            });

            modelBuilder.Entity<VMarketingCampaignStage>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vMarketingCampaignStages");

                entity.Property(e => e.ActAcManager).HasColumnName("ACT_AC_MANAGER");

                entity.Property(e => e.ActCreate).HasColumnName("ACT_CREATE");

                entity.Property(e => e.ActDueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ACT_DUE_DATE");

                entity.Property(e => e.ActOwner).HasColumnName("ACT_OWNER");

                entity.Property(e => e.ActStage).HasColumnName("ACT_STAGE");

                entity.Property(e => e.ActStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ACT_START_DATE");

                entity.Property(e => e.AutoAllrecp).HasColumnName("AUTO_ALLRECP");

                entity.Property(e => e.AutoDay).HasColumnName("AUTO_DAY");

                entity.Property(e => e.AutoEnd)
                    .HasColumnType("datetime")
                    .HasColumnName("AUTO_END");

                entity.Property(e => e.AutoFreq).HasColumnName("AUTO_FREQ");

                entity.Property(e => e.AutoLastSent)
                    .HasColumnType("datetime")
                    .HasColumnName("AUTO_LAST_SENT");

                entity.Property(e => e.AutoMonth).HasColumnName("AUTO_MONTH");

                entity.Property(e => e.AutoMstId).HasColumnName("AUTO_MST_ID");

                entity.Property(e => e.AutoStart)
                    .HasColumnType("datetime")
                    .HasColumnName("AUTO_START");

                entity.Property(e => e.AutoTemplate)
                    .HasMaxLength(255)
                    .HasColumnName("AUTO_TEMPLATE");

                entity.Property(e => e.AutoTime).HasColumnName("AUTO_TIME");

                entity.Property(e => e.AutoWeekDays).HasColumnName("AUTO_WEEK_DAYS");

                entity.Property(e => e.BaseCurrencySymbol)
                    .HasMaxLength(5)
                    .HasColumnName("BASE_CURRENCY_SYMBOL");

                entity.Property(e => e.CBookings).HasColumnName("C_BOOKINGS");

                entity.Property(e => e.CBookingsConfirmed).HasColumnName("C_BOOKINGS_CONFIRMED");

                entity.Property(e => e.CBookingsOpenVal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("C_BOOKINGS_OPEN_VAL");

                entity.Property(e => e.CBookingsWonVal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("C_BOOKINGS_WON_VAL");

                entity.Property(e => e.CCompleteAct).HasColumnName("C_COMPLETE_ACT");

                entity.Property(e => e.CCompleteAppointments).HasColumnName("C_COMPLETE_APPOINTMENTS");

                entity.Property(e => e.CCostVal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("C_COST_VAL");

                entity.Property(e => e.CLostOpportunities).HasColumnName("C_LOST_OPPORTUNITIES");

                entity.Property(e => e.CLostVal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("C_LOST_VAL");

                entity.Property(e => e.COpenOpportunities).HasColumnName("C_OPEN_OPPORTUNITIES");

                entity.Property(e => e.COpenVal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("C_OPEN_VAL");

                entity.Property(e => e.CProfitVal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("C_PROFIT_VAL");

                entity.Property(e => e.CRuns).HasColumnName("C_RUNS");

                entity.Property(e => e.CTltAppointments).HasColumnName("C_TLT_APPOINTMENTS");

                entity.Property(e => e.CTltEmailsBounced).HasColumnName("C_TLT_EMAILS_BOUNCED");

                entity.Property(e => e.CTltEmailsClicked).HasColumnName("C_TLT_EMAILS_CLICKED");

                entity.Property(e => e.CTltEmailsDelivered).HasColumnName("C_TLT_EMAILS_DELIVERED");

                entity.Property(e => e.CTltEmailsForwarded).HasColumnName("C_TLT_EMAILS_FORWARDED");

                entity.Property(e => e.CTltEmailsOpened).HasColumnName("C_TLT_EMAILS_OPENED");

                entity.Property(e => e.CTltEmailsReplied).HasColumnName("C_TLT_EMAILS_REPLIED");

                entity.Property(e => e.CTltEmailsUnsuball).HasColumnName("C_TLT_EMAILS_UNSUBALL");

                entity.Property(e => e.CTltEmailsUnsubthis).HasColumnName("C_TLT_EMAILS_UNSUBTHIS");

                entity.Property(e => e.CTltOpportunities).HasColumnName("C_TLT_OPPORTUNITIES");

                entity.Property(e => e.CTotal).HasColumnName("C_TOTAL");

                entity.Property(e => e.CTotalAct).HasColumnName("C_TOTAL_ACT");

                entity.Property(e => e.CTotalSent).HasColumnName("C_TOTAL_SENT");

                entity.Property(e => e.CUniqueAct).HasColumnName("C_UNIQUE_ACT");

                entity.Property(e => e.CUniqueSent).HasColumnName("C_UNIQUE_SENT");

                entity.Property(e => e.CUnqAppointments).HasColumnName("C_UNQ_APPOINTMENTS");

                entity.Property(e => e.CUnqEmailsBounced).HasColumnName("C_UNQ_EMAILS_BOUNCED");

                entity.Property(e => e.CUnqEmailsClicked).HasColumnName("C_UNQ_EMAILS_CLICKED");

                entity.Property(e => e.CUnqEmailsDelivered).HasColumnName("C_UNQ_EMAILS_DELIVERED");

                entity.Property(e => e.CUnqEmailsForwarded).HasColumnName("C_UNQ_EMAILS_FORWARDED");

                entity.Property(e => e.CUnqEmailsOpened).HasColumnName("C_UNQ_EMAILS_OPENED");

                entity.Property(e => e.CUnqEmailsReplied).HasColumnName("C_UNQ_EMAILS_REPLIED");

                entity.Property(e => e.CUnqEmailsUnsuball).HasColumnName("C_UNQ_EMAILS_UNSUBALL");

                entity.Property(e => e.CUnqEmailsUnsubthis).HasColumnName("C_UNQ_EMAILS_UNSUBTHIS");

                entity.Property(e => e.CValid).HasColumnName("C_VALID");

                entity.Property(e => e.CValidEmail).HasColumnName("C_VALID_EMAIL");

                entity.Property(e => e.CValidFax).HasColumnName("C_VALID_FAX");

                entity.Property(e => e.CValidLetter).HasColumnName("C_VALID_LETTER");

                entity.Property(e => e.CValidMobile).HasColumnName("C_VALID_MOBILE");

                entity.Property(e => e.CValidPhone).HasColumnName("C_VALID_PHONE");

                entity.Property(e => e.CWonOpportunities).HasColumnName("C_WON_OPPORTUNITIES");

                entity.Property(e => e.CWonVal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("C_WON_VAL");

                entity.Property(e => e.Closed).HasColumnName("CLOSED");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DefaultRecipient)
                    .HasMaxLength(255)
                    .HasColumnName("DEFAULT_RECIPIENT");

                entity.Property(e => e.DefaultSalutation)
                    .HasMaxLength(255)
                    .HasColumnName("DEFAULT_SALUTATION");

                entity.Property(e => e.Deleted).HasColumnName("DELETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.EmailBody)
                    .HasMaxLength(4000)
                    .HasColumnName("EMAIL_BODY");

                entity.Property(e => e.EmailSubject)
                    .HasMaxLength(100)
                    .HasColumnName("EMAIL_SUBJECT");

                entity.Property(e => e.IsAutomated).HasColumnName("IS_AUTOMATED");

                entity.Property(e => e.IsPrivacyNotified).HasColumnName("IS_PRIVACY_NOTIFIED");

                entity.Property(e => e.LastRefresh)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_REFRESH");

                entity.Property(e => e.LastRefreshBy)
                    .HasMaxLength(255)
                    .HasColumnName("LAST_REFRESH_BY");

                entity.Property(e => e.LastRunBy)
                    .HasMaxLength(255)
                    .HasColumnName("LAST_RUN_BY");

                entity.Property(e => e.LastRunDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_RUN_DATE");

                entity.Property(e => e.McaId).HasColumnName("MCA_ID");

                entity.Property(e => e.McaName)
                    .HasMaxLength(255)
                    .HasColumnName("MCA_NAME");

                entity.Property(e => e.McaSummary)
                    .HasMaxLength(255)
                    .HasColumnName("MCA_SUMMARY");

                entity.Property(e => e.MediaType).HasColumnName("MEDIA_TYPE");

                entity.Property(e => e.MediaTypeName)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("MEDIA_TYPE_NAME");

                entity.Property(e => e.OptInsOnly).HasColumnName("OPT_INS_ONLY");

                entity.Property(e => e.ParentStageName)
                    .HasMaxLength(255)
                    .HasColumnName("PARENT_STAGE_NAME");

                entity.Property(e => e.PrivacyNotificationReason)
                    .HasMaxLength(255)
                    .HasColumnName("PRIVACY_NOTIFICATION_REASON");

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.RunBy)
                    .HasMaxLength(255)
                    .HasColumnName("RUN_BY");

                entity.Property(e => e.RunDate)
                    .HasColumnType("datetime")
                    .HasColumnName("RUN_DATE");

                entity.Property(e => e.SgId).HasColumnName("SG_ID");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.StageType).HasColumnName("STAGE_TYPE");

                entity.Property(e => e.StageTypeName)
                    .HasMaxLength(103)
                    .HasColumnName("STAGE_TYPE_NAME");

                entity.Property(e => e.Stale).HasColumnName("STALE");

                entity.Property(e => e.State).HasColumnName("STATE");

                entity.Property(e => e.StateName)
                    .IsRequired()
                    .HasMaxLength(22)
                    .IsUnicode(false)
                    .HasColumnName("STATE_NAME");

                entity.Property(e => e.StgId).HasColumnName("STG_ID");

                entity.Property(e => e.StgIdParent).HasColumnName("STG_ID_PARENT");

                entity.Property(e => e.StgUd1)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD1");

                entity.Property(e => e.StgUd10)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD10");

                entity.Property(e => e.StgUd10Bit).HasColumnName("STG_UD10_BIT");

                entity.Property(e => e.StgUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("STG_UD10_DATE");

                entity.Property(e => e.StgUd10Id).HasColumnName("STG_UD10_ID");

                entity.Property(e => e.StgUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD10_ID_NAME");

                entity.Property(e => e.StgUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("STG_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.StgUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("STG_UD10_NUMERIC");

                entity.Property(e => e.StgUd11Bit).HasColumnName("STG_UD11_BIT");

                entity.Property(e => e.StgUd12Bit).HasColumnName("STG_UD12_BIT");

                entity.Property(e => e.StgUd13Bit).HasColumnName("STG_UD13_BIT");

                entity.Property(e => e.StgUd14Bit).HasColumnName("STG_UD14_BIT");

                entity.Property(e => e.StgUd15Bit).HasColumnName("STG_UD15_BIT");

                entity.Property(e => e.StgUd16Bit).HasColumnName("STG_UD16_BIT");

                entity.Property(e => e.StgUd17Bit).HasColumnName("STG_UD17_BIT");

                entity.Property(e => e.StgUd18Bit).HasColumnName("STG_UD18_BIT");

                entity.Property(e => e.StgUd19Bit).HasColumnName("STG_UD19_BIT");

                entity.Property(e => e.StgUd1Bit).HasColumnName("STG_UD1_BIT");

                entity.Property(e => e.StgUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("STG_UD1_DATE");

                entity.Property(e => e.StgUd1Id).HasColumnName("STG_UD1_ID");

                entity.Property(e => e.StgUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD1_ID_NAME");

                entity.Property(e => e.StgUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("STG_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.StgUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("STG_UD1_NUMERIC");

                entity.Property(e => e.StgUd2)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD2");

                entity.Property(e => e.StgUd20Bit).HasColumnName("STG_UD20_BIT");

                entity.Property(e => e.StgUd21Bit).HasColumnName("STG_UD21_BIT");

                entity.Property(e => e.StgUd22Bit).HasColumnName("STG_UD22_BIT");

                entity.Property(e => e.StgUd23Bit).HasColumnName("STG_UD23_BIT");

                entity.Property(e => e.StgUd24Bit).HasColumnName("STG_UD24_BIT");

                entity.Property(e => e.StgUd2Bit).HasColumnName("STG_UD2_BIT");

                entity.Property(e => e.StgUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("STG_UD2_DATE");

                entity.Property(e => e.StgUd2Id).HasColumnName("STG_UD2_ID");

                entity.Property(e => e.StgUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD2_ID_NAME");

                entity.Property(e => e.StgUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("STG_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.StgUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("STG_UD2_NUMERIC");

                entity.Property(e => e.StgUd3)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD3");

                entity.Property(e => e.StgUd3Bit).HasColumnName("STG_UD3_BIT");

                entity.Property(e => e.StgUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("STG_UD3_DATE");

                entity.Property(e => e.StgUd3Id).HasColumnName("STG_UD3_ID");

                entity.Property(e => e.StgUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD3_ID_NAME");

                entity.Property(e => e.StgUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("STG_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.StgUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("STG_UD3_NUMERIC");

                entity.Property(e => e.StgUd4)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD4");

                entity.Property(e => e.StgUd4Bit).HasColumnName("STG_UD4_BIT");

                entity.Property(e => e.StgUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("STG_UD4_DATE");

                entity.Property(e => e.StgUd4Id).HasColumnName("STG_UD4_ID");

                entity.Property(e => e.StgUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD4_ID_NAME");

                entity.Property(e => e.StgUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("STG_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.StgUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("STG_UD4_NUMERIC");

                entity.Property(e => e.StgUd5)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD5");

                entity.Property(e => e.StgUd5Bit).HasColumnName("STG_UD5_BIT");

                entity.Property(e => e.StgUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("STG_UD5_DATE");

                entity.Property(e => e.StgUd5Id).HasColumnName("STG_UD5_ID");

                entity.Property(e => e.StgUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD5_ID_NAME");

                entity.Property(e => e.StgUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("STG_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.StgUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("STG_UD5_NUMERIC");

                entity.Property(e => e.StgUd6)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD6");

                entity.Property(e => e.StgUd6Bit).HasColumnName("STG_UD6_BIT");

                entity.Property(e => e.StgUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("STG_UD6_DATE");

                entity.Property(e => e.StgUd6Id).HasColumnName("STG_UD6_ID");

                entity.Property(e => e.StgUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD6_ID_NAME");

                entity.Property(e => e.StgUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("STG_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.StgUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("STG_UD6_NUMERIC");

                entity.Property(e => e.StgUd7)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD7");

                entity.Property(e => e.StgUd7Bit).HasColumnName("STG_UD7_BIT");

                entity.Property(e => e.StgUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("STG_UD7_DATE");

                entity.Property(e => e.StgUd7Id).HasColumnName("STG_UD7_ID");

                entity.Property(e => e.StgUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD7_ID_NAME");

                entity.Property(e => e.StgUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("STG_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.StgUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("STG_UD7_NUMERIC");

                entity.Property(e => e.StgUd8)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD8");

                entity.Property(e => e.StgUd8Bit).HasColumnName("STG_UD8_BIT");

                entity.Property(e => e.StgUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("STG_UD8_DATE");

                entity.Property(e => e.StgUd8Id).HasColumnName("STG_UD8_ID");

                entity.Property(e => e.StgUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD8_ID_NAME");

                entity.Property(e => e.StgUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("STG_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.StgUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("STG_UD8_NUMERIC");

                entity.Property(e => e.StgUd9)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD9");

                entity.Property(e => e.StgUd9Bit).HasColumnName("STG_UD9_BIT");

                entity.Property(e => e.StgUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("STG_UD9_DATE");

                entity.Property(e => e.StgUd9Id).HasColumnName("STG_UD9_ID");

                entity.Property(e => e.StgUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD9_ID_NAME");

                entity.Property(e => e.StgUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("STG_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.StgUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("STG_UD9_NUMERIC");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TemplateName)
                    .HasMaxLength(500)
                    .HasColumnName("TEMPLATE_NAME");

                entity.Property(e => e.Type).HasColumnName("TYPE");

                entity.Property(e => e.TypeName)
                    .HasMaxLength(255)
                    .HasColumnName("TYPE_NAME");

                entity.Property(e => e.TypeNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("TYPE_NAME_HLIGHT");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsName)
                    .HasMaxLength(255)
                    .HasColumnName("US_NAME");

                entity.Property(e => e.UsgName)
                    .HasMaxLength(255)
                    .HasColumnName("USG_NAME");
            });

            modelBuilder.Entity<VMarketingCampaignStageRun>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vMarketingCampaignStageRuns");

                entity.Property(e => e.ActAcManager).HasColumnName("ACT_AC_MANAGER");

                entity.Property(e => e.ActCreate).HasColumnName("ACT_CREATE");

                entity.Property(e => e.ActDueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ACT_DUE_DATE");

                entity.Property(e => e.ActOwner).HasColumnName("ACT_OWNER");

                entity.Property(e => e.ActStage).HasColumnName("ACT_STAGE");

                entity.Property(e => e.ActStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ACT_START_DATE");

                entity.Property(e => e.CCompleteAppointments).HasColumnName("C_COMPLETE_APPOINTMENTS");

                entity.Property(e => e.CSent).HasColumnName("C_SENT");

                entity.Property(e => e.CTltAppointments).HasColumnName("C_TLT_APPOINTMENTS");

                entity.Property(e => e.CTltEmailsBounced).HasColumnName("C_TLT_EMAILS_BOUNCED");

                entity.Property(e => e.CTltEmailsClicked).HasColumnName("C_TLT_EMAILS_CLICKED");

                entity.Property(e => e.CTltEmailsDelivered).HasColumnName("C_TLT_EMAILS_DELIVERED");

                entity.Property(e => e.CTltEmailsOpened).HasColumnName("C_TLT_EMAILS_OPENED");

                entity.Property(e => e.CTltEmailsReplied).HasColumnName("C_TLT_EMAILS_REPLIED");

                entity.Property(e => e.CTltEmailsUnsuball).HasColumnName("C_TLT_EMAILS_UNSUBALL");

                entity.Property(e => e.CTltEmailsUnsubthis).HasColumnName("C_TLT_EMAILS_UNSUBTHIS");

                entity.Property(e => e.CTotal).HasColumnName("C_TOTAL");

                entity.Property(e => e.CUnqAppointments).HasColumnName("C_UNQ_APPOINTMENTS");

                entity.Property(e => e.CUnqEmailsBounced).HasColumnName("C_UNQ_EMAILS_BOUNCED");

                entity.Property(e => e.CUnqEmailsClicked).HasColumnName("C_UNQ_EMAILS_CLICKED");

                entity.Property(e => e.CUnqEmailsDelivered).HasColumnName("C_UNQ_EMAILS_DELIVERED");

                entity.Property(e => e.CUnqEmailsOpened).HasColumnName("C_UNQ_EMAILS_OPENED");

                entity.Property(e => e.CUnqEmailsReplied).HasColumnName("C_UNQ_EMAILS_REPLIED");

                entity.Property(e => e.CUnqEmailsUnsuball).HasColumnName("C_UNQ_EMAILS_UNSUBALL");

                entity.Property(e => e.CUnqEmailsUnsubthis).HasColumnName("C_UNQ_EMAILS_UNSUBTHIS");

                entity.Property(e => e.CValid).HasColumnName("C_VALID");

                entity.Property(e => e.DefaultRecipient)
                    .HasMaxLength(255)
                    .HasColumnName("DEFAULT_RECIPIENT");

                entity.Property(e => e.DefaultSalutation)
                    .HasMaxLength(255)
                    .HasColumnName("DEFAULT_SALUTATION");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.DocumentLetterJobCreated).HasColumnName("DOCUMENT_LETTER_JOB_CREATED");

                entity.Property(e => e.IsAutomated).HasColumnName("IS_AUTOMATED");

                entity.Property(e => e.McsrDeleted).HasColumnName("MCSR_DELETED");

                entity.Property(e => e.McsrId).HasColumnName("MCSR_ID");

                entity.Property(e => e.NewOnly).HasColumnName("NEW_ONLY");

                entity.Property(e => e.RunBy)
                    .HasMaxLength(255)
                    .HasColumnName("RUN_BY");

                entity.Property(e => e.RunDate)
                    .HasColumnType("datetime")
                    .HasColumnName("RUN_DATE");

                entity.Property(e => e.RunEnd)
                    .HasColumnType("datetime")
                    .HasColumnName("RUN_END");

                entity.Property(e => e.RunStart)
                    .HasColumnType("datetime")
                    .HasColumnName("RUN_START");

                entity.Property(e => e.RunState).HasColumnName("RUN_STATE");

                entity.Property(e => e.StartTime)
                    .HasColumnType("datetime")
                    .HasColumnName("START_TIME");

                entity.Property(e => e.StgId).HasColumnName("STG_ID");

                entity.Property(e => e.UsId).HasColumnName("US_ID");
            });

            modelBuilder.Entity<VMarketingCampaignStageRunStat>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vMarketingCampaignStageRunStats");

                entity.Property(e => e.McsrId).HasColumnName("MCSR_ID");

                entity.Property(e => e.TltBounced).HasColumnName("TLT_BOUNCED");

                entity.Property(e => e.TltClicked).HasColumnName("TLT_CLICKED");

                entity.Property(e => e.TltDelivered).HasColumnName("TLT_DELIVERED");

                entity.Property(e => e.TltOpened).HasColumnName("TLT_OPENED");

                entity.Property(e => e.TltReplied).HasColumnName("TLT_REPLIED");

                entity.Property(e => e.TltUnsuball).HasColumnName("TLT_UNSUBALL");

                entity.Property(e => e.TltUnsubthis).HasColumnName("TLT_UNSUBTHIS");

                entity.Property(e => e.UnqBounced).HasColumnName("UNQ_BOUNCED");

                entity.Property(e => e.UnqClicked).HasColumnName("UNQ_CLICKED");

                entity.Property(e => e.UnqDelivered).HasColumnName("UNQ_DELIVERED");

                entity.Property(e => e.UnqOpened).HasColumnName("UNQ_OPENED");

                entity.Property(e => e.UnqReplied).HasColumnName("UNQ_REPLIED");

                entity.Property(e => e.UnqUnsuball).HasColumnName("UNQ_UNSUBALL");

                entity.Property(e => e.UnqUnsubthis).HasColumnName("UNQ_UNSUBTHIS");
            });

            modelBuilder.Entity<VMarketingCampaignStageStat>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vMarketingCampaignStageStats");

                entity.Property(e => e.CTltEmailsBounced).HasColumnName("C_TLT_EMAILS_BOUNCED");

                entity.Property(e => e.CTltEmailsClicked).HasColumnName("C_TLT_EMAILS_CLICKED");

                entity.Property(e => e.CTltEmailsDelivered).HasColumnName("C_TLT_EMAILS_DELIVERED");

                entity.Property(e => e.CTltEmailsOpened).HasColumnName("C_TLT_EMAILS_OPENED");

                entity.Property(e => e.CTltEmailsReplied).HasColumnName("C_TLT_EMAILS_REPLIED");

                entity.Property(e => e.CTltEmailsUnsuball).HasColumnName("C_TLT_EMAILS_UNSUBALL");

                entity.Property(e => e.CTltEmailsUnsubthis).HasColumnName("C_TLT_EMAILS_UNSUBTHIS");

                entity.Property(e => e.CUnqEmailsBounced).HasColumnName("C_UNQ_EMAILS_BOUNCED");

                entity.Property(e => e.CUnqEmailsClicked).HasColumnName("C_UNQ_EMAILS_CLICKED");

                entity.Property(e => e.CUnqEmailsDelivered).HasColumnName("C_UNQ_EMAILS_DELIVERED");

                entity.Property(e => e.CUnqEmailsOpened).HasColumnName("C_UNQ_EMAILS_OPENED");

                entity.Property(e => e.CUnqEmailsReplied).HasColumnName("C_UNQ_EMAILS_REPLIED");

                entity.Property(e => e.CUnqEmailsUnsuball).HasColumnName("C_UNQ_EMAILS_UNSUBALL");

                entity.Property(e => e.CUnqEmailsUnsubthis).HasColumnName("C_UNQ_EMAILS_UNSUBTHIS");

                entity.Property(e => e.StgId).HasColumnName("STG_ID");
            });

            modelBuilder.Entity<VMarketingCampaignStageTotalSent>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vMarketingCampaignStageTotalSent");

                entity.Property(e => e.StgId).HasColumnName("STG_ID");

                entity.Property(e => e.Total).HasColumnName("TOTAL");
            });

            modelBuilder.Entity<VMarketingCampaignUnsubscribe>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vMarketingCampaignUnsubscribes");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcSummary)
                    .HasMaxLength(255)
                    .HasColumnName("AC_SUMMARY");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccSummary)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_SUMMARY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CsId).HasColumnName("CS_ID");

                entity.Property(e => e.Email1)
                    .HasMaxLength(255)
                    .HasColumnName("EMAIL1");

                entity.Property(e => e.Email2)
                    .HasMaxLength(255)
                    .HasColumnName("EMAIL2");

                entity.Property(e => e.Email3)
                    .HasMaxLength(255)
                    .HasColumnName("EMAIL3");

                entity.Property(e => e.EmailUnsuballDate)
                    .HasColumnType("datetime")
                    .HasColumnName("EMAIL_UNSUBALL_DATE");

                entity.Property(e => e.GvType)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("GV_TYPE");

                entity.Property(e => e.McsrrGuid).HasColumnName("MCSRR_GUID");

                entity.Property(e => e.PrimaryEmail)
                    .HasMaxLength(255)
                    .HasColumnName("PRIMARY_EMAIL");
            });

            modelBuilder.Entity<VMarketingClicksForAccountContact>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vMarketingClicksForAccountContacts");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccSummary)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_SUMMARY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CsId).HasColumnName("CS_ID");

                entity.Property(e => e.DateClicked)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_CLICKED");

                entity.Property(e => e.McaId).HasColumnName("MCA_ID");

                entity.Property(e => e.McaSummary)
                    .HasMaxLength(255)
                    .HasColumnName("MCA_SUMMARY");

                entity.Property(e => e.MclId).HasColumnName("MCL_ID");

                entity.Property(e => e.McsrId).HasColumnName("MCSR_ID");

                entity.Property(e => e.PrimaryContact).HasColumnName("PRIMARY_CONTACT");

                entity.Property(e => e.StgId).HasColumnName("STG_ID");

                entity.Property(e => e.StgSummary)
                    .HasMaxLength(255)
                    .HasColumnName("STG_SUMMARY");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Url)
                    .HasMaxLength(255)
                    .HasColumnName("URL");
            });

            modelBuilder.Entity<VMarketingSource>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vMarketingSources");

                entity.Property(e => e.CEmailsBounced).HasColumnName("C_EMAILS_BOUNCED");

                entity.Property(e => e.CEmailsClicked).HasColumnName("C_EMAILS_CLICKED");

                entity.Property(e => e.CEmailsDelivered).HasColumnName("C_EMAILS_DELIVERED");

                entity.Property(e => e.CEmailsForwarded).HasColumnName("C_EMAILS_FORWARDED");

                entity.Property(e => e.CEmailsOpened).HasColumnName("C_EMAILS_OPENED");

                entity.Property(e => e.CEmailsReplied).HasColumnName("C_EMAILS_REPLIED");

                entity.Property(e => e.CEmailsRunningtotal).HasColumnName("C_EMAILS_RUNNINGTOTAL");

                entity.Property(e => e.CExcludedContacts).HasColumnName("C_EXCLUDED_CONTACTS");

                entity.Property(e => e.CExcludedItems).HasColumnName("C_EXCLUDED_ITEMS");

                entity.Property(e => e.CFaxRunningtotal).HasColumnName("C_FAX_RUNNINGTOTAL");

                entity.Property(e => e.CIncludedContacts).HasColumnName("C_INCLUDED_CONTACTS");

                entity.Property(e => e.CIncludedItems).HasColumnName("C_INCLUDED_ITEMS");

                entity.Property(e => e.CLetterRunningtotal).HasColumnName("C_LETTER_RUNNINGTOTAL");

                entity.Property(e => e.CPhoneRunningtotal).HasColumnName("C_PHONE_RUNNINGTOTAL");

                entity.Property(e => e.CTimesSentEmail).HasColumnName("C_TIMES_SENT_EMAIL");

                entity.Property(e => e.CTimesSentFax).HasColumnName("C_TIMES_SENT_FAX");

                entity.Property(e => e.CTimesSentLetter).HasColumnName("C_TIMES_SENT_LETTER");

                entity.Property(e => e.CTimesSentPhone).HasColumnName("C_TIMES_SENT_PHONE");

                entity.Property(e => e.CTimesSentTotal).HasColumnName("C_TIMES_SENT_TOTAL");

                entity.Property(e => e.CTotal).HasColumnName("C_TOTAL");

                entity.Property(e => e.CValidEmail).HasColumnName("C_VALID_EMAIL");

                entity.Property(e => e.CValidFax).HasColumnName("C_VALID_FAX");

                entity.Property(e => e.CValidLetter).HasColumnName("C_VALID_LETTER");

                entity.Property(e => e.CValidPhone).HasColumnName("C_VALID_PHONE");

                entity.Property(e => e.CValidSms).HasColumnName("C_VALID_SMS");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Dormant).HasColumnName("DORMANT");

                entity.Property(e => e.DormantBy)
                    .HasMaxLength(10)
                    .HasColumnName("DORMANT_BY")
                    .IsFixedLength(true);

                entity.Property(e => e.DormantDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DORMANT_DATE");

                entity.Property(e => e.GroupId).HasColumnName("GROUP_ID");

                entity.Property(e => e.LastRefresh)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_REFRESH");

                entity.Property(e => e.LastRefreshBy)
                    .HasMaxLength(255)
                    .HasColumnName("LAST_REFRESH_BY");

                entity.Property(e => e.LastRuleChange)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_RULE_CHANGE");

                entity.Property(e => e.LastRuleChangeBy)
                    .HasMaxLength(255)
                    .HasColumnName("LAST_RULE_CHANGE_BY");

                entity.Property(e => e.PrefEmail).HasColumnName("PREF_EMAIL");

                entity.Property(e => e.PrefFax).HasColumnName("PREF_FAX");

                entity.Property(e => e.PrefLetter).HasColumnName("PREF_LETTER");

                entity.Property(e => e.PrefPhone).HasColumnName("PREF_PHONE");

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.SecurtiyAccess)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("SECURTIY_ACCESS");

                entity.Property(e => e.SgId).HasColumnName("SG_ID");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.SrcExternal)
                    .HasMaxLength(255)
                    .HasColumnName("SRC_EXTERNAL");

                entity.Property(e => e.SrcId).HasColumnName("SRC_ID");

                entity.Property(e => e.SrcType).HasColumnName("SRC_TYPE");

                entity.Property(e => e.SrcTypeName)
                    .HasMaxLength(103)
                    .HasColumnName("SRC_TYPE_NAME");

                entity.Property(e => e.SrcUd1)
                    .HasMaxLength(255)
                    .HasColumnName("SRC_UD1");

                entity.Property(e => e.SrcUd10)
                    .HasMaxLength(255)
                    .HasColumnName("SRC_UD10");

                entity.Property(e => e.SrcUd10Bit).HasColumnName("SRC_UD10_BIT");

                entity.Property(e => e.SrcUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SRC_UD10_DATE");

                entity.Property(e => e.SrcUd10Id).HasColumnName("SRC_UD10_ID");

                entity.Property(e => e.SrcUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SRC_UD10_ID_NAME");

                entity.Property(e => e.SrcUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SRC_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.SrcUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SRC_UD10_NUMERIC");

                entity.Property(e => e.SrcUd11Bit).HasColumnName("SRC_UD11_BIT");

                entity.Property(e => e.SrcUd12Bit).HasColumnName("SRC_UD12_BIT");

                entity.Property(e => e.SrcUd13Bit).HasColumnName("SRC_UD13_BIT");

                entity.Property(e => e.SrcUd14Bit).HasColumnName("SRC_UD14_BIT");

                entity.Property(e => e.SrcUd15Bit).HasColumnName("SRC_UD15_BIT");

                entity.Property(e => e.SrcUd16Bit).HasColumnName("SRC_UD16_BIT");

                entity.Property(e => e.SrcUd17Bit).HasColumnName("SRC_UD17_BIT");

                entity.Property(e => e.SrcUd18Bit).HasColumnName("SRC_UD18_BIT");

                entity.Property(e => e.SrcUd19Bit).HasColumnName("SRC_UD19_BIT");

                entity.Property(e => e.SrcUd1Bit).HasColumnName("SRC_UD1_BIT");

                entity.Property(e => e.SrcUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SRC_UD1_DATE");

                entity.Property(e => e.SrcUd1Id).HasColumnName("SRC_UD1_ID");

                entity.Property(e => e.SrcUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SRC_UD1_ID_NAME");

                entity.Property(e => e.SrcUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SRC_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.SrcUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SRC_UD1_NUMERIC");

                entity.Property(e => e.SrcUd2)
                    .HasMaxLength(255)
                    .HasColumnName("SRC_UD2");

                entity.Property(e => e.SrcUd20Bit).HasColumnName("SRC_UD20_BIT");

                entity.Property(e => e.SrcUd21Bit).HasColumnName("SRC_UD21_BIT");

                entity.Property(e => e.SrcUd22Bit).HasColumnName("SRC_UD22_BIT");

                entity.Property(e => e.SrcUd23Bit).HasColumnName("SRC_UD23_BIT");

                entity.Property(e => e.SrcUd24Bit).HasColumnName("SRC_UD24_BIT");

                entity.Property(e => e.SrcUd2Bit).HasColumnName("SRC_UD2_BIT");

                entity.Property(e => e.SrcUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SRC_UD2_DATE");

                entity.Property(e => e.SrcUd2Id).HasColumnName("SRC_UD2_ID");

                entity.Property(e => e.SrcUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SRC_UD2_ID_NAME");

                entity.Property(e => e.SrcUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SRC_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.SrcUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SRC_UD2_NUMERIC");

                entity.Property(e => e.SrcUd3)
                    .HasMaxLength(255)
                    .HasColumnName("SRC_UD3");

                entity.Property(e => e.SrcUd3Bit).HasColumnName("SRC_UD3_BIT");

                entity.Property(e => e.SrcUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SRC_UD3_DATE");

                entity.Property(e => e.SrcUd3Id).HasColumnName("SRC_UD3_ID");

                entity.Property(e => e.SrcUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SRC_UD3_ID_NAME");

                entity.Property(e => e.SrcUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SRC_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.SrcUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SRC_UD3_NUMERIC");

                entity.Property(e => e.SrcUd4)
                    .HasMaxLength(255)
                    .HasColumnName("SRC_UD4");

                entity.Property(e => e.SrcUd4Bit).HasColumnName("SRC_UD4_BIT");

                entity.Property(e => e.SrcUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SRC_UD4_DATE");

                entity.Property(e => e.SrcUd4Id).HasColumnName("SRC_UD4_ID");

                entity.Property(e => e.SrcUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SRC_UD4_ID_NAME");

                entity.Property(e => e.SrcUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SRC_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.SrcUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SRC_UD4_NUMERIC");

                entity.Property(e => e.SrcUd5)
                    .HasMaxLength(255)
                    .HasColumnName("SRC_UD5");

                entity.Property(e => e.SrcUd5Bit).HasColumnName("SRC_UD5_BIT");

                entity.Property(e => e.SrcUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SRC_UD5_DATE");

                entity.Property(e => e.SrcUd5Id).HasColumnName("SRC_UD5_ID");

                entity.Property(e => e.SrcUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SRC_UD5_ID_NAME");

                entity.Property(e => e.SrcUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SRC_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.SrcUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SRC_UD5_NUMERIC");

                entity.Property(e => e.SrcUd6)
                    .HasMaxLength(255)
                    .HasColumnName("SRC_UD6");

                entity.Property(e => e.SrcUd6Bit).HasColumnName("SRC_UD6_BIT");

                entity.Property(e => e.SrcUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SRC_UD6_DATE");

                entity.Property(e => e.SrcUd6Id).HasColumnName("SRC_UD6_ID");

                entity.Property(e => e.SrcUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SRC_UD6_ID_NAME");

                entity.Property(e => e.SrcUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SRC_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.SrcUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SRC_UD6_NUMERIC");

                entity.Property(e => e.SrcUd7)
                    .HasMaxLength(255)
                    .HasColumnName("SRC_UD7");

                entity.Property(e => e.SrcUd7Bit).HasColumnName("SRC_UD7_BIT");

                entity.Property(e => e.SrcUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SRC_UD7_DATE");

                entity.Property(e => e.SrcUd7Id).HasColumnName("SRC_UD7_ID");

                entity.Property(e => e.SrcUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SRC_UD7_ID_NAME");

                entity.Property(e => e.SrcUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SRC_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.SrcUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SRC_UD7_NUMERIC");

                entity.Property(e => e.SrcUd8)
                    .HasMaxLength(255)
                    .HasColumnName("SRC_UD8");

                entity.Property(e => e.SrcUd8Bit).HasColumnName("SRC_UD8_BIT");

                entity.Property(e => e.SrcUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SRC_UD8_DATE");

                entity.Property(e => e.SrcUd8Id).HasColumnName("SRC_UD8_ID");

                entity.Property(e => e.SrcUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SRC_UD8_ID_NAME");

                entity.Property(e => e.SrcUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SRC_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.SrcUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SRC_UD8_NUMERIC");

                entity.Property(e => e.SrcUd9)
                    .HasMaxLength(255)
                    .HasColumnName("SRC_UD9");

                entity.Property(e => e.SrcUd9Bit).HasColumnName("SRC_UD9_BIT");

                entity.Property(e => e.SrcUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SRC_UD9_DATE");

                entity.Property(e => e.SrcUd9Id).HasColumnName("SRC_UD9_ID");

                entity.Property(e => e.SrcUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SRC_UD9_ID_NAME");

                entity.Property(e => e.SrcUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SRC_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.SrcUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SRC_UD9_NUMERIC");

                entity.Property(e => e.SrcUsId).HasColumnName("SRC_US_ID");

                entity.Property(e => e.StaleData).HasColumnName("STALE_DATA");

                entity.Property(e => e.StateName)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("STATE_NAME");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Type).HasColumnName("TYPE");

                entity.Property(e => e.TypeName)
                    .HasMaxLength(255)
                    .HasColumnName("TYPE_NAME");

                entity.Property(e => e.TypeNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("TYPE_NAME_HLIGHT");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsName)
                    .HasMaxLength(255)
                    .HasColumnName("US_NAME");

                entity.Property(e => e.UsgName)
                    .HasMaxLength(255)
                    .HasColumnName("USG_NAME");
            });

            modelBuilder.Entity<VMarketingSourceManualRule>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vMarketingSourceManualRules");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.CTotal).HasColumnName("C_TOTAL");

                entity.Property(e => e.CValidEmail).HasColumnName("C_VALID_EMAIL");

                entity.Property(e => e.CValidFax).HasColumnName("C_VALID_FAX");

                entity.Property(e => e.CValidLetter).HasColumnName("C_VALID_LETTER");

                entity.Property(e => e.CValidPhone).HasColumnName("C_VALID_PHONE");

                entity.Property(e => e.CValidSms).HasColumnName("C_VALID_SMS");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CsId).HasColumnName("CS_ID");

                entity.Property(e => e.DefaultToAccount).HasColumnName("DEFAULT_TO_ACCOUNT");

                entity.Property(e => e.Deleted).HasColumnName("DELETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.ExclusionRule).HasColumnName("EXCLUSION_RULE");

                entity.Property(e => e.LastRefresh)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_REFRESH");

                entity.Property(e => e.LastRefreshBy)
                    .HasMaxLength(255)
                    .HasColumnName("LAST_REFRESH_BY");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.ObjName)
                    .HasMaxLength(255)
                    .HasColumnName("OBJ_NAME");

                entity.Property(e => e.ObjType)
                    .HasMaxLength(50)
                    .HasColumnName("OBJ_TYPE");

                entity.Property(e => e.ObjTypeName)
                    .HasMaxLength(50)
                    .HasColumnName("OBJ_TYPE_NAME");

                entity.Property(e => e.RulId).HasColumnName("RUL_ID");

                entity.Property(e => e.RuleOption).HasColumnName("RULE_OPTION");

                entity.Property(e => e.RuleType).HasColumnName("RULE_TYPE");

                entity.Property(e => e.SrcId).HasColumnName("SRC_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<VMarketingSourceRecipientsExcluded>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vMarketingSourceRecipientsExcluded");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcSummary)
                    .HasMaxLength(255)
                    .HasColumnName("AC_SUMMARY");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccSummary)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_SUMMARY");

                entity.Property(e => e.Address1)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS1");

                entity.Property(e => e.Country)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.CsId).HasColumnName("CS_ID");

                entity.Property(e => e.EmailAddress)
                    .HasMaxLength(255)
                    .HasColumnName("EMAIL_ADDRESS");

                entity.Property(e => e.EmailInvalidReason).HasColumnName("EMAIL_INVALID_REASON");

                entity.Property(e => e.ExcludeId).HasColumnName("EXCLUDE_ID");

                entity.Property(e => e.FaxInvalidReason).HasColumnName("FAX_INVALID_REASON");

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(255)
                    .HasColumnName("FAX_NUMBER");

                entity.Property(e => e.Included).HasColumnName("INCLUDED");

                entity.Property(e => e.Jobtitle)
                    .HasMaxLength(255)
                    .HasColumnName("JOBTITLE");

                entity.Property(e => e.LetterInvalidReason).HasColumnName("LETTER_INVALID_REASON");

                entity.Property(e => e.Mobile)
                    .HasMaxLength(255)
                    .HasColumnName("MOBILE");

                entity.Property(e => e.MsrId).HasColumnName("MSR_ID");

                entity.Property(e => e.PhoneInvalidReason).HasColumnName("PHONE_INVALID_REASON");

                entity.Property(e => e.PhoneNumber)
                    .HasMaxLength(255)
                    .HasColumnName("PHONE_NUMBER");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(255)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.SmsInvalidReason).HasColumnName("SMS_INVALID_REASON");

                entity.Property(e => e.SrcId).HasColumnName("SRC_ID");

                entity.Property(e => e.SrcType)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("SRC_TYPE");

                entity.Property(e => e.Town)
                    .HasMaxLength(255)
                    .HasColumnName("TOWN");

                entity.Property(e => e.ValidEmail).HasColumnName("VALID_EMAIL");

                entity.Property(e => e.ValidFax).HasColumnName("VALID_FAX");

                entity.Property(e => e.ValidLetter).HasColumnName("VALID_LETTER");

                entity.Property(e => e.ValidPhone).HasColumnName("VALID_PHONE");

                entity.Property(e => e.ValidSms).HasColumnName("VALID_SMS");
            });

            modelBuilder.Entity<VMarketingSourceRecipientsIncluded>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vMarketingSourceRecipientsIncluded");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcSummary)
                    .HasMaxLength(255)
                    .HasColumnName("AC_SUMMARY");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccSummary)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_SUMMARY");

                entity.Property(e => e.Address1)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS1");

                entity.Property(e => e.Country)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.CsId).HasColumnName("CS_ID");

                entity.Property(e => e.EmailAddress)
                    .HasMaxLength(255)
                    .HasColumnName("EMAIL_ADDRESS");

                entity.Property(e => e.EmailInvalidReason).HasColumnName("EMAIL_INVALID_REASON");

                entity.Property(e => e.ExcludeId).HasColumnName("EXCLUDE_ID");

                entity.Property(e => e.FaxInvalidReason).HasColumnName("FAX_INVALID_REASON");

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(255)
                    .HasColumnName("FAX_NUMBER");

                entity.Property(e => e.Included).HasColumnName("INCLUDED");

                entity.Property(e => e.Jobtitle)
                    .HasMaxLength(255)
                    .HasColumnName("JOBTITLE");

                entity.Property(e => e.LetterInvalidReason).HasColumnName("LETTER_INVALID_REASON");

                entity.Property(e => e.Mobile)
                    .HasMaxLength(255)
                    .HasColumnName("MOBILE");

                entity.Property(e => e.MsrId).HasColumnName("MSR_ID");

                entity.Property(e => e.PhoneInvalidReason).HasColumnName("PHONE_INVALID_REASON");

                entity.Property(e => e.PhoneNumber)
                    .HasMaxLength(255)
                    .HasColumnName("PHONE_NUMBER");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(255)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.SmsInvalidReason).HasColumnName("SMS_INVALID_REASON");

                entity.Property(e => e.SrcId).HasColumnName("SRC_ID");

                entity.Property(e => e.SrcType)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("SRC_TYPE");

                entity.Property(e => e.Town)
                    .HasMaxLength(255)
                    .HasColumnName("TOWN");

                entity.Property(e => e.ValidEmail).HasColumnName("VALID_EMAIL");

                entity.Property(e => e.ValidFax).HasColumnName("VALID_FAX");

                entity.Property(e => e.ValidLetter).HasColumnName("VALID_LETTER");

                entity.Property(e => e.ValidPhone).HasColumnName("VALID_PHONE");

                entity.Property(e => e.ValidSms).HasColumnName("VALID_SMS");
            });

            modelBuilder.Entity<VMarketingSourceRule>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vMarketingSourceRules");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.CTotal).HasColumnName("C_TOTAL");

                entity.Property(e => e.CValidEmail).HasColumnName("C_VALID_EMAIL");

                entity.Property(e => e.CValidFax).HasColumnName("C_VALID_FAX");

                entity.Property(e => e.CValidLetter).HasColumnName("C_VALID_LETTER");

                entity.Property(e => e.CValidPhone).HasColumnName("C_VALID_PHONE");

                entity.Property(e => e.CValidSms).HasColumnName("C_VALID_SMS");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CsId).HasColumnName("CS_ID");

                entity.Property(e => e.DefaultToAccount).HasColumnName("DEFAULT_TO_ACCOUNT");

                entity.Property(e => e.Deleted).HasColumnName("DELETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.LastRefresh)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_REFRESH");

                entity.Property(e => e.LastRefreshBy)
                    .HasMaxLength(255)
                    .HasColumnName("LAST_REFRESH_BY");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.ObjType)
                    .HasMaxLength(50)
                    .HasColumnName("OBJ_TYPE");

                entity.Property(e => e.RulId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("RUL_ID");

                entity.Property(e => e.RuleOption).HasColumnName("RULE_OPTION");

                entity.Property(e => e.RuleType).HasColumnName("RULE_TYPE");

                entity.Property(e => e.SrcId).HasColumnName("SRC_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<VMarketingStagesForAccountsContact>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vMarketingStagesForAccountsContacts");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccSummary)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_SUMMARY");

                entity.Property(e => e.ActAcManager).HasColumnName("ACT_AC_MANAGER");

                entity.Property(e => e.ActCreate).HasColumnName("ACT_CREATE");

                entity.Property(e => e.ActDueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ACT_DUE_DATE");

                entity.Property(e => e.ActOwner).HasColumnName("ACT_OWNER");

                entity.Property(e => e.ActStage).HasColumnName("ACT_STAGE");

                entity.Property(e => e.ActStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ACT_START_DATE");

                entity.Property(e => e.AutoAllrecp).HasColumnName("AUTO_ALLRECP");

                entity.Property(e => e.AutoDay).HasColumnName("AUTO_DAY");

                entity.Property(e => e.AutoEnd)
                    .HasColumnType("datetime")
                    .HasColumnName("AUTO_END");

                entity.Property(e => e.AutoFreq).HasColumnName("AUTO_FREQ");

                entity.Property(e => e.AutoLastSent)
                    .HasColumnType("datetime")
                    .HasColumnName("AUTO_LAST_SENT");

                entity.Property(e => e.AutoMonth).HasColumnName("AUTO_MONTH");

                entity.Property(e => e.AutoMstId).HasColumnName("AUTO_MST_ID");

                entity.Property(e => e.AutoStart)
                    .HasColumnType("datetime")
                    .HasColumnName("AUTO_START");

                entity.Property(e => e.AutoTemplate)
                    .HasMaxLength(255)
                    .HasColumnName("AUTO_TEMPLATE");

                entity.Property(e => e.AutoTime).HasColumnName("AUTO_TIME");

                entity.Property(e => e.AutoWeekDays).HasColumnName("AUTO_WEEK_DAYS");

                entity.Property(e => e.BaseCurrencySymbol)
                    .HasMaxLength(5)
                    .HasColumnName("BASE_CURRENCY_SYMBOL");

                entity.Property(e => e.CBookings).HasColumnName("C_BOOKINGS");

                entity.Property(e => e.CBookingsConfirmed).HasColumnName("C_BOOKINGS_CONFIRMED");

                entity.Property(e => e.CBookingsOpenVal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("C_BOOKINGS_OPEN_VAL");

                entity.Property(e => e.CBookingsWonVal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("C_BOOKINGS_WON_VAL");

                entity.Property(e => e.CCompleteAct).HasColumnName("C_COMPLETE_ACT");

                entity.Property(e => e.CCompleteAppointments).HasColumnName("C_COMPLETE_APPOINTMENTS");

                entity.Property(e => e.CCostVal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("C_COST_VAL");

                entity.Property(e => e.CLostOpportunities).HasColumnName("C_LOST_OPPORTUNITIES");

                entity.Property(e => e.CLostVal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("C_LOST_VAL");

                entity.Property(e => e.COpenOpportunities).HasColumnName("C_OPEN_OPPORTUNITIES");

                entity.Property(e => e.COpenVal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("C_OPEN_VAL");

                entity.Property(e => e.CProfitVal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("C_PROFIT_VAL");

                entity.Property(e => e.CRuns).HasColumnName("C_RUNS");

                entity.Property(e => e.CTltAppointments).HasColumnName("C_TLT_APPOINTMENTS");

                entity.Property(e => e.CTltEmailsBounced).HasColumnName("C_TLT_EMAILS_BOUNCED");

                entity.Property(e => e.CTltEmailsClicked).HasColumnName("C_TLT_EMAILS_CLICKED");

                entity.Property(e => e.CTltEmailsDelivered).HasColumnName("C_TLT_EMAILS_DELIVERED");

                entity.Property(e => e.CTltEmailsForwarded).HasColumnName("C_TLT_EMAILS_FORWARDED");

                entity.Property(e => e.CTltEmailsOpened).HasColumnName("C_TLT_EMAILS_OPENED");

                entity.Property(e => e.CTltEmailsReplied).HasColumnName("C_TLT_EMAILS_REPLIED");

                entity.Property(e => e.CTltEmailsUnsuball).HasColumnName("C_TLT_EMAILS_UNSUBALL");

                entity.Property(e => e.CTltEmailsUnsubthis).HasColumnName("C_TLT_EMAILS_UNSUBTHIS");

                entity.Property(e => e.CTltOpportunities).HasColumnName("C_TLT_OPPORTUNITIES");

                entity.Property(e => e.CTotal).HasColumnName("C_TOTAL");

                entity.Property(e => e.CTotalAct).HasColumnName("C_TOTAL_ACT");

                entity.Property(e => e.CTotalSent).HasColumnName("C_TOTAL_SENT");

                entity.Property(e => e.CUniqueAct).HasColumnName("C_UNIQUE_ACT");

                entity.Property(e => e.CUniqueSent).HasColumnName("C_UNIQUE_SENT");

                entity.Property(e => e.CUnqAppointments).HasColumnName("C_UNQ_APPOINTMENTS");

                entity.Property(e => e.CUnqEmailsBounced).HasColumnName("C_UNQ_EMAILS_BOUNCED");

                entity.Property(e => e.CUnqEmailsClicked).HasColumnName("C_UNQ_EMAILS_CLICKED");

                entity.Property(e => e.CUnqEmailsDelivered).HasColumnName("C_UNQ_EMAILS_DELIVERED");

                entity.Property(e => e.CUnqEmailsForwarded).HasColumnName("C_UNQ_EMAILS_FORWARDED");

                entity.Property(e => e.CUnqEmailsOpened).HasColumnName("C_UNQ_EMAILS_OPENED");

                entity.Property(e => e.CUnqEmailsReplied).HasColumnName("C_UNQ_EMAILS_REPLIED");

                entity.Property(e => e.CUnqEmailsUnsuball).HasColumnName("C_UNQ_EMAILS_UNSUBALL");

                entity.Property(e => e.CUnqEmailsUnsubthis).HasColumnName("C_UNQ_EMAILS_UNSUBTHIS");

                entity.Property(e => e.CValid).HasColumnName("C_VALID");

                entity.Property(e => e.CValidEmail).HasColumnName("C_VALID_EMAIL");

                entity.Property(e => e.CValidFax).HasColumnName("C_VALID_FAX");

                entity.Property(e => e.CValidLetter).HasColumnName("C_VALID_LETTER");

                entity.Property(e => e.CValidMobile).HasColumnName("C_VALID_MOBILE");

                entity.Property(e => e.CValidPhone).HasColumnName("C_VALID_PHONE");

                entity.Property(e => e.CWonOpportunities).HasColumnName("C_WON_OPPORTUNITIES");

                entity.Property(e => e.CWonVal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("C_WON_VAL");

                entity.Property(e => e.Closed).HasColumnName("CLOSED");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DefaultRecipient)
                    .HasMaxLength(255)
                    .HasColumnName("DEFAULT_RECIPIENT");

                entity.Property(e => e.DefaultSalutation)
                    .HasMaxLength(255)
                    .HasColumnName("DEFAULT_SALUTATION");

                entity.Property(e => e.Deleted).HasColumnName("DELETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.EmailBody)
                    .HasMaxLength(4000)
                    .HasColumnName("EMAIL_BODY");

                entity.Property(e => e.EmailSubject)
                    .HasMaxLength(100)
                    .HasColumnName("EMAIL_SUBJECT");

                entity.Property(e => e.IsAutomated).HasColumnName("IS_AUTOMATED");

                entity.Property(e => e.IsPrivacyNotified).HasColumnName("IS_PRIVACY_NOTIFIED");

                entity.Property(e => e.LastRefresh)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_REFRESH");

                entity.Property(e => e.LastRefreshBy)
                    .HasMaxLength(255)
                    .HasColumnName("LAST_REFRESH_BY");

                entity.Property(e => e.LastRunBy)
                    .HasMaxLength(255)
                    .HasColumnName("LAST_RUN_BY");

                entity.Property(e => e.LastRunDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_RUN_DATE");

                entity.Property(e => e.McaId).HasColumnName("MCA_ID");

                entity.Property(e => e.McaName)
                    .HasMaxLength(255)
                    .HasColumnName("MCA_NAME");

                entity.Property(e => e.McaSummary)
                    .HasMaxLength(255)
                    .HasColumnName("MCA_SUMMARY");

                entity.Property(e => e.MediaType).HasColumnName("MEDIA_TYPE");

                entity.Property(e => e.MediaTypeName)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("MEDIA_TYPE_NAME");

                entity.Property(e => e.OptInsOnly).HasColumnName("OPT_INS_ONLY");

                entity.Property(e => e.ParentStageName)
                    .HasMaxLength(255)
                    .HasColumnName("PARENT_STAGE_NAME");

                entity.Property(e => e.PrivacyNotificationReason)
                    .HasMaxLength(255)
                    .HasColumnName("PRIVACY_NOTIFICATION_REASON");

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.RunBy)
                    .HasMaxLength(255)
                    .HasColumnName("RUN_BY");

                entity.Property(e => e.RunDate)
                    .HasColumnType("datetime")
                    .HasColumnName("RUN_DATE");

                entity.Property(e => e.SgId).HasColumnName("SG_ID");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.StageType).HasColumnName("STAGE_TYPE");

                entity.Property(e => e.StageTypeName)
                    .HasMaxLength(103)
                    .HasColumnName("STAGE_TYPE_NAME");

                entity.Property(e => e.Stale).HasColumnName("STALE");

                entity.Property(e => e.State).HasColumnName("STATE");

                entity.Property(e => e.StateName)
                    .IsRequired()
                    .HasMaxLength(22)
                    .IsUnicode(false)
                    .HasColumnName("STATE_NAME");

                entity.Property(e => e.StgId).HasColumnName("STG_ID");

                entity.Property(e => e.StgIdParent).HasColumnName("STG_ID_PARENT");

                entity.Property(e => e.StgUd1)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD1");

                entity.Property(e => e.StgUd10)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD10");

                entity.Property(e => e.StgUd10Bit).HasColumnName("STG_UD10_BIT");

                entity.Property(e => e.StgUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("STG_UD10_DATE");

                entity.Property(e => e.StgUd10Id).HasColumnName("STG_UD10_ID");

                entity.Property(e => e.StgUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD10_ID_NAME");

                entity.Property(e => e.StgUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("STG_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.StgUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("STG_UD10_NUMERIC");

                entity.Property(e => e.StgUd11Bit).HasColumnName("STG_UD11_BIT");

                entity.Property(e => e.StgUd12Bit).HasColumnName("STG_UD12_BIT");

                entity.Property(e => e.StgUd13Bit).HasColumnName("STG_UD13_BIT");

                entity.Property(e => e.StgUd14Bit).HasColumnName("STG_UD14_BIT");

                entity.Property(e => e.StgUd15Bit).HasColumnName("STG_UD15_BIT");

                entity.Property(e => e.StgUd16Bit).HasColumnName("STG_UD16_BIT");

                entity.Property(e => e.StgUd17Bit).HasColumnName("STG_UD17_BIT");

                entity.Property(e => e.StgUd18Bit).HasColumnName("STG_UD18_BIT");

                entity.Property(e => e.StgUd19Bit).HasColumnName("STG_UD19_BIT");

                entity.Property(e => e.StgUd1Bit).HasColumnName("STG_UD1_BIT");

                entity.Property(e => e.StgUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("STG_UD1_DATE");

                entity.Property(e => e.StgUd1Id).HasColumnName("STG_UD1_ID");

                entity.Property(e => e.StgUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD1_ID_NAME");

                entity.Property(e => e.StgUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("STG_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.StgUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("STG_UD1_NUMERIC");

                entity.Property(e => e.StgUd2)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD2");

                entity.Property(e => e.StgUd20Bit).HasColumnName("STG_UD20_BIT");

                entity.Property(e => e.StgUd21Bit).HasColumnName("STG_UD21_BIT");

                entity.Property(e => e.StgUd22Bit).HasColumnName("STG_UD22_BIT");

                entity.Property(e => e.StgUd23Bit).HasColumnName("STG_UD23_BIT");

                entity.Property(e => e.StgUd24Bit).HasColumnName("STG_UD24_BIT");

                entity.Property(e => e.StgUd2Bit).HasColumnName("STG_UD2_BIT");

                entity.Property(e => e.StgUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("STG_UD2_DATE");

                entity.Property(e => e.StgUd2Id).HasColumnName("STG_UD2_ID");

                entity.Property(e => e.StgUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD2_ID_NAME");

                entity.Property(e => e.StgUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("STG_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.StgUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("STG_UD2_NUMERIC");

                entity.Property(e => e.StgUd3)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD3");

                entity.Property(e => e.StgUd3Bit).HasColumnName("STG_UD3_BIT");

                entity.Property(e => e.StgUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("STG_UD3_DATE");

                entity.Property(e => e.StgUd3Id).HasColumnName("STG_UD3_ID");

                entity.Property(e => e.StgUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD3_ID_NAME");

                entity.Property(e => e.StgUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("STG_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.StgUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("STG_UD3_NUMERIC");

                entity.Property(e => e.StgUd4)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD4");

                entity.Property(e => e.StgUd4Bit).HasColumnName("STG_UD4_BIT");

                entity.Property(e => e.StgUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("STG_UD4_DATE");

                entity.Property(e => e.StgUd4Id).HasColumnName("STG_UD4_ID");

                entity.Property(e => e.StgUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD4_ID_NAME");

                entity.Property(e => e.StgUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("STG_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.StgUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("STG_UD4_NUMERIC");

                entity.Property(e => e.StgUd5)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD5");

                entity.Property(e => e.StgUd5Bit).HasColumnName("STG_UD5_BIT");

                entity.Property(e => e.StgUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("STG_UD5_DATE");

                entity.Property(e => e.StgUd5Id).HasColumnName("STG_UD5_ID");

                entity.Property(e => e.StgUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD5_ID_NAME");

                entity.Property(e => e.StgUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("STG_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.StgUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("STG_UD5_NUMERIC");

                entity.Property(e => e.StgUd6)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD6");

                entity.Property(e => e.StgUd6Bit).HasColumnName("STG_UD6_BIT");

                entity.Property(e => e.StgUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("STG_UD6_DATE");

                entity.Property(e => e.StgUd6Id).HasColumnName("STG_UD6_ID");

                entity.Property(e => e.StgUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD6_ID_NAME");

                entity.Property(e => e.StgUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("STG_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.StgUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("STG_UD6_NUMERIC");

                entity.Property(e => e.StgUd7)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD7");

                entity.Property(e => e.StgUd7Bit).HasColumnName("STG_UD7_BIT");

                entity.Property(e => e.StgUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("STG_UD7_DATE");

                entity.Property(e => e.StgUd7Id).HasColumnName("STG_UD7_ID");

                entity.Property(e => e.StgUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD7_ID_NAME");

                entity.Property(e => e.StgUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("STG_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.StgUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("STG_UD7_NUMERIC");

                entity.Property(e => e.StgUd8)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD8");

                entity.Property(e => e.StgUd8Bit).HasColumnName("STG_UD8_BIT");

                entity.Property(e => e.StgUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("STG_UD8_DATE");

                entity.Property(e => e.StgUd8Id).HasColumnName("STG_UD8_ID");

                entity.Property(e => e.StgUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD8_ID_NAME");

                entity.Property(e => e.StgUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("STG_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.StgUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("STG_UD8_NUMERIC");

                entity.Property(e => e.StgUd9)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD9");

                entity.Property(e => e.StgUd9Bit).HasColumnName("STG_UD9_BIT");

                entity.Property(e => e.StgUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("STG_UD9_DATE");

                entity.Property(e => e.StgUd9Id).HasColumnName("STG_UD9_ID");

                entity.Property(e => e.StgUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("STG_UD9_ID_NAME");

                entity.Property(e => e.StgUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("STG_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.StgUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("STG_UD9_NUMERIC");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TemplateName)
                    .HasMaxLength(500)
                    .HasColumnName("TEMPLATE_NAME");

                entity.Property(e => e.Type).HasColumnName("TYPE");

                entity.Property(e => e.TypeName)
                    .HasMaxLength(255)
                    .HasColumnName("TYPE_NAME");

                entity.Property(e => e.TypeNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("TYPE_NAME_HLIGHT");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsName)
                    .HasMaxLength(255)
                    .HasColumnName("US_NAME");

                entity.Property(e => e.UsgName)
                    .HasMaxLength(255)
                    .HasColumnName("USG_NAME");
            });

            modelBuilder.Entity<VMembership>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vMemberships");

                entity.Property(e => e.AcGroup)
                    .HasMaxLength(255)
                    .HasColumnName("AC_GROUP");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.ObjectName)
                    .HasMaxLength(255)
                    .HasColumnName("OBJECT_NAME");

                entity.Property(e => e.ObjectType)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("OBJECT_TYPE");

                entity.Property(e => e.OmId).HasColumnName("OM_ID");

                entity.Property(e => e.Owner).HasColumnName("OWNER");

                entity.Property(e => e.Role).HasColumnName("ROLE");

                entity.Property(e => e.RoleName)
                    .HasMaxLength(255)
                    .HasColumnName("ROLE_NAME");

                entity.Property(e => e.TypeLabel)
                    .HasMaxLength(50)
                    .HasColumnName("TYPE_LABEL");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");

                entity.Property(e => e.UsIdSupport).HasColumnName("US_ID_SUPPORT");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");

                entity.Property(e => e.UsgName)
                    .HasMaxLength(255)
                    .HasColumnName("USG_NAME");

                entity.Property(e => e.UsgType)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("USG_TYPE");
            });

            modelBuilder.Entity<VNote>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vNotes");

                entity.Property(e => e.AcGroup)
                    .HasMaxLength(255)
                    .HasColumnName("AC_GROUP");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcIdEmpty).HasColumnName("AC_ID_EMPTY");

                entity.Property(e => e.AcManagerName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_NAME");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.AcaId).HasColumnName("ACA_ID");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_NAME");

                entity.Property(e => e.AccaId).HasColumnName("ACCA_ID");

                entity.Property(e => e.AcoId).HasColumnName("ACO_ID");

                entity.Property(e => e.AcpId).HasColumnName("ACP_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CreatorEmail)
                    .HasMaxLength(255)
                    .HasColumnName("CREATOR_EMAIL");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details)
                    .HasMaxLength(4000)
                    .HasColumnName("DETAILS");

                entity.Property(e => e.HasReminder).HasColumnName("HAS_REMINDER");

                entity.Property(e => e.IsLeadNote).HasColumnName("IS_LEAD_NOTE");

                entity.Property(e => e.IsPhoneNote).HasColumnName("IS_PHONE_NOTE");

                entity.Property(e => e.IsSecure).HasColumnName("IS_SECURE");

                entity.Property(e => e.NoteType)
                    .HasMaxLength(30)
                    .HasColumnName("NOTE_TYPE");

                entity.Property(e => e.NoteTypeSummary)
                    .HasMaxLength(58)
                    .HasColumnName("NOTE_TYPE_SUMMARY");

                entity.Property(e => e.Notice).HasColumnName("NOTICE");

                entity.Property(e => e.NtDeleted).HasColumnName("NT_DELETED");

                entity.Property(e => e.NtEmpty).HasColumnName("NT_EMPTY");

                entity.Property(e => e.NtExternal)
                    .HasMaxLength(255)
                    .HasColumnName("NT_EXTERNAL");

                entity.Property(e => e.NtId).HasColumnName("NT_ID");

                entity.Property(e => e.NtImport).HasColumnName("NT_IMPORT");

                entity.Property(e => e.OpId).HasColumnName("OP_ID");

                entity.Property(e => e.OpaId).HasColumnName("OPA_ID");

                entity.Property(e => e.OpcId).HasColumnName("OPC_ID");

                entity.Property(e => e.OpcaId).HasColumnName("OPCA_ID");

                entity.Property(e => e.OpcqId).HasColumnName("OPCQ_ID");

                entity.Property(e => e.OpqId).HasColumnName("OPQ_ID");

                entity.Property(e => e.OutlookNote).HasColumnName("OUTLOOK_NOTE");

                entity.Property(e => e.Owner)
                    .HasMaxLength(101)
                    .HasColumnName("OWNER");

                entity.Property(e => e.OwnerEmail)
                    .HasMaxLength(255)
                    .HasColumnName("OWNER_EMAIL");

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.ParentSummary)
                    .HasMaxLength(255)
                    .HasColumnName("PARENT_SUMMARY");

                entity.Property(e => e.ParentType)
                    .HasMaxLength(30)
                    .HasColumnName("PARENT_TYPE");

                entity.Property(e => e.PjId).HasColumnName("PJ_ID");

                entity.Property(e => e.PjaId).HasColumnName("PJA_ID");

                entity.Property(e => e.ReminderAlerted).HasColumnName("REMINDER_ALERTED");

                entity.Property(e => e.ReminderDate)
                    .HasColumnType("datetime")
                    .HasColumnName("REMINDER_DATE");

                entity.Property(e => e.ReminderDue).HasColumnName("REMINDER_DUE");

                entity.Property(e => e.SecurityGroup)
                    .HasMaxLength(255)
                    .HasColumnName("SECURITY_GROUP");

                entity.Property(e => e.SecurityId).HasColumnName("SECURITY_ID");

                entity.Property(e => e.SecurityObject)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SECURITY_OBJECT");

                entity.Property(e => e.SecurityOwner).HasColumnName("SECURITY_OWNER");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShowOnPortal).HasColumnName("SHOW_ON_PORTAL");

                entity.Property(e => e.Sticky).HasColumnName("STICKY");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");

                entity.Property(e => e.UsIdSupport).HasColumnName("US_ID_SUPPORT");

                entity.Property(e => e.UsaId).HasColumnName("USA_ID");
            });

            modelBuilder.Entity<VNotesForScanner>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vNotesForScanner");

                entity.Property(e => e.AcGroup)
                    .HasMaxLength(255)
                    .HasColumnName("AC_GROUP");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcIdEmpty).HasColumnName("AC_ID_EMPTY");

                entity.Property(e => e.AcManagerName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_NAME");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.AcaId).HasColumnName("ACA_ID");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_NAME");

                entity.Property(e => e.AccaId).HasColumnName("ACCA_ID");

                entity.Property(e => e.AcoId).HasColumnName("ACO_ID");

                entity.Property(e => e.AcpId).HasColumnName("ACP_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CreatorEmail)
                    .HasMaxLength(255)
                    .HasColumnName("CREATOR_EMAIL");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details)
                    .HasMaxLength(4000)
                    .HasColumnName("DETAILS");

                entity.Property(e => e.HasReminder).HasColumnName("HAS_REMINDER");

                entity.Property(e => e.NoteType)
                    .HasMaxLength(30)
                    .HasColumnName("NOTE_TYPE");

                entity.Property(e => e.NoteTypeSummary)
                    .HasMaxLength(58)
                    .HasColumnName("NOTE_TYPE_SUMMARY");

                entity.Property(e => e.Notice).HasColumnName("NOTICE");

                entity.Property(e => e.NtDeleted).HasColumnName("NT_DELETED");

                entity.Property(e => e.NtEmpty).HasColumnName("NT_EMPTY");

                entity.Property(e => e.NtExternal)
                    .HasMaxLength(255)
                    .HasColumnName("NT_EXTERNAL");

                entity.Property(e => e.NtId).HasColumnName("NT_ID");

                entity.Property(e => e.NtImport).HasColumnName("NT_IMPORT");

                entity.Property(e => e.OpId).HasColumnName("OP_ID");

                entity.Property(e => e.OpaId).HasColumnName("OPA_ID");

                entity.Property(e => e.OpcId).HasColumnName("OPC_ID");

                entity.Property(e => e.OpcaId).HasColumnName("OPCA_ID");

                entity.Property(e => e.OpcqId).HasColumnName("OPCQ_ID");

                entity.Property(e => e.OpqId).HasColumnName("OPQ_ID");

                entity.Property(e => e.OutlookNote).HasColumnName("OUTLOOK_NOTE");

                entity.Property(e => e.Owner)
                    .HasMaxLength(101)
                    .HasColumnName("OWNER");

                entity.Property(e => e.OwnerEmail)
                    .HasMaxLength(255)
                    .HasColumnName("OWNER_EMAIL");

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.ParentSummary)
                    .HasMaxLength(255)
                    .HasColumnName("PARENT_SUMMARY");

                entity.Property(e => e.ParentType)
                    .HasMaxLength(30)
                    .HasColumnName("PARENT_TYPE");

                entity.Property(e => e.PjId).HasColumnName("PJ_ID");

                entity.Property(e => e.PjaId).HasColumnName("PJA_ID");

                entity.Property(e => e.ReminderAlerted).HasColumnName("REMINDER_ALERTED");

                entity.Property(e => e.ReminderDate)
                    .HasColumnType("datetime")
                    .HasColumnName("REMINDER_DATE");

                entity.Property(e => e.ReminderDue).HasColumnName("REMINDER_DUE");

                entity.Property(e => e.SecurityGroup)
                    .HasMaxLength(255)
                    .HasColumnName("SECURITY_GROUP");

                entity.Property(e => e.SecurityId).HasColumnName("SECURITY_ID");

                entity.Property(e => e.SecurityObject)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SECURITY_OBJECT");

                entity.Property(e => e.SecurityOwner).HasColumnName("SECURITY_OWNER");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.ShowOnPortal).HasColumnName("SHOW_ON_PORTAL");

                entity.Property(e => e.Sticky).HasColumnName("STICKY");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");

                entity.Property(e => e.UsIdSupport).HasColumnName("US_ID_SUPPORT");

                entity.Property(e => e.UsaId).HasColumnName("USA_ID");
            });

            modelBuilder.Entity<VOpportunitiesQuote>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vOpportunities_Quotes");

                entity.Property(e => e.AcBillingAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_ADDRESS_1");

                entity.Property(e => e.AcBillingAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_ADDRESS_2");

                entity.Property(e => e.AcBillingAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_ADDRESS_3");

                entity.Property(e => e.AcBillingCountry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_COUNTRY");

                entity.Property(e => e.AcBillingCounty)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_COUNTY");

                entity.Property(e => e.AcBillingPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_POSTCODE");

                entity.Property(e => e.AcBillingTown)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_TOWN");

                entity.Property(e => e.AcCounty)
                    .HasMaxLength(255)
                    .HasColumnName("AC_COUNTY");

                entity.Property(e => e.AcExternal)
                    .HasMaxLength(255)
                    .HasColumnName("AC_EXTERNAL");

                entity.Property(e => e.AcFlag)
                    .HasMaxLength(255)
                    .HasColumnName("AC_FLAG");

                entity.Property(e => e.AcFlagHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_FLAG_HLIGHT");

                entity.Property(e => e.AcGroup)
                    .HasMaxLength(255)
                    .HasColumnName("AC_GROUP");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcIndustry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_INDUSTRY");

                entity.Property(e => e.AcIndustryHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_INDUSTRY_HLIGHT");

                entity.Property(e => e.AcLabel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LABEL");

                entity.Property(e => e.AcLabelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LABEL_HLIGHT");

                entity.Property(e => e.AcLevel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LEVEL");

                entity.Property(e => e.AcLevelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LEVEL_HLIGHT");

                entity.Property(e => e.AcManager)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER");

                entity.Property(e => e.AcManagerEmail)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_EMAIL");

                entity.Property(e => e.AcManagerSupport)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_SUPPORT");

                entity.Property(e => e.AcManagerSupportEmail)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_SUPPORT_EMAIL");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.AcPhone1)
                    .HasMaxLength(50)
                    .HasColumnName("AC_PHONE_1");

                entity.Property(e => e.AcPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("AC_POSTCODE");

                entity.Property(e => e.AcReference)
                    .HasMaxLength(50)
                    .HasColumnName("AC_REFERENCE");

                entity.Property(e => e.AcSource)
                    .HasMaxLength(255)
                    .HasColumnName("AC_SOURCE");

                entity.Property(e => e.AcSourceHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_SOURCE_HLIGHT");

                entity.Property(e => e.AcTown)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TOWN");

                entity.Property(e => e.AcType1)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_1");

                entity.Property(e => e.AcType1Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_1_HLIGHT");

                entity.Property(e => e.AcType2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_2");

                entity.Property(e => e.AcType2Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_2_HLIGHT");

                entity.Property(e => e.AcUd10Bit).HasColumnName("AC_UD10_BIT");

                entity.Property(e => e.AcUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD10_DATE");

                entity.Property(e => e.AcUd10Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_ID");

                entity.Property(e => e.AcUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_ID_NAME");

                entity.Property(e => e.AcUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd10Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD10_NUMERIC");

                entity.Property(e => e.AcUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_TEXT");

                entity.Property(e => e.AcUd11Bit).HasColumnName("AC_UD11_BIT");

                entity.Property(e => e.AcUd11Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD11_TEXT");

                entity.Property(e => e.AcUd12Bit).HasColumnName("AC_UD12_BIT");

                entity.Property(e => e.AcUd12Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD12_TEXT");

                entity.Property(e => e.AcUd13Bit).HasColumnName("AC_UD13_BIT");

                entity.Property(e => e.AcUd13Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD13_TEXT");

                entity.Property(e => e.AcUd14Bit).HasColumnName("AC_UD14_BIT");

                entity.Property(e => e.AcUd14Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD14_TEXT");

                entity.Property(e => e.AcUd15Bit).HasColumnName("AC_UD15_BIT");

                entity.Property(e => e.AcUd15Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD15_TEXT");

                entity.Property(e => e.AcUd16Bit).HasColumnName("AC_UD16_BIT");

                entity.Property(e => e.AcUd17Bit).HasColumnName("AC_UD17_BIT");

                entity.Property(e => e.AcUd18Bit).HasColumnName("AC_UD18_BIT");

                entity.Property(e => e.AcUd19Bit).HasColumnName("AC_UD19_BIT");

                entity.Property(e => e.AcUd1Bit).HasColumnName("AC_UD1_BIT");

                entity.Property(e => e.AcUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD1_DATE");

                entity.Property(e => e.AcUd1Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_ID");

                entity.Property(e => e.AcUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_ID_NAME");

                entity.Property(e => e.AcUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd1Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD1_NUMERIC");

                entity.Property(e => e.AcUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_TEXT");

                entity.Property(e => e.AcUd20Bit).HasColumnName("AC_UD20_BIT");

                entity.Property(e => e.AcUd21Bit).HasColumnName("AC_UD21_BIT");

                entity.Property(e => e.AcUd22Bit).HasColumnName("AC_UD22_BIT");

                entity.Property(e => e.AcUd23Bit).HasColumnName("AC_UD23_BIT");

                entity.Property(e => e.AcUd24Bit).HasColumnName("AC_UD24_BIT");

                entity.Property(e => e.AcUd2Bit).HasColumnName("AC_UD2_BIT");

                entity.Property(e => e.AcUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD2_DATE");

                entity.Property(e => e.AcUd2Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_ID");

                entity.Property(e => e.AcUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_ID_NAME");

                entity.Property(e => e.AcUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd2Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD2_NUMERIC");

                entity.Property(e => e.AcUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_TEXT");

                entity.Property(e => e.AcUd3Bit).HasColumnName("AC_UD3_BIT");

                entity.Property(e => e.AcUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD3_DATE");

                entity.Property(e => e.AcUd3Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_ID");

                entity.Property(e => e.AcUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_ID_NAME");

                entity.Property(e => e.AcUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd3Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD3_NUMERIC");

                entity.Property(e => e.AcUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_TEXT");

                entity.Property(e => e.AcUd4Bit).HasColumnName("AC_UD4_BIT");

                entity.Property(e => e.AcUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD4_DATE");

                entity.Property(e => e.AcUd4Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_ID");

                entity.Property(e => e.AcUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_ID_NAME");

                entity.Property(e => e.AcUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd4Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD4_NUMERIC");

                entity.Property(e => e.AcUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_TEXT");

                entity.Property(e => e.AcUd5Bit).HasColumnName("AC_UD5_BIT");

                entity.Property(e => e.AcUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD5_DATE");

                entity.Property(e => e.AcUd5Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_ID");

                entity.Property(e => e.AcUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_ID_NAME");

                entity.Property(e => e.AcUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd5Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD5_NUMERIC");

                entity.Property(e => e.AcUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_TEXT");

                entity.Property(e => e.AcUd6Bit).HasColumnName("AC_UD6_BIT");

                entity.Property(e => e.AcUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD6_DATE");

                entity.Property(e => e.AcUd6Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_ID");

                entity.Property(e => e.AcUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_ID_NAME");

                entity.Property(e => e.AcUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd6Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD6_NUMERIC");

                entity.Property(e => e.AcUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_TEXT");

                entity.Property(e => e.AcUd7Bit).HasColumnName("AC_UD7_BIT");

                entity.Property(e => e.AcUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD7_DATE");

                entity.Property(e => e.AcUd7Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_ID");

                entity.Property(e => e.AcUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_ID_NAME");

                entity.Property(e => e.AcUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd7Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD7_NUMERIC");

                entity.Property(e => e.AcUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_TEXT");

                entity.Property(e => e.AcUd8Bit).HasColumnName("AC_UD8_BIT");

                entity.Property(e => e.AcUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD8_DATE");

                entity.Property(e => e.AcUd8Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_ID");

                entity.Property(e => e.AcUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_ID_NAME");

                entity.Property(e => e.AcUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd8Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD8_NUMERIC");

                entity.Property(e => e.AcUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_TEXT");

                entity.Property(e => e.AcUd9Bit).HasColumnName("AC_UD9_BIT");

                entity.Property(e => e.AcUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD9_DATE");

                entity.Property(e => e.AcUd9Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_ID");

                entity.Property(e => e.AcUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_ID_NAME");

                entity.Property(e => e.AcUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd9Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD9_NUMERIC");

                entity.Property(e => e.AcUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_TEXT");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccPrefEmail)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_EMAIL");

                entity.Property(e => e.AccPrefPhone)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_PHONE");

                entity.Property(e => e.AcgId).HasColumnName("ACG_ID");

                entity.Property(e => e.ActualClose)
                    .HasColumnType("datetime")
                    .HasColumnName("ACTUAL_CLOSE");

                entity.Property(e => e.AddToOpportunity).HasColumnName("ADD_TO_OPPORTUNITY");

                entity.Property(e => e.Address1)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_1");

                entity.Property(e => e.Address2)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_2");

                entity.Property(e => e.Address3)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_3");

                entity.Property(e => e.BusinessFaxNumberFormatted).HasMaxLength(267);

                entity.Property(e => e.Code)
                    .HasMaxLength(3)
                    .HasColumnName("CODE");

                entity.Property(e => e.Company)
                    .HasMaxLength(255)
                    .HasColumnName("COMPANY");

                entity.Property(e => e.ContactAccountname)
                    .HasMaxLength(255)
                    .HasColumnName("CONTACT_ACCOUNTNAME");

                entity.Property(e => e.ContactAcid).HasColumnName("CONTACT_ACID");

                entity.Property(e => e.CostCarriage)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_CARRIAGE");

                entity.Property(e => e.CostItems)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_ITEMS");

                entity.Property(e => e.CostMisc)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_MISC");

                entity.Property(e => e.CostQuote)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_QUOTE");

                entity.Property(e => e.CostQuoteBase).HasColumnName("COST_QUOTE_BASE");

                entity.Property(e => e.CostSub)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_SUB");

                entity.Property(e => e.CostTotal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_TOTAL");

                entity.Property(e => e.CostUpdatedSub)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_UPDATED_SUB");

                entity.Property(e => e.CostVat)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_VAT");

                entity.Property(e => e.Country)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.County)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTY");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CurExternal)
                    .HasMaxLength(255)
                    .HasColumnName("CUR_EXTERNAL");

                entity.Property(e => e.CurId).HasColumnName("CUR_ID");

                entity.Property(e => e.CurIdPriceList).HasColumnName("CUR_ID_PRICE_LIST");

                entity.Property(e => e.Currency)
                    .HasMaxLength(255)
                    .HasColumnName("CURRENCY");

                entity.Property(e => e.CurrencyCode)
                    .HasMaxLength(3)
                    .HasColumnName("CURRENCY_CODE");

                entity.Property(e => e.CurrencyRate).HasColumnName("CURRENCY_RATE");

                entity.Property(e => e.CurrencySymbol)
                    .HasMaxLength(3)
                    .HasColumnName("CURRENCY_SYMBOL");

                entity.Property(e => e.DaysOpen).HasColumnName("DAYS_OPEN");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.DiscountAccount).HasColumnName("DISCOUNT_ACCOUNT");

                entity.Property(e => e.DiscountItems).HasColumnName("DISCOUNT_ITEMS");

                entity.Property(e => e.EstimatedClose)
                    .HasColumnType("datetime")
                    .HasColumnName("ESTIMATED_CLOSE");

                entity.Property(e => e.Exchange).HasColumnName("EXCHANGE");

                entity.Property(e => e.ExchangeRate)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("EXCHANGE_RATE");

                entity.Property(e => e.Expires)
                    .HasColumnType("datetime")
                    .HasColumnName("EXPIRES");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .HasColumnName("FIRST_NAME");

                entity.Property(e => e.FneId).HasColumnName("FNE_ID");

                entity.Property(e => e.FneName)
                    .HasMaxLength(255)
                    .HasColumnName("FNE_NAME");

                entity.Property(e => e.ForcedClose).HasColumnName("FORCED_CLOSE");

                entity.Property(e => e.ForecastDate)
                    .HasColumnType("datetime")
                    .HasColumnName("FORECAST_DATE");

                entity.Property(e => e.LastName)
                    .HasMaxLength(255)
                    .HasColumnName("LAST_NAME");

                entity.Property(e => e.Margin)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("MARGIN");

                entity.Property(e => e.MarginPercentage)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("MARGIN_PERCENTAGE");

                entity.Property(e => e.NumberOfItems).HasColumnName("NUMBER_OF_ITEMS");

                entity.Property(e => e.OpActualClose)
                    .HasColumnType("datetime")
                    .HasColumnName("OP_ACTUAL_CLOSE");

                entity.Property(e => e.OpAddToForecast).HasColumnName("OP_ADD_TO_FORECAST");

                entity.Property(e => e.OpEstimatedClose)
                    .HasColumnType("datetime")
                    .HasColumnName("OP_ESTIMATED_CLOSE");

                entity.Property(e => e.OpForecast)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OP_FORECAST");

                entity.Property(e => e.OpId).HasColumnName("OP_ID");

                entity.Property(e => e.OpName)
                    .HasMaxLength(255)
                    .HasColumnName("OP_NAME");

                entity.Property(e => e.OpOwner).HasColumnName("OP_OWNER");

                entity.Property(e => e.OpProbability)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("OP_PROBABILITY");

                entity.Property(e => e.OpReference)
                    .HasMaxLength(50)
                    .HasColumnName("OP_REFERENCE");

                entity.Property(e => e.OpSource)
                    .HasMaxLength(255)
                    .HasColumnName("OP_SOURCE");

                entity.Property(e => e.OpSourceHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OP_SOURCE_HLIGHT");

                entity.Property(e => e.OpStage)
                    .HasMaxLength(255)
                    .HasColumnName("OP_STAGE");

                entity.Property(e => e.OpStageHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OP_STAGE_HLIGHT");

                entity.Property(e => e.OpState).HasColumnName("OP_STATE");

                entity.Property(e => e.OpType)
                    .HasMaxLength(255)
                    .HasColumnName("OP_TYPE");

                entity.Property(e => e.OpTypeHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OP_TYPE_HLIGHT");

                entity.Property(e => e.OpValue)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OP_VALUE");

                entity.Property(e => e.OpqActualClose)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_ACTUAL_CLOSE");

                entity.Property(e => e.OpqDeleted).HasColumnName("OPQ_DELETED");

                entity.Property(e => e.OpqEstimatedClose)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_ESTIMATED_CLOSE");

                entity.Property(e => e.OpqId).HasColumnName("OPQ_ID");

                entity.Property(e => e.OpqIdEdit).HasColumnName("OPQ_ID_EDIT");

                entity.Property(e => e.OpqNumber)
                    .HasMaxLength(20)
                    .HasColumnName("OPQ_NUMBER");

                entity.Property(e => e.OpqState).HasColumnName("OPQ_STATE");

                entity.Property(e => e.OpqType).HasColumnName("OPQ_TYPE");

                entity.Property(e => e.OpqUd1)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD1");

                entity.Property(e => e.OpqUd10)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD10");

                entity.Property(e => e.OpqUd10Bit).HasColumnName("OPQ_UD10_BIT");

                entity.Property(e => e.OpqUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_UD10_DATE");

                entity.Property(e => e.OpqUd10Id).HasColumnName("OPQ_UD10_ID");

                entity.Property(e => e.OpqUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD10_ID_NAME");

                entity.Property(e => e.OpqUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPQ_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.OpqUd10Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OPQ_UD10_NUMERIC");

                entity.Property(e => e.OpqUd11)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD11");

                entity.Property(e => e.OpqUd11Bit).HasColumnName("OPQ_UD11_BIT");

                entity.Property(e => e.OpqUd12)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD12");

                entity.Property(e => e.OpqUd12Bit).HasColumnName("OPQ_UD12_BIT");

                entity.Property(e => e.OpqUd13)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD13");

                entity.Property(e => e.OpqUd13Bit).HasColumnName("OPQ_UD13_BIT");

                entity.Property(e => e.OpqUd14)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD14");

                entity.Property(e => e.OpqUd14Bit).HasColumnName("OPQ_UD14_BIT");

                entity.Property(e => e.OpqUd15)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD15");

                entity.Property(e => e.OpqUd15Bit).HasColumnName("OPQ_UD15_BIT");

                entity.Property(e => e.OpqUd16Bit).HasColumnName("OPQ_UD16_BIT");

                entity.Property(e => e.OpqUd17Bit).HasColumnName("OPQ_UD17_BIT");

                entity.Property(e => e.OpqUd18Bit).HasColumnName("OPQ_UD18_BIT");

                entity.Property(e => e.OpqUd19Bit).HasColumnName("OPQ_UD19_BIT");

                entity.Property(e => e.OpqUd1Bit).HasColumnName("OPQ_UD1_BIT");

                entity.Property(e => e.OpqUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_UD1_DATE");

                entity.Property(e => e.OpqUd1Id).HasColumnName("OPQ_UD1_ID");

                entity.Property(e => e.OpqUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD1_ID_NAME");

                entity.Property(e => e.OpqUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPQ_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.OpqUd1Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OPQ_UD1_NUMERIC");

                entity.Property(e => e.OpqUd2)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD2");

                entity.Property(e => e.OpqUd20Bit).HasColumnName("OPQ_UD20_BIT");

                entity.Property(e => e.OpqUd21Bit).HasColumnName("OPQ_UD21_BIT");

                entity.Property(e => e.OpqUd22Bit).HasColumnName("OPQ_UD22_BIT");

                entity.Property(e => e.OpqUd23Bit).HasColumnName("OPQ_UD23_BIT");

                entity.Property(e => e.OpqUd24Bit).HasColumnName("OPQ_UD24_BIT");

                entity.Property(e => e.OpqUd2Bit).HasColumnName("OPQ_UD2_BIT");

                entity.Property(e => e.OpqUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_UD2_DATE");

                entity.Property(e => e.OpqUd2Id).HasColumnName("OPQ_UD2_ID");

                entity.Property(e => e.OpqUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD2_ID_NAME");

                entity.Property(e => e.OpqUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPQ_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.OpqUd2Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OPQ_UD2_NUMERIC");

                entity.Property(e => e.OpqUd3)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD3");

                entity.Property(e => e.OpqUd3Bit).HasColumnName("OPQ_UD3_BIT");

                entity.Property(e => e.OpqUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_UD3_DATE");

                entity.Property(e => e.OpqUd3Id).HasColumnName("OPQ_UD3_ID");

                entity.Property(e => e.OpqUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD3_ID_NAME");

                entity.Property(e => e.OpqUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPQ_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.OpqUd3Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OPQ_UD3_NUMERIC");

                entity.Property(e => e.OpqUd4)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD4");

                entity.Property(e => e.OpqUd4Bit).HasColumnName("OPQ_UD4_BIT");

                entity.Property(e => e.OpqUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_UD4_DATE");

                entity.Property(e => e.OpqUd4Id).HasColumnName("OPQ_UD4_ID");

                entity.Property(e => e.OpqUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD4_ID_NAME");

                entity.Property(e => e.OpqUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPQ_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.OpqUd4Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OPQ_UD4_NUMERIC");

                entity.Property(e => e.OpqUd5)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD5");

                entity.Property(e => e.OpqUd5Bit).HasColumnName("OPQ_UD5_BIT");

                entity.Property(e => e.OpqUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_UD5_DATE");

                entity.Property(e => e.OpqUd5Id).HasColumnName("OPQ_UD5_ID");

                entity.Property(e => e.OpqUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD5_ID_NAME");

                entity.Property(e => e.OpqUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPQ_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.OpqUd5Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OPQ_UD5_NUMERIC");

                entity.Property(e => e.OpqUd6)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD6");

                entity.Property(e => e.OpqUd6Bit).HasColumnName("OPQ_UD6_BIT");

                entity.Property(e => e.OpqUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_UD6_DATE");

                entity.Property(e => e.OpqUd6Id).HasColumnName("OPQ_UD6_ID");

                entity.Property(e => e.OpqUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD6_ID_NAME");

                entity.Property(e => e.OpqUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPQ_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.OpqUd6Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OPQ_UD6_NUMERIC");

                entity.Property(e => e.OpqUd7)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD7");

                entity.Property(e => e.OpqUd7Bit).HasColumnName("OPQ_UD7_BIT");

                entity.Property(e => e.OpqUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_UD7_DATE");

                entity.Property(e => e.OpqUd7Id).HasColumnName("OPQ_UD7_ID");

                entity.Property(e => e.OpqUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD7_ID_NAME");

                entity.Property(e => e.OpqUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPQ_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.OpqUd7Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OPQ_UD7_NUMERIC");

                entity.Property(e => e.OpqUd8)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD8");

                entity.Property(e => e.OpqUd8Bit).HasColumnName("OPQ_UD8_BIT");

                entity.Property(e => e.OpqUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_UD8_DATE");

                entity.Property(e => e.OpqUd8Id).HasColumnName("OPQ_UD8_ID");

                entity.Property(e => e.OpqUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD8_ID_NAME");

                entity.Property(e => e.OpqUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPQ_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.OpqUd8Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OPQ_UD8_NUMERIC");

                entity.Property(e => e.OpqUd9)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD9");

                entity.Property(e => e.OpqUd9Bit).HasColumnName("OPQ_UD9_BIT");

                entity.Property(e => e.OpqUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_UD9_DATE");

                entity.Property(e => e.OpqUd9Id).HasColumnName("OPQ_UD9_ID");

                entity.Property(e => e.OpqUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD9_ID_NAME");

                entity.Property(e => e.OpqUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPQ_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.OpqUd9Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OPQ_UD9_NUMERIC");

                entity.Property(e => e.Owner).HasColumnName("OWNER");

                entity.Property(e => e.OwnerDept)
                    .HasMaxLength(128)
                    .HasColumnName("OWNER_DEPT");

                entity.Property(e => e.OwnerEmail)
                    .HasMaxLength(255)
                    .HasColumnName("OWNER_EMAIL");

                entity.Property(e => e.OwnerGroup)
                    .HasMaxLength(255)
                    .HasColumnName("OWNER_GROUP");

                entity.Property(e => e.OwnerName)
                    .HasMaxLength(255)
                    .HasColumnName("OWNER_NAME");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(255)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.PriceListCode)
                    .HasMaxLength(3)
                    .HasColumnName("PRICE_LIST_CODE");

                entity.Property(e => e.PriceListCurrency)
                    .HasMaxLength(255)
                    .HasColumnName("PRICE_LIST_CURRENCY");

                entity.Property(e => e.PriceListExchange).HasColumnName("PRICE_LIST_EXCHANGE");

                entity.Property(e => e.QuoteContact)
                    .HasMaxLength(255)
                    .HasColumnName("QUOTE_CONTACT");

                entity.Property(e => e.QuoteContactEmail)
                    .HasMaxLength(255)
                    .HasColumnName("QUOTE_CONTACT_EMAIL");

                entity.Property(e => e.QuoteContactFax)
                    .HasMaxLength(255)
                    .HasColumnName("QUOTE_CONTACT_FAX");

                entity.Property(e => e.QuoteContactPhone)
                    .HasMaxLength(255)
                    .HasColumnName("QUOTE_CONTACT_PHONE");

                entity.Property(e => e.Reference)
                    .HasMaxLength(255)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.Scheduled).HasColumnName("SCHEDULED");

                entity.Property(e => e.SecurityGroup)
                    .HasMaxLength(255)
                    .HasColumnName("SECURITY_GROUP");

                entity.Property(e => e.SecurityId).HasColumnName("SECURITY_ID");

                entity.Property(e => e.SecurityObject)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SECURITY_OBJECT");

                entity.Property(e => e.SecurityOwner).HasColumnName("SECURITY_OWNER");

                entity.Property(e => e.SentStatus)
                    .HasMaxLength(50)
                    .HasColumnName("SENT_STATUS");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.SitExternal)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_EXTERNAL");

                entity.Property(e => e.SitId).HasColumnName("SIT_ID");

                entity.Property(e => e.SiteName)
                    .HasMaxLength(255)
                    .HasColumnName("SITE_NAME");

                entity.Property(e => e.SiteTypeName)
                    .HasMaxLength(255)
                    .HasColumnName("SITE_TYPE_NAME");

                entity.Property(e => e.SiteTypeNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SITE_TYPE_NAME_HLIGHT");

                entity.Property(e => e.State)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("STATE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Template)
                    .HasMaxLength(50)
                    .HasColumnName("TEMPLATE");

                entity.Property(e => e.TimeTotal).HasColumnName("TIME_TOTAL");

                entity.Property(e => e.Town)
                    .HasMaxLength(255)
                    .HasColumnName("TOWN");

                entity.Property(e => e.Type)
                    .HasMaxLength(255)
                    .HasColumnName("TYPE");

                entity.Property(e => e.TypeHlight)
                    .HasMaxLength(100)
                    .HasColumnName("TYPE_HLIGHT");

                entity.Property(e => e.UnitsTotal).HasColumnName("UNITS_TOTAL");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");

                entity.Property(e => e.UsIdSupport).HasColumnName("US_ID_SUPPORT");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");

                entity.Property(e => e.Value)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("VALUE");
            });

            modelBuilder.Entity<VOpportunitiesQuotesDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vOpportunities_Quotes_Details");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccountDiscount)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ACCOUNT_DISCOUNT");

                entity.Property(e => e.Code)
                    .HasMaxLength(50)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cost)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CurrencyCode)
                    .HasMaxLength(3)
                    .HasColumnName("CURRENCY_CODE");

                entity.Property(e => e.CurrencySymbol)
                    .HasMaxLength(3)
                    .HasColumnName("CURRENCY_SYMBOL");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.Discount).HasColumnName("DISCOUNT");

                entity.Property(e => e.DiscountPrice)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("DISCOUNT_PRICE");

                entity.Property(e => e.Excludefromtotal).HasColumnName("EXCLUDEFROMTOTAL");

                entity.Property(e => e.GrandTotal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("GRAND_TOTAL");

                entity.Property(e => e.Info)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("INFO");

                entity.Property(e => e.Linked).HasColumnName("LINKED");

                entity.Property(e => e.ListPriceTotal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("LIST_PRICE_TOTAL");

                entity.Property(e => e.Manufacturer)
                    .HasMaxLength(50)
                    .HasColumnName("MANUFACTURER");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("NET_PRICE");

                entity.Property(e => e.OpId).HasColumnName("OP_ID");

                entity.Property(e => e.OpqId).HasColumnName("OPQ_ID");

                entity.Property(e => e.OpqName)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_NAME");

                entity.Property(e => e.OpqState).HasColumnName("OPQ_STATE");

                entity.Property(e => e.OpqSummary)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_SUMMARY");

                entity.Property(e => e.OpqdDeleted).HasColumnName("OPQD_DELETED");

                entity.Property(e => e.OpqdId).HasColumnName("OPQD_ID");

                entity.Property(e => e.PrExternal)
                    .HasMaxLength(255)
                    .HasColumnName("PR_EXTERNAL");

                entity.Property(e => e.PrId).HasColumnName("PR_ID");

                entity.Property(e => e.PrName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_NAME");

                entity.Property(e => e.PrSummary)
                    .HasMaxLength(255)
                    .HasColumnName("PR_SUMMARY");

                entity.Property(e => e.PrUd1)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD1");

                entity.Property(e => e.PrUd10)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD10");

                entity.Property(e => e.PrUd10Bit).HasColumnName("PR_UD10_BIT");

                entity.Property(e => e.PrUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD10_DATE");

                entity.Property(e => e.PrUd10Id).HasColumnName("PR_UD10_ID");

                entity.Property(e => e.PrUd10IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD10_ID_HLIGHT");

                entity.Property(e => e.PrUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD10_ID_NAME");

                entity.Property(e => e.PrUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.PrUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD10_NUMERIC");

                entity.Property(e => e.PrUd11)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD11");

                entity.Property(e => e.PrUd11Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD11_NUMERIC");

                entity.Property(e => e.PrUd12)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD12");

                entity.Property(e => e.PrUd12Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD12_NUMERIC");

                entity.Property(e => e.PrUd13)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD13");

                entity.Property(e => e.PrUd13Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD13_NUMERIC");

                entity.Property(e => e.PrUd14)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD14");

                entity.Property(e => e.PrUd14Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD14_NUMERIC");

                entity.Property(e => e.PrUd15)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD15");

                entity.Property(e => e.PrUd15Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD15_NUMERIC");

                entity.Property(e => e.PrUd1Bit).HasColumnName("PR_UD1_BIT");

                entity.Property(e => e.PrUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD1_DATE");

                entity.Property(e => e.PrUd1Id).HasColumnName("PR_UD1_ID");

                entity.Property(e => e.PrUd1IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD1_ID_HLIGHT");

                entity.Property(e => e.PrUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD1_ID_NAME");

                entity.Property(e => e.PrUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.PrUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD1_NUMERIC");

                entity.Property(e => e.PrUd2)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD2");

                entity.Property(e => e.PrUd2Bit).HasColumnName("PR_UD2_BIT");

                entity.Property(e => e.PrUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD2_DATE");

                entity.Property(e => e.PrUd2Id).HasColumnName("PR_UD2_ID");

                entity.Property(e => e.PrUd2IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD2_ID_HLIGHT");

                entity.Property(e => e.PrUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD2_ID_NAME");

                entity.Property(e => e.PrUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.PrUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD2_NUMERIC");

                entity.Property(e => e.PrUd3)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD3");

                entity.Property(e => e.PrUd3Bit).HasColumnName("PR_UD3_BIT");

                entity.Property(e => e.PrUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD3_DATE");

                entity.Property(e => e.PrUd3Id).HasColumnName("PR_UD3_ID");

                entity.Property(e => e.PrUd3IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD3_ID_HLIGHT");

                entity.Property(e => e.PrUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD3_ID_NAME");

                entity.Property(e => e.PrUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.PrUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD3_NUMERIC");

                entity.Property(e => e.PrUd4)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD4");

                entity.Property(e => e.PrUd4Bit).HasColumnName("PR_UD4_BIT");

                entity.Property(e => e.PrUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD4_DATE");

                entity.Property(e => e.PrUd4Id).HasColumnName("PR_UD4_ID");

                entity.Property(e => e.PrUd4IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD4_ID_HLIGHT");

                entity.Property(e => e.PrUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD4_ID_NAME");

                entity.Property(e => e.PrUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.PrUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD4_NUMERIC");

                entity.Property(e => e.PrUd5)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD5");

                entity.Property(e => e.PrUd5Bit).HasColumnName("PR_UD5_BIT");

                entity.Property(e => e.PrUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD5_DATE");

                entity.Property(e => e.PrUd5Id).HasColumnName("PR_UD5_ID");

                entity.Property(e => e.PrUd5IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD5_ID_HLIGHT");

                entity.Property(e => e.PrUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD5_ID_NAME");

                entity.Property(e => e.PrUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.PrUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD5_NUMERIC");

                entity.Property(e => e.PrUd6)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD6");

                entity.Property(e => e.PrUd6Bit).HasColumnName("PR_UD6_BIT");

                entity.Property(e => e.PrUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD6_DATE");

                entity.Property(e => e.PrUd6Id).HasColumnName("PR_UD6_ID");

                entity.Property(e => e.PrUd6IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD6_ID_HLIGHT");

                entity.Property(e => e.PrUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD6_ID_NAME");

                entity.Property(e => e.PrUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.PrUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD6_NUMERIC");

                entity.Property(e => e.PrUd7)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD7");

                entity.Property(e => e.PrUd7Bit).HasColumnName("PR_UD7_BIT");

                entity.Property(e => e.PrUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD7_DATE");

                entity.Property(e => e.PrUd7Id).HasColumnName("PR_UD7_ID");

                entity.Property(e => e.PrUd7IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD7_ID_HLIGHT");

                entity.Property(e => e.PrUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD7_ID_NAME");

                entity.Property(e => e.PrUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.PrUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD7_NUMERIC");

                entity.Property(e => e.PrUd8)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD8");

                entity.Property(e => e.PrUd8Bit).HasColumnName("PR_UD8_BIT");

                entity.Property(e => e.PrUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD8_DATE");

                entity.Property(e => e.PrUd8Id).HasColumnName("PR_UD8_ID");

                entity.Property(e => e.PrUd8IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD8_ID_HLIGHT");

                entity.Property(e => e.PrUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD8_ID_NAME");

                entity.Property(e => e.PrUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.PrUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD8_NUMERIC");

                entity.Property(e => e.PrUd9)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD9");

                entity.Property(e => e.PrUd9Bit).HasColumnName("PR_UD9_BIT");

                entity.Property(e => e.PrUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD9_DATE");

                entity.Property(e => e.PrUd9Id).HasColumnName("PR_UD9_ID");

                entity.Property(e => e.PrUd9IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD9_ID_HLIGHT");

                entity.Property(e => e.PrUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD9_ID_NAME");

                entity.Property(e => e.PrUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.PrUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD9_NUMERIC");

                entity.Property(e => e.PrgId).HasColumnName("PRG_ID");

                entity.Property(e => e.PrgSummary)
                    .HasMaxLength(255)
                    .HasColumnName("PRG_SUMMARY");

                entity.Property(e => e.Price)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PRICE");

                entity.Property(e => e.PriceDiscount)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PRICE_DISCOUNT");

                entity.Property(e => e.PriceFinal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PRICE_FINAL");

                entity.Property(e => e.PriceHidden)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PRICE_HIDDEN");

                entity.Property(e => e.ProductGroup)
                    .HasMaxLength(50)
                    .HasColumnName("PRODUCT_GROUP");

                entity.Property(e => e.ProductName)
                    .HasMaxLength(255)
                    .HasColumnName("PRODUCT_NAME");

                entity.Property(e => e.Quantity).HasColumnName("QUANTITY");

                entity.Property(e => e.RateWhenAdded).HasColumnName("RATE_WHEN_ADDED");

                entity.Property(e => e.Reference)
                    .HasMaxLength(255)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.RemainingTimeUnits).HasColumnName("REMAINING_TIME_UNITS");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.SortOrder)
                    .HasMaxLength(50)
                    .HasColumnName("SORT_ORDER");

                entity.Property(e => e.SpentTimeUnits).HasColumnName("SPENT_TIME_UNITS");

                entity.Property(e => e.SubTotal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SUB_TOTAL");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Tax)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("TAX");

                entity.Property(e => e.TaxPercentage)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("TAX_PERCENTAGE");

                entity.Property(e => e.TimeUnitIsTime).HasColumnName("TIME_UNIT_IS_TIME");

                entity.Property(e => e.TimeUnitValue).HasColumnName("TIME_UNIT_VALUE");

                entity.Property(e => e.TimeUnitValueTotal).HasColumnName("TIME_UNIT_VALUE_TOTAL");

                entity.Property(e => e.TxcExternal)
                    .HasMaxLength(255)
                    .HasColumnName("TXC_EXTERNAL");

                entity.Property(e => e.TxcId).HasColumnName("TXC_ID");

                entity.Property(e => e.TxcSummary)
                    .HasMaxLength(255)
                    .HasColumnName("TXC_SUMMARY");

                entity.Property(e => e.Ud1)
                    .HasMaxLength(255)
                    .HasColumnName("UD1");

                entity.Property(e => e.Ud10)
                    .HasMaxLength(255)
                    .HasColumnName("UD10");

                entity.Property(e => e.Ud11)
                    .HasMaxLength(255)
                    .HasColumnName("UD11");

                entity.Property(e => e.Ud12)
                    .HasMaxLength(255)
                    .HasColumnName("UD12");

                entity.Property(e => e.Ud13)
                    .HasMaxLength(255)
                    .HasColumnName("UD13");

                entity.Property(e => e.Ud14)
                    .HasMaxLength(255)
                    .HasColumnName("UD14");

                entity.Property(e => e.Ud15)
                    .HasMaxLength(255)
                    .HasColumnName("UD15");

                entity.Property(e => e.Ud2)
                    .HasMaxLength(255)
                    .HasColumnName("UD2");

                entity.Property(e => e.Ud3)
                    .HasMaxLength(255)
                    .HasColumnName("UD3");

                entity.Property(e => e.Ud4)
                    .HasMaxLength(255)
                    .HasColumnName("UD4");

                entity.Property(e => e.Ud5)
                    .HasMaxLength(255)
                    .HasColumnName("UD5");

                entity.Property(e => e.Ud6)
                    .HasMaxLength(255)
                    .HasColumnName("UD6");

                entity.Property(e => e.Ud7)
                    .HasMaxLength(255)
                    .HasColumnName("UD7");

                entity.Property(e => e.Ud8)
                    .HasMaxLength(255)
                    .HasColumnName("UD8");

                entity.Property(e => e.Ud9)
                    .HasMaxLength(255)
                    .HasColumnName("UD9");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.Vat)
                    .HasColumnType("numeric(28, 8)")
                    .HasColumnName("VAT");
            });

            modelBuilder.Entity<VOpportunitiesSchedule>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vOpportunities_schedule");

                entity.Property(e => e.Amount0)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("amount0");

                entity.Property(e => e.Amount1)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("amount1");

                entity.Property(e => e.Amount10)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("amount10");

                entity.Property(e => e.Amount11)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("amount11");

                entity.Property(e => e.Amount2)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("amount2");

                entity.Property(e => e.Amount3)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("amount3");

                entity.Property(e => e.Amount4)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("amount4");

                entity.Property(e => e.Amount5)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("amount5");

                entity.Property(e => e.Amount6)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("amount6");

                entity.Property(e => e.Amount7)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("amount7");

                entity.Property(e => e.Amount8)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("amount8");

                entity.Property(e => e.Amount9)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("amount9");

                entity.Property(e => e.OpId).HasColumnName("OP_ID");

                entity.Property(e => e.OpqId).HasColumnName("OPQ_ID");

                entity.Property(e => e.OpqName)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_NAME");

                entity.Property(e => e.OpqdId).HasColumnName("OPQD_ID");

                entity.Property(e => e.Percent0).HasColumnType("numeric(18, 5)");

                entity.Property(e => e.Percent1).HasColumnType("numeric(18, 5)");

                entity.Property(e => e.Percent10).HasColumnType("numeric(18, 5)");

                entity.Property(e => e.Percent11).HasColumnType("numeric(18, 5)");

                entity.Property(e => e.Percent2).HasColumnType("numeric(18, 5)");

                entity.Property(e => e.Percent3).HasColumnType("numeric(18, 5)");

                entity.Property(e => e.Percent4).HasColumnType("numeric(18, 5)");

                entity.Property(e => e.Percent5).HasColumnType("numeric(18, 5)");

                entity.Property(e => e.Percent6).HasColumnType("numeric(18, 5)");

                entity.Property(e => e.Percent7).HasColumnType("numeric(18, 5)");

                entity.Property(e => e.Percent8).HasColumnType("numeric(18, 5)");

                entity.Property(e => e.Percent9).HasColumnType("numeric(18, 5)");

                entity.Property(e => e.PriceFinal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PRICE_FINAL");

                entity.Property(e => e.SortOrder).HasColumnName("SORT_ORDER");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");
            });

            modelBuilder.Entity<VOpportunity>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vOpportunities");

                entity.Property(e => e.AcAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("AC_ADDRESS_1");

                entity.Property(e => e.AcAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_ADDRESS_2");

                entity.Property(e => e.AcAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("AC_ADDRESS_3");

                entity.Property(e => e.AcBillingAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_ADDRESS_1");

                entity.Property(e => e.AcBillingAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_ADDRESS_2");

                entity.Property(e => e.AcBillingAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_ADDRESS_3");

                entity.Property(e => e.AcBillingCountry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_COUNTRY");

                entity.Property(e => e.AcBillingCounty)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_COUNTY");

                entity.Property(e => e.AcBillingPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_POSTCODE");

                entity.Property(e => e.AcBillingTown)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_TOWN");

                entity.Property(e => e.AcCountry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_COUNTRY");

                entity.Property(e => e.AcCounty)
                    .HasMaxLength(255)
                    .HasColumnName("AC_COUNTY");

                entity.Property(e => e.AcExternal)
                    .HasMaxLength(255)
                    .HasColumnName("AC_EXTERNAL");

                entity.Property(e => e.AcFlag)
                    .HasMaxLength(255)
                    .HasColumnName("AC_FLAG");

                entity.Property(e => e.AcFlagHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_FLAG_HLIGHT");

                entity.Property(e => e.AcGroup)
                    .HasMaxLength(255)
                    .HasColumnName("AC_GROUP");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcIndustry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_INDUSTRY");

                entity.Property(e => e.AcIndustryHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_INDUSTRY_HLIGHT");

                entity.Property(e => e.AcLabel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LABEL");

                entity.Property(e => e.AcLabelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LABEL_HLIGHT");

                entity.Property(e => e.AcLevel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LEVEL");

                entity.Property(e => e.AcLevelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LEVEL_HLIGHT");

                entity.Property(e => e.AcManagerSupport)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_SUPPORT");

                entity.Property(e => e.AcManagerSupportEmail)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_SUPPORT_EMAIL");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.AcPhone1)
                    .HasMaxLength(50)
                    .HasColumnName("AC_PHONE_1");

                entity.Property(e => e.AcPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("AC_POSTCODE");

                entity.Property(e => e.AcReference)
                    .HasMaxLength(50)
                    .HasColumnName("AC_REFERENCE");

                entity.Property(e => e.AcSource)
                    .HasMaxLength(255)
                    .HasColumnName("AC_SOURCE");

                entity.Property(e => e.AcSourceHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_SOURCE_HLIGHT");

                entity.Property(e => e.AcTown)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TOWN");

                entity.Property(e => e.AcType1)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_1");

                entity.Property(e => e.AcType1Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_1_HLIGHT");

                entity.Property(e => e.AcType2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_2");

                entity.Property(e => e.AcType2Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_2_HLIGHT");

                entity.Property(e => e.AcUd10Bit).HasColumnName("AC_UD10_BIT");

                entity.Property(e => e.AcUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD10_DATE");

                entity.Property(e => e.AcUd10Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_ID");

                entity.Property(e => e.AcUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_ID_NAME");

                entity.Property(e => e.AcUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd10Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD10_NUMERIC");

                entity.Property(e => e.AcUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_TEXT");

                entity.Property(e => e.AcUd11Bit).HasColumnName("AC_UD11_BIT");

                entity.Property(e => e.AcUd11Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD11_TEXT");

                entity.Property(e => e.AcUd12Bit).HasColumnName("AC_UD12_BIT");

                entity.Property(e => e.AcUd12Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD12_TEXT");

                entity.Property(e => e.AcUd13Bit).HasColumnName("AC_UD13_BIT");

                entity.Property(e => e.AcUd13Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD13_TEXT");

                entity.Property(e => e.AcUd14Bit).HasColumnName("AC_UD14_BIT");

                entity.Property(e => e.AcUd14Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD14_TEXT");

                entity.Property(e => e.AcUd15Bit).HasColumnName("AC_UD15_BIT");

                entity.Property(e => e.AcUd15Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD15_TEXT");

                entity.Property(e => e.AcUd16Bit).HasColumnName("AC_UD16_BIT");

                entity.Property(e => e.AcUd17Bit).HasColumnName("AC_UD17_BIT");

                entity.Property(e => e.AcUd18Bit).HasColumnName("AC_UD18_BIT");

                entity.Property(e => e.AcUd19Bit).HasColumnName("AC_UD19_BIT");

                entity.Property(e => e.AcUd1Bit).HasColumnName("AC_UD1_BIT");

                entity.Property(e => e.AcUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD1_DATE");

                entity.Property(e => e.AcUd1Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_ID");

                entity.Property(e => e.AcUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_ID_NAME");

                entity.Property(e => e.AcUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd1Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD1_NUMERIC");

                entity.Property(e => e.AcUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_TEXT");

                entity.Property(e => e.AcUd20Bit).HasColumnName("AC_UD20_BIT");

                entity.Property(e => e.AcUd21Bit).HasColumnName("AC_UD21_BIT");

                entity.Property(e => e.AcUd22Bit).HasColumnName("AC_UD22_BIT");

                entity.Property(e => e.AcUd23Bit).HasColumnName("AC_UD23_BIT");

                entity.Property(e => e.AcUd24Bit).HasColumnName("AC_UD24_BIT");

                entity.Property(e => e.AcUd2Bit).HasColumnName("AC_UD2_BIT");

                entity.Property(e => e.AcUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD2_DATE");

                entity.Property(e => e.AcUd2Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_ID");

                entity.Property(e => e.AcUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_ID_NAME");

                entity.Property(e => e.AcUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd2Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD2_NUMERIC");

                entity.Property(e => e.AcUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_TEXT");

                entity.Property(e => e.AcUd3Bit).HasColumnName("AC_UD3_BIT");

                entity.Property(e => e.AcUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD3_DATE");

                entity.Property(e => e.AcUd3Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_ID");

                entity.Property(e => e.AcUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_ID_NAME");

                entity.Property(e => e.AcUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd3Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD3_NUMERIC");

                entity.Property(e => e.AcUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_TEXT");

                entity.Property(e => e.AcUd4Bit).HasColumnName("AC_UD4_BIT");

                entity.Property(e => e.AcUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD4_DATE");

                entity.Property(e => e.AcUd4Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_ID");

                entity.Property(e => e.AcUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_ID_NAME");

                entity.Property(e => e.AcUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd4Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD4_NUMERIC");

                entity.Property(e => e.AcUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_TEXT");

                entity.Property(e => e.AcUd5Bit).HasColumnName("AC_UD5_BIT");

                entity.Property(e => e.AcUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD5_DATE");

                entity.Property(e => e.AcUd5Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_ID");

                entity.Property(e => e.AcUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_ID_NAME");

                entity.Property(e => e.AcUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd5Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD5_NUMERIC");

                entity.Property(e => e.AcUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_TEXT");

                entity.Property(e => e.AcUd6Bit).HasColumnName("AC_UD6_BIT");

                entity.Property(e => e.AcUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD6_DATE");

                entity.Property(e => e.AcUd6Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_ID");

                entity.Property(e => e.AcUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_ID_NAME");

                entity.Property(e => e.AcUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd6Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD6_NUMERIC");

                entity.Property(e => e.AcUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_TEXT");

                entity.Property(e => e.AcUd7Bit).HasColumnName("AC_UD7_BIT");

                entity.Property(e => e.AcUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD7_DATE");

                entity.Property(e => e.AcUd7Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_ID");

                entity.Property(e => e.AcUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_ID_NAME");

                entity.Property(e => e.AcUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd7Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD7_NUMERIC");

                entity.Property(e => e.AcUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_TEXT");

                entity.Property(e => e.AcUd8Bit).HasColumnName("AC_UD8_BIT");

                entity.Property(e => e.AcUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD8_DATE");

                entity.Property(e => e.AcUd8Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_ID");

                entity.Property(e => e.AcUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_ID_NAME");

                entity.Property(e => e.AcUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd8Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD8_NUMERIC");

                entity.Property(e => e.AcUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_TEXT");

                entity.Property(e => e.AcUd9Bit).HasColumnName("AC_UD9_BIT");

                entity.Property(e => e.AcUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD9_DATE");

                entity.Property(e => e.AcUd9Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_ID");

                entity.Property(e => e.AcUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_ID_NAME");

                entity.Property(e => e.AcUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd9Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD9_NUMERIC");

                entity.Property(e => e.AcUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_TEXT");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_NAME");

                entity.Property(e => e.AccPrefEmail)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_EMAIL");

                entity.Property(e => e.AccPrefPhone)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_PHONE");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_MANAGER");

                entity.Property(e => e.AccountManagerEmail)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_MANAGER_EMAIL");

                entity.Property(e => e.AcgId).HasColumnName("ACG_ID");

                entity.Property(e => e.ActualClose)
                    .HasColumnType("datetime")
                    .HasColumnName("ACTUAL_CLOSE");

                entity.Property(e => e.ActualTime).HasColumnName("ACTUAL_TIME");

                entity.Property(e => e.ActualUnits).HasColumnName("ACTUAL_UNITS");

                entity.Property(e => e.AddToForecast).HasColumnName("ADD_TO_FORECAST");

                entity.Property(e => e.Closed).HasColumnName("CLOSED");

                entity.Property(e => e.ClosedMore)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CLOSED_MORE");

                entity.Property(e => e.Competition)
                    .HasMaxLength(50)
                    .HasColumnName("COMPETITION");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CurId).HasColumnName("CUR_ID");

                entity.Property(e => e.CurrencyCode)
                    .HasMaxLength(3)
                    .HasColumnName("CURRENCY_CODE");

                entity.Property(e => e.CurrencySymbol)
                    .HasMaxLength(3)
                    .HasColumnName("CURRENCY_SYMBOL");

                entity.Property(e => e.DaysOpen).HasColumnName("DAYS_OPEN");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.Duration)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("DURATION");

                entity.Property(e => e.EstimatedClose)
                    .HasColumnType("datetime")
                    .HasColumnName("ESTIMATED_CLOSE");

                entity.Property(e => e.EstimatedTime).HasColumnName("ESTIMATED_TIME");

                entity.Property(e => e.EstimatedUnits).HasColumnName("ESTIMATED_UNITS");

                entity.Property(e => e.ForecastDate)
                    .HasColumnType("datetime")
                    .HasColumnName("FORECAST_DATE");

                entity.Property(e => e.ForecastValue)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("FORECAST_VALUE");

                entity.Property(e => e.ForecastValueBase)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("FORECAST_VALUE_BASE");

                entity.Property(e => e.ImSummary)
                    .HasMaxLength(255)
                    .HasColumnName("IM_SUMMARY");

                entity.Property(e => e.InterestedIn).HasColumnName("INTERESTED_IN");

                entity.Property(e => e.MacIdSource).HasColumnName("MAC_ID_SOURCE");

                entity.Property(e => e.MacIdSourceName)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_ID_SOURCE_NAME");

                entity.Property(e => e.Margin)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("MARGIN");

                entity.Property(e => e.MarginPercentage)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("MARGIN_PERCENTAGE");

                entity.Property(e => e.McaId).HasColumnName("MCA_ID");

                entity.Property(e => e.NextAction)
                    .HasMaxLength(50)
                    .HasColumnName("NEXT_ACTION");

                entity.Property(e => e.OpContactEmail)
                    .HasMaxLength(255)
                    .HasColumnName("OP_CONTACT_EMAIL");

                entity.Property(e => e.OpContactName)
                    .HasMaxLength(255)
                    .HasColumnName("OP_CONTACT_NAME");

                entity.Property(e => e.OpContactPhone)
                    .HasMaxLength(255)
                    .HasColumnName("OP_CONTACT_PHONE");

                entity.Property(e => e.OpDeleted).HasColumnName("OP_DELETED");

                entity.Property(e => e.OpDuration).HasColumnName("OP_DURATION");

                entity.Property(e => e.OpExternal)
                    .HasMaxLength(255)
                    .HasColumnName("OP_EXTERNAL");

                entity.Property(e => e.OpId).HasColumnName("OP_ID");

                entity.Property(e => e.OpIdEdit).HasColumnName("OP_ID_EDIT");

                entity.Property(e => e.OpImport).HasColumnName("OP_IMPORT");

                entity.Property(e => e.OpNumber).HasColumnName("OP_NUMBER");

                entity.Property(e => e.OpSource)
                    .HasMaxLength(255)
                    .HasColumnName("OP_SOURCE");

                entity.Property(e => e.OpSourceHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OP_SOURCE_HLIGHT");

                entity.Property(e => e.OpStage)
                    .HasMaxLength(255)
                    .HasColumnName("OP_STAGE");

                entity.Property(e => e.OpStageHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OP_STAGE_HLIGHT");

                entity.Property(e => e.OpState).HasColumnName("OP_STATE");

                entity.Property(e => e.OpUd1)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD1");

                entity.Property(e => e.OpUd10)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD10");

                entity.Property(e => e.OpUd10Bit).HasColumnName("OP_UD10_BIT");

                entity.Property(e => e.OpUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OP_UD10_DATE");

                entity.Property(e => e.OpUd10Id).HasColumnName("OP_UD10_ID");

                entity.Property(e => e.OpUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD10_ID_NAME");

                entity.Property(e => e.OpUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OP_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.OpUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OP_UD10_NUMERIC");

                entity.Property(e => e.OpUd11)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD11");

                entity.Property(e => e.OpUd11Bit).HasColumnName("OP_UD11_BIT");

                entity.Property(e => e.OpUd12)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD12");

                entity.Property(e => e.OpUd12Bit).HasColumnName("OP_UD12_BIT");

                entity.Property(e => e.OpUd13)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD13");

                entity.Property(e => e.OpUd13Bit).HasColumnName("OP_UD13_BIT");

                entity.Property(e => e.OpUd14)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD14");

                entity.Property(e => e.OpUd14Bit).HasColumnName("OP_UD14_BIT");

                entity.Property(e => e.OpUd15)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD15");

                entity.Property(e => e.OpUd15Bit).HasColumnName("OP_UD15_BIT");

                entity.Property(e => e.OpUd16Bit).HasColumnName("OP_UD16_BIT");

                entity.Property(e => e.OpUd17Bit).HasColumnName("OP_UD17_BIT");

                entity.Property(e => e.OpUd18Bit).HasColumnName("OP_UD18_BIT");

                entity.Property(e => e.OpUd19Bit).HasColumnName("OP_UD19_BIT");

                entity.Property(e => e.OpUd1Bit).HasColumnName("OP_UD1_BIT");

                entity.Property(e => e.OpUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OP_UD1_DATE");

                entity.Property(e => e.OpUd1Id).HasColumnName("OP_UD1_ID");

                entity.Property(e => e.OpUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD1_ID_NAME");

                entity.Property(e => e.OpUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OP_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.OpUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OP_UD1_NUMERIC");

                entity.Property(e => e.OpUd2)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD2");

                entity.Property(e => e.OpUd20Bit).HasColumnName("OP_UD20_BIT");

                entity.Property(e => e.OpUd21Bit).HasColumnName("OP_UD21_BIT");

                entity.Property(e => e.OpUd22Bit).HasColumnName("OP_UD22_BIT");

                entity.Property(e => e.OpUd23Bit).HasColumnName("OP_UD23_BIT");

                entity.Property(e => e.OpUd24Bit).HasColumnName("OP_UD24_BIT");

                entity.Property(e => e.OpUd2Bit).HasColumnName("OP_UD2_BIT");

                entity.Property(e => e.OpUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OP_UD2_DATE");

                entity.Property(e => e.OpUd2Id).HasColumnName("OP_UD2_ID");

                entity.Property(e => e.OpUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD2_ID_NAME");

                entity.Property(e => e.OpUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OP_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.OpUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OP_UD2_NUMERIC");

                entity.Property(e => e.OpUd3)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD3");

                entity.Property(e => e.OpUd3Bit).HasColumnName("OP_UD3_BIT");

                entity.Property(e => e.OpUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OP_UD3_DATE");

                entity.Property(e => e.OpUd3Id).HasColumnName("OP_UD3_ID");

                entity.Property(e => e.OpUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD3_ID_NAME");

                entity.Property(e => e.OpUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OP_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.OpUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OP_UD3_NUMERIC");

                entity.Property(e => e.OpUd4)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD4");

                entity.Property(e => e.OpUd4Bit).HasColumnName("OP_UD4_BIT");

                entity.Property(e => e.OpUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OP_UD4_DATE");

                entity.Property(e => e.OpUd4Id).HasColumnName("OP_UD4_ID");

                entity.Property(e => e.OpUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD4_ID_NAME");

                entity.Property(e => e.OpUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OP_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.OpUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OP_UD4_NUMERIC");

                entity.Property(e => e.OpUd5)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD5");

                entity.Property(e => e.OpUd5Bit).HasColumnName("OP_UD5_BIT");

                entity.Property(e => e.OpUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OP_UD5_DATE");

                entity.Property(e => e.OpUd5Id).HasColumnName("OP_UD5_ID");

                entity.Property(e => e.OpUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD5_ID_NAME");

                entity.Property(e => e.OpUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OP_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.OpUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OP_UD5_NUMERIC");

                entity.Property(e => e.OpUd6)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD6");

                entity.Property(e => e.OpUd6Bit).HasColumnName("OP_UD6_BIT");

                entity.Property(e => e.OpUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OP_UD6_DATE");

                entity.Property(e => e.OpUd6Id).HasColumnName("OP_UD6_ID");

                entity.Property(e => e.OpUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD6_ID_NAME");

                entity.Property(e => e.OpUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OP_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.OpUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OP_UD6_NUMERIC");

                entity.Property(e => e.OpUd7)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD7");

                entity.Property(e => e.OpUd7Bit).HasColumnName("OP_UD7_BIT");

                entity.Property(e => e.OpUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OP_UD7_DATE");

                entity.Property(e => e.OpUd7Id).HasColumnName("OP_UD7_ID");

                entity.Property(e => e.OpUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD7_ID_NAME");

                entity.Property(e => e.OpUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OP_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.OpUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OP_UD7_NUMERIC");

                entity.Property(e => e.OpUd8)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD8");

                entity.Property(e => e.OpUd8Bit).HasColumnName("OP_UD8_BIT");

                entity.Property(e => e.OpUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OP_UD8_DATE");

                entity.Property(e => e.OpUd8Id).HasColumnName("OP_UD8_ID");

                entity.Property(e => e.OpUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD8_ID_NAME");

                entity.Property(e => e.OpUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OP_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.OpUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OP_UD8_NUMERIC");

                entity.Property(e => e.OpUd9)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD9");

                entity.Property(e => e.OpUd9Bit).HasColumnName("OP_UD9_BIT");

                entity.Property(e => e.OpUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OP_UD9_DATE");

                entity.Property(e => e.OpUd9Id).HasColumnName("OP_UD9_ID");

                entity.Property(e => e.OpUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD9_ID_NAME");

                entity.Property(e => e.OpUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OP_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.OpUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OP_UD9_NUMERIC");

                entity.Property(e => e.Overdue).HasColumnName("OVERDUE");

                entity.Property(e => e.Owner).HasColumnName("OWNER");

                entity.Property(e => e.OwnerDept)
                    .HasMaxLength(128)
                    .HasColumnName("OWNER_DEPT");

                entity.Property(e => e.OwnerEmail)
                    .HasMaxLength(255)
                    .HasColumnName("OWNER_EMAIL");

                entity.Property(e => e.OwnerGroup)
                    .HasMaxLength(255)
                    .HasColumnName("OWNER_GROUP");

                entity.Property(e => e.OwnerName)
                    .HasMaxLength(255)
                    .HasColumnName("OWNER_NAME");

                entity.Property(e => e.Partner)
                    .HasMaxLength(50)
                    .HasColumnName("PARTNER");

                entity.Property(e => e.PotentialValue)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("POTENTIAL_VALUE");

                entity.Property(e => e.PotentialValueBase)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("POTENTIAL_VALUE_BASE");

                entity.Property(e => e.Probability)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("PROBABILITY");

                entity.Property(e => e.ProductType)
                    .HasMaxLength(255)
                    .HasColumnName("PRODUCT_TYPE");

                entity.Property(e => e.ProductTypeHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PRODUCT_TYPE_HLIGHT");

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.SecurityGroup)
                    .HasMaxLength(255)
                    .HasColumnName("SECURITY_GROUP");

                entity.Property(e => e.SecurityId).HasColumnName("SECURITY_ID");

                entity.Property(e => e.SecurityObject)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SECURITY_OBJECT");

                entity.Property(e => e.SecurityOwner).HasColumnName("SECURITY_OWNER");

                entity.Property(e => e.SgId).HasColumnName("SG_ID");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.SitId).HasColumnName("SIT_ID");

                entity.Property(e => e.SiteName)
                    .HasMaxLength(255)
                    .HasColumnName("SITE_NAME");

                entity.Property(e => e.Source).HasColumnName("SOURCE");

                entity.Property(e => e.Stage).HasColumnName("STAGE");

                entity.Property(e => e.StgId).HasColumnName("STG_ID");

                entity.Property(e => e.StgIdName)
                    .HasMaxLength(513)
                    .HasColumnName("STG_ID_NAME");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Type)
                    .HasMaxLength(50)
                    .HasColumnName("TYPE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");

                entity.Property(e => e.UsIdSupport).HasColumnName("US_ID_SUPPORT");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");
            });

            modelBuilder.Entity<VOpportunityActivitySecurity>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vOpportunityActivitySecurity");

                entity.Property(e => e.CanSeeObject).HasColumnName("CAN_SEE_OBJECT");

                entity.Property(e => e.OpId).HasColumnName("op_id");

                entity.Property(e => e.OpaId).HasColumnName("OPA_ID");

                entity.Property(e => e.UsId).HasColumnName("us_id");

                entity.Property(e => e.UserSummary)
                    .HasMaxLength(255)
                    .HasColumnName("USER_SUMMARY");

                entity.Property(e => e.VisibilityReason)
                    .IsRequired()
                    .HasMaxLength(46)
                    .IsUnicode(false)
                    .HasColumnName("VISIBILITY_REASON");
            });

            modelBuilder.Entity<VOpportunityContact>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vOpportunityContacts");

                entity.Property(e => e.AcAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("AC_ADDRESS_1");

                entity.Property(e => e.AcAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_ADDRESS_2");

                entity.Property(e => e.AcAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("AC_ADDRESS_3");

                entity.Property(e => e.AcBillingAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_ADDRESS_1");

                entity.Property(e => e.AcBillingAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_ADDRESS_2");

                entity.Property(e => e.AcBillingAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_ADDRESS_3");

                entity.Property(e => e.AcBillingCounty)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_COUNTY");

                entity.Property(e => e.AcBillingPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_POSTCODE");

                entity.Property(e => e.AcBillingTown)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_TOWN");

                entity.Property(e => e.AcCounty)
                    .HasMaxLength(255)
                    .HasColumnName("AC_COUNTY");

                entity.Property(e => e.AcExternal)
                    .HasMaxLength(255)
                    .HasColumnName("AC_EXTERNAL");

                entity.Property(e => e.AcFlag)
                    .HasMaxLength(255)
                    .HasColumnName("AC_FLAG");

                entity.Property(e => e.AcFlagHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_FLAG_HLIGHT");

                entity.Property(e => e.AcGroup)
                    .HasMaxLength(255)
                    .HasColumnName("AC_GROUP");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcIndustry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_INDUSTRY");

                entity.Property(e => e.AcIndustryHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_INDUSTRY_HLIGHT");

                entity.Property(e => e.AcLabel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LABEL");

                entity.Property(e => e.AcLabelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LABEL_HLIGHT");

                entity.Property(e => e.AcLevel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LEVEL");

                entity.Property(e => e.AcLevelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LEVEL_HLIGHT");

                entity.Property(e => e.AcManager)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER");

                entity.Property(e => e.AcManagerDept)
                    .HasMaxLength(128)
                    .HasColumnName("AC_MANAGER_DEPT");

                entity.Property(e => e.AcManagerEmail)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_EMAIL");

                entity.Property(e => e.AcManagerGroup)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_GROUP");

                entity.Property(e => e.AcManagerSupport)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_SUPPORT");

                entity.Property(e => e.AcManagerSupportEmail)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_SUPPORT_EMAIL");

                entity.Property(e => e.AcPhone1)
                    .HasMaxLength(50)
                    .HasColumnName("AC_PHONE_1");

                entity.Property(e => e.AcPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("AC_POSTCODE");

                entity.Property(e => e.AcReference)
                    .HasMaxLength(50)
                    .HasColumnName("AC_REFERENCE");

                entity.Property(e => e.AcSource)
                    .HasMaxLength(255)
                    .HasColumnName("AC_SOURCE");

                entity.Property(e => e.AcSourceHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_SOURCE_HLIGHT");

                entity.Property(e => e.AcTown)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TOWN");

                entity.Property(e => e.AcType)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE");

                entity.Property(e => e.AcType2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_2");

                entity.Property(e => e.AcType2Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_2_HLIGHT");

                entity.Property(e => e.AcTypeHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_HLIGHT");

                entity.Property(e => e.AcUd10Bit).HasColumnName("AC_UD10_BIT");

                entity.Property(e => e.AcUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD10_DATE");

                entity.Property(e => e.AcUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_ID_NAME");

                entity.Property(e => e.AcUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd10Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD10_NUMERIC");

                entity.Property(e => e.AcUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_TEXT");

                entity.Property(e => e.AcUd11Bit).HasColumnName("AC_UD11_BIT");

                entity.Property(e => e.AcUd11Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD11_TEXT");

                entity.Property(e => e.AcUd12Bit).HasColumnName("AC_UD12_BIT");

                entity.Property(e => e.AcUd12Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD12_TEXT");

                entity.Property(e => e.AcUd13Bit).HasColumnName("AC_UD13_BIT");

                entity.Property(e => e.AcUd13Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD13_TEXT");

                entity.Property(e => e.AcUd14Bit).HasColumnName("AC_UD14_BIT");

                entity.Property(e => e.AcUd14Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD14_TEXT");

                entity.Property(e => e.AcUd15Bit).HasColumnName("AC_UD15_BIT");

                entity.Property(e => e.AcUd15Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD15_TEXT");

                entity.Property(e => e.AcUd16Bit).HasColumnName("AC_UD16_BIT");

                entity.Property(e => e.AcUd17Bit).HasColumnName("AC_UD17_BIT");

                entity.Property(e => e.AcUd18Bit).HasColumnName("AC_UD18_BIT");

                entity.Property(e => e.AcUd19Bit).HasColumnName("AC_UD19_BIT");

                entity.Property(e => e.AcUd1Bit).HasColumnName("AC_UD1_BIT");

                entity.Property(e => e.AcUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD1_DATE");

                entity.Property(e => e.AcUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_ID_NAME");

                entity.Property(e => e.AcUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd1Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD1_NUMERIC");

                entity.Property(e => e.AcUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_TEXT");

                entity.Property(e => e.AcUd20Bit).HasColumnName("AC_UD20_BIT");

                entity.Property(e => e.AcUd21Bit).HasColumnName("AC_UD21_BIT");

                entity.Property(e => e.AcUd22Bit).HasColumnName("AC_UD22_BIT");

                entity.Property(e => e.AcUd23Bit).HasColumnName("AC_UD23_BIT");

                entity.Property(e => e.AcUd24Bit).HasColumnName("AC_UD24_BIT");

                entity.Property(e => e.AcUd2Bit).HasColumnName("AC_UD2_BIT");

                entity.Property(e => e.AcUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD2_DATE");

                entity.Property(e => e.AcUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_ID_NAME");

                entity.Property(e => e.AcUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd2Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD2_NUMERIC");

                entity.Property(e => e.AcUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_TEXT");

                entity.Property(e => e.AcUd3Bit).HasColumnName("AC_UD3_BIT");

                entity.Property(e => e.AcUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD3_DATE");

                entity.Property(e => e.AcUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_ID_NAME");

                entity.Property(e => e.AcUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd3Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD3_NUMERIC");

                entity.Property(e => e.AcUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_TEXT");

                entity.Property(e => e.AcUd4Bit).HasColumnName("AC_UD4_BIT");

                entity.Property(e => e.AcUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD4_DATE");

                entity.Property(e => e.AcUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_ID_NAME");

                entity.Property(e => e.AcUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd4Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD4_NUMERIC");

                entity.Property(e => e.AcUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_TEXT");

                entity.Property(e => e.AcUd5Bit).HasColumnName("AC_UD5_BIT");

                entity.Property(e => e.AcUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD5_DATE");

                entity.Property(e => e.AcUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_ID_NAME");

                entity.Property(e => e.AcUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd5Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD5_NUMERIC");

                entity.Property(e => e.AcUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_TEXT");

                entity.Property(e => e.AcUd6Bit).HasColumnName("AC_UD6_BIT");

                entity.Property(e => e.AcUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD6_DATE");

                entity.Property(e => e.AcUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_ID_NAME");

                entity.Property(e => e.AcUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd6Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD6_NUMERIC");

                entity.Property(e => e.AcUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_TEXT");

                entity.Property(e => e.AcUd7Bit).HasColumnName("AC_UD7_BIT");

                entity.Property(e => e.AcUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD7_DATE");

                entity.Property(e => e.AcUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_ID_NAME");

                entity.Property(e => e.AcUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd7Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD7_NUMERIC");

                entity.Property(e => e.AcUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_TEXT");

                entity.Property(e => e.AcUd8Bit).HasColumnName("AC_UD8_BIT");

                entity.Property(e => e.AcUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD8_DATE");

                entity.Property(e => e.AcUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_ID_NAME");

                entity.Property(e => e.AcUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd8Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD8_NUMERIC");

                entity.Property(e => e.AcUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_TEXT");

                entity.Property(e => e.AcUd9Bit).HasColumnName("AC_UD9_BIT");

                entity.Property(e => e.AcUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD9_DATE");

                entity.Property(e => e.AcUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_ID_NAME");

                entity.Property(e => e.AcUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd9Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD9_NUMERIC");

                entity.Property(e => e.AcUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_TEXT");

                entity.Property(e => e.AccDeleted).HasColumnName("ACC_DELETED");

                entity.Property(e => e.AccExternal)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_EXTERNAL");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccImport).HasColumnName("ACC_IMPORT");

                entity.Property(e => e.AccPrefAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_ADDRESS_1");

                entity.Property(e => e.AccPrefAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_ADDRESS_2");

                entity.Property(e => e.AccPrefAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_ADDRESS_3");

                entity.Property(e => e.AccPrefCountry)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_COUNTRY");

                entity.Property(e => e.AccPrefCounty)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_COUNTY");

                entity.Property(e => e.AccPrefEmail)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_EMAIL");

                entity.Property(e => e.AccPrefPhone)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_PHONE");

                entity.Property(e => e.AccPrefPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_POSTCODE");

                entity.Property(e => e.AccPrefTown)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_TOWN");

                entity.Property(e => e.AccRole)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_ROLE");

                entity.Property(e => e.AccStatus).HasColumnName("ACC_STATUS");

                entity.Property(e => e.AccUd1)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD1");

                entity.Property(e => e.AccUd10)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD10");

                entity.Property(e => e.AccUd10Bit).HasColumnName("ACC_UD10_BIT");

                entity.Property(e => e.AccUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD10_DATE");

                entity.Property(e => e.AccUd10Id).HasColumnName("ACC_UD10_ID");

                entity.Property(e => e.AccUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD10_ID_NAME");

                entity.Property(e => e.AccUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD10_NUMERIC");

                entity.Property(e => e.AccUd11)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD11");

                entity.Property(e => e.AccUd11Bit).HasColumnName("ACC_UD11_BIT");

                entity.Property(e => e.AccUd12)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD12");

                entity.Property(e => e.AccUd12Bit).HasColumnName("ACC_UD12_BIT");

                entity.Property(e => e.AccUd13)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD13");

                entity.Property(e => e.AccUd13Bit).HasColumnName("ACC_UD13_BIT");

                entity.Property(e => e.AccUd14)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD14");

                entity.Property(e => e.AccUd14Bit).HasColumnName("ACC_UD14_BIT");

                entity.Property(e => e.AccUd15)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD15");

                entity.Property(e => e.AccUd15Bit).HasColumnName("ACC_UD15_BIT");

                entity.Property(e => e.AccUd16Bit).HasColumnName("ACC_UD16_BIT");

                entity.Property(e => e.AccUd17Bit).HasColumnName("ACC_UD17_BIT");

                entity.Property(e => e.AccUd18Bit).HasColumnName("ACC_UD18_BIT");

                entity.Property(e => e.AccUd19Bit).HasColumnName("ACC_UD19_BIT");

                entity.Property(e => e.AccUd1Bit).HasColumnName("ACC_UD1_BIT");

                entity.Property(e => e.AccUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD1_DATE");

                entity.Property(e => e.AccUd1Id).HasColumnName("ACC_UD1_ID");

                entity.Property(e => e.AccUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD1_ID_NAME");

                entity.Property(e => e.AccUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD1_NUMERIC");

                entity.Property(e => e.AccUd2)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD2");

                entity.Property(e => e.AccUd20Bit).HasColumnName("ACC_UD20_BIT");

                entity.Property(e => e.AccUd21Bit).HasColumnName("ACC_UD21_BIT");

                entity.Property(e => e.AccUd22Bit).HasColumnName("ACC_UD22_BIT");

                entity.Property(e => e.AccUd23Bit).HasColumnName("ACC_UD23_BIT");

                entity.Property(e => e.AccUd24Bit).HasColumnName("ACC_UD24_BIT");

                entity.Property(e => e.AccUd2Bit).HasColumnName("ACC_UD2_BIT");

                entity.Property(e => e.AccUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD2_DATE");

                entity.Property(e => e.AccUd2Id).HasColumnName("ACC_UD2_ID");

                entity.Property(e => e.AccUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD2_ID_NAME");

                entity.Property(e => e.AccUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD2_NUMERIC");

                entity.Property(e => e.AccUd3)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD3");

                entity.Property(e => e.AccUd3Bit).HasColumnName("ACC_UD3_BIT");

                entity.Property(e => e.AccUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD3_DATE");

                entity.Property(e => e.AccUd3Id).HasColumnName("ACC_UD3_ID");

                entity.Property(e => e.AccUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD3_ID_NAME");

                entity.Property(e => e.AccUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD3_NUMERIC");

                entity.Property(e => e.AccUd4)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD4");

                entity.Property(e => e.AccUd4Bit).HasColumnName("ACC_UD4_BIT");

                entity.Property(e => e.AccUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD4_DATE");

                entity.Property(e => e.AccUd4Id).HasColumnName("ACC_UD4_ID");

                entity.Property(e => e.AccUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD4_ID_NAME");

                entity.Property(e => e.AccUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD4_NUMERIC");

                entity.Property(e => e.AccUd5)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD5");

                entity.Property(e => e.AccUd5Bit).HasColumnName("ACC_UD5_BIT");

                entity.Property(e => e.AccUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD5_DATE");

                entity.Property(e => e.AccUd5Id).HasColumnName("ACC_UD5_ID");

                entity.Property(e => e.AccUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD5_ID_NAME");

                entity.Property(e => e.AccUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD5_NUMERIC");

                entity.Property(e => e.AccUd6)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD6");

                entity.Property(e => e.AccUd6Bit).HasColumnName("ACC_UD6_BIT");

                entity.Property(e => e.AccUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD6_DATE");

                entity.Property(e => e.AccUd6Id).HasColumnName("ACC_UD6_ID");

                entity.Property(e => e.AccUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD6_ID_NAME");

                entity.Property(e => e.AccUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD6_NUMERIC");

                entity.Property(e => e.AccUd7)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD7");

                entity.Property(e => e.AccUd7Bit).HasColumnName("ACC_UD7_BIT");

                entity.Property(e => e.AccUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD7_DATE");

                entity.Property(e => e.AccUd7Id).HasColumnName("ACC_UD7_ID");

                entity.Property(e => e.AccUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD7_ID_NAME");

                entity.Property(e => e.AccUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD7_NUMERIC");

                entity.Property(e => e.AccUd8)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD8");

                entity.Property(e => e.AccUd8Bit).HasColumnName("ACC_UD8_BIT");

                entity.Property(e => e.AccUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD8_DATE");

                entity.Property(e => e.AccUd8Id).HasColumnName("ACC_UD8_ID");

                entity.Property(e => e.AccUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD8_ID_NAME");

                entity.Property(e => e.AccUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD8_NUMERIC");

                entity.Property(e => e.AccUd9)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD9");

                entity.Property(e => e.AccUd9Bit).HasColumnName("ACC_UD9_BIT");

                entity.Property(e => e.AccUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD9_DATE");

                entity.Property(e => e.AccUd9Id).HasColumnName("ACC_UD9_ID");

                entity.Property(e => e.AccUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD9_ID_NAME");

                entity.Property(e => e.AccUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD9_NUMERIC");

                entity.Property(e => e.Account).HasMaxLength(255);

                entity.Property(e => e.AccountName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_NAME");

                entity.Property(e => e.AcgId).HasColumnName("ACG_ID");

                entity.Property(e => e.Anniversary).HasMaxLength(255);

                entity.Property(e => e.AssistantTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Assistantname).HasMaxLength(255);

                entity.Property(e => e.BillingInformation).HasMaxLength(255);

                entity.Property(e => e.Birthday).HasMaxLength(255);

                entity.Property(e => e.Business2TelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.BusinessAddress).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressCity).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressCountry).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressState).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.BusinessFaxNumber).HasMaxLength(255);

                entity.Property(e => e.BusinessFaxNumberFormatted).HasMaxLength(267);

                entity.Property(e => e.BusinessHomePage).HasMaxLength(255);

                entity.Property(e => e.BusinessSitId).HasColumnName("BUSINESS_SIT_ID");

                entity.Property(e => e.BusinessSite)
                    .HasMaxLength(255)
                    .HasColumnName("BUSINESS_SITE");

                entity.Property(e => e.BusinessTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.CallbackTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.CarTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Categories).HasMaxLength(500);

                entity.Property(e => e.Children).HasMaxLength(255);

                entity.Property(e => e.Companies).HasMaxLength(255);

                entity.Property(e => e.CompanyAndFullName).HasMaxLength(255);

                entity.Property(e => e.CompanyLastFirstNoSpace).HasMaxLength(255);

                entity.Property(e => e.CompanyLastFirstSpaceOnly).HasMaxLength(255);

                entity.Property(e => e.CompanyMainTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.CompanyName).HasMaxLength(255);

                entity.Property(e => e.ComputerNetworkName).HasMaxLength(255);

                entity.Property(e => e.ConnectOptIn).HasColumnName("CONNECT_OPT_IN");

                entity.Property(e => e.ConnectOptInDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CONNECT_OPT_IN_DATE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CreationTime).HasMaxLength(255);

                entity.Property(e => e.DeleteText)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DELETE_TEXT");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Department).HasMaxLength(255);

                entity.Property(e => e.Email1Address).HasMaxLength(255);

                entity.Property(e => e.Email1AddressType).HasMaxLength(255);

                entity.Property(e => e.Email1DisplayName).HasMaxLength(255);

                entity.Property(e => e.Email1EntryId)
                    .HasMaxLength(255)
                    .HasColumnName("Email1EntryID");

                entity.Property(e => e.Email2Address).HasMaxLength(255);

                entity.Property(e => e.Email2AddressType).HasMaxLength(255);

                entity.Property(e => e.Email2DisplayName).HasMaxLength(255);

                entity.Property(e => e.Email2EntryId)
                    .HasMaxLength(255)
                    .HasColumnName("Email2EntryID");

                entity.Property(e => e.Email3Address).HasMaxLength(255);

                entity.Property(e => e.Email3AddressType).HasMaxLength(255);

                entity.Property(e => e.Email3DisplayName).HasMaxLength(255);

                entity.Property(e => e.Email3EntryId)
                    .HasMaxLength(255)
                    .HasColumnName("Email3EntryID");

                entity.Property(e => e.Exported).HasColumnName("EXPORTED");

                entity.Property(e => e.FacebookImage)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_IMAGE");

                entity.Property(e => e.FacebookName)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_NAME");

                entity.Property(e => e.FacebookPrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_PRIVATE_ID");

                entity.Property(e => e.FacebookProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_PROFILE_URL");

                entity.Property(e => e.FacebookPublicId)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_PUBLIC_ID");

                entity.Property(e => e.FirstName).HasMaxLength(255);

                entity.Property(e => e.Ftpsite)
                    .HasMaxLength(255)
                    .HasColumnName("FTPSite");

                entity.Property(e => e.FullName).HasMaxLength(255);

                entity.Property(e => e.FullNameAndCompany).HasMaxLength(255);

                entity.Property(e => e.GplusImage)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_IMAGE");

                entity.Property(e => e.GplusName)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_NAME");

                entity.Property(e => e.GplusPrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_PRIVATE_ID");

                entity.Property(e => e.GplusProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_PROFILE_URL");

                entity.Property(e => e.GplusPublicId)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_PUBLIC_ID");

                entity.Property(e => e.Hobby).HasMaxLength(255);

                entity.Property(e => e.Home2TelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.HomeAddress).HasMaxLength(255);

                entity.Property(e => e.HomeAddressCity).HasMaxLength(255);

                entity.Property(e => e.HomeAddressCountry).HasMaxLength(255);

                entity.Property(e => e.HomeAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.HomeAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.HomeAddressState).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.HomeFaxNumber).HasMaxLength(255);

                entity.Property(e => e.HomeFaxNumberFormatted).HasMaxLength(267);

                entity.Property(e => e.HomeTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.ImSummary)
                    .HasMaxLength(255)
                    .HasColumnName("IM_SUMMARY");

                entity.Property(e => e.Initials).HasMaxLength(255);

                entity.Property(e => e.InternetFreeBusyAddress).HasMaxLength(255);

                entity.Property(e => e.Isdnnumber)
                    .HasMaxLength(255)
                    .HasColumnName("ISDNNumber");

                entity.Property(e => e.JobTitle).HasMaxLength(255);

                entity.Property(e => e.LastFirstAndSuffix).HasMaxLength(255);

                entity.Property(e => e.LastFirstNoSpaceCompany).HasMaxLength(255);

                entity.Property(e => e.LastFirstSpaceOnly).HasMaxLength(255);

                entity.Property(e => e.LastFirstSpaceOnlyCompany).HasMaxLength(255);

                entity.Property(e => e.LastModificationTime).HasMaxLength(255);

                entity.Property(e => e.LastName).HasMaxLength(255);

                entity.Property(e => e.LastNameAndFirstName).HasMaxLength(255);

                entity.Property(e => e.LinkedinImage)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_IMAGE");

                entity.Property(e => e.LinkedinName)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_NAME");

                entity.Property(e => e.LinkedinPrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_PRIVATE_ID");

                entity.Property(e => e.LinkedinProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_PROFILE_URL");

                entity.Property(e => e.LinkedinPublicId)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_PUBLIC_ID");

                entity.Property(e => e.LnkId).HasColumnName("LNK_ID");

                entity.Property(e => e.MailingAddress).HasMaxLength(255);

                entity.Property(e => e.MailingAddressCity).HasMaxLength(255);

                entity.Property(e => e.MailingAddressCountry).HasMaxLength(255);

                entity.Property(e => e.MailingAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.MailingAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.MailingAddressState).HasMaxLength(255);

                entity.Property(e => e.MailingAddressStreet).HasMaxLength(255);

                entity.Property(e => e.MailingAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.MailingAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.ManagerName).HasMaxLength(255);

                entity.Property(e => e.MiddleName).HasMaxLength(255);

                entity.Property(e => e.Mileage).HasMaxLength(255);

                entity.Property(e => e.MobileTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.NetMeetingAlias).HasMaxLength(255);

                entity.Property(e => e.NetMeetingServer).HasMaxLength(255);

                entity.Property(e => e.NickName).HasMaxLength(255);

                entity.Property(e => e.OfficeLocation).HasMaxLength(255);

                entity.Property(e => e.OpId).HasColumnName("OP_ID");

                entity.Property(e => e.OtherAddress).HasMaxLength(255);

                entity.Property(e => e.OtherAddressCity).HasMaxLength(255);

                entity.Property(e => e.OtherAddressCountry).HasMaxLength(255);

                entity.Property(e => e.OtherAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.OtherAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.OtherAddressState).HasMaxLength(255);

                entity.Property(e => e.OtherAddressStreet).HasMaxLength(255);

                entity.Property(e => e.OtherAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.OtherAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.OtherFaxNumber).HasMaxLength(255);

                entity.Property(e => e.OtherTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.PersonalHomePage).HasMaxLength(255);

                entity.Property(e => e.PrefAddress).HasColumnName("PREF_ADDRESS");

                entity.Property(e => e.PrefEmail).HasColumnName("PREF_EMAIL");

                entity.Property(e => e.PrefPhone).HasColumnName("PREF_PHONE");

                entity.Property(e => e.PreferredContact).HasColumnName("PREFERRED_CONTACT");

                entity.Property(e => e.PreferredContactEmail).HasColumnName("PREFERRED_CONTACT_EMAIL");

                entity.Property(e => e.PreferredContactFax).HasColumnName("PREFERRED_CONTACT_FAX");

                entity.Property(e => e.PreferredContactLetter).HasColumnName("PREFERRED_CONTACT_LETTER");

                entity.Property(e => e.PreferredContactPhone).HasColumnName("PREFERRED_CONTACT_PHONE");

                entity.Property(e => e.PrimaryContact).HasColumnName("PRIMARY_CONTACT");

                entity.Property(e => e.PrimaryTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.PrivacyNotified).HasColumnName("PRIVACY_NOTIFIED");

                entity.Property(e => e.PrivacyNotifiedBy)
                    .HasMaxLength(255)
                    .HasColumnName("PRIVACY_NOTIFIED_BY");

                entity.Property(e => e.PrivacyNotifiedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRIVACY_NOTIFIED_DATE");

                entity.Property(e => e.PrivacyNotifiedMethod)
                    .HasMaxLength(255)
                    .HasColumnName("PRIVACY_NOTIFIED_METHOD");

                entity.Property(e => e.Profession).HasMaxLength(255);

                entity.Property(e => e.RadioTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.ReferredBy).HasMaxLength(255);

                entity.Property(e => e.RemovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("REMOVAL_DATE");

                entity.Property(e => e.Salutation)
                    .HasMaxLength(255)
                    .HasColumnName("SALUTATION");

                entity.Property(e => e.SelectedMailingAddress).HasMaxLength(255);

                entity.Property(e => e.Sensitivity).HasMaxLength(255);

                entity.Property(e => e.Spouse).HasMaxLength(255);

                entity.Property(e => e.State)
                    .HasMaxLength(10)
                    .HasColumnName("STATE");

                entity.Property(e => e.Status)
                    .HasMaxLength(255)
                    .HasColumnName("STATUS");

                entity.Property(e => e.Subject).HasMaxLength(255);

                entity.Property(e => e.Suffix).HasMaxLength(255);

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TelexNumber).HasMaxLength(255);

                entity.Property(e => e.Title).HasMaxLength(255);

                entity.Property(e => e.TtytddtelephoneNumber)
                    .HasMaxLength(255)
                    .HasColumnName("TTYTDDTelephoneNumber");

                entity.Property(e => e.Twitter1Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_IMAGE");

                entity.Property(e => e.Twitter1Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_NAME");

                entity.Property(e => e.Twitter1PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_PRIVATE_ID");

                entity.Property(e => e.Twitter1ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_PROFILE_URL");

                entity.Property(e => e.Twitter1PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_PUBLIC_ID");

                entity.Property(e => e.Twitter2Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_IMAGE");

                entity.Property(e => e.Twitter2Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_NAME");

                entity.Property(e => e.Twitter2PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_PRIVATE_ID");

                entity.Property(e => e.Twitter2ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_PROFILE_URL");

                entity.Property(e => e.Twitter2PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_PUBLIC_ID");

                entity.Property(e => e.Twitter3Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_IMAGE");

                entity.Property(e => e.Twitter3Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_NAME");

                entity.Property(e => e.Twitter3PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_PRIVATE_ID");

                entity.Property(e => e.Twitter3ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_PROFILE_URL");

                entity.Property(e => e.Twitter3PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_PUBLIC_ID");

                entity.Property(e => e.Twitter4Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_IMAGE");

                entity.Property(e => e.Twitter4Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_NAME");

                entity.Property(e => e.Twitter4PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_PRIVATE_ID");

                entity.Property(e => e.Twitter4ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_PROFILE_URL");

                entity.Property(e => e.Twitter4PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_PUBLIC_ID");

                entity.Property(e => e.Twitter5Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_IMAGE");

                entity.Property(e => e.Twitter5Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_NAME");

                entity.Property(e => e.Twitter5PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_PRIVATE_ID");

                entity.Property(e => e.Twitter5ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_PROFILE_URL");

                entity.Property(e => e.Twitter5PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_PUBLIC_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");

                entity.Property(e => e.UsIdSupport).HasColumnName("US_ID_SUPPORT");

                entity.Property(e => e.UsName)
                    .HasMaxLength(255)
                    .HasColumnName("US_NAME");

                entity.Property(e => e.UsgName)
                    .HasMaxLength(255)
                    .HasColumnName("USG_NAME");

                entity.Property(e => e.WebPage).HasMaxLength(255);

                entity.Property(e => e.YomiCompanyName).HasMaxLength(255);

                entity.Property(e => e.YomiFirstName).HasMaxLength(255);

                entity.Property(e => e.YomiLastName).HasMaxLength(255);
            });

            modelBuilder.Entity<VOpportunitySecurity>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vOpportunitySecurity");

                entity.Property(e => e.CanSeeObject).HasColumnName("CAN_SEE_OBJECT");

                entity.Property(e => e.OpId).HasColumnName("OP_ID");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UserSummary)
                    .HasMaxLength(255)
                    .HasColumnName("USER_SUMMARY");

                entity.Property(e => e.VisibilityReason)
                    .IsRequired()
                    .HasMaxLength(46)
                    .IsUnicode(false)
                    .HasColumnName("VISIBILITY_REASON");
            });

            modelBuilder.Entity<VOpportunityTimeUnitsRecord>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vOpportunityTimeUnitsRecord");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccountSummary)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_SUMMARY");

                entity.Property(e => e.AcoId).HasColumnName("ACO_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DateRecorded)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_RECORDED");

                entity.Property(e => e.Description)
                    .HasMaxLength(4000)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.OpId).HasColumnName("OP_ID");

                entity.Property(e => e.OpaId).HasColumnName("OPA_ID");

                entity.Property(e => e.OpqdId).HasColumnName("OPQD_ID");

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.ParentItem)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("PARENT_ITEM");

                entity.Property(e => e.ParentSummary)
                    .HasMaxLength(255)
                    .HasColumnName("PARENT_SUMMARY");

                entity.Property(e => e.QuoteDetailSummary)
                    .HasMaxLength(255)
                    .HasColumnName("QUOTE_DETAIL_SUMMARY");

                entity.Property(e => e.RecordUserSummary)
                    .HasMaxLength(255)
                    .HasColumnName("RECORD_USER_SUMMARY");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TimeUnitIsTime).HasColumnName("TIME_UNIT_IS_TIME");

                entity.Property(e => e.TimeUnitValue).HasColumnName("TIME_UNIT_VALUE");

                entity.Property(e => e.TurId).HasColumnName("TUR_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UserTeamName)
                    .HasMaxLength(255)
                    .HasColumnName("USER_TEAM_NAME");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");
            });

            modelBuilder.Entity<VParagraph>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vParagraphs");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.PaDeleted).HasColumnName("PA_DELETED");

                entity.Property(e => e.PaId).HasColumnName("PA_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Tag)
                    .HasMaxLength(255)
                    .HasColumnName("TAG");

                entity.Property(e => e.Text)
                    .HasMaxLength(4000)
                    .HasColumnName("TEXT");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<VPhoneSystem>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vPhoneSystems");

                entity.Property(e => e.Description)
                    .HasMaxLength(50)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.InUse).HasColumnName("IN_USE");

                entity.Property(e => e.PhoneType)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PHONE_TYPE");

                entity.Property(e => e.Selected).HasColumnName("SELECTED");

                entity.Property(e => e.SetId).HasColumnName("SET_ID");

                entity.Property(e => e.SetIdDelete).HasColumnName("SET_ID_DELETE");

                entity.Property(e => e.Setting)
                    .HasMaxLength(50)
                    .HasColumnName("SETTING");

                entity.Property(e => e.UserCount).HasColumnName("USER_COUNT");

                entity.Property(e => e.Value)
                    .HasMaxLength(500)
                    .HasColumnName("VALUE");
            });

            modelBuilder.Entity<VPriceList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vPriceLists");

                entity.Property(e => e.BaseExchange).HasColumnName("BASE_EXCHANGE");

                entity.Property(e => e.Code)
                    .HasMaxLength(3)
                    .HasColumnName("CODE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CurDeleted).HasColumnName("CUR_DELETED");

                entity.Property(e => e.CurExternal)
                    .HasMaxLength(255)
                    .HasColumnName("CUR_EXTERNAL");

                entity.Property(e => e.CurId).HasColumnName("CUR_ID");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Discount).HasColumnName("DISCOUNT");

                entity.Property(e => e.EditPrices)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("EDIT_PRICES");

                entity.Property(e => e.Exclusive).HasColumnName("EXCLUSIVE");

                entity.Property(e => e.FneId).HasColumnName("FNE_ID");

                entity.Property(e => e.Order).HasColumnName("ORDER");

                entity.Property(e => e.ParentCurrencySummary)
                    .HasMaxLength(265)
                    .HasColumnName("PARENT_CURRENCY_SUMMARY");

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.PriceList).HasColumnName("PRICE_LIST");

                entity.Property(e => e.PriceListActive).HasColumnName("PRICE_LIST_ACTIVE");

                entity.Property(e => e.PriceListEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRICE_LIST_END_DATE");

                entity.Property(e => e.PriceListStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRICE_LIST_START_DATE");

                entity.Property(e => e.PriceListState).HasColumnName("PRICE_LIST_STATE");

                entity.Property(e => e.PriceListStateopen).HasColumnName("PRICE_LIST_STATEOPEN");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Symbol)
                    .HasMaxLength(3)
                    .HasColumnName("SYMBOL");

                entity.Property(e => e.TxcId).HasColumnName("TXC_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<VPriceListsSelect>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vPriceListsSelect");

                entity.Property(e => e.CurId).HasColumnName("CUR_ID");

                entity.Property(e => e.CurOrder).HasColumnName("CUR_ORDER");

                entity.Property(e => e.Discount).HasColumnName("DISCOUNT");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");
            });

            modelBuilder.Entity<VPrivacyLogList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vPrivacyLogList");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CsId).HasColumnName("CS_ID");

                entity.Property(e => e.Duration)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.EventDate)
                    .HasColumnType("datetime")
                    .HasColumnName("EVENT_DATE");

                entity.Property(e => e.EventType)
                    .HasMaxLength(255)
                    .HasColumnName("EVENT_TYPE");

                entity.Property(e => e.LawfulBasis)
                    .HasMaxLength(255)
                    .HasColumnName("LAWFUL_BASIS");

                entity.Property(e => e.Notification).HasColumnName("NOTIFICATION");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.PrlId).HasColumnName("PRL_ID");

                entity.Property(e => e.PurposeName)
                    .HasMaxLength(255)
                    .HasColumnName("PURPOSE_NAME");

                entity.Property(e => e.RemovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("REMOVAL_DATE");

                entity.Property(e => e.UserName)
                    .HasMaxLength(255)
                    .HasColumnName("USER_NAME");
            });

            modelBuilder.Entity<VProductGroupProduct>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vProduct_Group_Products");

                entity.Property(e => e.Code)
                    .HasMaxLength(255)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cost)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("COST");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CurrencySymbol)
                    .HasMaxLength(5)
                    .HasColumnName("CURRENCY_SYMBOL");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.Discount).HasColumnName("DISCOUNT");

                entity.Property(e => e.FneId).HasColumnName("FNE_ID");

                entity.Property(e => e.FneIdValue)
                    .HasMaxLength(36)
                    .HasColumnName("FNE_ID_VALUE");

                entity.Property(e => e.FneName)
                    .HasMaxLength(255)
                    .HasColumnName("FNE_NAME");

                entity.Property(e => e.GroupName)
                    .HasMaxLength(255)
                    .HasColumnName("GROUP_NAME");

                entity.Property(e => e.Manufacturer)
                    .HasMaxLength(50)
                    .HasColumnName("MANUFACTURER");

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .HasColumnName("NAME");

                entity.Property(e => e.PrDeleted).HasColumnName("PR_DELETED");

                entity.Property(e => e.PrExternal)
                    .HasMaxLength(255)
                    .HasColumnName("PR_EXTERNAL");

                entity.Property(e => e.PrId).HasColumnName("PR_ID");

                entity.Property(e => e.PrImport).HasColumnName("PR_IMPORT");

                entity.Property(e => e.PrSelect).HasColumnName("PR_SELECT");

                entity.Property(e => e.PrUd1)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD1");

                entity.Property(e => e.PrUd10)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD10");

                entity.Property(e => e.PrUd10Bit).HasColumnName("PR_UD10_BIT");

                entity.Property(e => e.PrUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD10_DATE");

                entity.Property(e => e.PrUd10Id).HasColumnName("PR_UD10_ID");

                entity.Property(e => e.PrUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD10_ID_NAME");

                entity.Property(e => e.PrUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.PrUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD10_NUMERIC");

                entity.Property(e => e.PrUd11)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD11");

                entity.Property(e => e.PrUd11Bit).HasColumnName("PR_UD11_BIT");

                entity.Property(e => e.PrUd12)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD12");

                entity.Property(e => e.PrUd12Bit).HasColumnName("PR_UD12_BIT");

                entity.Property(e => e.PrUd13)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD13");

                entity.Property(e => e.PrUd13Bit).HasColumnName("PR_UD13_BIT");

                entity.Property(e => e.PrUd14)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD14");

                entity.Property(e => e.PrUd14Bit).HasColumnName("PR_UD14_BIT");

                entity.Property(e => e.PrUd15)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD15");

                entity.Property(e => e.PrUd15Bit).HasColumnName("PR_UD15_BIT");

                entity.Property(e => e.PrUd16Bit).HasColumnName("PR_UD16_BIT");

                entity.Property(e => e.PrUd17Bit).HasColumnName("PR_UD17_BIT");

                entity.Property(e => e.PrUd18Bit).HasColumnName("PR_UD18_BIT");

                entity.Property(e => e.PrUd19Bit).HasColumnName("PR_UD19_BIT");

                entity.Property(e => e.PrUd1Bit).HasColumnName("PR_UD1_BIT");

                entity.Property(e => e.PrUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD1_DATE");

                entity.Property(e => e.PrUd1Id).HasColumnName("PR_UD1_ID");

                entity.Property(e => e.PrUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD1_ID_NAME");

                entity.Property(e => e.PrUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.PrUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD1_NUMERIC");

                entity.Property(e => e.PrUd2)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD2");

                entity.Property(e => e.PrUd20Bit).HasColumnName("PR_UD20_BIT");

                entity.Property(e => e.PrUd21Bit).HasColumnName("PR_UD21_BIT");

                entity.Property(e => e.PrUd22Bit).HasColumnName("PR_UD22_BIT");

                entity.Property(e => e.PrUd23Bit).HasColumnName("PR_UD23_BIT");

                entity.Property(e => e.PrUd24Bit).HasColumnName("PR_UD24_BIT");

                entity.Property(e => e.PrUd2Bit).HasColumnName("PR_UD2_BIT");

                entity.Property(e => e.PrUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD2_DATE");

                entity.Property(e => e.PrUd2Id).HasColumnName("PR_UD2_ID");

                entity.Property(e => e.PrUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD2_ID_NAME");

                entity.Property(e => e.PrUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.PrUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD2_NUMERIC");

                entity.Property(e => e.PrUd3)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD3");

                entity.Property(e => e.PrUd3Bit).HasColumnName("PR_UD3_BIT");

                entity.Property(e => e.PrUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD3_DATE");

                entity.Property(e => e.PrUd3Id).HasColumnName("PR_UD3_ID");

                entity.Property(e => e.PrUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD3_ID_NAME");

                entity.Property(e => e.PrUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.PrUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD3_NUMERIC");

                entity.Property(e => e.PrUd4)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD4");

                entity.Property(e => e.PrUd4Bit).HasColumnName("PR_UD4_BIT");

                entity.Property(e => e.PrUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD4_DATE");

                entity.Property(e => e.PrUd4Id).HasColumnName("PR_UD4_ID");

                entity.Property(e => e.PrUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD4_ID_NAME");

                entity.Property(e => e.PrUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.PrUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD4_NUMERIC");

                entity.Property(e => e.PrUd5)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD5");

                entity.Property(e => e.PrUd5Bit).HasColumnName("PR_UD5_BIT");

                entity.Property(e => e.PrUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD5_DATE");

                entity.Property(e => e.PrUd5Id).HasColumnName("PR_UD5_ID");

                entity.Property(e => e.PrUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD5_ID_NAME");

                entity.Property(e => e.PrUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.PrUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD5_NUMERIC");

                entity.Property(e => e.PrUd6)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD6");

                entity.Property(e => e.PrUd6Bit).HasColumnName("PR_UD6_BIT");

                entity.Property(e => e.PrUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD6_DATE");

                entity.Property(e => e.PrUd6Id).HasColumnName("PR_UD6_ID");

                entity.Property(e => e.PrUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD6_ID_NAME");

                entity.Property(e => e.PrUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.PrUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD6_NUMERIC");

                entity.Property(e => e.PrUd7)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD7");

                entity.Property(e => e.PrUd7Bit).HasColumnName("PR_UD7_BIT");

                entity.Property(e => e.PrUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD7_DATE");

                entity.Property(e => e.PrUd7Id).HasColumnName("PR_UD7_ID");

                entity.Property(e => e.PrUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD7_ID_NAME");

                entity.Property(e => e.PrUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.PrUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD7_NUMERIC");

                entity.Property(e => e.PrUd8)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD8");

                entity.Property(e => e.PrUd8Bit).HasColumnName("PR_UD8_BIT");

                entity.Property(e => e.PrUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD8_DATE");

                entity.Property(e => e.PrUd8Id).HasColumnName("PR_UD8_ID");

                entity.Property(e => e.PrUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD8_ID_NAME");

                entity.Property(e => e.PrUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.PrUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD8_NUMERIC");

                entity.Property(e => e.PrUd9)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD9");

                entity.Property(e => e.PrUd9Bit).HasColumnName("PR_UD9_BIT");

                entity.Property(e => e.PrUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD9_DATE");

                entity.Property(e => e.PrUd9Id).HasColumnName("PR_UD9_ID");

                entity.Property(e => e.PrUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD9_ID_NAME");

                entity.Property(e => e.PrUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.PrUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD9_NUMERIC");

                entity.Property(e => e.PrgId).HasColumnName("PRG_ID");

                entity.Property(e => e.Price)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("PRICE");

                entity.Property(e => e.Quantity)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("QUANTITY");

                entity.Property(e => e.Schedules).HasColumnName("SCHEDULES");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Support)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("SUPPORT");

                entity.Property(e => e.TaxCode)
                    .HasMaxLength(318)
                    .HasColumnName("TAX_CODE");

                entity.Property(e => e.TimeUnitIsTime).HasColumnName("TIME_UNIT_IS_TIME");

                entity.Property(e => e.TimeUnitValue).HasColumnName("TIME_UNIT_VALUE");

                entity.Property(e => e.TxcId).HasColumnName("TXC_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.Vat)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("VAT");
            });

            modelBuilder.Entity<VProductMonth>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vProductMonths");

                entity.Property(e => e.Month).HasColumnName("MONTH");

                entity.Property(e => e.PrId).HasColumnName("PR_ID");
            });

            modelBuilder.Entity<VProductSalesAll>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vProductSalesAll");

                entity.Property(e => e.AcGroup)
                    .HasMaxLength(255)
                    .HasColumnName("AC_GROUP");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcIndustry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_INDUSTRY");

                entity.Property(e => e.AcIndustryHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_INDUSTRY_HLIGHT");

                entity.Property(e => e.AcLabel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LABEL");

                entity.Property(e => e.AcLabelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LABEL_HLIGHT");

                entity.Property(e => e.AcLevel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LEVEL");

                entity.Property(e => e.AcLevelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LEVEL_HLIGHT");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.AcSource)
                    .HasMaxLength(255)
                    .HasColumnName("AC_SOURCE");

                entity.Property(e => e.AcSourceHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_SOURCE_HLIGHT");

                entity.Property(e => e.AcType1)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_1");

                entity.Property(e => e.AcType1Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_1_HLIGHT");

                entity.Property(e => e.AcType2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_2");

                entity.Property(e => e.AcType2Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_2_HLIGHT");

                entity.Property(e => e.AcUd10Bit).HasColumnName("AC_UD10_BIT");

                entity.Property(e => e.AcUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD10_DATE");

                entity.Property(e => e.AcUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_ID_NAME");

                entity.Property(e => e.AcUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd10Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD10_NUMERIC");

                entity.Property(e => e.AcUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_TEXT");

                entity.Property(e => e.AcUd11Bit).HasColumnName("AC_UD11_BIT");

                entity.Property(e => e.AcUd11Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD11_TEXT");

                entity.Property(e => e.AcUd12Bit).HasColumnName("AC_UD12_BIT");

                entity.Property(e => e.AcUd12Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD12_TEXT");

                entity.Property(e => e.AcUd13Bit).HasColumnName("AC_UD13_BIT");

                entity.Property(e => e.AcUd13Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD13_TEXT");

                entity.Property(e => e.AcUd14Bit).HasColumnName("AC_UD14_BIT");

                entity.Property(e => e.AcUd14Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD14_TEXT");

                entity.Property(e => e.AcUd15Bit).HasColumnName("AC_UD15_BIT");

                entity.Property(e => e.AcUd15Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD15_TEXT");

                entity.Property(e => e.AcUd16Bit).HasColumnName("AC_UD16_BIT");

                entity.Property(e => e.AcUd17Bit).HasColumnName("AC_UD17_BIT");

                entity.Property(e => e.AcUd18Bit).HasColumnName("AC_UD18_BIT");

                entity.Property(e => e.AcUd19Bit).HasColumnName("AC_UD19_BIT");

                entity.Property(e => e.AcUd1Bit).HasColumnName("AC_UD1_BIT");

                entity.Property(e => e.AcUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD1_DATE");

                entity.Property(e => e.AcUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_ID_NAME");

                entity.Property(e => e.AcUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd1Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD1_NUMERIC");

                entity.Property(e => e.AcUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_TEXT");

                entity.Property(e => e.AcUd20Bit).HasColumnName("AC_UD20_BIT");

                entity.Property(e => e.AcUd21Bit).HasColumnName("AC_UD21_BIT");

                entity.Property(e => e.AcUd22Bit).HasColumnName("AC_UD22_BIT");

                entity.Property(e => e.AcUd23Bit).HasColumnName("AC_UD23_BIT");

                entity.Property(e => e.AcUd24Bit).HasColumnName("AC_UD24_BIT");

                entity.Property(e => e.AcUd2Bit).HasColumnName("AC_UD2_BIT");

                entity.Property(e => e.AcUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD2_DATE");

                entity.Property(e => e.AcUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_ID_NAME");

                entity.Property(e => e.AcUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd2Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD2_NUMERIC");

                entity.Property(e => e.AcUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_TEXT");

                entity.Property(e => e.AcUd3Bit).HasColumnName("AC_UD3_BIT");

                entity.Property(e => e.AcUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD3_DATE");

                entity.Property(e => e.AcUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_ID_NAME");

                entity.Property(e => e.AcUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd3Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD3_NUMERIC");

                entity.Property(e => e.AcUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_TEXT");

                entity.Property(e => e.AcUd4Bit).HasColumnName("AC_UD4_BIT");

                entity.Property(e => e.AcUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD4_DATE");

                entity.Property(e => e.AcUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_ID_NAME");

                entity.Property(e => e.AcUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd4Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD4_NUMERIC");

                entity.Property(e => e.AcUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_TEXT");

                entity.Property(e => e.AcUd5Bit).HasColumnName("AC_UD5_BIT");

                entity.Property(e => e.AcUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD5_DATE");

                entity.Property(e => e.AcUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_ID_NAME");

                entity.Property(e => e.AcUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd5Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD5_NUMERIC");

                entity.Property(e => e.AcUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_TEXT");

                entity.Property(e => e.AcUd6Bit).HasColumnName("AC_UD6_BIT");

                entity.Property(e => e.AcUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD6_DATE");

                entity.Property(e => e.AcUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_ID_NAME");

                entity.Property(e => e.AcUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd6Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD6_NUMERIC");

                entity.Property(e => e.AcUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_TEXT");

                entity.Property(e => e.AcUd7Bit).HasColumnName("AC_UD7_BIT");

                entity.Property(e => e.AcUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD7_DATE");

                entity.Property(e => e.AcUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_ID_NAME");

                entity.Property(e => e.AcUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd7Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD7_NUMERIC");

                entity.Property(e => e.AcUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_TEXT");

                entity.Property(e => e.AcUd8Bit).HasColumnName("AC_UD8_BIT");

                entity.Property(e => e.AcUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD8_DATE");

                entity.Property(e => e.AcUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_ID_NAME");

                entity.Property(e => e.AcUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd8Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD8_NUMERIC");

                entity.Property(e => e.AcUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_TEXT");

                entity.Property(e => e.AcUd9Bit).HasColumnName("AC_UD9_BIT");

                entity.Property(e => e.AcUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD9_DATE");

                entity.Property(e => e.AcUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_ID_NAME");

                entity.Property(e => e.AcUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd9Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD9_NUMERIC");

                entity.Property(e => e.AcUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_TEXT");

                entity.Property(e => e.AccEmail1address)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_EMAIL1ADDRESS");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccSummary)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_SUMMARY");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_MANAGER");

                entity.Property(e => e.CloseDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CLOSE_DATE");

                entity.Property(e => e.Code)
                    .HasMaxLength(50)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cost)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CurrencyCode)
                    .HasMaxLength(3)
                    .HasColumnName("CURRENCY_CODE");

                entity.Property(e => e.CurrencySymbol)
                    .HasMaxLength(3)
                    .HasColumnName("CURRENCY_SYMBOL");

                entity.Property(e => e.Discount).HasColumnName("DISCOUNT");

                entity.Property(e => e.DiscountedPrice).HasColumnName("DISCOUNTED_PRICE");

                entity.Property(e => e.EstimatedClose)
                    .HasColumnType("datetime")
                    .HasColumnName("ESTIMATED_CLOSE");

                entity.Property(e => e.Excludefromtotal).HasColumnName("EXCLUDEFROMTOTAL");

                entity.Property(e => e.FneName)
                    .HasMaxLength(255)
                    .HasColumnName("FNE_NAME");

                entity.Property(e => e.ForecastDate)
                    .HasColumnType("datetime")
                    .HasColumnName("FORECAST_DATE");

                entity.Property(e => e.Linked).HasColumnName("LINKED");

                entity.Property(e => e.Manufacturer)
                    .HasMaxLength(50)
                    .HasColumnName("MANUFACTURER");

                entity.Property(e => e.Margin).HasColumnName("MARGIN");

                entity.Property(e => e.MarginPercent)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("MARGIN_PERCENT");

                entity.Property(e => e.OpId).HasColumnName("OP_ID");

                entity.Property(e => e.OpProbability)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("OP_PROBABILITY");

                entity.Property(e => e.OpSource)
                    .HasMaxLength(255)
                    .HasColumnName("OP_SOURCE");

                entity.Property(e => e.OpSourceHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OP_SOURCE_HLIGHT");

                entity.Property(e => e.OpStage)
                    .HasMaxLength(255)
                    .HasColumnName("OP_STAGE");

                entity.Property(e => e.OpSummary)
                    .HasMaxLength(255)
                    .HasColumnName("OP_SUMMARY");

                entity.Property(e => e.OpportunitySourceCampaign)
                    .HasMaxLength(255)
                    .HasColumnName("OPPORTUNITY_SOURCE_CAMPAIGN");

                entity.Property(e => e.OpqId).HasColumnName("OPQ_ID");

                entity.Property(e => e.OpqNumber)
                    .HasMaxLength(20)
                    .HasColumnName("OPQ_NUMBER");

                entity.Property(e => e.OpqUd1)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD1");

                entity.Property(e => e.OpqUd10)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD10");

                entity.Property(e => e.OpqUd10Bit).HasColumnName("OPQ_UD10_BIT");

                entity.Property(e => e.OpqUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_UD10_DATE");

                entity.Property(e => e.OpqUd10Id)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD10_ID");

                entity.Property(e => e.OpqUd10IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPQ_UD10_ID_HLIGHT");

                entity.Property(e => e.OpqUd10Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OPQ_UD10_NUMERIC");

                entity.Property(e => e.OpqUd11)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD11");

                entity.Property(e => e.OpqUd11Bit).HasColumnName("OPQ_UD11_BIT");

                entity.Property(e => e.OpqUd12)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD12");

                entity.Property(e => e.OpqUd12Bit).HasColumnName("OPQ_UD12_BIT");

                entity.Property(e => e.OpqUd13)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD13");

                entity.Property(e => e.OpqUd13Bit).HasColumnName("OPQ_UD13_BIT");

                entity.Property(e => e.OpqUd14)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD14");

                entity.Property(e => e.OpqUd14Bit).HasColumnName("OPQ_UD14_BIT");

                entity.Property(e => e.OpqUd15)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD15");

                entity.Property(e => e.OpqUd15Bit).HasColumnName("OPQ_UD15_BIT");

                entity.Property(e => e.OpqUd16Bit).HasColumnName("OPQ_UD16_BIT");

                entity.Property(e => e.OpqUd17Bit).HasColumnName("OPQ_UD17_BIT");

                entity.Property(e => e.OpqUd18Bit).HasColumnName("OPQ_UD18_BIT");

                entity.Property(e => e.OpqUd19Bit).HasColumnName("OPQ_UD19_BIT");

                entity.Property(e => e.OpqUd1Bit).HasColumnName("OPQ_UD1_BIT");

                entity.Property(e => e.OpqUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_UD1_DATE");

                entity.Property(e => e.OpqUd1Id)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD1_ID");

                entity.Property(e => e.OpqUd1IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPQ_UD1_ID_HLIGHT");

                entity.Property(e => e.OpqUd1Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OPQ_UD1_NUMERIC");

                entity.Property(e => e.OpqUd2)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD2");

                entity.Property(e => e.OpqUd20Bit).HasColumnName("OPQ_UD20_BIT");

                entity.Property(e => e.OpqUd21Bit).HasColumnName("OPQ_UD21_BIT");

                entity.Property(e => e.OpqUd22Bit).HasColumnName("OPQ_UD22_BIT");

                entity.Property(e => e.OpqUd23Bit).HasColumnName("OPQ_UD23_BIT");

                entity.Property(e => e.OpqUd24Bit).HasColumnName("OPQ_UD24_BIT");

                entity.Property(e => e.OpqUd2Bit).HasColumnName("OPQ_UD2_BIT");

                entity.Property(e => e.OpqUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_UD2_DATE");

                entity.Property(e => e.OpqUd2Id)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD2_ID");

                entity.Property(e => e.OpqUd2IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPQ_UD2_ID_HLIGHT");

                entity.Property(e => e.OpqUd2Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OPQ_UD2_NUMERIC");

                entity.Property(e => e.OpqUd3)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD3");

                entity.Property(e => e.OpqUd3Bit).HasColumnName("OPQ_UD3_BIT");

                entity.Property(e => e.OpqUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_UD3_DATE");

                entity.Property(e => e.OpqUd3Id)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD3_ID");

                entity.Property(e => e.OpqUd3IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPQ_UD3_ID_HLIGHT");

                entity.Property(e => e.OpqUd3Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OPQ_UD3_NUMERIC");

                entity.Property(e => e.OpqUd4)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD4");

                entity.Property(e => e.OpqUd4Bit).HasColumnName("OPQ_UD4_BIT");

                entity.Property(e => e.OpqUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_UD4_DATE");

                entity.Property(e => e.OpqUd4Id)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD4_ID");

                entity.Property(e => e.OpqUd4IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPQ_UD4_ID_HLIGHT");

                entity.Property(e => e.OpqUd4Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OPQ_UD4_NUMERIC");

                entity.Property(e => e.OpqUd5)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD5");

                entity.Property(e => e.OpqUd5Bit).HasColumnName("OPQ_UD5_BIT");

                entity.Property(e => e.OpqUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_UD5_DATE");

                entity.Property(e => e.OpqUd5Id)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD5_ID");

                entity.Property(e => e.OpqUd5IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPQ_UD5_ID_HLIGHT");

                entity.Property(e => e.OpqUd5Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OPQ_UD5_NUMERIC");

                entity.Property(e => e.OpqUd6)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD6");

                entity.Property(e => e.OpqUd6Bit).HasColumnName("OPQ_UD6_BIT");

                entity.Property(e => e.OpqUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_UD6_DATE");

                entity.Property(e => e.OpqUd6Id)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD6_ID");

                entity.Property(e => e.OpqUd6IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPQ_UD6_ID_HLIGHT");

                entity.Property(e => e.OpqUd6Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OPQ_UD6_NUMERIC");

                entity.Property(e => e.OpqUd7)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD7");

                entity.Property(e => e.OpqUd7Bit).HasColumnName("OPQ_UD7_BIT");

                entity.Property(e => e.OpqUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_UD7_DATE");

                entity.Property(e => e.OpqUd7Id)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD7_ID");

                entity.Property(e => e.OpqUd7IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPQ_UD7_ID_HLIGHT");

                entity.Property(e => e.OpqUd7Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OPQ_UD7_NUMERIC");

                entity.Property(e => e.OpqUd8)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD8");

                entity.Property(e => e.OpqUd8Bit).HasColumnName("OPQ_UD8_BIT");

                entity.Property(e => e.OpqUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_UD8_DATE");

                entity.Property(e => e.OpqUd8Id)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD8_ID");

                entity.Property(e => e.OpqUd8IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPQ_UD8_ID_HLIGHT");

                entity.Property(e => e.OpqUd8Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OPQ_UD8_NUMERIC");

                entity.Property(e => e.OpqUd9)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD9");

                entity.Property(e => e.OpqUd9Bit).HasColumnName("OPQ_UD9_BIT");

                entity.Property(e => e.OpqUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_UD9_DATE");

                entity.Property(e => e.OpqUd9Id)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD9_ID");

                entity.Property(e => e.OpqUd9IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPQ_UD9_ID_HLIGHT");

                entity.Property(e => e.OpqUd9Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OPQ_UD9_NUMERIC");

                entity.Property(e => e.OpqdDeleted).HasColumnName("OPQD_DELETED");

                entity.Property(e => e.OpqdId).HasColumnName("OPQD_ID");

                entity.Property(e => e.OpqdOrPrId).HasColumnName("OPQD_OR_PR_ID");

                entity.Property(e => e.Owner).HasColumnName("OWNER");

                entity.Property(e => e.OwnerName)
                    .HasMaxLength(255)
                    .HasColumnName("OWNER_NAME");

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.ParentSummary)
                    .HasMaxLength(255)
                    .HasColumnName("PARENT_SUMMARY");

                entity.Property(e => e.ParentType)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PARENT_TYPE");

                entity.Property(e => e.ParentTypeLabel)
                    .HasMaxLength(58)
                    .HasColumnName("PARENT_TYPE_LABEL");

                entity.Property(e => e.PfneName)
                    .HasMaxLength(255)
                    .HasColumnName("PFNE_NAME");

                entity.Property(e => e.PrId).HasColumnName("PR_ID");

                entity.Property(e => e.PrIdFk).HasColumnName("PR_ID_FK");

                entity.Property(e => e.PrUd1)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD1");

                entity.Property(e => e.PrUd10)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD10");

                entity.Property(e => e.PrUd10Bit).HasColumnName("PR_UD10_BIT");

                entity.Property(e => e.PrUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD10_DATE");

                entity.Property(e => e.PrUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD10_ID_NAME");

                entity.Property(e => e.PrUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.PrUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD10_NUMERIC");

                entity.Property(e => e.PrUd11)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD11");

                entity.Property(e => e.PrUd11Bit).HasColumnName("PR_UD11_BIT");

                entity.Property(e => e.PrUd12)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD12");

                entity.Property(e => e.PrUd12Bit).HasColumnName("PR_UD12_BIT");

                entity.Property(e => e.PrUd13)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD13");

                entity.Property(e => e.PrUd13Bit).HasColumnName("PR_UD13_BIT");

                entity.Property(e => e.PrUd14)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD14");

                entity.Property(e => e.PrUd14Bit).HasColumnName("PR_UD14_BIT");

                entity.Property(e => e.PrUd15)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD15");

                entity.Property(e => e.PrUd15Bit).HasColumnName("PR_UD15_BIT");

                entity.Property(e => e.PrUd16Bit).HasColumnName("PR_UD16_BIT");

                entity.Property(e => e.PrUd17Bit).HasColumnName("PR_UD17_BIT");

                entity.Property(e => e.PrUd18Bit).HasColumnName("PR_UD18_BIT");

                entity.Property(e => e.PrUd19Bit).HasColumnName("PR_UD19_BIT");

                entity.Property(e => e.PrUd1Bit).HasColumnName("PR_UD1_BIT");

                entity.Property(e => e.PrUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD1_DATE");

                entity.Property(e => e.PrUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD1_ID_NAME");

                entity.Property(e => e.PrUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.PrUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD1_NUMERIC");

                entity.Property(e => e.PrUd2)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD2");

                entity.Property(e => e.PrUd20Bit).HasColumnName("PR_UD20_BIT");

                entity.Property(e => e.PrUd21Bit).HasColumnName("PR_UD21_BIT");

                entity.Property(e => e.PrUd22Bit).HasColumnName("PR_UD22_BIT");

                entity.Property(e => e.PrUd23Bit).HasColumnName("PR_UD23_BIT");

                entity.Property(e => e.PrUd24Bit).HasColumnName("PR_UD24_BIT");

                entity.Property(e => e.PrUd2Bit).HasColumnName("PR_UD2_BIT");

                entity.Property(e => e.PrUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD2_DATE");

                entity.Property(e => e.PrUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD2_ID_NAME");

                entity.Property(e => e.PrUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.PrUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD2_NUMERIC");

                entity.Property(e => e.PrUd3)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD3");

                entity.Property(e => e.PrUd3Bit).HasColumnName("PR_UD3_BIT");

                entity.Property(e => e.PrUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD3_DATE");

                entity.Property(e => e.PrUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD3_ID_NAME");

                entity.Property(e => e.PrUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.PrUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD3_NUMERIC");

                entity.Property(e => e.PrUd4)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD4");

                entity.Property(e => e.PrUd4Bit).HasColumnName("PR_UD4_BIT");

                entity.Property(e => e.PrUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD4_DATE");

                entity.Property(e => e.PrUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD4_ID_NAME");

                entity.Property(e => e.PrUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.PrUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD4_NUMERIC");

                entity.Property(e => e.PrUd5)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD5");

                entity.Property(e => e.PrUd5Bit).HasColumnName("PR_UD5_BIT");

                entity.Property(e => e.PrUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD5_DATE");

                entity.Property(e => e.PrUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD5_ID_NAME");

                entity.Property(e => e.PrUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.PrUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD5_NUMERIC");

                entity.Property(e => e.PrUd6)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD6");

                entity.Property(e => e.PrUd6Bit).HasColumnName("PR_UD6_BIT");

                entity.Property(e => e.PrUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD6_DATE");

                entity.Property(e => e.PrUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD6_ID_NAME");

                entity.Property(e => e.PrUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.PrUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD6_NUMERIC");

                entity.Property(e => e.PrUd7)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD7");

                entity.Property(e => e.PrUd7Bit).HasColumnName("PR_UD7_BIT");

                entity.Property(e => e.PrUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD7_DATE");

                entity.Property(e => e.PrUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD7_ID_NAME");

                entity.Property(e => e.PrUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.PrUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD7_NUMERIC");

                entity.Property(e => e.PrUd8)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD8");

                entity.Property(e => e.PrUd8Bit).HasColumnName("PR_UD8_BIT");

                entity.Property(e => e.PrUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD8_DATE");

                entity.Property(e => e.PrUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD8_ID_NAME");

                entity.Property(e => e.PrUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.PrUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD8_NUMERIC");

                entity.Property(e => e.PrUd9)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD9");

                entity.Property(e => e.PrUd9Bit).HasColumnName("PR_UD9_BIT");

                entity.Property(e => e.PrUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD9_DATE");

                entity.Property(e => e.PrUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD9_ID_NAME");

                entity.Property(e => e.PrUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.PrUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD9_NUMERIC");

                entity.Property(e => e.Price)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PRICE");

                entity.Property(e => e.PriceDiscount)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PRICE_DISCOUNT");

                entity.Property(e => e.PriceFinal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PRICE_FINAL");

                entity.Property(e => e.PriceFinalBase).HasColumnName("PRICE_FINAL_BASE");

                entity.Property(e => e.PriceFinalLocal).HasColumnName("PRICE_FINAL_LOCAL");

                entity.Property(e => e.ProductDescription).HasColumnName("PRODUCT_DESCRIPTION");

                entity.Property(e => e.ProductGroup)
                    .HasMaxLength(255)
                    .HasColumnName("PRODUCT_GROUP");

                entity.Property(e => e.ProductItemType)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCT_ITEM_TYPE");

                entity.Property(e => e.ProductName)
                    .HasMaxLength(255)
                    .HasColumnName("PRODUCT_NAME");

                entity.Property(e => e.ProductType)
                    .HasMaxLength(255)
                    .HasColumnName("PRODUCT_TYPE");

                entity.Property(e => e.ProductTypeHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PRODUCT_TYPE_HLIGHT");

                entity.Property(e => e.Quantity)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("QUANTITY");

                entity.Property(e => e.QuoteItemDescription).HasColumnName("QUOTE_ITEM_DESCRIPTION");

                entity.Property(e => e.QuoteSummary)
                    .HasMaxLength(255)
                    .HasColumnName("QUOTE_SUMMARY");

                entity.Property(e => e.QuoteType)
                    .HasMaxLength(255)
                    .HasColumnName("QUOTE_TYPE");

                entity.Property(e => e.RateWhenAdded).HasColumnName("RATE_WHEN_ADDED");

                entity.Property(e => e.RemainingTimeUnits).HasColumnName("REMAINING_TIME_UNITS");

                entity.Property(e => e.Security)
                    .HasMaxLength(255)
                    .HasColumnName("SECURITY");

                entity.Property(e => e.SecurityId).HasColumnName("SECURITY_ID");

                entity.Property(e => e.SecurityObject)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SECURITY_OBJECT");

                entity.Property(e => e.SecurityOwner).HasColumnName("SECURITY_OWNER");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.SemName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_NAME");

                entity.Property(e => e.SemStage)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_STAGE");

                entity.Property(e => e.SembId).HasColumnName("SEMB_ID");

                entity.Property(e => e.SembName)
                    .HasMaxLength(267)
                    .HasColumnName("SEMB_NAME");

                entity.Property(e => e.SpentTimeUnits).HasColumnName("SPENT_TIME_UNITS");

                entity.Property(e => e.State)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("STATE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.SupportManager)
                    .HasMaxLength(255)
                    .HasColumnName("SUPPORT_MANAGER");

                entity.Property(e => e.TaxPercentage)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("TAX_PERCENTAGE");

                entity.Property(e => e.TimeUnitIsTime).HasColumnName("TIME_UNIT_IS_TIME");

                entity.Property(e => e.TimeUnitValue).HasColumnName("TIME_UNIT_VALUE");

                entity.Property(e => e.TimeUnitValueTotal).HasColumnName("TIME_UNIT_VALUE_TOTAL");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");

                entity.Property(e => e.UsIdSupport).HasColumnName("US_ID_SUPPORT");
            });

            modelBuilder.Entity<VProductSchedule>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vProductSchedule");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Month).HasColumnName("MONTH");

                entity.Property(e => e.Percent)
                    .HasColumnType("numeric(18, 5)")
                    .HasColumnName("PERCENT");

                entity.Property(e => e.PrId).HasColumnName("PR_ID");

                entity.Property(e => e.PrsId).HasColumnName("PRS_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<VProductTarget>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vProductTargets");

                entity.Property(e => e.Created)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CurId).HasColumnName("CUR_ID");

                entity.Property(e => e.CurSymbol)
                    .HasMaxLength(3)
                    .HasColumnName("CUR_SYMBOL");

                entity.Property(e => e.Deleted)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.OwnerId).HasColumnName("OWNER_ID");

                entity.Property(e => e.OwnerName)
                    .HasMaxLength(255)
                    .HasColumnName("OWNER_NAME");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("START_DATE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TarId).HasColumnName("TAR_ID");

                entity.Property(e => e.TarName)
                    .HasMaxLength(527)
                    .HasColumnName("TAR_NAME");

                entity.Property(e => e.TardId).HasColumnName("TARD_ID");

                entity.Property(e => e.TardName)
                    .HasMaxLength(255)
                    .HasColumnName("TARD_NAME");

                entity.Property(e => e.TargetValue)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("TARGET_VALUE");
            });

            modelBuilder.Entity<VProductTargetDef>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vProductTargetDefs");

                entity.Property(e => e.Created)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.DefaultValue)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("DEFAULT_VALUE");

                entity.Property(e => e.Deleted)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.OwnerType)
                    .HasMaxLength(50)
                    .HasColumnName("OWNER_TYPE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TardId).HasColumnName("TARD_ID");

                entity.Property(e => e.TargetType)
                    .HasMaxLength(255)
                    .HasColumnName("TARGET_TYPE");
            });

            modelBuilder.Entity<VProductsCurrency>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vProducts_Currencies");

                entity.Property(e => e.BaseExchange).HasColumnName("BASE_EXCHANGE");

                entity.Property(e => e.Code)
                    .HasMaxLength(255)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cost)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("COST");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CurId).HasColumnName("CUR_ID");

                entity.Property(e => e.CurSummary)
                    .HasMaxLength(265)
                    .HasColumnName("CUR_SUMMARY");

                entity.Property(e => e.CurrencySymbol)
                    .HasMaxLength(3)
                    .HasColumnName("CURRENCY_SYMBOL");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.Discount).HasColumnName("DISCOUNT");

                entity.Property(e => e.ExchangePrice).HasColumnName("EXCHANGE_PRICE");

                entity.Property(e => e.FneId).HasColumnName("FNE_ID");

                entity.Property(e => e.GroupName)
                    .HasMaxLength(255)
                    .HasColumnName("GROUP_NAME");

                entity.Property(e => e.Manufacturer)
                    .HasMaxLength(50)
                    .HasColumnName("MANUFACTURER");

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .HasColumnName("NAME");

                entity.Property(e => e.OffsetPercentage)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("OFFSET_PERCENTAGE");

                entity.Property(e => e.OffsetValue)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OFFSET_VALUE");

                entity.Property(e => e.PrDeleted).HasColumnName("PR_DELETED");

                entity.Property(e => e.PrExternal)
                    .HasMaxLength(255)
                    .HasColumnName("PR_EXTERNAL");

                entity.Property(e => e.PrId).HasColumnName("PR_ID");

                entity.Property(e => e.PrImport).HasColumnName("PR_IMPORT");

                entity.Property(e => e.PrSelect).HasColumnName("PR_SELECT");

                entity.Property(e => e.PrUd1)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD1");

                entity.Property(e => e.PrUd10)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD10");

                entity.Property(e => e.PrUd10Bit).HasColumnName("PR_UD10_BIT");

                entity.Property(e => e.PrUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD10_DATE");

                entity.Property(e => e.PrUd10Id).HasColumnName("PR_UD10_ID");

                entity.Property(e => e.PrUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD10_NUMERIC");

                entity.Property(e => e.PrUd11)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD11");

                entity.Property(e => e.PrUd11Bit).HasColumnName("PR_UD11_BIT");

                entity.Property(e => e.PrUd12)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD12");

                entity.Property(e => e.PrUd12Bit).HasColumnName("PR_UD12_BIT");

                entity.Property(e => e.PrUd13)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD13");

                entity.Property(e => e.PrUd13Bit).HasColumnName("PR_UD13_BIT");

                entity.Property(e => e.PrUd14)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD14");

                entity.Property(e => e.PrUd14Bit).HasColumnName("PR_UD14_BIT");

                entity.Property(e => e.PrUd15)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD15");

                entity.Property(e => e.PrUd15Bit).HasColumnName("PR_UD15_BIT");

                entity.Property(e => e.PrUd16Bit).HasColumnName("PR_UD16_BIT");

                entity.Property(e => e.PrUd17Bit).HasColumnName("PR_UD17_BIT");

                entity.Property(e => e.PrUd18Bit).HasColumnName("PR_UD18_BIT");

                entity.Property(e => e.PrUd19Bit).HasColumnName("PR_UD19_BIT");

                entity.Property(e => e.PrUd1Bit).HasColumnName("PR_UD1_BIT");

                entity.Property(e => e.PrUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD1_DATE");

                entity.Property(e => e.PrUd1Id).HasColumnName("PR_UD1_ID");

                entity.Property(e => e.PrUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD1_NUMERIC");

                entity.Property(e => e.PrUd2)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD2");

                entity.Property(e => e.PrUd20Bit).HasColumnName("PR_UD20_BIT");

                entity.Property(e => e.PrUd21Bit).HasColumnName("PR_UD21_BIT");

                entity.Property(e => e.PrUd22Bit).HasColumnName("PR_UD22_BIT");

                entity.Property(e => e.PrUd23Bit).HasColumnName("PR_UD23_BIT");

                entity.Property(e => e.PrUd24Bit).HasColumnName("PR_UD24_BIT");

                entity.Property(e => e.PrUd2Bit).HasColumnName("PR_UD2_BIT");

                entity.Property(e => e.PrUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD2_DATE");

                entity.Property(e => e.PrUd2Id).HasColumnName("PR_UD2_ID");

                entity.Property(e => e.PrUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD2_NUMERIC");

                entity.Property(e => e.PrUd3)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD3");

                entity.Property(e => e.PrUd3Bit).HasColumnName("PR_UD3_BIT");

                entity.Property(e => e.PrUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD3_DATE");

                entity.Property(e => e.PrUd3Id).HasColumnName("PR_UD3_ID");

                entity.Property(e => e.PrUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD3_NUMERIC");

                entity.Property(e => e.PrUd4)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD4");

                entity.Property(e => e.PrUd4Bit).HasColumnName("PR_UD4_BIT");

                entity.Property(e => e.PrUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD4_DATE");

                entity.Property(e => e.PrUd4Id).HasColumnName("PR_UD4_ID");

                entity.Property(e => e.PrUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD4_NUMERIC");

                entity.Property(e => e.PrUd5)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD5");

                entity.Property(e => e.PrUd5Bit).HasColumnName("PR_UD5_BIT");

                entity.Property(e => e.PrUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD5_DATE");

                entity.Property(e => e.PrUd5Id).HasColumnName("PR_UD5_ID");

                entity.Property(e => e.PrUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD5_NUMERIC");

                entity.Property(e => e.PrUd6)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD6");

                entity.Property(e => e.PrUd6Bit).HasColumnName("PR_UD6_BIT");

                entity.Property(e => e.PrUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD6_DATE");

                entity.Property(e => e.PrUd6Id).HasColumnName("PR_UD6_ID");

                entity.Property(e => e.PrUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD6_NUMERIC");

                entity.Property(e => e.PrUd7)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD7");

                entity.Property(e => e.PrUd7Bit).HasColumnName("PR_UD7_BIT");

                entity.Property(e => e.PrUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD7_DATE");

                entity.Property(e => e.PrUd7Id).HasColumnName("PR_UD7_ID");

                entity.Property(e => e.PrUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD7_NUMERIC");

                entity.Property(e => e.PrUd8)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD8");

                entity.Property(e => e.PrUd8Bit).HasColumnName("PR_UD8_BIT");

                entity.Property(e => e.PrUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD8_DATE");

                entity.Property(e => e.PrUd8Id).HasColumnName("PR_UD8_ID");

                entity.Property(e => e.PrUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD8_NUMERIC");

                entity.Property(e => e.PrUd9)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD9");

                entity.Property(e => e.PrUd9Bit).HasColumnName("PR_UD9_BIT");

                entity.Property(e => e.PrUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD9_DATE");

                entity.Property(e => e.PrUd9Id).HasColumnName("PR_UD9_ID");

                entity.Property(e => e.PrUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD9_NUMERIC");

                entity.Property(e => e.PrcId).HasColumnName("PRC_ID");

                entity.Property(e => e.PrgId).HasColumnName("PRG_ID");

                entity.Property(e => e.Price)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("PRICE");

                entity.Property(e => e.PriceList).HasColumnName("PRICE_LIST");

                entity.Property(e => e.ProductCurrencyPrice)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("PRODUCT_CURRENCY_PRICE");

                entity.Property(e => e.Quantity)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("QUANTITY");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Support)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("SUPPORT");

                entity.Property(e => e.TaxPercentage)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("TAX_PERCENTAGE");

                entity.Property(e => e.TxcId).HasColumnName("TXC_ID");

                entity.Property(e => e.TxcIdFixed).HasColumnName("TXC_ID_FIXED");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.Vat)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("VAT");
            });

            modelBuilder.Entity<VProductsGroup>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vProducts_Groups");

                entity.Property(e => e.Code)
                    .HasMaxLength(50)
                    .HasColumnName("CODE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.Discount).HasColumnName("DISCOUNT");

                entity.Property(e => e.PrgDeleted).HasColumnName("PRG_DELETED");

                entity.Property(e => e.PrgId).HasColumnName("PRG_ID");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Type)
                    .HasMaxLength(50)
                    .HasColumnName("TYPE");

                entity.Property(e => e.Ud1)
                    .HasMaxLength(255)
                    .HasColumnName("UD1");

                entity.Property(e => e.Ud10)
                    .HasMaxLength(255)
                    .HasColumnName("UD10");

                entity.Property(e => e.Ud11)
                    .HasMaxLength(255)
                    .HasColumnName("UD11");

                entity.Property(e => e.Ud12)
                    .HasMaxLength(255)
                    .HasColumnName("UD12");

                entity.Property(e => e.Ud13)
                    .HasMaxLength(255)
                    .HasColumnName("UD13");

                entity.Property(e => e.Ud14)
                    .HasMaxLength(255)
                    .HasColumnName("UD14");

                entity.Property(e => e.Ud15)
                    .HasMaxLength(255)
                    .HasColumnName("UD15");

                entity.Property(e => e.Ud2)
                    .HasMaxLength(255)
                    .HasColumnName("UD2");

                entity.Property(e => e.Ud3)
                    .HasMaxLength(255)
                    .HasColumnName("UD3");

                entity.Property(e => e.Ud4)
                    .HasMaxLength(255)
                    .HasColumnName("UD4");

                entity.Property(e => e.Ud5)
                    .HasMaxLength(255)
                    .HasColumnName("UD5");

                entity.Property(e => e.Ud6)
                    .HasMaxLength(255)
                    .HasColumnName("UD6");

                entity.Property(e => e.Ud7)
                    .HasMaxLength(255)
                    .HasColumnName("UD7");

                entity.Property(e => e.Ud8)
                    .HasMaxLength(255)
                    .HasColumnName("UD8");

                entity.Property(e => e.Ud9)
                    .HasMaxLength(255)
                    .HasColumnName("UD9");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<VProject>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vProjects");

                entity.Property(e => e.AcAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("AC_ADDRESS_1");

                entity.Property(e => e.AcAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_ADDRESS_2");

                entity.Property(e => e.AcAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("AC_ADDRESS_3");

                entity.Property(e => e.AcBillingAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_ADDRESS_1");

                entity.Property(e => e.AcBillingAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_ADDRESS_2");

                entity.Property(e => e.AcBillingAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_ADDRESS_3");

                entity.Property(e => e.AcBillingCountry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_COUNTRY");

                entity.Property(e => e.AcBillingCounty)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_COUNTY");

                entity.Property(e => e.AcBillingPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_POSTCODE");

                entity.Property(e => e.AcBillingTown)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_TOWN");

                entity.Property(e => e.AcCountry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_COUNTRY");

                entity.Property(e => e.AcCounty)
                    .HasMaxLength(255)
                    .HasColumnName("AC_COUNTY");

                entity.Property(e => e.AcExternal)
                    .HasMaxLength(255)
                    .HasColumnName("AC_EXTERNAL");

                entity.Property(e => e.AcFlag)
                    .HasMaxLength(255)
                    .HasColumnName("AC_FLAG");

                entity.Property(e => e.AcFlagHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_FLAG_HLIGHT");

                entity.Property(e => e.AcGroup)
                    .HasMaxLength(255)
                    .HasColumnName("AC_GROUP");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcIndustry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_INDUSTRY");

                entity.Property(e => e.AcIndustryHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_INDUSTRY_HLIGHT");

                entity.Property(e => e.AcLabel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LABEL");

                entity.Property(e => e.AcLabelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LABEL_HLIGHT");

                entity.Property(e => e.AcLevel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LEVEL");

                entity.Property(e => e.AcLevelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LEVEL_HLIGHT");

                entity.Property(e => e.AcMan)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MAN");

                entity.Property(e => e.AcManEmail)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MAN_EMAIL");

                entity.Property(e => e.AcManId).HasColumnName("AC_MAN_ID");

                entity.Property(e => e.AcManagerSupport)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_SUPPORT");

                entity.Property(e => e.AcManagerSupportEmail)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_SUPPORT_EMAIL");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.AcPhone1)
                    .HasMaxLength(50)
                    .HasColumnName("AC_PHONE_1");

                entity.Property(e => e.AcPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("AC_POSTCODE");

                entity.Property(e => e.AcReference)
                    .HasMaxLength(50)
                    .HasColumnName("AC_REFERENCE");

                entity.Property(e => e.AcSource)
                    .HasMaxLength(255)
                    .HasColumnName("AC_SOURCE");

                entity.Property(e => e.AcSourceHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_SOURCE_HLIGHT");

                entity.Property(e => e.AcTown)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TOWN");

                entity.Property(e => e.AcType1)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_1");

                entity.Property(e => e.AcType1Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_1_HLIGHT");

                entity.Property(e => e.AcType2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_2");

                entity.Property(e => e.AcType2Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_2_HLIGHT");

                entity.Property(e => e.AcUd10Bit).HasColumnName("AC_UD10_BIT");

                entity.Property(e => e.AcUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD10_DATE");

                entity.Property(e => e.AcUd10Id).HasColumnName("AC_UD10_ID");

                entity.Property(e => e.AcUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_ID_NAME");

                entity.Property(e => e.AcUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd10Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD10_NUMERIC");

                entity.Property(e => e.AcUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_TEXT");

                entity.Property(e => e.AcUd11Bit).HasColumnName("AC_UD11_BIT");

                entity.Property(e => e.AcUd11Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD11_TEXT");

                entity.Property(e => e.AcUd12Bit).HasColumnName("AC_UD12_BIT");

                entity.Property(e => e.AcUd12Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD12_TEXT");

                entity.Property(e => e.AcUd13Bit).HasColumnName("AC_UD13_BIT");

                entity.Property(e => e.AcUd13Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD13_TEXT");

                entity.Property(e => e.AcUd14Bit).HasColumnName("AC_UD14_BIT");

                entity.Property(e => e.AcUd14Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD14_TEXT");

                entity.Property(e => e.AcUd15Bit).HasColumnName("AC_UD15_BIT");

                entity.Property(e => e.AcUd15Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD15_TEXT");

                entity.Property(e => e.AcUd16Bit).HasColumnName("AC_UD16_BIT");

                entity.Property(e => e.AcUd17Bit).HasColumnName("AC_UD17_BIT");

                entity.Property(e => e.AcUd18Bit).HasColumnName("AC_UD18_BIT");

                entity.Property(e => e.AcUd19Bit).HasColumnName("AC_UD19_BIT");

                entity.Property(e => e.AcUd1Bit).HasColumnName("AC_UD1_BIT");

                entity.Property(e => e.AcUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD1_DATE");

                entity.Property(e => e.AcUd1Id).HasColumnName("AC_UD1_ID");

                entity.Property(e => e.AcUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_ID_NAME");

                entity.Property(e => e.AcUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd1Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD1_NUMERIC");

                entity.Property(e => e.AcUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_TEXT");

                entity.Property(e => e.AcUd20Bit).HasColumnName("AC_UD20_BIT");

                entity.Property(e => e.AcUd21Bit).HasColumnName("AC_UD21_BIT");

                entity.Property(e => e.AcUd22Bit).HasColumnName("AC_UD22_BIT");

                entity.Property(e => e.AcUd23Bit).HasColumnName("AC_UD23_BIT");

                entity.Property(e => e.AcUd24Bit).HasColumnName("AC_UD24_BIT");

                entity.Property(e => e.AcUd2Bit).HasColumnName("AC_UD2_BIT");

                entity.Property(e => e.AcUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD2_DATE");

                entity.Property(e => e.AcUd2Id).HasColumnName("AC_UD2_ID");

                entity.Property(e => e.AcUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_ID_NAME");

                entity.Property(e => e.AcUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd2Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD2_NUMERIC");

                entity.Property(e => e.AcUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_TEXT");

                entity.Property(e => e.AcUd3Bit).HasColumnName("AC_UD3_BIT");

                entity.Property(e => e.AcUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD3_DATE");

                entity.Property(e => e.AcUd3Id).HasColumnName("AC_UD3_ID");

                entity.Property(e => e.AcUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_ID_NAME");

                entity.Property(e => e.AcUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd3Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD3_NUMERIC");

                entity.Property(e => e.AcUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_TEXT");

                entity.Property(e => e.AcUd4Bit).HasColumnName("AC_UD4_BIT");

                entity.Property(e => e.AcUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD4_DATE");

                entity.Property(e => e.AcUd4Id).HasColumnName("AC_UD4_ID");

                entity.Property(e => e.AcUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_ID_NAME");

                entity.Property(e => e.AcUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd4Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD4_NUMERIC");

                entity.Property(e => e.AcUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_TEXT");

                entity.Property(e => e.AcUd5Bit).HasColumnName("AC_UD5_BIT");

                entity.Property(e => e.AcUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD5_DATE");

                entity.Property(e => e.AcUd5Id).HasColumnName("AC_UD5_ID");

                entity.Property(e => e.AcUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_ID_NAME");

                entity.Property(e => e.AcUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd5Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD5_NUMERIC");

                entity.Property(e => e.AcUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_TEXT");

                entity.Property(e => e.AcUd6Bit).HasColumnName("AC_UD6_BIT");

                entity.Property(e => e.AcUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD6_DATE");

                entity.Property(e => e.AcUd6Id).HasColumnName("AC_UD6_ID");

                entity.Property(e => e.AcUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_ID_NAME");

                entity.Property(e => e.AcUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd6Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD6_NUMERIC");

                entity.Property(e => e.AcUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_TEXT");

                entity.Property(e => e.AcUd7Bit).HasColumnName("AC_UD7_BIT");

                entity.Property(e => e.AcUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD7_DATE");

                entity.Property(e => e.AcUd7Id).HasColumnName("AC_UD7_ID");

                entity.Property(e => e.AcUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_ID_NAME");

                entity.Property(e => e.AcUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd7Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD7_NUMERIC");

                entity.Property(e => e.AcUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_TEXT");

                entity.Property(e => e.AcUd8Bit).HasColumnName("AC_UD8_BIT");

                entity.Property(e => e.AcUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD8_DATE");

                entity.Property(e => e.AcUd8Id).HasColumnName("AC_UD8_ID");

                entity.Property(e => e.AcUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_ID_NAME");

                entity.Property(e => e.AcUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd8Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD8_NUMERIC");

                entity.Property(e => e.AcUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_TEXT");

                entity.Property(e => e.AcUd9Bit).HasColumnName("AC_UD9_BIT");

                entity.Property(e => e.AcUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD9_DATE");

                entity.Property(e => e.AcUd9Id).HasColumnName("AC_UD9_ID");

                entity.Property(e => e.AcUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_ID_NAME");

                entity.Property(e => e.AcUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd9Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD9_NUMERIC");

                entity.Property(e => e.AcUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_TEXT");

                entity.Property(e => e.AccEmail)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_EMAIL");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_NAME");

                entity.Property(e => e.AccPhone)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PHONE");

                entity.Property(e => e.AccPrefEmail)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_EMAIL");

                entity.Property(e => e.AccPrefPhone)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_PHONE");

                entity.Property(e => e.AcgId).HasColumnName("ACG_ID");

                entity.Property(e => e.ActualTime).HasColumnName("ACTUAL_TIME");

                entity.Property(e => e.ActualUnits).HasColumnName("ACTUAL_UNITS");

                entity.Property(e => e.CompletionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("COMPLETION_DATE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DaysOpen).HasColumnName("DAYS_OPEN");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.EstimatedTime).HasColumnName("ESTIMATED_TIME");

                entity.Property(e => e.EstimatedUnits).HasColumnName("ESTIMATED_UNITS");

                entity.Property(e => e.ImSummary)
                    .HasMaxLength(255)
                    .HasColumnName("IM_SUMMARY");

                entity.Property(e => e.NextAction).HasColumnName("NEXT_ACTION");

                entity.Property(e => e.NextActivity).HasColumnName("NEXT_ACTIVITY");

                entity.Property(e => e.NextActivityId).HasColumnName("NEXT_ACTIVITY_ID");

                entity.Property(e => e.OpId).HasColumnName("OP_ID");

                entity.Property(e => e.Owner).HasColumnName("OWNER");

                entity.Property(e => e.PjDeleted).HasColumnName("PJ_DELETED");

                entity.Property(e => e.PjExternal)
                    .HasMaxLength(255)
                    .HasColumnName("PJ_EXTERNAL");

                entity.Property(e => e.PjFlag).HasColumnName("PJ_FLAG");

                entity.Property(e => e.PjFlagName)
                    .HasMaxLength(255)
                    .HasColumnName("PJ_FLAG_NAME");

                entity.Property(e => e.PjFlagNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJ_FLAG_NAME_HLIGHT");

                entity.Property(e => e.PjId).HasColumnName("PJ_ID");

                entity.Property(e => e.PjImport).HasColumnName("PJ_IMPORT");

                entity.Property(e => e.PjNextAction)
                    .HasMaxLength(255)
                    .HasColumnName("PJ_NEXT_ACTION");

                entity.Property(e => e.PjNextActionHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJ_NEXT_ACTION_HLIGHT");

                entity.Property(e => e.PjStage)
                    .HasMaxLength(255)
                    .HasColumnName("PJ_STAGE");

                entity.Property(e => e.PjStageHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJ_STAGE_HLIGHT");

                entity.Property(e => e.PjState)
                    .HasMaxLength(10)
                    .HasColumnName("PJ_STATE");

                entity.Property(e => e.PjUd10Bit).HasColumnName("PJ_UD10_BIT");

                entity.Property(e => e.PjUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJ_UD10_DATE");

                entity.Property(e => e.PjUd10Id).HasColumnName("PJ_UD10_ID");

                entity.Property(e => e.PjUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PJ_UD10_ID_NAME");

                entity.Property(e => e.PjUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJ_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.PjUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJ_UD10_NUMERIC");

                entity.Property(e => e.PjUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJ_UD10_TEXT");

                entity.Property(e => e.PjUd11Bit).HasColumnName("PJ_UD11_BIT");

                entity.Property(e => e.PjUd12Bit).HasColumnName("PJ_UD12_BIT");

                entity.Property(e => e.PjUd13Bit).HasColumnName("PJ_UD13_BIT");

                entity.Property(e => e.PjUd14Bit).HasColumnName("PJ_UD14_BIT");

                entity.Property(e => e.PjUd15Bit).HasColumnName("PJ_UD15_BIT");

                entity.Property(e => e.PjUd16Bit).HasColumnName("PJ_UD16_BIT");

                entity.Property(e => e.PjUd17Bit).HasColumnName("PJ_UD17_BIT");

                entity.Property(e => e.PjUd18Bit).HasColumnName("PJ_UD18_BIT");

                entity.Property(e => e.PjUd19Bit).HasColumnName("PJ_UD19_BIT");

                entity.Property(e => e.PjUd1Bit).HasColumnName("PJ_UD1_BIT");

                entity.Property(e => e.PjUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJ_UD1_DATE");

                entity.Property(e => e.PjUd1Id).HasColumnName("PJ_UD1_ID");

                entity.Property(e => e.PjUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PJ_UD1_ID_NAME");

                entity.Property(e => e.PjUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJ_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.PjUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJ_UD1_NUMERIC");

                entity.Property(e => e.PjUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJ_UD1_TEXT");

                entity.Property(e => e.PjUd20Bit).HasColumnName("PJ_UD20_BIT");

                entity.Property(e => e.PjUd21Bit).HasColumnName("PJ_UD21_BIT");

                entity.Property(e => e.PjUd22Bit).HasColumnName("PJ_UD22_BIT");

                entity.Property(e => e.PjUd23Bit).HasColumnName("PJ_UD23_BIT");

                entity.Property(e => e.PjUd24Bit).HasColumnName("PJ_UD24_BIT");

                entity.Property(e => e.PjUd2Bit).HasColumnName("PJ_UD2_BIT");

                entity.Property(e => e.PjUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJ_UD2_DATE");

                entity.Property(e => e.PjUd2Id).HasColumnName("PJ_UD2_ID");

                entity.Property(e => e.PjUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PJ_UD2_ID_NAME");

                entity.Property(e => e.PjUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJ_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.PjUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJ_UD2_NUMERIC");

                entity.Property(e => e.PjUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJ_UD2_TEXT");

                entity.Property(e => e.PjUd3Bit).HasColumnName("PJ_UD3_BIT");

                entity.Property(e => e.PjUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJ_UD3_DATE");

                entity.Property(e => e.PjUd3Id).HasColumnName("PJ_UD3_ID");

                entity.Property(e => e.PjUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PJ_UD3_ID_NAME");

                entity.Property(e => e.PjUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJ_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.PjUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJ_UD3_NUMERIC");

                entity.Property(e => e.PjUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJ_UD3_TEXT");

                entity.Property(e => e.PjUd4Bit).HasColumnName("PJ_UD4_BIT");

                entity.Property(e => e.PjUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJ_UD4_DATE");

                entity.Property(e => e.PjUd4Id).HasColumnName("PJ_UD4_ID");

                entity.Property(e => e.PjUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PJ_UD4_ID_NAME");

                entity.Property(e => e.PjUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJ_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.PjUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJ_UD4_NUMERIC");

                entity.Property(e => e.PjUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJ_UD4_TEXT");

                entity.Property(e => e.PjUd5Bit).HasColumnName("PJ_UD5_BIT");

                entity.Property(e => e.PjUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJ_UD5_DATE");

                entity.Property(e => e.PjUd5Id).HasColumnName("PJ_UD5_ID");

                entity.Property(e => e.PjUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PJ_UD5_ID_NAME");

                entity.Property(e => e.PjUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJ_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.PjUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJ_UD5_NUMERIC");

                entity.Property(e => e.PjUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJ_UD5_TEXT");

                entity.Property(e => e.PjUd6Bit).HasColumnName("PJ_UD6_BIT");

                entity.Property(e => e.PjUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJ_UD6_DATE");

                entity.Property(e => e.PjUd6Id).HasColumnName("PJ_UD6_ID");

                entity.Property(e => e.PjUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PJ_UD6_ID_NAME");

                entity.Property(e => e.PjUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJ_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.PjUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJ_UD6_NUMERIC");

                entity.Property(e => e.PjUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJ_UD6_TEXT");

                entity.Property(e => e.PjUd7Bit).HasColumnName("PJ_UD7_BIT");

                entity.Property(e => e.PjUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJ_UD7_DATE");

                entity.Property(e => e.PjUd7Id).HasColumnName("PJ_UD7_ID");

                entity.Property(e => e.PjUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PJ_UD7_ID_NAME");

                entity.Property(e => e.PjUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJ_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.PjUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJ_UD7_NUMERIC");

                entity.Property(e => e.PjUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJ_UD7_TEXT");

                entity.Property(e => e.PjUd8Bit).HasColumnName("PJ_UD8_BIT");

                entity.Property(e => e.PjUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJ_UD8_DATE");

                entity.Property(e => e.PjUd8Id).HasColumnName("PJ_UD8_ID");

                entity.Property(e => e.PjUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PJ_UD8_ID_NAME");

                entity.Property(e => e.PjUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJ_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.PjUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJ_UD8_NUMERIC");

                entity.Property(e => e.PjUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJ_UD8_TEXT");

                entity.Property(e => e.PjUd9Bit).HasColumnName("PJ_UD9_BIT");

                entity.Property(e => e.PjUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PJ_UD9_DATE");

                entity.Property(e => e.PjUd9Id).HasColumnName("PJ_UD9_ID");

                entity.Property(e => e.PjUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PJ_UD9_ID_NAME");

                entity.Property(e => e.PjUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PJ_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.PjUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PJ_UD9_NUMERIC");

                entity.Property(e => e.PjUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("PJ_UD9_TEXT");

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.SecurityGroup)
                    .HasMaxLength(255)
                    .HasColumnName("SECURITY_GROUP");

                entity.Property(e => e.SecurityId).HasColumnName("SECURITY_ID");

                entity.Property(e => e.SecurityObject)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("SECURITY_OBJECT");

                entity.Property(e => e.SecurityOwner).HasColumnName("SECURITY_OWNER");

                entity.Property(e => e.SgId).HasColumnName("SG_ID");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.SitId).HasColumnName("SIT_ID");

                entity.Property(e => e.SiteName)
                    .HasMaxLength(255)
                    .HasColumnName("SITE_NAME");

                entity.Property(e => e.Stage).HasColumnName("STAGE");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("START_DATE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsDept)
                    .HasMaxLength(128)
                    .HasColumnName("US_DEPT");

                entity.Property(e => e.UsEmail)
                    .HasMaxLength(255)
                    .HasColumnName("US_EMAIL");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");

                entity.Property(e => e.UsIdSupport).HasColumnName("US_ID_SUPPORT");

                entity.Property(e => e.UsName)
                    .HasMaxLength(255)
                    .HasColumnName("US_NAME");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");

                entity.Property(e => e.UsgName)
                    .HasMaxLength(255)
                    .HasColumnName("USG_NAME");

                entity.Property(e => e.Value)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("VALUE");
            });

            modelBuilder.Entity<VProjectActivitySecurity>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vProjectActivitySecurity");

                entity.Property(e => e.CanSeeObject).HasColumnName("CAN_SEE_OBJECT");

                entity.Property(e => e.PjId).HasColumnName("pj_id");

                entity.Property(e => e.PjaId).HasColumnName("PJA_ID");

                entity.Property(e => e.UsId).HasColumnName("us_id");

                entity.Property(e => e.UserSummary)
                    .HasMaxLength(255)
                    .HasColumnName("USER_SUMMARY");

                entity.Property(e => e.VisibilityReason)
                    .IsRequired()
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("VISIBILITY_REASON");
            });

            modelBuilder.Entity<VProjectContact>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vProjectContacts");

                entity.Property(e => e.AcAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("AC_ADDRESS_1");

                entity.Property(e => e.AcAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_ADDRESS_2");

                entity.Property(e => e.AcAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("AC_ADDRESS_3");

                entity.Property(e => e.AcBillingAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_ADDRESS_1");

                entity.Property(e => e.AcBillingAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_ADDRESS_2");

                entity.Property(e => e.AcBillingAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_ADDRESS_3");

                entity.Property(e => e.AcBillingCounty)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_COUNTY");

                entity.Property(e => e.AcBillingPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_POSTCODE");

                entity.Property(e => e.AcBillingTown)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_TOWN");

                entity.Property(e => e.AcCounty)
                    .HasMaxLength(255)
                    .HasColumnName("AC_COUNTY");

                entity.Property(e => e.AcExternal)
                    .HasMaxLength(255)
                    .HasColumnName("AC_EXTERNAL");

                entity.Property(e => e.AcFlag)
                    .HasMaxLength(255)
                    .HasColumnName("AC_FLAG");

                entity.Property(e => e.AcFlagHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_FLAG_HLIGHT");

                entity.Property(e => e.AcGroup)
                    .HasMaxLength(255)
                    .HasColumnName("AC_GROUP");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcIndustry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_INDUSTRY");

                entity.Property(e => e.AcIndustryHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_INDUSTRY_HLIGHT");

                entity.Property(e => e.AcLabel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LABEL");

                entity.Property(e => e.AcLabelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LABEL_HLIGHT");

                entity.Property(e => e.AcLevel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LEVEL");

                entity.Property(e => e.AcLevelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LEVEL_HLIGHT");

                entity.Property(e => e.AcManager)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER");

                entity.Property(e => e.AcManagerDept)
                    .HasMaxLength(128)
                    .HasColumnName("AC_MANAGER_DEPT");

                entity.Property(e => e.AcManagerEmail)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_EMAIL");

                entity.Property(e => e.AcManagerGroup)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_GROUP");

                entity.Property(e => e.AcManagerSupport)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_SUPPORT");

                entity.Property(e => e.AcManagerSupportEmail)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_SUPPORT_EMAIL");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.AcPhone1)
                    .HasMaxLength(50)
                    .HasColumnName("AC_PHONE_1");

                entity.Property(e => e.AcPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("AC_POSTCODE");

                entity.Property(e => e.AcReference)
                    .HasMaxLength(50)
                    .HasColumnName("AC_REFERENCE");

                entity.Property(e => e.AcSource)
                    .HasMaxLength(255)
                    .HasColumnName("AC_SOURCE");

                entity.Property(e => e.AcSourceHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_SOURCE_HLIGHT");

                entity.Property(e => e.AcTown)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TOWN");

                entity.Property(e => e.AcType)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE");

                entity.Property(e => e.AcType2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_2");

                entity.Property(e => e.AcType2Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_2_HLIGHT");

                entity.Property(e => e.AcTypeHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_HLIGHT");

                entity.Property(e => e.AcUd10Bit).HasColumnName("AC_UD10_BIT");

                entity.Property(e => e.AcUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD10_DATE");

                entity.Property(e => e.AcUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_ID_NAME");

                entity.Property(e => e.AcUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd10Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD10_NUMERIC");

                entity.Property(e => e.AcUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_TEXT");

                entity.Property(e => e.AcUd11Bit).HasColumnName("AC_UD11_BIT");

                entity.Property(e => e.AcUd11Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD11_TEXT");

                entity.Property(e => e.AcUd12Bit).HasColumnName("AC_UD12_BIT");

                entity.Property(e => e.AcUd12Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD12_TEXT");

                entity.Property(e => e.AcUd13Bit).HasColumnName("AC_UD13_BIT");

                entity.Property(e => e.AcUd13Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD13_TEXT");

                entity.Property(e => e.AcUd14Bit).HasColumnName("AC_UD14_BIT");

                entity.Property(e => e.AcUd14Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD14_TEXT");

                entity.Property(e => e.AcUd15Bit).HasColumnName("AC_UD15_BIT");

                entity.Property(e => e.AcUd15Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD15_TEXT");

                entity.Property(e => e.AcUd16Bit).HasColumnName("AC_UD16_BIT");

                entity.Property(e => e.AcUd17Bit).HasColumnName("AC_UD17_BIT");

                entity.Property(e => e.AcUd18Bit).HasColumnName("AC_UD18_BIT");

                entity.Property(e => e.AcUd19Bit).HasColumnName("AC_UD19_BIT");

                entity.Property(e => e.AcUd1Bit).HasColumnName("AC_UD1_BIT");

                entity.Property(e => e.AcUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD1_DATE");

                entity.Property(e => e.AcUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_ID_NAME");

                entity.Property(e => e.AcUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd1Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD1_NUMERIC");

                entity.Property(e => e.AcUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_TEXT");

                entity.Property(e => e.AcUd20Bit).HasColumnName("AC_UD20_BIT");

                entity.Property(e => e.AcUd21Bit).HasColumnName("AC_UD21_BIT");

                entity.Property(e => e.AcUd22Bit).HasColumnName("AC_UD22_BIT");

                entity.Property(e => e.AcUd23Bit).HasColumnName("AC_UD23_BIT");

                entity.Property(e => e.AcUd24Bit).HasColumnName("AC_UD24_BIT");

                entity.Property(e => e.AcUd2Bit).HasColumnName("AC_UD2_BIT");

                entity.Property(e => e.AcUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD2_DATE");

                entity.Property(e => e.AcUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_ID_NAME");

                entity.Property(e => e.AcUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd2Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD2_NUMERIC");

                entity.Property(e => e.AcUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_TEXT");

                entity.Property(e => e.AcUd3Bit).HasColumnName("AC_UD3_BIT");

                entity.Property(e => e.AcUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD3_DATE");

                entity.Property(e => e.AcUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_ID_NAME");

                entity.Property(e => e.AcUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd3Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD3_NUMERIC");

                entity.Property(e => e.AcUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_TEXT");

                entity.Property(e => e.AcUd4Bit).HasColumnName("AC_UD4_BIT");

                entity.Property(e => e.AcUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD4_DATE");

                entity.Property(e => e.AcUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_ID_NAME");

                entity.Property(e => e.AcUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd4Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD4_NUMERIC");

                entity.Property(e => e.AcUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_TEXT");

                entity.Property(e => e.AcUd5Bit).HasColumnName("AC_UD5_BIT");

                entity.Property(e => e.AcUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD5_DATE");

                entity.Property(e => e.AcUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_ID_NAME");

                entity.Property(e => e.AcUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd5Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD5_NUMERIC");

                entity.Property(e => e.AcUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_TEXT");

                entity.Property(e => e.AcUd6Bit).HasColumnName("AC_UD6_BIT");

                entity.Property(e => e.AcUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD6_DATE");

                entity.Property(e => e.AcUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_ID_NAME");

                entity.Property(e => e.AcUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd6Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD6_NUMERIC");

                entity.Property(e => e.AcUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_TEXT");

                entity.Property(e => e.AcUd7Bit).HasColumnName("AC_UD7_BIT");

                entity.Property(e => e.AcUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD7_DATE");

                entity.Property(e => e.AcUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_ID_NAME");

                entity.Property(e => e.AcUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd7Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD7_NUMERIC");

                entity.Property(e => e.AcUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_TEXT");

                entity.Property(e => e.AcUd8Bit).HasColumnName("AC_UD8_BIT");

                entity.Property(e => e.AcUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD8_DATE");

                entity.Property(e => e.AcUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_ID_NAME");

                entity.Property(e => e.AcUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd8Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD8_NUMERIC");

                entity.Property(e => e.AcUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_TEXT");

                entity.Property(e => e.AcUd9Bit).HasColumnName("AC_UD9_BIT");

                entity.Property(e => e.AcUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD9_DATE");

                entity.Property(e => e.AcUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_ID_NAME");

                entity.Property(e => e.AcUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd9Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD9_NUMERIC");

                entity.Property(e => e.AcUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_TEXT");

                entity.Property(e => e.AccDeleted).HasColumnName("ACC_DELETED");

                entity.Property(e => e.AccExternal)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_EXTERNAL");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccImport).HasColumnName("ACC_IMPORT");

                entity.Property(e => e.AccPrefAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_ADDRESS_1");

                entity.Property(e => e.AccPrefAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_ADDRESS_2");

                entity.Property(e => e.AccPrefAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_ADDRESS_3");

                entity.Property(e => e.AccPrefCountry)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_COUNTRY");

                entity.Property(e => e.AccPrefCounty)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_COUNTY");

                entity.Property(e => e.AccPrefEmail)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_EMAIL");

                entity.Property(e => e.AccPrefPhone)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_PHONE");

                entity.Property(e => e.AccPrefPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_POSTCODE");

                entity.Property(e => e.AccPrefTown)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_TOWN");

                entity.Property(e => e.AccRole)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_ROLE");

                entity.Property(e => e.AccStatus).HasColumnName("ACC_STATUS");

                entity.Property(e => e.AccUd1)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD1");

                entity.Property(e => e.AccUd10)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD10");

                entity.Property(e => e.AccUd10Bit).HasColumnName("ACC_UD10_BIT");

                entity.Property(e => e.AccUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD10_DATE");

                entity.Property(e => e.AccUd10Id).HasColumnName("ACC_UD10_ID");

                entity.Property(e => e.AccUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD10_ID_NAME");

                entity.Property(e => e.AccUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD10_NUMERIC");

                entity.Property(e => e.AccUd11)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD11");

                entity.Property(e => e.AccUd11Bit).HasColumnName("ACC_UD11_BIT");

                entity.Property(e => e.AccUd12)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD12");

                entity.Property(e => e.AccUd12Bit).HasColumnName("ACC_UD12_BIT");

                entity.Property(e => e.AccUd13)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD13");

                entity.Property(e => e.AccUd13Bit).HasColumnName("ACC_UD13_BIT");

                entity.Property(e => e.AccUd14)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD14");

                entity.Property(e => e.AccUd14Bit).HasColumnName("ACC_UD14_BIT");

                entity.Property(e => e.AccUd15)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD15");

                entity.Property(e => e.AccUd15Bit).HasColumnName("ACC_UD15_BIT");

                entity.Property(e => e.AccUd16Bit).HasColumnName("ACC_UD16_BIT");

                entity.Property(e => e.AccUd17Bit).HasColumnName("ACC_UD17_BIT");

                entity.Property(e => e.AccUd18Bit).HasColumnName("ACC_UD18_BIT");

                entity.Property(e => e.AccUd19Bit).HasColumnName("ACC_UD19_BIT");

                entity.Property(e => e.AccUd1Bit).HasColumnName("ACC_UD1_BIT");

                entity.Property(e => e.AccUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD1_DATE");

                entity.Property(e => e.AccUd1Id).HasColumnName("ACC_UD1_ID");

                entity.Property(e => e.AccUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD1_ID_NAME");

                entity.Property(e => e.AccUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD1_NUMERIC");

                entity.Property(e => e.AccUd2)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD2");

                entity.Property(e => e.AccUd20Bit).HasColumnName("ACC_UD20_BIT");

                entity.Property(e => e.AccUd21Bit).HasColumnName("ACC_UD21_BIT");

                entity.Property(e => e.AccUd22Bit).HasColumnName("ACC_UD22_BIT");

                entity.Property(e => e.AccUd23Bit).HasColumnName("ACC_UD23_BIT");

                entity.Property(e => e.AccUd24Bit).HasColumnName("ACC_UD24_BIT");

                entity.Property(e => e.AccUd2Bit).HasColumnName("ACC_UD2_BIT");

                entity.Property(e => e.AccUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD2_DATE");

                entity.Property(e => e.AccUd2Id).HasColumnName("ACC_UD2_ID");

                entity.Property(e => e.AccUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD2_ID_NAME");

                entity.Property(e => e.AccUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD2_NUMERIC");

                entity.Property(e => e.AccUd3)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD3");

                entity.Property(e => e.AccUd3Bit).HasColumnName("ACC_UD3_BIT");

                entity.Property(e => e.AccUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD3_DATE");

                entity.Property(e => e.AccUd3Id).HasColumnName("ACC_UD3_ID");

                entity.Property(e => e.AccUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD3_ID_NAME");

                entity.Property(e => e.AccUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD3_NUMERIC");

                entity.Property(e => e.AccUd4)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD4");

                entity.Property(e => e.AccUd4Bit).HasColumnName("ACC_UD4_BIT");

                entity.Property(e => e.AccUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD4_DATE");

                entity.Property(e => e.AccUd4Id).HasColumnName("ACC_UD4_ID");

                entity.Property(e => e.AccUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD4_ID_NAME");

                entity.Property(e => e.AccUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD4_NUMERIC");

                entity.Property(e => e.AccUd5)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD5");

                entity.Property(e => e.AccUd5Bit).HasColumnName("ACC_UD5_BIT");

                entity.Property(e => e.AccUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD5_DATE");

                entity.Property(e => e.AccUd5Id).HasColumnName("ACC_UD5_ID");

                entity.Property(e => e.AccUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD5_ID_NAME");

                entity.Property(e => e.AccUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD5_NUMERIC");

                entity.Property(e => e.AccUd6)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD6");

                entity.Property(e => e.AccUd6Bit).HasColumnName("ACC_UD6_BIT");

                entity.Property(e => e.AccUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD6_DATE");

                entity.Property(e => e.AccUd6Id).HasColumnName("ACC_UD6_ID");

                entity.Property(e => e.AccUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD6_ID_NAME");

                entity.Property(e => e.AccUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD6_NUMERIC");

                entity.Property(e => e.AccUd7)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD7");

                entity.Property(e => e.AccUd7Bit).HasColumnName("ACC_UD7_BIT");

                entity.Property(e => e.AccUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD7_DATE");

                entity.Property(e => e.AccUd7Id).HasColumnName("ACC_UD7_ID");

                entity.Property(e => e.AccUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD7_ID_NAME");

                entity.Property(e => e.AccUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD7_NUMERIC");

                entity.Property(e => e.AccUd8)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD8");

                entity.Property(e => e.AccUd8Bit).HasColumnName("ACC_UD8_BIT");

                entity.Property(e => e.AccUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD8_DATE");

                entity.Property(e => e.AccUd8Id).HasColumnName("ACC_UD8_ID");

                entity.Property(e => e.AccUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD8_ID_NAME");

                entity.Property(e => e.AccUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD8_NUMERIC");

                entity.Property(e => e.AccUd9)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD9");

                entity.Property(e => e.AccUd9Bit).HasColumnName("ACC_UD9_BIT");

                entity.Property(e => e.AccUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD9_DATE");

                entity.Property(e => e.AccUd9Id).HasColumnName("ACC_UD9_ID");

                entity.Property(e => e.AccUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD9_ID_NAME");

                entity.Property(e => e.AccUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD9_NUMERIC");

                entity.Property(e => e.Account).HasMaxLength(255);

                entity.Property(e => e.AccountName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_NAME");

                entity.Property(e => e.AcgId).HasColumnName("ACG_ID");

                entity.Property(e => e.Anniversary).HasMaxLength(255);

                entity.Property(e => e.AssistantTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Assistantname).HasMaxLength(255);

                entity.Property(e => e.BillingInformation).HasMaxLength(255);

                entity.Property(e => e.Birthday).HasMaxLength(255);

                entity.Property(e => e.Business2TelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.BusinessAddress).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressCity).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressCountry).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressState).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.BusinessAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.BusinessFaxNumber).HasMaxLength(255);

                entity.Property(e => e.BusinessFaxNumberFormatted).HasMaxLength(267);

                entity.Property(e => e.BusinessHomePage).HasMaxLength(255);

                entity.Property(e => e.BusinessTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.CallbackTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.CarTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Categories).HasMaxLength(500);

                entity.Property(e => e.Children).HasMaxLength(255);

                entity.Property(e => e.Companies).HasMaxLength(255);

                entity.Property(e => e.CompanyAndFullName).HasMaxLength(255);

                entity.Property(e => e.CompanyLastFirstNoSpace).HasMaxLength(255);

                entity.Property(e => e.CompanyLastFirstSpaceOnly).HasMaxLength(255);

                entity.Property(e => e.CompanyMainTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.CompanyName).HasMaxLength(255);

                entity.Property(e => e.ComputerNetworkName).HasMaxLength(255);

                entity.Property(e => e.ConnectOptIn).HasColumnName("CONNECT_OPT_IN");

                entity.Property(e => e.ConnectOptInDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CONNECT_OPT_IN_DATE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CreationTime).HasMaxLength(255);

                entity.Property(e => e.DeleteText)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DELETE_TEXT");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Department).HasMaxLength(255);

                entity.Property(e => e.Email1Address).HasMaxLength(255);

                entity.Property(e => e.Email1AddressType).HasMaxLength(255);

                entity.Property(e => e.Email1DisplayName).HasMaxLength(255);

                entity.Property(e => e.Email1EntryId)
                    .HasMaxLength(255)
                    .HasColumnName("Email1EntryID");

                entity.Property(e => e.Email2Address).HasMaxLength(255);

                entity.Property(e => e.Email2AddressType).HasMaxLength(255);

                entity.Property(e => e.Email2DisplayName).HasMaxLength(255);

                entity.Property(e => e.Email2EntryId)
                    .HasMaxLength(255)
                    .HasColumnName("Email2EntryID");

                entity.Property(e => e.Email3Address).HasMaxLength(255);

                entity.Property(e => e.Email3AddressType).HasMaxLength(255);

                entity.Property(e => e.Email3DisplayName).HasMaxLength(255);

                entity.Property(e => e.Email3EntryId)
                    .HasMaxLength(255)
                    .HasColumnName("Email3EntryID");

                entity.Property(e => e.Exported).HasColumnName("EXPORTED");

                entity.Property(e => e.FacebookImage)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_IMAGE");

                entity.Property(e => e.FacebookName)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_NAME");

                entity.Property(e => e.FacebookPrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_PRIVATE_ID");

                entity.Property(e => e.FacebookProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_PROFILE_URL");

                entity.Property(e => e.FacebookPublicId)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_PUBLIC_ID");

                entity.Property(e => e.FirstName).HasMaxLength(255);

                entity.Property(e => e.Ftpsite)
                    .HasMaxLength(255)
                    .HasColumnName("FTPSite");

                entity.Property(e => e.FullName).HasMaxLength(255);

                entity.Property(e => e.FullNameAndCompany).HasMaxLength(255);

                entity.Property(e => e.GplusImage)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_IMAGE");

                entity.Property(e => e.GplusName)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_NAME");

                entity.Property(e => e.GplusPrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_PRIVATE_ID");

                entity.Property(e => e.GplusProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_PROFILE_URL");

                entity.Property(e => e.GplusPublicId)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_PUBLIC_ID");

                entity.Property(e => e.Hobby).HasMaxLength(255);

                entity.Property(e => e.Home2TelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.HomeAddress).HasMaxLength(255);

                entity.Property(e => e.HomeAddressCity).HasMaxLength(255);

                entity.Property(e => e.HomeAddressCountry).HasMaxLength(255);

                entity.Property(e => e.HomeAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.HomeAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.HomeAddressState).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.HomeAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.HomeFaxNumber).HasMaxLength(255);

                entity.Property(e => e.HomeFaxNumberFormatted).HasMaxLength(267);

                entity.Property(e => e.HomeTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.ImSummary)
                    .HasMaxLength(255)
                    .HasColumnName("IM_SUMMARY");

                entity.Property(e => e.Initials).HasMaxLength(255);

                entity.Property(e => e.InternetFreeBusyAddress).HasMaxLength(255);

                entity.Property(e => e.Isdnnumber)
                    .HasMaxLength(255)
                    .HasColumnName("ISDNNumber");

                entity.Property(e => e.JobTitle).HasMaxLength(255);

                entity.Property(e => e.LastFirstAndSuffix).HasMaxLength(255);

                entity.Property(e => e.LastFirstNoSpaceCompany).HasMaxLength(255);

                entity.Property(e => e.LastFirstSpaceOnly).HasMaxLength(255);

                entity.Property(e => e.LastFirstSpaceOnlyCompany).HasMaxLength(255);

                entity.Property(e => e.LastModificationTime).HasMaxLength(255);

                entity.Property(e => e.LastName).HasMaxLength(255);

                entity.Property(e => e.LastNameAndFirstName).HasMaxLength(255);

                entity.Property(e => e.LinkedinImage)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_IMAGE");

                entity.Property(e => e.LinkedinName)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_NAME");

                entity.Property(e => e.LinkedinPrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_PRIVATE_ID");

                entity.Property(e => e.LinkedinProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_PROFILE_URL");

                entity.Property(e => e.LinkedinPublicId)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_PUBLIC_ID");

                entity.Property(e => e.LnkId).HasColumnName("LNK_ID");

                entity.Property(e => e.MailingAddress).HasMaxLength(255);

                entity.Property(e => e.MailingAddressCity).HasMaxLength(255);

                entity.Property(e => e.MailingAddressCountry).HasMaxLength(255);

                entity.Property(e => e.MailingAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.MailingAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.MailingAddressState).HasMaxLength(255);

                entity.Property(e => e.MailingAddressStreet).HasMaxLength(255);

                entity.Property(e => e.MailingAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.MailingAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.ManagerName).HasMaxLength(255);

                entity.Property(e => e.MiddleName).HasMaxLength(255);

                entity.Property(e => e.Mileage).HasMaxLength(255);

                entity.Property(e => e.MobileTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.NetMeetingAlias).HasMaxLength(255);

                entity.Property(e => e.NetMeetingServer).HasMaxLength(255);

                entity.Property(e => e.NickName).HasMaxLength(255);

                entity.Property(e => e.OfficeLocation).HasMaxLength(255);

                entity.Property(e => e.OtherAddress).HasMaxLength(255);

                entity.Property(e => e.OtherAddressCity).HasMaxLength(255);

                entity.Property(e => e.OtherAddressCountry).HasMaxLength(255);

                entity.Property(e => e.OtherAddressPostOfficeBox).HasMaxLength(255);

                entity.Property(e => e.OtherAddressPostalCode).HasMaxLength(255);

                entity.Property(e => e.OtherAddressState).HasMaxLength(255);

                entity.Property(e => e.OtherAddressStreet).HasMaxLength(255);

                entity.Property(e => e.OtherAddressStreet2).HasMaxLength(255);

                entity.Property(e => e.OtherAddressStreet3).HasMaxLength(255);

                entity.Property(e => e.OtherFaxNumber).HasMaxLength(255);

                entity.Property(e => e.OtherTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.PersonalHomePage).HasMaxLength(255);

                entity.Property(e => e.PjId).HasColumnName("PJ_ID");

                entity.Property(e => e.PrefAddress).HasColumnName("PREF_ADDRESS");

                entity.Property(e => e.PrefEmail).HasColumnName("PREF_EMAIL");

                entity.Property(e => e.PrefPhone).HasColumnName("PREF_PHONE");

                entity.Property(e => e.PreferredContact).HasColumnName("PREFERRED_CONTACT");

                entity.Property(e => e.PreferredContactEmail).HasColumnName("PREFERRED_CONTACT_EMAIL");

                entity.Property(e => e.PreferredContactFax).HasColumnName("PREFERRED_CONTACT_FAX");

                entity.Property(e => e.PreferredContactLetter).HasColumnName("PREFERRED_CONTACT_LETTER");

                entity.Property(e => e.PreferredContactPhone).HasColumnName("PREFERRED_CONTACT_PHONE");

                entity.Property(e => e.PrimaryContact).HasColumnName("PRIMARY_CONTACT");

                entity.Property(e => e.PrimaryTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.PrivacyNotified).HasColumnName("PRIVACY_NOTIFIED");

                entity.Property(e => e.PrivacyNotifiedBy)
                    .HasMaxLength(255)
                    .HasColumnName("PRIVACY_NOTIFIED_BY");

                entity.Property(e => e.PrivacyNotifiedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRIVACY_NOTIFIED_DATE");

                entity.Property(e => e.PrivacyNotifiedMethod)
                    .HasMaxLength(255)
                    .HasColumnName("PRIVACY_NOTIFIED_METHOD");

                entity.Property(e => e.Profession).HasMaxLength(255);

                entity.Property(e => e.RadioTelephoneNumber).HasMaxLength(255);

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.ReferredBy).HasMaxLength(255);

                entity.Property(e => e.RemovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("REMOVAL_DATE");

                entity.Property(e => e.Salutation)
                    .HasMaxLength(255)
                    .HasColumnName("SALUTATION");

                entity.Property(e => e.SelectedMailingAddress).HasMaxLength(255);

                entity.Property(e => e.Sensitivity).HasMaxLength(255);

                entity.Property(e => e.Spouse).HasMaxLength(255);

                entity.Property(e => e.State)
                    .HasMaxLength(10)
                    .HasColumnName("STATE");

                entity.Property(e => e.Status)
                    .HasMaxLength(255)
                    .HasColumnName("STATUS");

                entity.Property(e => e.Subject).HasMaxLength(255);

                entity.Property(e => e.Suffix).HasMaxLength(255);

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TelexNumber).HasMaxLength(255);

                entity.Property(e => e.Title).HasMaxLength(255);

                entity.Property(e => e.TtytddtelephoneNumber)
                    .HasMaxLength(255)
                    .HasColumnName("TTYTDDTelephoneNumber");

                entity.Property(e => e.Twitter1Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_IMAGE");

                entity.Property(e => e.Twitter1Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_NAME");

                entity.Property(e => e.Twitter1PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_PRIVATE_ID");

                entity.Property(e => e.Twitter1ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_PROFILE_URL");

                entity.Property(e => e.Twitter1PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_PUBLIC_ID");

                entity.Property(e => e.Twitter2Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_IMAGE");

                entity.Property(e => e.Twitter2Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_NAME");

                entity.Property(e => e.Twitter2PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_PRIVATE_ID");

                entity.Property(e => e.Twitter2ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_PROFILE_URL");

                entity.Property(e => e.Twitter2PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_PUBLIC_ID");

                entity.Property(e => e.Twitter3Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_IMAGE");

                entity.Property(e => e.Twitter3Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_NAME");

                entity.Property(e => e.Twitter3PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_PRIVATE_ID");

                entity.Property(e => e.Twitter3ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_PROFILE_URL");

                entity.Property(e => e.Twitter3PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_PUBLIC_ID");

                entity.Property(e => e.Twitter4Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_IMAGE");

                entity.Property(e => e.Twitter4Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_NAME");

                entity.Property(e => e.Twitter4PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_PRIVATE_ID");

                entity.Property(e => e.Twitter4ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_PROFILE_URL");

                entity.Property(e => e.Twitter4PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_PUBLIC_ID");

                entity.Property(e => e.Twitter5Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_IMAGE");

                entity.Property(e => e.Twitter5Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_NAME");

                entity.Property(e => e.Twitter5PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_PRIVATE_ID");

                entity.Property(e => e.Twitter5ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_PROFILE_URL");

                entity.Property(e => e.Twitter5PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_PUBLIC_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");

                entity.Property(e => e.UsIdSupport).HasColumnName("US_ID_SUPPORT");

                entity.Property(e => e.UsName)
                    .HasMaxLength(255)
                    .HasColumnName("US_NAME");

                entity.Property(e => e.UsgName)
                    .HasMaxLength(255)
                    .HasColumnName("USG_NAME");

                entity.Property(e => e.WebPage).HasMaxLength(255);

                entity.Property(e => e.YomiCompanyName).HasMaxLength(255);

                entity.Property(e => e.YomiFirstName).HasMaxLength(255);

                entity.Property(e => e.YomiLastName).HasMaxLength(255);
            });

            modelBuilder.Entity<VProjectSecurity>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vProjectSecurity");

                entity.Property(e => e.CanSeeObject).HasColumnName("CAN_SEE_OBJECT");

                entity.Property(e => e.PjId).HasColumnName("PJ_ID");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UserSummary)
                    .HasMaxLength(255)
                    .HasColumnName("USER_SUMMARY");

                entity.Property(e => e.VisibilityReason)
                    .IsRequired()
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("VISIBILITY_REASON");
            });

            modelBuilder.Entity<VProjectsTimeUnitsRecord>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vProjectsTimeUnitsRecord");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccountSummary)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_SUMMARY");

                entity.Property(e => e.AcoId).HasColumnName("ACO_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DateRecorded)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_RECORDED");

                entity.Property(e => e.Description)
                    .HasMaxLength(4000)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.OpqdId).HasColumnName("OPQD_ID");

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.ParentItem)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("PARENT_ITEM");

                entity.Property(e => e.ParentSummary)
                    .HasMaxLength(255)
                    .HasColumnName("PARENT_SUMMARY");

                entity.Property(e => e.PjId).HasColumnName("PJ_ID");

                entity.Property(e => e.PjaId).HasColumnName("PJA_ID");

                entity.Property(e => e.QuoteDetailSummary)
                    .HasMaxLength(255)
                    .HasColumnName("QUOTE_DETAIL_SUMMARY");

                entity.Property(e => e.RecordUserSummary)
                    .HasMaxLength(255)
                    .HasColumnName("RECORD_USER_SUMMARY");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TimeUnitIsTime).HasColumnName("TIME_UNIT_IS_TIME");

                entity.Property(e => e.TimeUnitValue).HasColumnName("TIME_UNIT_VALUE");

                entity.Property(e => e.TurId).HasColumnName("TUR_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UserTeamName)
                    .HasMaxLength(255)
                    .HasColumnName("USER_TEAM_NAME");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");
            });

            modelBuilder.Entity<VRawDropOption>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vRawDropOptions");

                entity.Property(e => e.DroHlight)
                    .HasMaxLength(100)
                    .HasColumnName("DRO_HLIGHT");

                entity.Property(e => e.DroId).HasColumnName("DRO_ID");

                entity.Property(e => e.DroSummary)
                    .HasMaxLength(255)
                    .HasColumnName("DRO_SUMMARY");
            });

            modelBuilder.Entity<VReadyEventbriteJob>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vReadyEventbriteJobs");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.Command)
                    .HasMaxLength(255)
                    .HasColumnName("COMMAND");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.FneId).HasColumnName("FNE_ID");

                entity.Property(e => e.JobId).HasColumnName("JOB_ID");

                entity.Property(e => e.JobTypeId).HasColumnName("JOB_TYPE_ID");

                entity.Property(e => e.Jobstatus).HasColumnName("JOBSTATUS");

                entity.Property(e => e.ObjId)
                    .HasMaxLength(50)
                    .HasColumnName("OBJ_ID");

                entity.Property(e => e.ObjectType)
                    .HasMaxLength(50)
                    .HasColumnName("OBJECT_TYPE");

                entity.Property(e => e.Result)
                    .HasMaxLength(255)
                    .HasColumnName("RESULT");

                entity.Property(e => e.RunAfter)
                    .HasColumnType("datetime")
                    .HasColumnName("RUN_AFTER");

                entity.Property(e => e.RunDate)
                    .HasColumnType("datetime")
                    .HasColumnName("RUN_DATE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<VReport>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vReports");

                entity.Property(e => e.AcGroup)
                    .HasMaxLength(255)
                    .HasColumnName("AC_GROUP");

                entity.Property(e => e.AccessOptionName)
                    .HasMaxLength(50)
                    .HasColumnName("ACCESS_OPTION_NAME");

                entity.Property(e => e.AcoId).HasColumnName("ACO_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.NotLegacy).HasColumnName("NOT_LEGACY");

                entity.Property(e => e.NotSrs).HasColumnName("NOT_SRS");

                entity.Property(e => e.OwnerName)
                    .HasMaxLength(255)
                    .HasColumnName("OWNER_NAME");

                entity.Property(e => e.ReId).HasColumnName("RE_ID");

                entity.Property(e => e.ReIdStandardnull).HasColumnName("RE_ID_STANDARDNULL");

                entity.Property(e => e.ReIdValidChart).HasColumnName("RE_ID_VALID_CHART");

                entity.Property(e => e.ReOwner).HasColumnName("RE_OWNER");

                entity.Property(e => e.ReQuery).HasColumnName("RE_QUERY");

                entity.Property(e => e.ReType)
                    .HasMaxLength(255)
                    .HasColumnName("RE_TYPE");

                entity.Property(e => e.ReportArea)
                    .HasMaxLength(255)
                    .HasColumnName("REPORT_AREA");

                entity.Property(e => e.ReportType)
                    .HasMaxLength(32)
                    .HasColumnName("REPORT_TYPE")
                    .UseCollation("Latin1_General_CI_AS");

                entity.Property(e => e.Run)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("RUN");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.SystemReport).HasColumnName("SYSTEM_REPORT");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");
            });

            modelBuilder.Entity<VReportProductsForecast>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vReportProductsForecast");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.ActualClose)
                    .HasColumnType("datetime")
                    .HasColumnName("ACTUAL_CLOSE");

                entity.Property(e => e.AddToForecast).HasColumnName("ADD_TO_FORECAST");

                entity.Property(e => e.AddToOpportunity).HasColumnName("ADD_TO_OPPORTUNITY");

                entity.Property(e => e.Code)
                    .HasMaxLength(50)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cost)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("COST");

                entity.Property(e => e.Discount).HasColumnName("DISCOUNT");

                entity.Property(e => e.EstimatedClose)
                    .HasColumnType("datetime")
                    .HasColumnName("ESTIMATED_CLOSE");

                entity.Property(e => e.OpDeleted).HasColumnName("OP_DELETED");

                entity.Property(e => e.Opportunity)
                    .HasMaxLength(255)
                    .HasColumnName("OPPORTUNITY");

                entity.Property(e => e.OpqDeleted).HasColumnName("OPQ_DELETED");

                entity.Property(e => e.OpqdDeleted).HasColumnName("OPQD_DELETED");

                entity.Property(e => e.PrId).HasColumnName("PR_ID");

                entity.Property(e => e.PrgId).HasColumnName("PRG_ID");

                entity.Property(e => e.Price)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PRICE");

                entity.Property(e => e.PriceDiscount)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PRICE_DISCOUNT");

                entity.Property(e => e.PriceFinal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PRICE_FINAL");

                entity.Property(e => e.Product)
                    .HasMaxLength(255)
                    .HasColumnName("PRODUCT");

                entity.Property(e => e.ProductGroup)
                    .HasMaxLength(255)
                    .HasColumnName("PRODUCT_GROUP");

                entity.Property(e => e.Quantity)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("QUANTITY");
            });

            modelBuilder.Entity<VSalesAll>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vSalesAll");

                entity.Property(e => e.AcBillingCountry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_COUNTRY");

                entity.Property(e => e.AcBillingCounty)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_COUNTY");

                entity.Property(e => e.AcBillingPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_POSTCODE");

                entity.Property(e => e.AcBillingTown)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_TOWN");

                entity.Property(e => e.AcCountry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_COUNTRY");

                entity.Property(e => e.AcCounty)
                    .HasMaxLength(255)
                    .HasColumnName("AC_COUNTY");

                entity.Property(e => e.AcFlag)
                    .HasMaxLength(255)
                    .HasColumnName("AC_FLAG");

                entity.Property(e => e.AcFlagHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_FLAG_HLIGHT");

                entity.Property(e => e.AcGroup)
                    .HasMaxLength(255)
                    .HasColumnName("AC_GROUP");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcIndustry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_INDUSTRY");

                entity.Property(e => e.AcIndustryHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_INDUSTRY_HLIGHT");

                entity.Property(e => e.AcLabel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LABEL");

                entity.Property(e => e.AcLabelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LABEL_HLIGHT");

                entity.Property(e => e.AcLevel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LEVEL");

                entity.Property(e => e.AcLevelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LEVEL_HLIGHT");

                entity.Property(e => e.AcManagerSupport)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_SUPPORT");

                entity.Property(e => e.AcManagerSupportEmail)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_SUPPORT_EMAIL");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.AcPhone1)
                    .HasMaxLength(50)
                    .HasColumnName("AC_PHONE_1");

                entity.Property(e => e.AcPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("AC_POSTCODE");

                entity.Property(e => e.AcReference)
                    .HasMaxLength(50)
                    .HasColumnName("AC_REFERENCE");

                entity.Property(e => e.AcSource)
                    .HasMaxLength(255)
                    .HasColumnName("AC_SOURCE");

                entity.Property(e => e.AcSourceHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_SOURCE_HLIGHT");

                entity.Property(e => e.AcTown)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TOWN");

                entity.Property(e => e.AcType1)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_1");

                entity.Property(e => e.AcType1Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_1_HLIGHT");

                entity.Property(e => e.AcType2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_2");

                entity.Property(e => e.AcType2Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_2_HLIGHT");

                entity.Property(e => e.AcUd10Bit).HasColumnName("AC_UD10_BIT");

                entity.Property(e => e.AcUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD10_DATE");

                entity.Property(e => e.AcUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_ID_NAME");

                entity.Property(e => e.AcUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd10Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD10_NUMERIC");

                entity.Property(e => e.AcUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_TEXT");

                entity.Property(e => e.AcUd11Bit).HasColumnName("AC_UD11_BIT");

                entity.Property(e => e.AcUd11Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD11_TEXT");

                entity.Property(e => e.AcUd12Bit).HasColumnName("AC_UD12_BIT");

                entity.Property(e => e.AcUd12Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD12_TEXT");

                entity.Property(e => e.AcUd13Bit).HasColumnName("AC_UD13_BIT");

                entity.Property(e => e.AcUd13Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD13_TEXT");

                entity.Property(e => e.AcUd14Bit).HasColumnName("AC_UD14_BIT");

                entity.Property(e => e.AcUd14Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD14_TEXT");

                entity.Property(e => e.AcUd15Bit).HasColumnName("AC_UD15_BIT");

                entity.Property(e => e.AcUd15Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD15_TEXT");

                entity.Property(e => e.AcUd16Bit).HasColumnName("AC_UD16_BIT");

                entity.Property(e => e.AcUd17Bit).HasColumnName("AC_UD17_BIT");

                entity.Property(e => e.AcUd18Bit).HasColumnName("AC_UD18_BIT");

                entity.Property(e => e.AcUd19Bit).HasColumnName("AC_UD19_BIT");

                entity.Property(e => e.AcUd1Bit).HasColumnName("AC_UD1_BIT");

                entity.Property(e => e.AcUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD1_DATE");

                entity.Property(e => e.AcUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_ID_NAME");

                entity.Property(e => e.AcUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd1Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD1_NUMERIC");

                entity.Property(e => e.AcUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_TEXT");

                entity.Property(e => e.AcUd20Bit).HasColumnName("AC_UD20_BIT");

                entity.Property(e => e.AcUd21Bit).HasColumnName("AC_UD21_BIT");

                entity.Property(e => e.AcUd22Bit).HasColumnName("AC_UD22_BIT");

                entity.Property(e => e.AcUd23Bit).HasColumnName("AC_UD23_BIT");

                entity.Property(e => e.AcUd24Bit).HasColumnName("AC_UD24_BIT");

                entity.Property(e => e.AcUd2Bit).HasColumnName("AC_UD2_BIT");

                entity.Property(e => e.AcUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD2_DATE");

                entity.Property(e => e.AcUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_ID_NAME");

                entity.Property(e => e.AcUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd2Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD2_NUMERIC");

                entity.Property(e => e.AcUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_TEXT");

                entity.Property(e => e.AcUd3Bit).HasColumnName("AC_UD3_BIT");

                entity.Property(e => e.AcUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD3_DATE");

                entity.Property(e => e.AcUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_ID_NAME");

                entity.Property(e => e.AcUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd3Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD3_NUMERIC");

                entity.Property(e => e.AcUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_TEXT");

                entity.Property(e => e.AcUd4Bit).HasColumnName("AC_UD4_BIT");

                entity.Property(e => e.AcUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD4_DATE");

                entity.Property(e => e.AcUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_ID_NAME");

                entity.Property(e => e.AcUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd4Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD4_NUMERIC");

                entity.Property(e => e.AcUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_TEXT");

                entity.Property(e => e.AcUd5Bit).HasColumnName("AC_UD5_BIT");

                entity.Property(e => e.AcUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD5_DATE");

                entity.Property(e => e.AcUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_ID_NAME");

                entity.Property(e => e.AcUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd5Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD5_NUMERIC");

                entity.Property(e => e.AcUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_TEXT");

                entity.Property(e => e.AcUd6Bit).HasColumnName("AC_UD6_BIT");

                entity.Property(e => e.AcUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD6_DATE");

                entity.Property(e => e.AcUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_ID_NAME");

                entity.Property(e => e.AcUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd6Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD6_NUMERIC");

                entity.Property(e => e.AcUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_TEXT");

                entity.Property(e => e.AcUd7Bit).HasColumnName("AC_UD7_BIT");

                entity.Property(e => e.AcUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD7_DATE");

                entity.Property(e => e.AcUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_ID_NAME");

                entity.Property(e => e.AcUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd7Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD7_NUMERIC");

                entity.Property(e => e.AcUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_TEXT");

                entity.Property(e => e.AcUd8Bit).HasColumnName("AC_UD8_BIT");

                entity.Property(e => e.AcUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD8_DATE");

                entity.Property(e => e.AcUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_ID_NAME");

                entity.Property(e => e.AcUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd8Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD8_NUMERIC");

                entity.Property(e => e.AcUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_TEXT");

                entity.Property(e => e.AcUd9Bit).HasColumnName("AC_UD9_BIT");

                entity.Property(e => e.AcUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD9_DATE");

                entity.Property(e => e.AcUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_ID_NAME");

                entity.Property(e => e.AcUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd9Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD9_NUMERIC");

                entity.Property(e => e.AcUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_TEXT");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccPrefEmail)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_EMAIL");

                entity.Property(e => e.AccPrefPhone)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PREF_PHONE");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_MANAGER");

                entity.Property(e => e.AccountManagerEmail)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_MANAGER_EMAIL");

                entity.Property(e => e.AcgId).HasColumnName("ACG_ID");

                entity.Property(e => e.ActualClose)
                    .HasColumnType("datetime")
                    .HasColumnName("ACTUAL_CLOSE");

                entity.Property(e => e.AddToForecast).HasColumnName("ADD_TO_FORECAST");

                entity.Property(e => e.AddToOpportunity).HasColumnName("ADD_TO_OPPORTUNITY");

                entity.Property(e => e.BusinessFaxNumberFormatted).HasMaxLength(267);

                entity.Property(e => e.Code)
                    .HasMaxLength(3)
                    .HasColumnName("CODE");

                entity.Property(e => e.ContactEmail)
                    .HasMaxLength(255)
                    .HasColumnName("CONTACT_EMAIL");

                entity.Property(e => e.ContactFax)
                    .HasMaxLength(255)
                    .HasColumnName("_CONTACT_FAX");

                entity.Property(e => e.ContactName)
                    .HasMaxLength(255)
                    .HasColumnName("CONTACT_NAME");

                entity.Property(e => e.ContactPhone)
                    .HasMaxLength(255)
                    .HasColumnName("CONTACT_PHONE");

                entity.Property(e => e.CostCarriage)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_CARRIAGE");

                entity.Property(e => e.CostItems)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_ITEMS");

                entity.Property(e => e.CostMisc)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_MISC");

                entity.Property(e => e.CostQuote)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_QUOTE");

                entity.Property(e => e.CostQuoteBase).HasColumnName("COST_QUOTE_BASE");

                entity.Property(e => e.CostSub)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_SUB");

                entity.Property(e => e.CostTotal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_TOTAL");

                entity.Property(e => e.CostUpdatedSub)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_UPDATED_SUB");

                entity.Property(e => e.CostVat)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_VAT");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Currency)
                    .HasMaxLength(255)
                    .HasColumnName("CURRENCY");

                entity.Property(e => e.CurrencySymbol)
                    .HasMaxLength(3)
                    .HasColumnName("CURRENCY_SYMBOL");

                entity.Property(e => e.DaysOpen).HasColumnName("DAYS_OPEN");

                entity.Property(e => e.DiscountAccount).HasColumnName("DISCOUNT_ACCOUNT");

                entity.Property(e => e.DiscountItems).HasColumnName("DISCOUNT_ITEMS");

                entity.Property(e => e.EstimatedClose)
                    .HasColumnType("datetime")
                    .HasColumnName("ESTIMATED_CLOSE");

                entity.Property(e => e.Exchange).HasColumnName("EXCHANGE");

                entity.Property(e => e.Expires)
                    .HasColumnType("datetime")
                    .HasColumnName("EXPIRES");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .HasColumnName("FIRST_NAME");

                entity.Property(e => e.FneName)
                    .HasMaxLength(255)
                    .HasColumnName("FNE_NAME");

                entity.Property(e => e.ForcedClose).HasColumnName("FORCED_CLOSE");

                entity.Property(e => e.ForecastDate)
                    .HasColumnType("datetime")
                    .HasColumnName("FORECAST_DATE");

                entity.Property(e => e.ForecastValue)
                    .HasColumnType("numeric(28, 6)")
                    .HasColumnName("FORECAST_VALUE");

                entity.Property(e => e.ForecastValueBase).HasColumnName("FORECAST_VALUE_BASE");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.LastName)
                    .HasMaxLength(255)
                    .HasColumnName("LAST_NAME");

                entity.Property(e => e.MacIdSource).HasColumnName("MAC_ID_SOURCE");

                entity.Property(e => e.MacIdSourceName)
                    .HasMaxLength(255)
                    .HasColumnName("MAC_ID_SOURCE_NAME");

                entity.Property(e => e.Margin)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("MARGIN");

                entity.Property(e => e.MarginBase).HasColumnName("MARGIN_BASE");

                entity.Property(e => e.NumberOfItems).HasColumnName("NUMBER_OF_ITEMS");

                entity.Property(e => e.OpExternal)
                    .HasMaxLength(255)
                    .HasColumnName("OP_EXTERNAL");

                entity.Property(e => e.OpId).HasColumnName("OP_ID");

                entity.Property(e => e.OpImport).HasColumnName("OP_IMPORT");

                entity.Property(e => e.OpReference)
                    .HasMaxLength(50)
                    .HasColumnName("OP_REFERENCE");

                entity.Property(e => e.OpSemType)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("OP_SEM_TYPE");

                entity.Property(e => e.OpUd1)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD1");

                entity.Property(e => e.OpUd10)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD10");

                entity.Property(e => e.OpUd10Bit).HasColumnName("OP_UD10_BIT");

                entity.Property(e => e.OpUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OP_UD10_DATE");

                entity.Property(e => e.OpUd10Id).HasColumnName("OP_UD10_ID");

                entity.Property(e => e.OpUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD10_ID_NAME");

                entity.Property(e => e.OpUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OP_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.OpUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OP_UD10_NUMERIC");

                entity.Property(e => e.OpUd11)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD11");

                entity.Property(e => e.OpUd11Bit).HasColumnName("OP_UD11_BIT");

                entity.Property(e => e.OpUd12)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD12");

                entity.Property(e => e.OpUd12Bit).HasColumnName("OP_UD12_BIT");

                entity.Property(e => e.OpUd13)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD13");

                entity.Property(e => e.OpUd13Bit).HasColumnName("OP_UD13_BIT");

                entity.Property(e => e.OpUd14)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD14");

                entity.Property(e => e.OpUd14Bit).HasColumnName("OP_UD14_BIT");

                entity.Property(e => e.OpUd15)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD15");

                entity.Property(e => e.OpUd15Bit).HasColumnName("OP_UD15_BIT");

                entity.Property(e => e.OpUd16Bit).HasColumnName("OP_UD16_BIT");

                entity.Property(e => e.OpUd17Bit).HasColumnName("OP_UD17_BIT");

                entity.Property(e => e.OpUd18Bit).HasColumnName("OP_UD18_BIT");

                entity.Property(e => e.OpUd19Bit).HasColumnName("OP_UD19_BIT");

                entity.Property(e => e.OpUd1Bit).HasColumnName("OP_UD1_BIT");

                entity.Property(e => e.OpUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OP_UD1_DATE");

                entity.Property(e => e.OpUd1Id).HasColumnName("OP_UD1_ID");

                entity.Property(e => e.OpUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD1_ID_NAME");

                entity.Property(e => e.OpUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OP_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.OpUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OP_UD1_NUMERIC");

                entity.Property(e => e.OpUd2)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD2");

                entity.Property(e => e.OpUd20Bit).HasColumnName("OP_UD20_BIT");

                entity.Property(e => e.OpUd21Bit).HasColumnName("OP_UD21_BIT");

                entity.Property(e => e.OpUd22Bit).HasColumnName("OP_UD22_BIT");

                entity.Property(e => e.OpUd23Bit).HasColumnName("OP_UD23_BIT");

                entity.Property(e => e.OpUd24Bit).HasColumnName("OP_UD24_BIT");

                entity.Property(e => e.OpUd2Bit).HasColumnName("OP_UD2_BIT");

                entity.Property(e => e.OpUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OP_UD2_DATE");

                entity.Property(e => e.OpUd2Id).HasColumnName("OP_UD2_ID");

                entity.Property(e => e.OpUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD2_ID_NAME");

                entity.Property(e => e.OpUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OP_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.OpUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OP_UD2_NUMERIC");

                entity.Property(e => e.OpUd3)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD3");

                entity.Property(e => e.OpUd3Bit).HasColumnName("OP_UD3_BIT");

                entity.Property(e => e.OpUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OP_UD3_DATE");

                entity.Property(e => e.OpUd3Id).HasColumnName("OP_UD3_ID");

                entity.Property(e => e.OpUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD3_ID_NAME");

                entity.Property(e => e.OpUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OP_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.OpUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OP_UD3_NUMERIC");

                entity.Property(e => e.OpUd4)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD4");

                entity.Property(e => e.OpUd4Bit).HasColumnName("OP_UD4_BIT");

                entity.Property(e => e.OpUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OP_UD4_DATE");

                entity.Property(e => e.OpUd4Id).HasColumnName("OP_UD4_ID");

                entity.Property(e => e.OpUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD4_ID_NAME");

                entity.Property(e => e.OpUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OP_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.OpUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OP_UD4_NUMERIC");

                entity.Property(e => e.OpUd5)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD5");

                entity.Property(e => e.OpUd5Bit).HasColumnName("OP_UD5_BIT");

                entity.Property(e => e.OpUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OP_UD5_DATE");

                entity.Property(e => e.OpUd5Id).HasColumnName("OP_UD5_ID");

                entity.Property(e => e.OpUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD5_ID_NAME");

                entity.Property(e => e.OpUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OP_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.OpUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OP_UD5_NUMERIC");

                entity.Property(e => e.OpUd6)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD6");

                entity.Property(e => e.OpUd6Bit).HasColumnName("OP_UD6_BIT");

                entity.Property(e => e.OpUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OP_UD6_DATE");

                entity.Property(e => e.OpUd6Id).HasColumnName("OP_UD6_ID");

                entity.Property(e => e.OpUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD6_ID_NAME");

                entity.Property(e => e.OpUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OP_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.OpUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OP_UD6_NUMERIC");

                entity.Property(e => e.OpUd7)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD7");

                entity.Property(e => e.OpUd7Bit).HasColumnName("OP_UD7_BIT");

                entity.Property(e => e.OpUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OP_UD7_DATE");

                entity.Property(e => e.OpUd7Id).HasColumnName("OP_UD7_ID");

                entity.Property(e => e.OpUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD7_ID_NAME");

                entity.Property(e => e.OpUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OP_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.OpUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OP_UD7_NUMERIC");

                entity.Property(e => e.OpUd8)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD8");

                entity.Property(e => e.OpUd8Bit).HasColumnName("OP_UD8_BIT");

                entity.Property(e => e.OpUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OP_UD8_DATE");

                entity.Property(e => e.OpUd8Id).HasColumnName("OP_UD8_ID");

                entity.Property(e => e.OpUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD8_ID_NAME");

                entity.Property(e => e.OpUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OP_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.OpUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OP_UD8_NUMERIC");

                entity.Property(e => e.OpUd9)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD9");

                entity.Property(e => e.OpUd9Bit).HasColumnName("OP_UD9_BIT");

                entity.Property(e => e.OpUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OP_UD9_DATE");

                entity.Property(e => e.OpUd9Id).HasColumnName("OP_UD9_ID");

                entity.Property(e => e.OpUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OP_UD9_ID_NAME");

                entity.Property(e => e.OpUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OP_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.OpUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("OP_UD9_NUMERIC");

                entity.Property(e => e.OpqCurId).HasColumnName("OPQ_CUR_ID");

                entity.Property(e => e.OpqCurIdPriceList).HasColumnName("OPQ_CUR_ID_PRICE_LIST");

                entity.Property(e => e.OpqDeleted).HasColumnName("OPQ_DELETED");

                entity.Property(e => e.OpqId).HasColumnName("OPQ_ID");

                entity.Property(e => e.OpqMargin)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OPQ_MARGIN");

                entity.Property(e => e.OpqMarginPercentage)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("OPQ_MARGIN_PERCENTAGE");

                entity.Property(e => e.OpqNumber)
                    .HasMaxLength(20)
                    .HasColumnName("OPQ_NUMBER");

                entity.Property(e => e.OpqOwner).HasColumnName("OPQ_OWNER");

                entity.Property(e => e.OpqReference)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_REFERENCE");

                entity.Property(e => e.OpqSembId).HasColumnName("OPQ_SEMB_ID");

                entity.Property(e => e.OpqSembIdOpen).HasColumnName("OPQ_SEMB_ID_OPEN");

                entity.Property(e => e.OpqSembType)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("OPQ_SEMB_TYPE");

                entity.Property(e => e.OpqState).HasColumnName("OPQ_STATE");

                entity.Property(e => e.OpqSummary)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_SUMMARY");

                entity.Property(e => e.OpqType).HasColumnName("OPQ_TYPE");

                entity.Property(e => e.OpqUd1)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD1");

                entity.Property(e => e.OpqUd10)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD10");

                entity.Property(e => e.OpqUd10Bit).HasColumnName("OPQ_UD10_BIT");

                entity.Property(e => e.OpqUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_UD10_DATE");

                entity.Property(e => e.OpqUd10Id).HasColumnName("OPQ_UD10_ID");

                entity.Property(e => e.OpqUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD10_ID_NAME");

                entity.Property(e => e.OpqUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPQ_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.OpqUd10Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OPQ_UD10_NUMERIC");

                entity.Property(e => e.OpqUd11)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD11");

                entity.Property(e => e.OpqUd11Bit).HasColumnName("OPQ_UD11_BIT");

                entity.Property(e => e.OpqUd12)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD12");

                entity.Property(e => e.OpqUd12Bit).HasColumnName("OPQ_UD12_BIT");

                entity.Property(e => e.OpqUd13)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD13");

                entity.Property(e => e.OpqUd13Bit).HasColumnName("OPQ_UD13_BIT");

                entity.Property(e => e.OpqUd14)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD14");

                entity.Property(e => e.OpqUd14Bit).HasColumnName("OPQ_UD14_BIT");

                entity.Property(e => e.OpqUd15)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD15");

                entity.Property(e => e.OpqUd15Bit).HasColumnName("OPQ_UD15_BIT");

                entity.Property(e => e.OpqUd16Bit).HasColumnName("OPQ_UD16_BIT");

                entity.Property(e => e.OpqUd17Bit).HasColumnName("OPQ_UD17_BIT");

                entity.Property(e => e.OpqUd18Bit).HasColumnName("OPQ_UD18_BIT");

                entity.Property(e => e.OpqUd19Bit).HasColumnName("OPQ_UD19_BIT");

                entity.Property(e => e.OpqUd1Bit).HasColumnName("OPQ_UD1_BIT");

                entity.Property(e => e.OpqUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_UD1_DATE");

                entity.Property(e => e.OpqUd1Id).HasColumnName("OPQ_UD1_ID");

                entity.Property(e => e.OpqUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD1_ID_NAME");

                entity.Property(e => e.OpqUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPQ_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.OpqUd1Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OPQ_UD1_NUMERIC");

                entity.Property(e => e.OpqUd2)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD2");

                entity.Property(e => e.OpqUd20Bit).HasColumnName("OPQ_UD20_BIT");

                entity.Property(e => e.OpqUd21Bit).HasColumnName("OPQ_UD21_BIT");

                entity.Property(e => e.OpqUd22Bit).HasColumnName("OPQ_UD22_BIT");

                entity.Property(e => e.OpqUd23Bit).HasColumnName("OPQ_UD23_BIT");

                entity.Property(e => e.OpqUd24Bit).HasColumnName("OPQ_UD24_BIT");

                entity.Property(e => e.OpqUd2Bit).HasColumnName("OPQ_UD2_BIT");

                entity.Property(e => e.OpqUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_UD2_DATE");

                entity.Property(e => e.OpqUd2Id).HasColumnName("OPQ_UD2_ID");

                entity.Property(e => e.OpqUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD2_ID_NAME");

                entity.Property(e => e.OpqUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPQ_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.OpqUd2Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OPQ_UD2_NUMERIC");

                entity.Property(e => e.OpqUd3)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD3");

                entity.Property(e => e.OpqUd3Bit).HasColumnName("OPQ_UD3_BIT");

                entity.Property(e => e.OpqUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_UD3_DATE");

                entity.Property(e => e.OpqUd3Id).HasColumnName("OPQ_UD3_ID");

                entity.Property(e => e.OpqUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD3_ID_NAME");

                entity.Property(e => e.OpqUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPQ_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.OpqUd3Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OPQ_UD3_NUMERIC");

                entity.Property(e => e.OpqUd4)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD4");

                entity.Property(e => e.OpqUd4Bit).HasColumnName("OPQ_UD4_BIT");

                entity.Property(e => e.OpqUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_UD4_DATE");

                entity.Property(e => e.OpqUd4Id).HasColumnName("OPQ_UD4_ID");

                entity.Property(e => e.OpqUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD4_ID_NAME");

                entity.Property(e => e.OpqUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPQ_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.OpqUd4Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OPQ_UD4_NUMERIC");

                entity.Property(e => e.OpqUd5)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD5");

                entity.Property(e => e.OpqUd5Bit).HasColumnName("OPQ_UD5_BIT");

                entity.Property(e => e.OpqUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_UD5_DATE");

                entity.Property(e => e.OpqUd5Id).HasColumnName("OPQ_UD5_ID");

                entity.Property(e => e.OpqUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD5_ID_NAME");

                entity.Property(e => e.OpqUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPQ_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.OpqUd5Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OPQ_UD5_NUMERIC");

                entity.Property(e => e.OpqUd6)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD6");

                entity.Property(e => e.OpqUd6Bit).HasColumnName("OPQ_UD6_BIT");

                entity.Property(e => e.OpqUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_UD6_DATE");

                entity.Property(e => e.OpqUd6Id).HasColumnName("OPQ_UD6_ID");

                entity.Property(e => e.OpqUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD6_ID_NAME");

                entity.Property(e => e.OpqUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPQ_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.OpqUd6Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OPQ_UD6_NUMERIC");

                entity.Property(e => e.OpqUd7)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD7");

                entity.Property(e => e.OpqUd7Bit).HasColumnName("OPQ_UD7_BIT");

                entity.Property(e => e.OpqUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_UD7_DATE");

                entity.Property(e => e.OpqUd7Id).HasColumnName("OPQ_UD7_ID");

                entity.Property(e => e.OpqUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD7_ID_NAME");

                entity.Property(e => e.OpqUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPQ_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.OpqUd7Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OPQ_UD7_NUMERIC");

                entity.Property(e => e.OpqUd8)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD8");

                entity.Property(e => e.OpqUd8Bit).HasColumnName("OPQ_UD8_BIT");

                entity.Property(e => e.OpqUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_UD8_DATE");

                entity.Property(e => e.OpqUd8Id).HasColumnName("OPQ_UD8_ID");

                entity.Property(e => e.OpqUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD8_ID_NAME");

                entity.Property(e => e.OpqUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPQ_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.OpqUd8Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OPQ_UD8_NUMERIC");

                entity.Property(e => e.OpqUd9)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD9");

                entity.Property(e => e.OpqUd9Bit).HasColumnName("OPQ_UD9_BIT");

                entity.Property(e => e.OpqUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("OPQ_UD9_DATE");

                entity.Property(e => e.OpqUd9Id).HasColumnName("OPQ_UD9_ID");

                entity.Property(e => e.OpqUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("OPQ_UD9_ID_NAME");

                entity.Property(e => e.OpqUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("OPQ_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.OpqUd9Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OPQ_UD9_NUMERIC");

                entity.Property(e => e.Overdue).HasColumnName("OVERDUE");

                entity.Property(e => e.Owner).HasColumnName("OWNER");

                entity.Property(e => e.OwnerDept)
                    .HasMaxLength(128)
                    .HasColumnName("OWNER_DEPT");

                entity.Property(e => e.OwnerEmail)
                    .HasMaxLength(255)
                    .HasColumnName("OWNER_EMAIL");

                entity.Property(e => e.OwnerGroup)
                    .HasMaxLength(255)
                    .HasColumnName("OWNER_GROUP");

                entity.Property(e => e.OwnerName)
                    .HasMaxLength(255)
                    .HasColumnName("OWNER_NAME");

                entity.Property(e => e.Probability)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("PROBABILITY");

                entity.Property(e => e.QuoteBookingName)
                    .HasMaxLength(267)
                    .HasColumnName("QUOTE_BOOKING_NAME");

                entity.Property(e => e.QuoteType)
                    .HasMaxLength(255)
                    .HasColumnName("QUOTE_TYPE");

                entity.Property(e => e.QuoteTypeHlight)
                    .HasMaxLength(100)
                    .HasColumnName("QUOTE_TYPE_HLIGHT");

                entity.Property(e => e.Reference)
                    .HasMaxLength(255)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.SalesValue)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SALES_VALUE");

                entity.Property(e => e.SalesValueBase).HasColumnName("SALES_VALUE_BASE");

                entity.Property(e => e.SecurityGroup)
                    .HasMaxLength(255)
                    .HasColumnName("SECURITY_GROUP");

                entity.Property(e => e.SecurityId).HasColumnName("SECURITY_ID");

                entity.Property(e => e.SecurityObject)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SECURITY_OBJECT");

                entity.Property(e => e.SecurityOwner).HasColumnName("SECURITY_OWNER");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.SembUd10Bit).HasColumnName("SEMB_UD10_BIT");

                entity.Property(e => e.SembUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD10_DATE");

                entity.Property(e => e.SembUd10Id).HasColumnName("SEMB_UD10_ID");

                entity.Property(e => e.SembUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD10_ID_NAME");

                entity.Property(e => e.SembUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD10_NUMERIC");

                entity.Property(e => e.SembUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD10_TEXT");

                entity.Property(e => e.SembUd11Bit).HasColumnName("SEMB_UD11_BIT");

                entity.Property(e => e.SembUd12Bit).HasColumnName("SEMB_UD12_BIT");

                entity.Property(e => e.SembUd13Bit).HasColumnName("SEMB_UD13_BIT");

                entity.Property(e => e.SembUd14Bit).HasColumnName("SEMB_UD14_BIT");

                entity.Property(e => e.SembUd15Bit).HasColumnName("SEMB_UD15_BIT");

                entity.Property(e => e.SembUd16Bit).HasColumnName("SEMB_UD16_BIT");

                entity.Property(e => e.SembUd17Bit).HasColumnName("SEMB_UD17_BIT");

                entity.Property(e => e.SembUd18Bit).HasColumnName("SEMB_UD18_BIT");

                entity.Property(e => e.SembUd19Bit).HasColumnName("SEMB_UD19_BIT");

                entity.Property(e => e.SembUd1Bit).HasColumnName("SEMB_UD1_BIT");

                entity.Property(e => e.SembUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD1_DATE");

                entity.Property(e => e.SembUd1Id).HasColumnName("SEMB_UD1_ID");

                entity.Property(e => e.SembUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD1_ID_NAME");

                entity.Property(e => e.SembUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD1_NUMERIC");

                entity.Property(e => e.SembUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD1_TEXT");

                entity.Property(e => e.SembUd20Bit).HasColumnName("SEMB_UD20_BIT");

                entity.Property(e => e.SembUd21Bit).HasColumnName("SEMB_UD21_BIT");

                entity.Property(e => e.SembUd22Bit).HasColumnName("SEMB_UD22_BIT");

                entity.Property(e => e.SembUd23Bit).HasColumnName("SEMB_UD23_BIT");

                entity.Property(e => e.SembUd24Bit).HasColumnName("SEMB_UD24_BIT");

                entity.Property(e => e.SembUd2Bit).HasColumnName("SEMB_UD2_BIT");

                entity.Property(e => e.SembUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD2_DATE");

                entity.Property(e => e.SembUd2Id).HasColumnName("SEMB_UD2_ID");

                entity.Property(e => e.SembUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD2_ID_NAME");

                entity.Property(e => e.SembUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD2_NUMERIC");

                entity.Property(e => e.SembUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD2_TEXT");

                entity.Property(e => e.SembUd3Bit).HasColumnName("SEMB_UD3_BIT");

                entity.Property(e => e.SembUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD3_DATE");

                entity.Property(e => e.SembUd3Id).HasColumnName("SEMB_UD3_ID");

                entity.Property(e => e.SembUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD3_ID_NAME");

                entity.Property(e => e.SembUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD3_NUMERIC");

                entity.Property(e => e.SembUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD3_TEXT");

                entity.Property(e => e.SembUd4Bit).HasColumnName("SEMB_UD4_BIT");

                entity.Property(e => e.SembUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD4_DATE");

                entity.Property(e => e.SembUd4Id).HasColumnName("SEMB_UD4_ID");

                entity.Property(e => e.SembUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD4_ID_NAME");

                entity.Property(e => e.SembUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD4_NUMERIC");

                entity.Property(e => e.SembUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD4_TEXT");

                entity.Property(e => e.SembUd5Bit).HasColumnName("SEMB_UD5_BIT");

                entity.Property(e => e.SembUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD5_DATE");

                entity.Property(e => e.SembUd5Id).HasColumnName("SEMB_UD5_ID");

                entity.Property(e => e.SembUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD5_ID_NAME");

                entity.Property(e => e.SembUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD5_NUMERIC");

                entity.Property(e => e.SembUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD5_TEXT");

                entity.Property(e => e.SembUd6Bit).HasColumnName("SEMB_UD6_BIT");

                entity.Property(e => e.SembUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD6_DATE");

                entity.Property(e => e.SembUd6Id).HasColumnName("SEMB_UD6_ID");

                entity.Property(e => e.SembUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD6_ID_NAME");

                entity.Property(e => e.SembUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD6_NUMERIC");

                entity.Property(e => e.SembUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD6_TEXT");

                entity.Property(e => e.SembUd7Bit).HasColumnName("SEMB_UD7_BIT");

                entity.Property(e => e.SembUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD7_DATE");

                entity.Property(e => e.SembUd7Id).HasColumnName("SEMB_UD7_ID");

                entity.Property(e => e.SembUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD7_ID_NAME");

                entity.Property(e => e.SembUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD7_NUMERIC");

                entity.Property(e => e.SembUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD7_TEXT");

                entity.Property(e => e.SembUd8Bit).HasColumnName("SEMB_UD8_BIT");

                entity.Property(e => e.SembUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD8_DATE");

                entity.Property(e => e.SembUd8Id).HasColumnName("SEMB_UD8_ID");

                entity.Property(e => e.SembUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD8_ID_NAME");

                entity.Property(e => e.SembUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD8_NUMERIC");

                entity.Property(e => e.SembUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD8_TEXT");

                entity.Property(e => e.SembUd9Bit).HasColumnName("SEMB_UD9_BIT");

                entity.Property(e => e.SembUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD9_DATE");

                entity.Property(e => e.SembUd9Id).HasColumnName("SEMB_UD9_ID");

                entity.Property(e => e.SembUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD9_ID_NAME");

                entity.Property(e => e.SembUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD9_NUMERIC");

                entity.Property(e => e.SembUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD9_TEXT");

                entity.Property(e => e.SentStatus)
                    .HasMaxLength(50)
                    .HasColumnName("SENT_STATUS");

                entity.Property(e => e.Source)
                    .HasMaxLength(255)
                    .HasColumnName("SOURCE");

                entity.Property(e => e.SourceCampaign)
                    .HasMaxLength(255)
                    .HasColumnName("SOURCE_CAMPAIGN");

                entity.Property(e => e.SourceCampaignId).HasColumnName("SOURCE_CAMPAIGN_ID");

                entity.Property(e => e.SourceHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SOURCE_HLIGHT");

                entity.Property(e => e.Stage)
                    .HasMaxLength(255)
                    .HasColumnName("STAGE");

                entity.Property(e => e.StageHlight)
                    .HasMaxLength(100)
                    .HasColumnName("STAGE_HLIGHT");

                entity.Property(e => e.State)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("STATE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Template)
                    .HasMaxLength(50)
                    .HasColumnName("TEMPLATE");

                entity.Property(e => e.TimeTotal).HasColumnName("TIME_TOTAL");

                entity.Property(e => e.Type)
                    .HasMaxLength(255)
                    .HasColumnName("TYPE");

                entity.Property(e => e.TypeHlight)
                    .HasMaxLength(100)
                    .HasColumnName("TYPE_HLIGHT");

                entity.Property(e => e.UnitsTotal).HasColumnName("UNITS_TOTAL");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");

                entity.Property(e => e.UsIdSupport).HasColumnName("US_ID_SUPPORT");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");

                entity.Property(e => e.Value)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("VALUE");
            });

            modelBuilder.Entity<VSchedule>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vSchedule");

                entity.Property(e => e.Accountname)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNTNAME");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Deleted).HasColumnName("DELETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.ObjectName)
                    .IsRequired()
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("OBJECT_NAME");

                entity.Property(e => e.SchId).HasColumnName("SCH_ID");

                entity.Property(e => e.SchUd10Bit).HasColumnName("SCH_UD10_BIT");

                entity.Property(e => e.SchUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SCH_UD10_DATE");

                entity.Property(e => e.SchUd10Id)
                    .HasMaxLength(255)
                    .HasColumnName("SCH_UD10_ID");

                entity.Property(e => e.SchUd10Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SCH_UD10_NUMERIC");

                entity.Property(e => e.SchUd10Text)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SCH_UD10_TEXT");

                entity.Property(e => e.SchUd1Bit).HasColumnName("SCH_UD1_BIT");

                entity.Property(e => e.SchUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SCH_UD1_DATE");

                entity.Property(e => e.SchUd1Id)
                    .HasMaxLength(255)
                    .HasColumnName("SCH_UD1_ID");

                entity.Property(e => e.SchUd1Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SCH_UD1_NUMERIC");

                entity.Property(e => e.SchUd1Text)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SCH_UD1_TEXT");

                entity.Property(e => e.SchUd2Bit).HasColumnName("SCH_UD2_BIT");

                entity.Property(e => e.SchUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SCH_UD2_DATE");

                entity.Property(e => e.SchUd2Id)
                    .HasMaxLength(255)
                    .HasColumnName("SCH_UD2_ID");

                entity.Property(e => e.SchUd2Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SCH_UD2_NUMERIC");

                entity.Property(e => e.SchUd2Text)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SCH_UD2_TEXT");

                entity.Property(e => e.SchUd3Bit).HasColumnName("SCH_UD3_BIT");

                entity.Property(e => e.SchUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SCH_UD3_DATE");

                entity.Property(e => e.SchUd3Id)
                    .HasMaxLength(255)
                    .HasColumnName("SCH_UD3_ID");

                entity.Property(e => e.SchUd3Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SCH_UD3_NUMERIC");

                entity.Property(e => e.SchUd3Text)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SCH_UD3_TEXT");

                entity.Property(e => e.SchUd4Bit).HasColumnName("SCH_UD4_BIT");

                entity.Property(e => e.SchUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SCH_UD4_DATE");

                entity.Property(e => e.SchUd4Id)
                    .HasMaxLength(255)
                    .HasColumnName("SCH_UD4_ID");

                entity.Property(e => e.SchUd4Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SCH_UD4_NUMERIC");

                entity.Property(e => e.SchUd4Text)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SCH_UD4_TEXT");

                entity.Property(e => e.SchUd5Bit).HasColumnName("SCH_UD5_BIT");

                entity.Property(e => e.SchUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SCH_UD5_DATE");

                entity.Property(e => e.SchUd5Id)
                    .HasMaxLength(255)
                    .HasColumnName("SCH_UD5_ID");

                entity.Property(e => e.SchUd5Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SCH_UD5_NUMERIC");

                entity.Property(e => e.SchUd5Text)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SCH_UD5_TEXT");

                entity.Property(e => e.SchUd6Bit).HasColumnName("SCH_UD6_BIT");

                entity.Property(e => e.SchUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SCH_UD6_DATE");

                entity.Property(e => e.SchUd6Id)
                    .HasMaxLength(255)
                    .HasColumnName("SCH_UD6_ID");

                entity.Property(e => e.SchUd6Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SCH_UD6_NUMERIC");

                entity.Property(e => e.SchUd6Text)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SCH_UD6_TEXT");

                entity.Property(e => e.SchUd7Bit).HasColumnName("SCH_UD7_BIT");

                entity.Property(e => e.SchUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SCH_UD7_DATE");

                entity.Property(e => e.SchUd7Id)
                    .HasMaxLength(255)
                    .HasColumnName("SCH_UD7_ID");

                entity.Property(e => e.SchUd7Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SCH_UD7_NUMERIC");

                entity.Property(e => e.SchUd7Text)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SCH_UD7_TEXT");

                entity.Property(e => e.SchUd8Bit).HasColumnName("SCH_UD8_BIT");

                entity.Property(e => e.SchUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SCH_UD8_DATE");

                entity.Property(e => e.SchUd8Id)
                    .HasMaxLength(255)
                    .HasColumnName("SCH_UD8_ID");

                entity.Property(e => e.SchUd8Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SCH_UD8_NUMERIC");

                entity.Property(e => e.SchUd8Text)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SCH_UD8_TEXT");

                entity.Property(e => e.SchUd9Bit).HasColumnName("SCH_UD9_BIT");

                entity.Property(e => e.SchUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SCH_UD9_DATE");

                entity.Property(e => e.SchUd9Id)
                    .HasMaxLength(255)
                    .HasColumnName("SCH_UD9_ID");

                entity.Property(e => e.SchUd9Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SCH_UD9_NUMERIC");

                entity.Property(e => e.SchUd9Text)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SCH_UD9_TEXT");

                entity.Property(e => e.Schedulename)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SCHEDULENAME");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<VScheduledQuote>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vScheduledQuotes");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_NAME");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.EstimatedClosed)
                    .HasColumnType("datetime")
                    .HasColumnName("ESTIMATED_CLOSED");

                entity.Property(e => e.InvoiceDate)
                    .HasColumnType("datetime")
                    .HasColumnName("INVOICE_DATE");

                entity.Property(e => e.OpqId).HasColumnName("OPQ_ID");

                entity.Property(e => e.SchId).HasColumnName("SCH_ID");

                entity.Property(e => e.SchqId).HasColumnName("SCHQ_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Wording).HasColumnName("WORDING");
            });

            modelBuilder.Entity<VSeminar>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vSeminars");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.Address1)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_1");

                entity.Property(e => e.Address2)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_2");

                entity.Property(e => e.Address3)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_3");

                entity.Property(e => e.Attendees).HasColumnName("ATTENDEES");

                entity.Property(e => e.Country)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.County)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTY");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CurId).HasColumnName("CUR_ID");

                entity.Property(e => e.CurrencyCode)
                    .HasMaxLength(3)
                    .HasColumnName("CURRENCY_CODE");

                entity.Property(e => e.CurrencySymbol)
                    .HasMaxLength(3)
                    .HasColumnName("CURRENCY_SYMBOL");

                entity.Property(e => e.DaysOpen).HasColumnName("DAYS_OPEN");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.EarlyBirdDate)
                    .HasColumnType("datetime")
                    .HasColumnName("EARLY_BIRD_DATE");

                entity.Property(e => e.EarlyBirdDiscount)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("EARLY_BIRD_DISCOUNT");

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("END_DATE");

                entity.Property(e => e.EndDateLocal)
                    .HasColumnType("datetime")
                    .HasColumnName("END_DATE_LOCAL");

                entity.Property(e => e.EventbriteAnonAttendeeAcId).HasColumnName("EVENTBRITE_ANON_ATTENDEE_AC_ID");

                entity.Property(e => e.ExternalEventbriteId)
                    .HasMaxLength(255)
                    .HasColumnName("EXTERNAL_EVENTBRITE_ID");

                entity.Property(e => e.LcId).HasColumnName("LC_ID");

                entity.Property(e => e.LeadListName)
                    .HasMaxLength(255)
                    .HasColumnName("LEAD_LIST_NAME");

                entity.Property(e => e.McaId).HasColumnName("MCA_ID");

                entity.Property(e => e.Owner).HasColumnName("OWNER");

                entity.Property(e => e.OwnerEmail)
                    .HasMaxLength(255)
                    .HasColumnName("OWNER_EMAIL");

                entity.Property(e => e.Places).HasColumnName("PLACES");

                entity.Property(e => e.PlacesAvailable).HasColumnName("PLACES_AVAILABLE");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(255)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.Price)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PRICE");

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.ReferenceSeed).HasColumnName("REFERENCE_SEED");

                entity.Property(e => e.SecurityGroup)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("SECURITY_GROUP");

                entity.Property(e => e.SemDeleted).HasColumnName("SEM_DELETED");

                entity.Property(e => e.SemExternal)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_EXTERNAL");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.SemImport).HasColumnName("SEM_IMPORT");

                entity.Property(e => e.SemStage)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_STAGE");

                entity.Property(e => e.SemStageHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_STAGE_HLIGHT");

                entity.Property(e => e.SemState)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("SEM_STATE");

                entity.Property(e => e.SemType)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_TYPE");

                entity.Property(e => e.SemTypeHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_TYPE_HLIGHT");

                entity.Property(e => e.SemUd10Bit).HasColumnName("SEM_UD10_BIT");

                entity.Property(e => e.SemUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD10_DATE");

                entity.Property(e => e.SemUd10Id).HasColumnName("SEM_UD10_ID");

                entity.Property(e => e.SemUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD10_ID_NAME");

                entity.Property(e => e.SemUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD10_NUMERIC");

                entity.Property(e => e.SemUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD10_TEXT");

                entity.Property(e => e.SemUd11Bit).HasColumnName("SEM_UD11_BIT");

                entity.Property(e => e.SemUd12Bit).HasColumnName("SEM_UD12_BIT");

                entity.Property(e => e.SemUd13Bit).HasColumnName("SEM_UD13_BIT");

                entity.Property(e => e.SemUd14Bit).HasColumnName("SEM_UD14_BIT");

                entity.Property(e => e.SemUd15Bit).HasColumnName("SEM_UD15_BIT");

                entity.Property(e => e.SemUd16Bit).HasColumnName("SEM_UD16_BIT");

                entity.Property(e => e.SemUd17Bit).HasColumnName("SEM_UD17_BIT");

                entity.Property(e => e.SemUd18Bit).HasColumnName("SEM_UD18_BIT");

                entity.Property(e => e.SemUd19Bit).HasColumnName("SEM_UD19_BIT");

                entity.Property(e => e.SemUd1Bit).HasColumnName("SEM_UD1_BIT");

                entity.Property(e => e.SemUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD1_DATE");

                entity.Property(e => e.SemUd1Id).HasColumnName("SEM_UD1_ID");

                entity.Property(e => e.SemUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD1_ID_NAME");

                entity.Property(e => e.SemUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD1_NUMERIC");

                entity.Property(e => e.SemUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD1_TEXT");

                entity.Property(e => e.SemUd20Bit).HasColumnName("SEM_UD20_BIT");

                entity.Property(e => e.SemUd21Bit).HasColumnName("SEM_UD21_BIT");

                entity.Property(e => e.SemUd22Bit).HasColumnName("SEM_UD22_BIT");

                entity.Property(e => e.SemUd23Bit).HasColumnName("SEM_UD23_BIT");

                entity.Property(e => e.SemUd24Bit).HasColumnName("SEM_UD24_BIT");

                entity.Property(e => e.SemUd2Bit).HasColumnName("SEM_UD2_BIT");

                entity.Property(e => e.SemUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD2_DATE");

                entity.Property(e => e.SemUd2Id).HasColumnName("SEM_UD2_ID");

                entity.Property(e => e.SemUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD2_ID_NAME");

                entity.Property(e => e.SemUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD2_NUMERIC");

                entity.Property(e => e.SemUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD2_TEXT");

                entity.Property(e => e.SemUd3Bit).HasColumnName("SEM_UD3_BIT");

                entity.Property(e => e.SemUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD3_DATE");

                entity.Property(e => e.SemUd3Id).HasColumnName("SEM_UD3_ID");

                entity.Property(e => e.SemUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD3_ID_NAME");

                entity.Property(e => e.SemUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD3_NUMERIC");

                entity.Property(e => e.SemUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD3_TEXT");

                entity.Property(e => e.SemUd4Bit).HasColumnName("SEM_UD4_BIT");

                entity.Property(e => e.SemUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD4_DATE");

                entity.Property(e => e.SemUd4Id).HasColumnName("SEM_UD4_ID");

                entity.Property(e => e.SemUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD4_ID_NAME");

                entity.Property(e => e.SemUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD4_NUMERIC");

                entity.Property(e => e.SemUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD4_TEXT");

                entity.Property(e => e.SemUd5Bit).HasColumnName("SEM_UD5_BIT");

                entity.Property(e => e.SemUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD5_DATE");

                entity.Property(e => e.SemUd5Id).HasColumnName("SEM_UD5_ID");

                entity.Property(e => e.SemUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD5_ID_NAME");

                entity.Property(e => e.SemUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD5_NUMERIC");

                entity.Property(e => e.SemUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD5_TEXT");

                entity.Property(e => e.SemUd6Bit).HasColumnName("SEM_UD6_BIT");

                entity.Property(e => e.SemUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD6_DATE");

                entity.Property(e => e.SemUd6Id).HasColumnName("SEM_UD6_ID");

                entity.Property(e => e.SemUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD6_ID_NAME");

                entity.Property(e => e.SemUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD6_NUMERIC");

                entity.Property(e => e.SemUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD6_TEXT");

                entity.Property(e => e.SemUd7Bit).HasColumnName("SEM_UD7_BIT");

                entity.Property(e => e.SemUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD7_DATE");

                entity.Property(e => e.SemUd7Id).HasColumnName("SEM_UD7_ID");

                entity.Property(e => e.SemUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD7_ID_NAME");

                entity.Property(e => e.SemUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD7_NUMERIC");

                entity.Property(e => e.SemUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD7_TEXT");

                entity.Property(e => e.SemUd8Bit).HasColumnName("SEM_UD8_BIT");

                entity.Property(e => e.SemUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD8_DATE");

                entity.Property(e => e.SemUd8Id).HasColumnName("SEM_UD8_ID");

                entity.Property(e => e.SemUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD8_ID_NAME");

                entity.Property(e => e.SemUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD8_NUMERIC");

                entity.Property(e => e.SemUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD8_TEXT");

                entity.Property(e => e.SemUd9Bit).HasColumnName("SEM_UD9_BIT");

                entity.Property(e => e.SemUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD9_DATE");

                entity.Property(e => e.SemUd9Id).HasColumnName("SEM_UD9_ID");

                entity.Property(e => e.SemUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD9_ID_NAME");

                entity.Property(e => e.SemUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD9_NUMERIC");

                entity.Property(e => e.SemUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD9_TEXT");

                entity.Property(e => e.SgId).HasColumnName("SG_ID");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.SitId).HasColumnName("SIT_ID");

                entity.Property(e => e.SiteName)
                    .HasMaxLength(255)
                    .HasColumnName("SITE_NAME");

                entity.Property(e => e.SourceDetails)
                    .HasMaxLength(255)
                    .HasColumnName("SOURCE_DETAILS");

                entity.Property(e => e.Stage).HasColumnName("STAGE");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("START_DATE");

                entity.Property(e => e.StartDateLocal)
                    .HasColumnType("datetime")
                    .HasColumnName("START_DATE_LOCAL");

                entity.Property(e => e.StgId).HasColumnName("STG_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TimeZone)
                    .HasMaxLength(255)
                    .HasColumnName("TIME_ZONE");

                entity.Property(e => e.Town)
                    .HasMaxLength(255)
                    .HasColumnName("TOWN");

                entity.Property(e => e.Type).HasColumnName("TYPE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.Url)
                    .HasMaxLength(255)
                    .HasColumnName("URL");

                entity.Property(e => e.UsName)
                    .HasMaxLength(255)
                    .HasColumnName("US_NAME");

                entity.Property(e => e.Value)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("VALUE");

                entity.Property(e => e.ValueBase)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("VALUE_BASE");

                entity.Property(e => e.ValueConfirmed)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("VALUE_CONFIRMED");

                entity.Property(e => e.ValueConfirmedBase)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("VALUE_CONFIRMED_BASE");

                entity.Property(e => e.ValueLost)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("VALUE_LOST");

                entity.Property(e => e.ValueLostBase)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("VALUE_LOST_BASE");

                entity.Property(e => e.ValueOpen)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("VALUE_OPEN");

                entity.Property(e => e.ValueOpenBase)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("VALUE_OPEN_BASE");

                entity.Property(e => e.ValueWon)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("VALUE_WON");

                entity.Property(e => e.ValueWonBase)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("VALUE_WON_BASE");
            });

            modelBuilder.Entity<VSeminarBooking>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vSeminarBookings");

                entity.Property(e => e.AcExternal)
                    .HasMaxLength(255)
                    .HasColumnName("AC_EXTERNAL");

                entity.Property(e => e.AcFlag)
                    .HasMaxLength(255)
                    .HasColumnName("AC_FLAG");

                entity.Property(e => e.AcFlagHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_FLAG_HLIGHT");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcIndustry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_INDUSTRY");

                entity.Property(e => e.AcIndustryHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_INDUSTRY_HLIGHT");

                entity.Property(e => e.AcLabel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LABEL");

                entity.Property(e => e.AcLabelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LABEL_HLIGHT");

                entity.Property(e => e.AcLevel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LEVEL");

                entity.Property(e => e.AcLevelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LEVEL_HLIGHT");

                entity.Property(e => e.AcManager).HasColumnName("AC_MANAGER");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.AcSource)
                    .HasMaxLength(255)
                    .HasColumnName("AC_SOURCE");

                entity.Property(e => e.AcSourceHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_SOURCE_HLIGHT");

                entity.Property(e => e.AcType1)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_1");

                entity.Property(e => e.AcType1Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_1_HLIGHT");

                entity.Property(e => e.AcType2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_2");

                entity.Property(e => e.AcType2Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_2_HLIGHT");

                entity.Property(e => e.AcUd10Bit).HasColumnName("AC_UD10_BIT");

                entity.Property(e => e.AcUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD10_DATE");

                entity.Property(e => e.AcUd10Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_ID");

                entity.Property(e => e.AcUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_ID_NAME");

                entity.Property(e => e.AcUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd10Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD10_NUMERIC");

                entity.Property(e => e.AcUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_TEXT");

                entity.Property(e => e.AcUd11Bit).HasColumnName("AC_UD11_BIT");

                entity.Property(e => e.AcUd11Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD11_TEXT");

                entity.Property(e => e.AcUd12Bit).HasColumnName("AC_UD12_BIT");

                entity.Property(e => e.AcUd12Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD12_TEXT");

                entity.Property(e => e.AcUd13Bit).HasColumnName("AC_UD13_BIT");

                entity.Property(e => e.AcUd13Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD13_TEXT");

                entity.Property(e => e.AcUd14Bit).HasColumnName("AC_UD14_BIT");

                entity.Property(e => e.AcUd14Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD14_TEXT");

                entity.Property(e => e.AcUd15Bit).HasColumnName("AC_UD15_BIT");

                entity.Property(e => e.AcUd15Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD15_TEXT");

                entity.Property(e => e.AcUd16Bit).HasColumnName("AC_UD16_BIT");

                entity.Property(e => e.AcUd17Bit).HasColumnName("AC_UD17_BIT");

                entity.Property(e => e.AcUd18Bit).HasColumnName("AC_UD18_BIT");

                entity.Property(e => e.AcUd19Bit).HasColumnName("AC_UD19_BIT");

                entity.Property(e => e.AcUd1Bit).HasColumnName("AC_UD1_BIT");

                entity.Property(e => e.AcUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD1_DATE");

                entity.Property(e => e.AcUd1Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_ID");

                entity.Property(e => e.AcUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_ID_NAME");

                entity.Property(e => e.AcUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd1Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD1_NUMERIC");

                entity.Property(e => e.AcUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_TEXT");

                entity.Property(e => e.AcUd20Bit).HasColumnName("AC_UD20_BIT");

                entity.Property(e => e.AcUd21Bit).HasColumnName("AC_UD21_BIT");

                entity.Property(e => e.AcUd22Bit).HasColumnName("AC_UD22_BIT");

                entity.Property(e => e.AcUd23Bit).HasColumnName("AC_UD23_BIT");

                entity.Property(e => e.AcUd24Bit).HasColumnName("AC_UD24_BIT");

                entity.Property(e => e.AcUd2Bit).HasColumnName("AC_UD2_BIT");

                entity.Property(e => e.AcUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD2_DATE");

                entity.Property(e => e.AcUd2Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_ID");

                entity.Property(e => e.AcUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_ID_NAME");

                entity.Property(e => e.AcUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd2Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD2_NUMERIC");

                entity.Property(e => e.AcUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_TEXT");

                entity.Property(e => e.AcUd3Bit).HasColumnName("AC_UD3_BIT");

                entity.Property(e => e.AcUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD3_DATE");

                entity.Property(e => e.AcUd3Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_ID");

                entity.Property(e => e.AcUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_ID_NAME");

                entity.Property(e => e.AcUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd3Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD3_NUMERIC");

                entity.Property(e => e.AcUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_TEXT");

                entity.Property(e => e.AcUd4Bit).HasColumnName("AC_UD4_BIT");

                entity.Property(e => e.AcUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD4_DATE");

                entity.Property(e => e.AcUd4Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_ID");

                entity.Property(e => e.AcUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_ID_NAME");

                entity.Property(e => e.AcUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd4Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD4_NUMERIC");

                entity.Property(e => e.AcUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_TEXT");

                entity.Property(e => e.AcUd5Bit).HasColumnName("AC_UD5_BIT");

                entity.Property(e => e.AcUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD5_DATE");

                entity.Property(e => e.AcUd5Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_ID");

                entity.Property(e => e.AcUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_ID_NAME");

                entity.Property(e => e.AcUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd5Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD5_NUMERIC");

                entity.Property(e => e.AcUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_TEXT");

                entity.Property(e => e.AcUd6Bit).HasColumnName("AC_UD6_BIT");

                entity.Property(e => e.AcUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD6_DATE");

                entity.Property(e => e.AcUd6Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_ID");

                entity.Property(e => e.AcUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_ID_NAME");

                entity.Property(e => e.AcUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd6Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD6_NUMERIC");

                entity.Property(e => e.AcUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_TEXT");

                entity.Property(e => e.AcUd7Bit).HasColumnName("AC_UD7_BIT");

                entity.Property(e => e.AcUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD7_DATE");

                entity.Property(e => e.AcUd7Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_ID");

                entity.Property(e => e.AcUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_ID_NAME");

                entity.Property(e => e.AcUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd7Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD7_NUMERIC");

                entity.Property(e => e.AcUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_TEXT");

                entity.Property(e => e.AcUd8Bit).HasColumnName("AC_UD8_BIT");

                entity.Property(e => e.AcUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD8_DATE");

                entity.Property(e => e.AcUd8Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_ID");

                entity.Property(e => e.AcUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_ID_NAME");

                entity.Property(e => e.AcUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd8Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD8_NUMERIC");

                entity.Property(e => e.AcUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_TEXT");

                entity.Property(e => e.AcUd9Bit).HasColumnName("AC_UD9_BIT");

                entity.Property(e => e.AcUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD9_DATE");

                entity.Property(e => e.AcUd9Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_ID");

                entity.Property(e => e.AcUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_ID_NAME");

                entity.Property(e => e.AcUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.AcUd9Numeric)
                    .HasColumnType("numeric(15, 0)")
                    .HasColumnName("AC_UD9_NUMERIC");

                entity.Property(e => e.AcUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_TEXT");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_NAME");

                entity.Property(e => e.AcgId).HasColumnName("ACG_ID");

                entity.Property(e => e.ActualClose)
                    .HasColumnType("datetime")
                    .HasColumnName("ACTUAL_CLOSE");

                entity.Property(e => e.Address1)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_1");

                entity.Property(e => e.Address2)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_2");

                entity.Property(e => e.Address3)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_3");

                entity.Property(e => e.Attendees).HasColumnName("ATTENDEES");

                entity.Property(e => e.Booking)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("BOOKING");

                entity.Property(e => e.CampaignSummary)
                    .HasMaxLength(255)
                    .HasColumnName("CAMPAIGN_SUMMARY");

                entity.Property(e => e.Confirmed).HasColumnName("CONFIRMED");

                entity.Property(e => e.CostBooking)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_BOOKING");

                entity.Property(e => e.CostItems)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_ITEMS");

                entity.Property(e => e.CostSub)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_SUB");

                entity.Property(e => e.CostTotal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_TOTAL");

                entity.Property(e => e.CostUpdatedSub)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_UPDATED_SUB");

                entity.Property(e => e.CostVat)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST_VAT");

                entity.Property(e => e.Country)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.County)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTY");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CurId).HasColumnName("CUR_ID");

                entity.Property(e => e.CurIdPriceList).HasColumnName("CUR_ID_PRICE_LIST");

                entity.Property(e => e.CurrencyCode)
                    .HasMaxLength(3)
                    .HasColumnName("CURRENCY_CODE");

                entity.Property(e => e.CurrencyRate).HasColumnName("CURRENCY_RATE");

                entity.Property(e => e.CurrencySymbol)
                    .HasMaxLength(3)
                    .HasColumnName("CURRENCY_SYMBOL");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.DiscountAccount).HasColumnName("DISCOUNT_ACCOUNT");

                entity.Property(e => e.DiscountItems).HasColumnName("DISCOUNT_ITEMS");

                entity.Property(e => e.Email1Address).HasMaxLength(255);

                entity.Property(e => e.EstimatedClose)
                    .HasColumnType("datetime")
                    .HasColumnName("ESTIMATED_CLOSE");

                entity.Property(e => e.ExternalEventbriteId)
                    .HasMaxLength(255)
                    .HasColumnName("EXTERNAL_EVENTBRITE_ID");

                entity.Property(e => e.Fax1)
                    .HasMaxLength(50)
                    .HasColumnName("FAX_1");

                entity.Property(e => e.FneId).HasColumnName("FNE_ID");

                entity.Property(e => e.ForecastDate)
                    .HasColumnType("datetime")
                    .HasColumnName("FORECAST_DATE");

                entity.Property(e => e.McaId).HasColumnName("MCA_ID");

                entity.Property(e => e.NumberOfItems).HasColumnName("NUMBER_OF_ITEMS");

                entity.Property(e => e.OriginalClosedWonDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ORIGINAL_CLOSED_WON_DATE");

                entity.Property(e => e.OriginalClosedWonTotal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ORIGINAL_CLOSED_WON_TOTAL");

                entity.Property(e => e.Owner).HasColumnName("OWNER");

                entity.Property(e => e.OwnerEmail)
                    .HasMaxLength(255)
                    .HasColumnName("OWNER_EMAIL");

                entity.Property(e => e.Phone1)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_1");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(255)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.ReferenceSeed).HasColumnName("REFERENCE_SEED");

                entity.Property(e => e.SemEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_END_DATE");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.SemName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_NAME");

                entity.Property(e => e.SemOwner).HasColumnName("SEM_OWNER");

                entity.Property(e => e.SemReference)
                    .HasMaxLength(50)
                    .HasColumnName("SEM_REFERENCE");

                entity.Property(e => e.SemSourceDetails)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_SOURCE_DETAILS");

                entity.Property(e => e.SemStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_START_DATE");

                entity.Property(e => e.SemState)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("SEM_STATE");

                entity.Property(e => e.SemStgId).HasColumnName("SEM_STG_ID");

                entity.Property(e => e.SemType)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_TYPE");

                entity.Property(e => e.SemUrl)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_URL");

                entity.Property(e => e.SembDeleted).HasColumnName("SEMB_DELETED");

                entity.Property(e => e.SembId).HasColumnName("SEMB_ID");

                entity.Property(e => e.SembState).HasColumnName("SEMB_STATE");

                entity.Property(e => e.SembUd10Bit).HasColumnName("SEMB_UD10_BIT");

                entity.Property(e => e.SembUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD10_DATE");

                entity.Property(e => e.SembUd10Id).HasColumnName("SEMB_UD10_ID");

                entity.Property(e => e.SembUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD10_ID_NAME");

                entity.Property(e => e.SembUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD10_NUMERIC");

                entity.Property(e => e.SembUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD10_TEXT");

                entity.Property(e => e.SembUd11Bit).HasColumnName("SEMB_UD11_BIT");

                entity.Property(e => e.SembUd12Bit).HasColumnName("SEMB_UD12_BIT");

                entity.Property(e => e.SembUd13Bit).HasColumnName("SEMB_UD13_BIT");

                entity.Property(e => e.SembUd14Bit).HasColumnName("SEMB_UD14_BIT");

                entity.Property(e => e.SembUd15Bit).HasColumnName("SEMB_UD15_BIT");

                entity.Property(e => e.SembUd16Bit).HasColumnName("SEMB_UD16_BIT");

                entity.Property(e => e.SembUd17Bit).HasColumnName("SEMB_UD17_BIT");

                entity.Property(e => e.SembUd18Bit).HasColumnName("SEMB_UD18_BIT");

                entity.Property(e => e.SembUd19Bit).HasColumnName("SEMB_UD19_BIT");

                entity.Property(e => e.SembUd1Bit).HasColumnName("SEMB_UD1_BIT");

                entity.Property(e => e.SembUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD1_DATE");

                entity.Property(e => e.SembUd1Id).HasColumnName("SEMB_UD1_ID");

                entity.Property(e => e.SembUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD1_ID_NAME");

                entity.Property(e => e.SembUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD1_NUMERIC");

                entity.Property(e => e.SembUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD1_TEXT");

                entity.Property(e => e.SembUd20Bit).HasColumnName("SEMB_UD20_BIT");

                entity.Property(e => e.SembUd21Bit).HasColumnName("SEMB_UD21_BIT");

                entity.Property(e => e.SembUd22Bit).HasColumnName("SEMB_UD22_BIT");

                entity.Property(e => e.SembUd23Bit).HasColumnName("SEMB_UD23_BIT");

                entity.Property(e => e.SembUd24Bit).HasColumnName("SEMB_UD24_BIT");

                entity.Property(e => e.SembUd2Bit).HasColumnName("SEMB_UD2_BIT");

                entity.Property(e => e.SembUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD2_DATE");

                entity.Property(e => e.SembUd2Id).HasColumnName("SEMB_UD2_ID");

                entity.Property(e => e.SembUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD2_ID_NAME");

                entity.Property(e => e.SembUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD2_NUMERIC");

                entity.Property(e => e.SembUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD2_TEXT");

                entity.Property(e => e.SembUd3Bit).HasColumnName("SEMB_UD3_BIT");

                entity.Property(e => e.SembUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD3_DATE");

                entity.Property(e => e.SembUd3Id).HasColumnName("SEMB_UD3_ID");

                entity.Property(e => e.SembUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD3_ID_NAME");

                entity.Property(e => e.SembUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD3_NUMERIC");

                entity.Property(e => e.SembUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD3_TEXT");

                entity.Property(e => e.SembUd4Bit).HasColumnName("SEMB_UD4_BIT");

                entity.Property(e => e.SembUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD4_DATE");

                entity.Property(e => e.SembUd4Id).HasColumnName("SEMB_UD4_ID");

                entity.Property(e => e.SembUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD4_ID_NAME");

                entity.Property(e => e.SembUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD4_NUMERIC");

                entity.Property(e => e.SembUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD4_TEXT");

                entity.Property(e => e.SembUd5Bit).HasColumnName("SEMB_UD5_BIT");

                entity.Property(e => e.SembUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD5_DATE");

                entity.Property(e => e.SembUd5Id).HasColumnName("SEMB_UD5_ID");

                entity.Property(e => e.SembUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD5_ID_NAME");

                entity.Property(e => e.SembUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD5_NUMERIC");

                entity.Property(e => e.SembUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD5_TEXT");

                entity.Property(e => e.SembUd6Bit).HasColumnName("SEMB_UD6_BIT");

                entity.Property(e => e.SembUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD6_DATE");

                entity.Property(e => e.SembUd6Id).HasColumnName("SEMB_UD6_ID");

                entity.Property(e => e.SembUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD6_ID_NAME");

                entity.Property(e => e.SembUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD6_NUMERIC");

                entity.Property(e => e.SembUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD6_TEXT");

                entity.Property(e => e.SembUd7Bit).HasColumnName("SEMB_UD7_BIT");

                entity.Property(e => e.SembUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD7_DATE");

                entity.Property(e => e.SembUd7Id).HasColumnName("SEMB_UD7_ID");

                entity.Property(e => e.SembUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD7_ID_NAME");

                entity.Property(e => e.SembUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD7_NUMERIC");

                entity.Property(e => e.SembUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD7_TEXT");

                entity.Property(e => e.SembUd8Bit).HasColumnName("SEMB_UD8_BIT");

                entity.Property(e => e.SembUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD8_DATE");

                entity.Property(e => e.SembUd8Id).HasColumnName("SEMB_UD8_ID");

                entity.Property(e => e.SembUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD8_ID_NAME");

                entity.Property(e => e.SembUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD8_NUMERIC");

                entity.Property(e => e.SembUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD8_TEXT");

                entity.Property(e => e.SembUd9Bit).HasColumnName("SEMB_UD9_BIT");

                entity.Property(e => e.SembUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD9_DATE");

                entity.Property(e => e.SembUd9Id).HasColumnName("SEMB_UD9_ID");

                entity.Property(e => e.SembUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD9_ID_NAME");

                entity.Property(e => e.SembUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD9_NUMERIC");

                entity.Property(e => e.SembUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD9_TEXT");

                entity.Property(e => e.SgId).HasColumnName("SG_ID");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.StageSummary)
                    .HasMaxLength(255)
                    .HasColumnName("STAGE_SUMMARY");

                entity.Property(e => e.State)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("STATE");

                entity.Property(e => e.StgId).HasColumnName("STG_ID");

                entity.Property(e => e.Town)
                    .HasMaxLength(255)
                    .HasColumnName("TOWN");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsName)
                    .HasMaxLength(255)
                    .HasColumnName("US_NAME");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");

                entity.Property(e => e.UsgName)
                    .HasMaxLength(255)
                    .HasColumnName("USG_NAME");

                entity.Property(e => e.Value)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("VALUE");
            });

            modelBuilder.Entity<VSeminarBookingAttendee>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vSeminarBookingAttendees");

                entity.Property(e => e.AcExternal)
                    .HasMaxLength(255)
                    .HasColumnName("AC_EXTERNAL");

                entity.Property(e => e.AcFlag)
                    .HasMaxLength(255)
                    .HasColumnName("AC_FLAG");

                entity.Property(e => e.AcFlagHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_FLAG_HLIGHT");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcIndustry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_INDUSTRY");

                entity.Property(e => e.AcIndustryHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_INDUSTRY_HLIGHT");

                entity.Property(e => e.AcLabel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LABEL");

                entity.Property(e => e.AcLabelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LABEL_HLIGHT");

                entity.Property(e => e.AcLevel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LEVEL");

                entity.Property(e => e.AcLevelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LEVEL_HLIGHT");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.AcSource)
                    .HasMaxLength(255)
                    .HasColumnName("AC_SOURCE");

                entity.Property(e => e.AcSourceHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_SOURCE_HLIGHT");

                entity.Property(e => e.AcType1)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_1");

                entity.Property(e => e.AcType1Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_1_HLIGHT");

                entity.Property(e => e.AcType2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_2");

                entity.Property(e => e.AcType2Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_2_HLIGHT");

                entity.Property(e => e.AccBusinessAddressCity)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BusinessAddressCity");

                entity.Property(e => e.AccBusinessAddressCountry)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BusinessAddressCountry");

                entity.Property(e => e.AccBusinessAddressPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BusinessAddressPostalCode");

                entity.Property(e => e.AccBusinessAddressState)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BusinessAddressState");

                entity.Property(e => e.AccBusinessAddressStreet)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BusinessAddressStreet");

                entity.Property(e => e.AccBusinessAddressStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BusinessAddressStreet2");

                entity.Property(e => e.AccBusinessAddressStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BusinessAddressStreet3");

                entity.Property(e => e.AccBusinessFaxNumber)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BusinessFaxNumber");

                entity.Property(e => e.AccBusinesstelephonenumber)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BUSINESSTELEPHONENUMBER");

                entity.Property(e => e.AccEmail1address)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_EMAIL1ADDRESS");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccJobtitle)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_JOBTITLE");

                entity.Property(e => e.AccMobiletelephonenumber)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_MOBILETELEPHONENUMBER");

                entity.Property(e => e.AccName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_NAME");

                entity.Property(e => e.AccReference)
                    .HasMaxLength(50)
                    .HasColumnName("ACC_REFERENCE");

                entity.Property(e => e.AccUd1)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD1");

                entity.Property(e => e.AccUd10)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD10");

                entity.Property(e => e.AccUd10Bit).HasColumnName("ACC_UD10_BIT");

                entity.Property(e => e.AccUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD10_DATE");

                entity.Property(e => e.AccUd10Id).HasColumnName("ACC_UD10_ID");

                entity.Property(e => e.AccUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD10_ID_NAME");

                entity.Property(e => e.AccUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD10_NUMERIC");

                entity.Property(e => e.AccUd11)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD11");

                entity.Property(e => e.AccUd11Bit).HasColumnName("ACC_UD11_BIT");

                entity.Property(e => e.AccUd12)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD12");

                entity.Property(e => e.AccUd12Bit).HasColumnName("ACC_UD12_BIT");

                entity.Property(e => e.AccUd13)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD13");

                entity.Property(e => e.AccUd13Bit).HasColumnName("ACC_UD13_BIT");

                entity.Property(e => e.AccUd14)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD14");

                entity.Property(e => e.AccUd14Bit).HasColumnName("ACC_UD14_BIT");

                entity.Property(e => e.AccUd15)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD15");

                entity.Property(e => e.AccUd15Bit).HasColumnName("ACC_UD15_BIT");

                entity.Property(e => e.AccUd16Bit).HasColumnName("ACC_UD16_BIT");

                entity.Property(e => e.AccUd17Bit).HasColumnName("ACC_UD17_BIT");

                entity.Property(e => e.AccUd18Bit).HasColumnName("ACC_UD18_BIT");

                entity.Property(e => e.AccUd19Bit).HasColumnName("ACC_UD19_BIT");

                entity.Property(e => e.AccUd1Bit).HasColumnName("ACC_UD1_BIT");

                entity.Property(e => e.AccUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD1_DATE");

                entity.Property(e => e.AccUd1Id).HasColumnName("ACC_UD1_ID");

                entity.Property(e => e.AccUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD1_ID_NAME");

                entity.Property(e => e.AccUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD1_NUMERIC");

                entity.Property(e => e.AccUd2)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD2");

                entity.Property(e => e.AccUd20Bit).HasColumnName("ACC_UD20_BIT");

                entity.Property(e => e.AccUd21Bit).HasColumnName("ACC_UD21_BIT");

                entity.Property(e => e.AccUd22Bit).HasColumnName("ACC_UD22_BIT");

                entity.Property(e => e.AccUd23Bit).HasColumnName("ACC_UD23_BIT");

                entity.Property(e => e.AccUd24Bit).HasColumnName("ACC_UD24_BIT");

                entity.Property(e => e.AccUd2Bit).HasColumnName("ACC_UD2_BIT");

                entity.Property(e => e.AccUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD2_DATE");

                entity.Property(e => e.AccUd2Id).HasColumnName("ACC_UD2_ID");

                entity.Property(e => e.AccUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD2_ID_NAME");

                entity.Property(e => e.AccUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD2_NUMERIC");

                entity.Property(e => e.AccUd3)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD3");

                entity.Property(e => e.AccUd3Bit).HasColumnName("ACC_UD3_BIT");

                entity.Property(e => e.AccUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD3_DATE");

                entity.Property(e => e.AccUd3Id).HasColumnName("ACC_UD3_ID");

                entity.Property(e => e.AccUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD3_ID_NAME");

                entity.Property(e => e.AccUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD3_NUMERIC");

                entity.Property(e => e.AccUd4)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD4");

                entity.Property(e => e.AccUd4Bit).HasColumnName("ACC_UD4_BIT");

                entity.Property(e => e.AccUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD4_DATE");

                entity.Property(e => e.AccUd4Id).HasColumnName("ACC_UD4_ID");

                entity.Property(e => e.AccUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD4_ID_NAME");

                entity.Property(e => e.AccUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD4_NUMERIC");

                entity.Property(e => e.AccUd5)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD5");

                entity.Property(e => e.AccUd5Bit).HasColumnName("ACC_UD5_BIT");

                entity.Property(e => e.AccUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD5_DATE");

                entity.Property(e => e.AccUd5Id).HasColumnName("ACC_UD5_ID");

                entity.Property(e => e.AccUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD5_ID_NAME");

                entity.Property(e => e.AccUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD5_NUMERIC");

                entity.Property(e => e.AccUd6)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD6");

                entity.Property(e => e.AccUd6Bit).HasColumnName("ACC_UD6_BIT");

                entity.Property(e => e.AccUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD6_DATE");

                entity.Property(e => e.AccUd6Id).HasColumnName("ACC_UD6_ID");

                entity.Property(e => e.AccUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD6_ID_NAME");

                entity.Property(e => e.AccUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD6_NUMERIC");

                entity.Property(e => e.AccUd7)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD7");

                entity.Property(e => e.AccUd7Bit).HasColumnName("ACC_UD7_BIT");

                entity.Property(e => e.AccUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD7_DATE");

                entity.Property(e => e.AccUd7Id).HasColumnName("ACC_UD7_ID");

                entity.Property(e => e.AccUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD7_ID_NAME");

                entity.Property(e => e.AccUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD7_NUMERIC");

                entity.Property(e => e.AccUd8)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD8");

                entity.Property(e => e.AccUd8Bit).HasColumnName("ACC_UD8_BIT");

                entity.Property(e => e.AccUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD8_DATE");

                entity.Property(e => e.AccUd8Id).HasColumnName("ACC_UD8_ID");

                entity.Property(e => e.AccUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD8_ID_NAME");

                entity.Property(e => e.AccUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD8_NUMERIC");

                entity.Property(e => e.AccUd9)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD9");

                entity.Property(e => e.AccUd9Bit).HasColumnName("ACC_UD9_BIT");

                entity.Property(e => e.AccUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD9_DATE");

                entity.Property(e => e.AccUd9Id).HasColumnName("ACC_UD9_ID");

                entity.Property(e => e.AccUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD9_ID_NAME");

                entity.Property(e => e.AccUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD9_NUMERIC");

                entity.Property(e => e.AccountManager).HasColumnName("ACCOUNT_MANAGER");

                entity.Property(e => e.AcgId).HasColumnName("ACG_ID");

                entity.Property(e => e.Address1)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_1");

                entity.Property(e => e.Address2)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_2");

                entity.Property(e => e.Address3)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_3");

                entity.Property(e => e.AttendeeSummary)
                    .HasMaxLength(255)
                    .HasColumnName("ATTENDEE_SUMMARY");

                entity.Property(e => e.BookedSessions).HasColumnName("BOOKED_SESSIONS");

                entity.Property(e => e.BookingDate)
                    .HasColumnType("datetime")
                    .HasColumnName("BOOKING_DATE");

                entity.Property(e => e.Country)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.County)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTY");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CsId).HasColumnName("CS_ID");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.Email1Address).HasMaxLength(255);

                entity.Property(e => e.ExternalEventbriteId)
                    .HasMaxLength(255)
                    .HasColumnName("EXTERNAL_EVENTBRITE_ID");

                entity.Property(e => e.Fax1)
                    .HasMaxLength(50)
                    .HasColumnName("FAX_1");

                entity.Property(e => e.LeadSummary)
                    .HasMaxLength(255)
                    .HasColumnName("LEAD_SUMMARY");

                entity.Property(e => e.OpenBooking)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("OPEN_BOOKING");

                entity.Property(e => e.Owner).HasColumnName("OWNER");

                entity.Property(e => e.Phone1)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_1");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(255)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.SemEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_END_DATE");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.SemOwner).HasColumnName("SEM_OWNER");

                entity.Property(e => e.SemReference)
                    .HasMaxLength(50)
                    .HasColumnName("SEM_REFERENCE");

                entity.Property(e => e.SemSourceDetails)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_SOURCE_DETAILS");

                entity.Property(e => e.SemStage)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_STAGE");

                entity.Property(e => e.SemStageHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_STAGE_HLIGHT");

                entity.Property(e => e.SemStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_START_DATE");

                entity.Property(e => e.SemState)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("SEM_STATE");

                entity.Property(e => e.SemSummary)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_SUMMARY");

                entity.Property(e => e.SemType)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_TYPE");

                entity.Property(e => e.SemTypeHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_TYPE_HLIGHT");

                entity.Property(e => e.SemUd10Bit).HasColumnName("SEM_UD10_BIT");

                entity.Property(e => e.SemUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD10_DATE");

                entity.Property(e => e.SemUd10Id).HasColumnName("SEM_UD10_ID");

                entity.Property(e => e.SemUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD10_ID_NAME");

                entity.Property(e => e.SemUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD10_NUMERIC");

                entity.Property(e => e.SemUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD10_TEXT");

                entity.Property(e => e.SemUd11Bit).HasColumnName("SEM_UD11_BIT");

                entity.Property(e => e.SemUd12Bit).HasColumnName("SEM_UD12_BIT");

                entity.Property(e => e.SemUd13Bit).HasColumnName("SEM_UD13_BIT");

                entity.Property(e => e.SemUd14Bit).HasColumnName("SEM_UD14_BIT");

                entity.Property(e => e.SemUd15Bit).HasColumnName("SEM_UD15_BIT");

                entity.Property(e => e.SemUd16Bit).HasColumnName("SEM_UD16_BIT");

                entity.Property(e => e.SemUd17Bit).HasColumnName("SEM_UD17_BIT");

                entity.Property(e => e.SemUd18Bit).HasColumnName("SEM_UD18_BIT");

                entity.Property(e => e.SemUd19Bit).HasColumnName("SEM_UD19_BIT");

                entity.Property(e => e.SemUd1Bit).HasColumnName("SEM_UD1_BIT");

                entity.Property(e => e.SemUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD1_DATE");

                entity.Property(e => e.SemUd1Id).HasColumnName("SEM_UD1_ID");

                entity.Property(e => e.SemUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD1_ID_NAME");

                entity.Property(e => e.SemUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD1_NUMERIC");

                entity.Property(e => e.SemUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD1_TEXT");

                entity.Property(e => e.SemUd20Bit).HasColumnName("SEM_UD20_BIT");

                entity.Property(e => e.SemUd21Bit).HasColumnName("SEM_UD21_BIT");

                entity.Property(e => e.SemUd22Bit).HasColumnName("SEM_UD22_BIT");

                entity.Property(e => e.SemUd23Bit).HasColumnName("SEM_UD23_BIT");

                entity.Property(e => e.SemUd24Bit).HasColumnName("SEM_UD24_BIT");

                entity.Property(e => e.SemUd2Bit).HasColumnName("SEM_UD2_BIT");

                entity.Property(e => e.SemUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD2_DATE");

                entity.Property(e => e.SemUd2Id).HasColumnName("SEM_UD2_ID");

                entity.Property(e => e.SemUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD2_ID_NAME");

                entity.Property(e => e.SemUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD2_NUMERIC");

                entity.Property(e => e.SemUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD2_TEXT");

                entity.Property(e => e.SemUd3Bit).HasColumnName("SEM_UD3_BIT");

                entity.Property(e => e.SemUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD3_DATE");

                entity.Property(e => e.SemUd3Id).HasColumnName("SEM_UD3_ID");

                entity.Property(e => e.SemUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD3_ID_NAME");

                entity.Property(e => e.SemUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD3_NUMERIC");

                entity.Property(e => e.SemUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD3_TEXT");

                entity.Property(e => e.SemUd4Bit).HasColumnName("SEM_UD4_BIT");

                entity.Property(e => e.SemUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD4_DATE");

                entity.Property(e => e.SemUd4Id).HasColumnName("SEM_UD4_ID");

                entity.Property(e => e.SemUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD4_ID_NAME");

                entity.Property(e => e.SemUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD4_NUMERIC");

                entity.Property(e => e.SemUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD4_TEXT");

                entity.Property(e => e.SemUd5Bit).HasColumnName("SEM_UD5_BIT");

                entity.Property(e => e.SemUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD5_DATE");

                entity.Property(e => e.SemUd5Id).HasColumnName("SEM_UD5_ID");

                entity.Property(e => e.SemUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD5_ID_NAME");

                entity.Property(e => e.SemUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD5_NUMERIC");

                entity.Property(e => e.SemUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD5_TEXT");

                entity.Property(e => e.SemUd6Bit).HasColumnName("SEM_UD6_BIT");

                entity.Property(e => e.SemUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD6_DATE");

                entity.Property(e => e.SemUd6Id).HasColumnName("SEM_UD6_ID");

                entity.Property(e => e.SemUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD6_ID_NAME");

                entity.Property(e => e.SemUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD6_NUMERIC");

                entity.Property(e => e.SemUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD6_TEXT");

                entity.Property(e => e.SemUd7Bit).HasColumnName("SEM_UD7_BIT");

                entity.Property(e => e.SemUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD7_DATE");

                entity.Property(e => e.SemUd7Id).HasColumnName("SEM_UD7_ID");

                entity.Property(e => e.SemUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD7_ID_NAME");

                entity.Property(e => e.SemUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD7_NUMERIC");

                entity.Property(e => e.SemUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD7_TEXT");

                entity.Property(e => e.SemUd8Bit).HasColumnName("SEM_UD8_BIT");

                entity.Property(e => e.SemUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD8_DATE");

                entity.Property(e => e.SemUd8Id).HasColumnName("SEM_UD8_ID");

                entity.Property(e => e.SemUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD8_ID_NAME");

                entity.Property(e => e.SemUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD8_NUMERIC");

                entity.Property(e => e.SemUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD8_TEXT");

                entity.Property(e => e.SemUd9Bit).HasColumnName("SEM_UD9_BIT");

                entity.Property(e => e.SemUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD9_DATE");

                entity.Property(e => e.SemUd9Id).HasColumnName("SEM_UD9_ID");

                entity.Property(e => e.SemUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD9_ID_NAME");

                entity.Property(e => e.SemUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD9_NUMERIC");

                entity.Property(e => e.SemUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD9_TEXT");

                entity.Property(e => e.SemUrl)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_URL");

                entity.Property(e => e.SembAccBusinessAddressCity)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_BusinessAddressCity");

                entity.Property(e => e.SembAccBusinessAddressCountry)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_BusinessAddressCountry");

                entity.Property(e => e.SembAccBusinessAddressPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_BusinessAddressPostalCode");

                entity.Property(e => e.SembAccBusinessAddressState)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_BusinessAddressState");

                entity.Property(e => e.SembAccBusinessAddressStreet)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_BusinessAddressStreet");

                entity.Property(e => e.SembAccBusinessAddressStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_BusinessAddressStreet2");

                entity.Property(e => e.SembAccBusinessAddressStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_BusinessAddressStreet3");

                entity.Property(e => e.SembAccBusinessFaxNumber)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_BusinessFaxNumber");

                entity.Property(e => e.SembAccBusinesstelephonenumber)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_BUSINESSTELEPHONENUMBER");

                entity.Property(e => e.SembAccEmail1address)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_EMAIL1ADDRESS");

                entity.Property(e => e.SembAccId).HasColumnName("SEMB_ACC_ID");

                entity.Property(e => e.SembAccJobtitle)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_JOBTITLE");

                entity.Property(e => e.SembAccMobiletelephonenumber)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_MOBILETELEPHONENUMBER");

                entity.Property(e => e.SembAccName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_NAME");

                entity.Property(e => e.SembConfirmed).HasColumnName("SEMB_CONFIRMED");

                entity.Property(e => e.SembId).HasColumnName("SEMB_ID");

                entity.Property(e => e.SembReference)
                    .HasMaxLength(50)
                    .HasColumnName("SEMB_REFERENCE");

                entity.Property(e => e.SembState).HasColumnName("SEMB_STATE");

                entity.Property(e => e.SembUd10Bit).HasColumnName("SEMB_UD10_BIT");

                entity.Property(e => e.SembUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD10_DATE");

                entity.Property(e => e.SembUd10Id).HasColumnName("SEMB_UD10_ID");

                entity.Property(e => e.SembUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD10_ID_NAME");

                entity.Property(e => e.SembUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD10_NUMERIC");

                entity.Property(e => e.SembUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD10_TEXT");

                entity.Property(e => e.SembUd11Bit).HasColumnName("SEMB_UD11_BIT");

                entity.Property(e => e.SembUd12Bit).HasColumnName("SEMB_UD12_BIT");

                entity.Property(e => e.SembUd13Bit).HasColumnName("SEMB_UD13_BIT");

                entity.Property(e => e.SembUd14Bit).HasColumnName("SEMB_UD14_BIT");

                entity.Property(e => e.SembUd15Bit).HasColumnName("SEMB_UD15_BIT");

                entity.Property(e => e.SembUd16Bit).HasColumnName("SEMB_UD16_BIT");

                entity.Property(e => e.SembUd17Bit).HasColumnName("SEMB_UD17_BIT");

                entity.Property(e => e.SembUd18Bit).HasColumnName("SEMB_UD18_BIT");

                entity.Property(e => e.SembUd19Bit).HasColumnName("SEMB_UD19_BIT");

                entity.Property(e => e.SembUd1Bit).HasColumnName("SEMB_UD1_BIT");

                entity.Property(e => e.SembUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD1_DATE");

                entity.Property(e => e.SembUd1Id).HasColumnName("SEMB_UD1_ID");

                entity.Property(e => e.SembUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD1_ID_NAME");

                entity.Property(e => e.SembUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD1_NUMERIC");

                entity.Property(e => e.SembUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD1_TEXT");

                entity.Property(e => e.SembUd20Bit).HasColumnName("SEMB_UD20_BIT");

                entity.Property(e => e.SembUd21Bit).HasColumnName("SEMB_UD21_BIT");

                entity.Property(e => e.SembUd22Bit).HasColumnName("SEMB_UD22_BIT");

                entity.Property(e => e.SembUd23Bit).HasColumnName("SEMB_UD23_BIT");

                entity.Property(e => e.SembUd24Bit).HasColumnName("SEMB_UD24_BIT");

                entity.Property(e => e.SembUd2Bit).HasColumnName("SEMB_UD2_BIT");

                entity.Property(e => e.SembUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD2_DATE");

                entity.Property(e => e.SembUd2Id).HasColumnName("SEMB_UD2_ID");

                entity.Property(e => e.SembUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD2_ID_NAME");

                entity.Property(e => e.SembUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD2_NUMERIC");

                entity.Property(e => e.SembUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD2_TEXT");

                entity.Property(e => e.SembUd3Bit).HasColumnName("SEMB_UD3_BIT");

                entity.Property(e => e.SembUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD3_DATE");

                entity.Property(e => e.SembUd3Id).HasColumnName("SEMB_UD3_ID");

                entity.Property(e => e.SembUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD3_ID_NAME");

                entity.Property(e => e.SembUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD3_NUMERIC");

                entity.Property(e => e.SembUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD3_TEXT");

                entity.Property(e => e.SembUd4Bit).HasColumnName("SEMB_UD4_BIT");

                entity.Property(e => e.SembUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD4_DATE");

                entity.Property(e => e.SembUd4Id).HasColumnName("SEMB_UD4_ID");

                entity.Property(e => e.SembUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD4_ID_NAME");

                entity.Property(e => e.SembUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD4_NUMERIC");

                entity.Property(e => e.SembUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD4_TEXT");

                entity.Property(e => e.SembUd5Bit).HasColumnName("SEMB_UD5_BIT");

                entity.Property(e => e.SembUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD5_DATE");

                entity.Property(e => e.SembUd5Id).HasColumnName("SEMB_UD5_ID");

                entity.Property(e => e.SembUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD5_ID_NAME");

                entity.Property(e => e.SembUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD5_NUMERIC");

                entity.Property(e => e.SembUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD5_TEXT");

                entity.Property(e => e.SembUd6Bit).HasColumnName("SEMB_UD6_BIT");

                entity.Property(e => e.SembUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD6_DATE");

                entity.Property(e => e.SembUd6Id).HasColumnName("SEMB_UD6_ID");

                entity.Property(e => e.SembUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD6_ID_NAME");

                entity.Property(e => e.SembUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD6_NUMERIC");

                entity.Property(e => e.SembUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD6_TEXT");

                entity.Property(e => e.SembUd7Bit).HasColumnName("SEMB_UD7_BIT");

                entity.Property(e => e.SembUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD7_DATE");

                entity.Property(e => e.SembUd7Id).HasColumnName("SEMB_UD7_ID");

                entity.Property(e => e.SembUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD7_ID_NAME");

                entity.Property(e => e.SembUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD7_NUMERIC");

                entity.Property(e => e.SembUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD7_TEXT");

                entity.Property(e => e.SembUd8Bit).HasColumnName("SEMB_UD8_BIT");

                entity.Property(e => e.SembUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD8_DATE");

                entity.Property(e => e.SembUd8Id).HasColumnName("SEMB_UD8_ID");

                entity.Property(e => e.SembUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD8_ID_NAME");

                entity.Property(e => e.SembUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD8_NUMERIC");

                entity.Property(e => e.SembUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD8_TEXT");

                entity.Property(e => e.SembUd9Bit).HasColumnName("SEMB_UD9_BIT");

                entity.Property(e => e.SembUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD9_DATE");

                entity.Property(e => e.SembUd9Id).HasColumnName("SEMB_UD9_ID");

                entity.Property(e => e.SembUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD9_ID_NAME");

                entity.Property(e => e.SembUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD9_NUMERIC");

                entity.Property(e => e.SembUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD9_TEXT");

                entity.Property(e => e.SembaId).HasColumnName("SEMBA_ID");

                entity.Property(e => e.SembaNumber).HasColumnName("SEMBA_NUMBER");

                entity.Property(e => e.SembaOrder)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_ORDER");

                entity.Property(e => e.SembaUd10Bit).HasColumnName("SEMBA_UD10_BIT");

                entity.Property(e => e.SembaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD10_DATE");

                entity.Property(e => e.SembaUd10Id).HasColumnName("SEMBA_UD10_ID");

                entity.Property(e => e.SembaUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD10_ID_NAME");

                entity.Property(e => e.SembaUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMBA_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.SembaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD10_NUMERIC");

                entity.Property(e => e.SembaUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD10_TEXT");

                entity.Property(e => e.SembaUd11Bit).HasColumnName("SEMBA_UD11_BIT");

                entity.Property(e => e.SembaUd12Bit).HasColumnName("SEMBA_UD12_BIT");

                entity.Property(e => e.SembaUd13Bit).HasColumnName("SEMBA_UD13_BIT");

                entity.Property(e => e.SembaUd14Bit).HasColumnName("SEMBA_UD14_BIT");

                entity.Property(e => e.SembaUd15Bit).HasColumnName("SEMBA_UD15_BIT");

                entity.Property(e => e.SembaUd16Bit).HasColumnName("SEMBA_UD16_BIT");

                entity.Property(e => e.SembaUd17Bit).HasColumnName("SEMBA_UD17_BIT");

                entity.Property(e => e.SembaUd18Bit).HasColumnName("SEMBA_UD18_BIT");

                entity.Property(e => e.SembaUd19Bit).HasColumnName("SEMBA_UD19_BIT");

                entity.Property(e => e.SembaUd1Bit).HasColumnName("SEMBA_UD1_BIT");

                entity.Property(e => e.SembaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD1_DATE");

                entity.Property(e => e.SembaUd1Id).HasColumnName("SEMBA_UD1_ID");

                entity.Property(e => e.SembaUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD1_ID_NAME");

                entity.Property(e => e.SembaUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMBA_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.SembaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD1_NUMERIC");

                entity.Property(e => e.SembaUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD1_TEXT");

                entity.Property(e => e.SembaUd20Bit).HasColumnName("SEMBA_UD20_BIT");

                entity.Property(e => e.SembaUd21Bit).HasColumnName("SEMBA_UD21_BIT");

                entity.Property(e => e.SembaUd22Bit).HasColumnName("SEMBA_UD22_BIT");

                entity.Property(e => e.SembaUd23Bit).HasColumnName("SEMBA_UD23_BIT");

                entity.Property(e => e.SembaUd24Bit).HasColumnName("SEMBA_UD24_BIT");

                entity.Property(e => e.SembaUd2Bit).HasColumnName("SEMBA_UD2_BIT");

                entity.Property(e => e.SembaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD2_DATE");

                entity.Property(e => e.SembaUd2Id).HasColumnName("SEMBA_UD2_ID");

                entity.Property(e => e.SembaUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD2_ID_NAME");

                entity.Property(e => e.SembaUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMBA_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.SembaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD2_NUMERIC");

                entity.Property(e => e.SembaUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD2_TEXT");

                entity.Property(e => e.SembaUd3Bit).HasColumnName("SEMBA_UD3_BIT");

                entity.Property(e => e.SembaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD3_DATE");

                entity.Property(e => e.SembaUd3Id).HasColumnName("SEMBA_UD3_ID");

                entity.Property(e => e.SembaUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD3_ID_NAME");

                entity.Property(e => e.SembaUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMBA_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.SembaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD3_NUMERIC");

                entity.Property(e => e.SembaUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD3_TEXT");

                entity.Property(e => e.SembaUd4Bit).HasColumnName("SEMBA_UD4_BIT");

                entity.Property(e => e.SembaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD4_DATE");

                entity.Property(e => e.SembaUd4Id).HasColumnName("SEMBA_UD4_ID");

                entity.Property(e => e.SembaUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD4_ID_NAME");

                entity.Property(e => e.SembaUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMBA_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.SembaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD4_NUMERIC");

                entity.Property(e => e.SembaUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD4_TEXT");

                entity.Property(e => e.SembaUd5Bit).HasColumnName("SEMBA_UD5_BIT");

                entity.Property(e => e.SembaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD5_DATE");

                entity.Property(e => e.SembaUd5Id).HasColumnName("SEMBA_UD5_ID");

                entity.Property(e => e.SembaUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD5_ID_NAME");

                entity.Property(e => e.SembaUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMBA_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.SembaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD5_NUMERIC");

                entity.Property(e => e.SembaUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD5_TEXT");

                entity.Property(e => e.SembaUd6Bit).HasColumnName("SEMBA_UD6_BIT");

                entity.Property(e => e.SembaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD6_DATE");

                entity.Property(e => e.SembaUd6Id).HasColumnName("SEMBA_UD6_ID");

                entity.Property(e => e.SembaUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD6_ID_NAME");

                entity.Property(e => e.SembaUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMBA_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.SembaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD6_NUMERIC");

                entity.Property(e => e.SembaUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD6_TEXT");

                entity.Property(e => e.SembaUd7Bit).HasColumnName("SEMBA_UD7_BIT");

                entity.Property(e => e.SembaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD7_DATE");

                entity.Property(e => e.SembaUd7Id).HasColumnName("SEMBA_UD7_ID");

                entity.Property(e => e.SembaUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD7_ID_NAME");

                entity.Property(e => e.SembaUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMBA_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.SembaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD7_NUMERIC");

                entity.Property(e => e.SembaUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD7_TEXT");

                entity.Property(e => e.SembaUd8Bit).HasColumnName("SEMBA_UD8_BIT");

                entity.Property(e => e.SembaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD8_DATE");

                entity.Property(e => e.SembaUd8Id).HasColumnName("SEMBA_UD8_ID");

                entity.Property(e => e.SembaUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD8_ID_NAME");

                entity.Property(e => e.SembaUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMBA_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.SembaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD8_NUMERIC");

                entity.Property(e => e.SembaUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD8_TEXT");

                entity.Property(e => e.SembaUd9Bit).HasColumnName("SEMBA_UD9_BIT");

                entity.Property(e => e.SembaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD9_DATE");

                entity.Property(e => e.SembaUd9Id).HasColumnName("SEMBA_UD9_ID");

                entity.Property(e => e.SembaUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD9_ID_NAME");

                entity.Property(e => e.SembaUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMBA_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.SembaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD9_NUMERIC");

                entity.Property(e => e.SembaUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD9_TEXT");

                entity.Property(e => e.SgId).HasColumnName("SG_ID");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Town)
                    .HasMaxLength(255)
                    .HasColumnName("TOWN");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsName)
                    .HasMaxLength(255)
                    .HasColumnName("US_NAME");
            });

            modelBuilder.Entity<VSeminarBookingAttendeesNotClosedLost>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vSeminarBookingAttendeesNotClosedLost");

                entity.Property(e => e.AcExternal)
                    .HasMaxLength(255)
                    .HasColumnName("AC_EXTERNAL");

                entity.Property(e => e.AcFlag)
                    .HasMaxLength(255)
                    .HasColumnName("AC_FLAG");

                entity.Property(e => e.AcFlagHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_FLAG_HLIGHT");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcIndustry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_INDUSTRY");

                entity.Property(e => e.AcIndustryHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_INDUSTRY_HLIGHT");

                entity.Property(e => e.AcLabel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LABEL");

                entity.Property(e => e.AcLabelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LABEL_HLIGHT");

                entity.Property(e => e.AcLevel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LEVEL");

                entity.Property(e => e.AcLevelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LEVEL_HLIGHT");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.AcSource)
                    .HasMaxLength(255)
                    .HasColumnName("AC_SOURCE");

                entity.Property(e => e.AcSourceHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_SOURCE_HLIGHT");

                entity.Property(e => e.AcType1)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_1");

                entity.Property(e => e.AcType1Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_1_HLIGHT");

                entity.Property(e => e.AcType2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_2");

                entity.Property(e => e.AcType2Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_2_HLIGHT");

                entity.Property(e => e.AccBusinessAddressCity)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BusinessAddressCity");

                entity.Property(e => e.AccBusinessAddressCountry)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BusinessAddressCountry");

                entity.Property(e => e.AccBusinessAddressPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BusinessAddressPostalCode");

                entity.Property(e => e.AccBusinessAddressState)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BusinessAddressState");

                entity.Property(e => e.AccBusinessAddressStreet)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BusinessAddressStreet");

                entity.Property(e => e.AccBusinessAddressStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BusinessAddressStreet2");

                entity.Property(e => e.AccBusinessAddressStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BusinessAddressStreet3");

                entity.Property(e => e.AccBusinessFaxNumber)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BusinessFaxNumber");

                entity.Property(e => e.AccBusinesstelephonenumber)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BUSINESSTELEPHONENUMBER");

                entity.Property(e => e.AccEmail1address)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_EMAIL1ADDRESS");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccJobtitle)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_JOBTITLE");

                entity.Property(e => e.AccMobiletelephonenumber)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_MOBILETELEPHONENUMBER");

                entity.Property(e => e.AccName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_NAME");

                entity.Property(e => e.AccUd1)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD1");

                entity.Property(e => e.AccUd10)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD10");

                entity.Property(e => e.AccUd10Bit).HasColumnName("ACC_UD10_BIT");

                entity.Property(e => e.AccUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD10_DATE");

                entity.Property(e => e.AccUd10Id).HasColumnName("ACC_UD10_ID");

                entity.Property(e => e.AccUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD10_ID_NAME");

                entity.Property(e => e.AccUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD10_NUMERIC");

                entity.Property(e => e.AccUd11)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD11");

                entity.Property(e => e.AccUd11Bit).HasColumnName("ACC_UD11_BIT");

                entity.Property(e => e.AccUd12)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD12");

                entity.Property(e => e.AccUd12Bit).HasColumnName("ACC_UD12_BIT");

                entity.Property(e => e.AccUd13)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD13");

                entity.Property(e => e.AccUd13Bit).HasColumnName("ACC_UD13_BIT");

                entity.Property(e => e.AccUd14)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD14");

                entity.Property(e => e.AccUd14Bit).HasColumnName("ACC_UD14_BIT");

                entity.Property(e => e.AccUd15)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD15");

                entity.Property(e => e.AccUd15Bit).HasColumnName("ACC_UD15_BIT");

                entity.Property(e => e.AccUd16Bit).HasColumnName("ACC_UD16_BIT");

                entity.Property(e => e.AccUd17Bit).HasColumnName("ACC_UD17_BIT");

                entity.Property(e => e.AccUd18Bit).HasColumnName("ACC_UD18_BIT");

                entity.Property(e => e.AccUd19Bit).HasColumnName("ACC_UD19_BIT");

                entity.Property(e => e.AccUd1Bit).HasColumnName("ACC_UD1_BIT");

                entity.Property(e => e.AccUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD1_DATE");

                entity.Property(e => e.AccUd1Id).HasColumnName("ACC_UD1_ID");

                entity.Property(e => e.AccUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD1_ID_NAME");

                entity.Property(e => e.AccUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD1_NUMERIC");

                entity.Property(e => e.AccUd2)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD2");

                entity.Property(e => e.AccUd20Bit).HasColumnName("ACC_UD20_BIT");

                entity.Property(e => e.AccUd21Bit).HasColumnName("ACC_UD21_BIT");

                entity.Property(e => e.AccUd22Bit).HasColumnName("ACC_UD22_BIT");

                entity.Property(e => e.AccUd23Bit).HasColumnName("ACC_UD23_BIT");

                entity.Property(e => e.AccUd24Bit).HasColumnName("ACC_UD24_BIT");

                entity.Property(e => e.AccUd2Bit).HasColumnName("ACC_UD2_BIT");

                entity.Property(e => e.AccUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD2_DATE");

                entity.Property(e => e.AccUd2Id).HasColumnName("ACC_UD2_ID");

                entity.Property(e => e.AccUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD2_ID_NAME");

                entity.Property(e => e.AccUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD2_NUMERIC");

                entity.Property(e => e.AccUd3)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD3");

                entity.Property(e => e.AccUd3Bit).HasColumnName("ACC_UD3_BIT");

                entity.Property(e => e.AccUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD3_DATE");

                entity.Property(e => e.AccUd3Id).HasColumnName("ACC_UD3_ID");

                entity.Property(e => e.AccUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD3_ID_NAME");

                entity.Property(e => e.AccUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD3_NUMERIC");

                entity.Property(e => e.AccUd4)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD4");

                entity.Property(e => e.AccUd4Bit).HasColumnName("ACC_UD4_BIT");

                entity.Property(e => e.AccUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD4_DATE");

                entity.Property(e => e.AccUd4Id).HasColumnName("ACC_UD4_ID");

                entity.Property(e => e.AccUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD4_ID_NAME");

                entity.Property(e => e.AccUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD4_NUMERIC");

                entity.Property(e => e.AccUd5)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD5");

                entity.Property(e => e.AccUd5Bit).HasColumnName("ACC_UD5_BIT");

                entity.Property(e => e.AccUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD5_DATE");

                entity.Property(e => e.AccUd5Id).HasColumnName("ACC_UD5_ID");

                entity.Property(e => e.AccUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD5_ID_NAME");

                entity.Property(e => e.AccUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD5_NUMERIC");

                entity.Property(e => e.AccUd6)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD6");

                entity.Property(e => e.AccUd6Bit).HasColumnName("ACC_UD6_BIT");

                entity.Property(e => e.AccUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD6_DATE");

                entity.Property(e => e.AccUd6Id).HasColumnName("ACC_UD6_ID");

                entity.Property(e => e.AccUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD6_ID_NAME");

                entity.Property(e => e.AccUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD6_NUMERIC");

                entity.Property(e => e.AccUd7)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD7");

                entity.Property(e => e.AccUd7Bit).HasColumnName("ACC_UD7_BIT");

                entity.Property(e => e.AccUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD7_DATE");

                entity.Property(e => e.AccUd7Id).HasColumnName("ACC_UD7_ID");

                entity.Property(e => e.AccUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD7_ID_NAME");

                entity.Property(e => e.AccUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD7_NUMERIC");

                entity.Property(e => e.AccUd8)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD8");

                entity.Property(e => e.AccUd8Bit).HasColumnName("ACC_UD8_BIT");

                entity.Property(e => e.AccUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD8_DATE");

                entity.Property(e => e.AccUd8Id).HasColumnName("ACC_UD8_ID");

                entity.Property(e => e.AccUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD8_ID_NAME");

                entity.Property(e => e.AccUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD8_NUMERIC");

                entity.Property(e => e.AccUd9)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD9");

                entity.Property(e => e.AccUd9Bit).HasColumnName("ACC_UD9_BIT");

                entity.Property(e => e.AccUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD9_DATE");

                entity.Property(e => e.AccUd9Id).HasColumnName("ACC_UD9_ID");

                entity.Property(e => e.AccUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD9_ID_NAME");

                entity.Property(e => e.AccUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD9_NUMERIC");

                entity.Property(e => e.Address1)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_1");

                entity.Property(e => e.Address2)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_2");

                entity.Property(e => e.Address3)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_3");

                entity.Property(e => e.BookedSessions).HasColumnName("BOOKED_SESSIONS");

                entity.Property(e => e.BookingDate)
                    .HasColumnType("datetime")
                    .HasColumnName("BOOKING_DATE");

                entity.Property(e => e.BookingId).HasColumnName("BOOKING_ID");

                entity.Property(e => e.Country)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.County)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTY");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CsId).HasColumnName("CS_ID");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.Email1Address).HasMaxLength(255);

                entity.Property(e => e.ExternalEventbriteId)
                    .HasMaxLength(255)
                    .HasColumnName("EXTERNAL_EVENTBRITE_ID");

                entity.Property(e => e.Fax1)
                    .HasMaxLength(50)
                    .HasColumnName("FAX_1");

                entity.Property(e => e.LeadSummary)
                    .HasMaxLength(255)
                    .HasColumnName("LEAD_SUMMARY");

                entity.Property(e => e.OpenBooking)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("OPEN_BOOKING");

                entity.Property(e => e.Owner).HasColumnName("OWNER");

                entity.Property(e => e.Phone1)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_1");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(255)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.SemEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_END_DATE");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.SemOwner).HasColumnName("SEM_OWNER");

                entity.Property(e => e.SemReference)
                    .HasMaxLength(50)
                    .HasColumnName("SEM_REFERENCE");

                entity.Property(e => e.SemSourceDetails)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_SOURCE_DETAILS");

                entity.Property(e => e.SemStage)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_STAGE");

                entity.Property(e => e.SemStageHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_STAGE_HLIGHT");

                entity.Property(e => e.SemStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_START_DATE");

                entity.Property(e => e.SemState)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("SEM_STATE");

                entity.Property(e => e.SemSummary)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_SUMMARY");

                entity.Property(e => e.SemType)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_TYPE");

                entity.Property(e => e.SemTypeHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_TYPE_HLIGHT");

                entity.Property(e => e.SemUd10Bit).HasColumnName("SEM_UD10_BIT");

                entity.Property(e => e.SemUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD10_DATE");

                entity.Property(e => e.SemUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD10_ID_NAME");

                entity.Property(e => e.SemUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD10_NUMERIC");

                entity.Property(e => e.SemUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD10_TEXT");

                entity.Property(e => e.SemUd11Bit).HasColumnName("SEM_UD11_BIT");

                entity.Property(e => e.SemUd12Bit).HasColumnName("SEM_UD12_BIT");

                entity.Property(e => e.SemUd13Bit).HasColumnName("SEM_UD13_BIT");

                entity.Property(e => e.SemUd14Bit).HasColumnName("SEM_UD14_BIT");

                entity.Property(e => e.SemUd15Bit).HasColumnName("SEM_UD15_BIT");

                entity.Property(e => e.SemUd16Bit).HasColumnName("SEM_UD16_BIT");

                entity.Property(e => e.SemUd17Bit).HasColumnName("SEM_UD17_BIT");

                entity.Property(e => e.SemUd18Bit).HasColumnName("SEM_UD18_BIT");

                entity.Property(e => e.SemUd19Bit).HasColumnName("SEM_UD19_BIT");

                entity.Property(e => e.SemUd1Bit).HasColumnName("SEM_UD1_BIT");

                entity.Property(e => e.SemUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD1_DATE");

                entity.Property(e => e.SemUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD1_ID_NAME");

                entity.Property(e => e.SemUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD1_NUMERIC");

                entity.Property(e => e.SemUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD1_TEXT");

                entity.Property(e => e.SemUd20Bit).HasColumnName("SEM_UD20_BIT");

                entity.Property(e => e.SemUd21Bit).HasColumnName("SEM_UD21_BIT");

                entity.Property(e => e.SemUd22Bit).HasColumnName("SEM_UD22_BIT");

                entity.Property(e => e.SemUd23Bit).HasColumnName("SEM_UD23_BIT");

                entity.Property(e => e.SemUd24Bit).HasColumnName("SEM_UD24_BIT");

                entity.Property(e => e.SemUd2Bit).HasColumnName("SEM_UD2_BIT");

                entity.Property(e => e.SemUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD2_DATE");

                entity.Property(e => e.SemUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD2_ID_NAME");

                entity.Property(e => e.SemUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD2_NUMERIC");

                entity.Property(e => e.SemUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD2_TEXT");

                entity.Property(e => e.SemUd3Bit).HasColumnName("SEM_UD3_BIT");

                entity.Property(e => e.SemUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD3_DATE");

                entity.Property(e => e.SemUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD3_ID_NAME");

                entity.Property(e => e.SemUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD3_NUMERIC");

                entity.Property(e => e.SemUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD3_TEXT");

                entity.Property(e => e.SemUd4Bit).HasColumnName("SEM_UD4_BIT");

                entity.Property(e => e.SemUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD4_DATE");

                entity.Property(e => e.SemUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD4_ID_NAME");

                entity.Property(e => e.SemUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD4_NUMERIC");

                entity.Property(e => e.SemUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD4_TEXT");

                entity.Property(e => e.SemUd5Bit).HasColumnName("SEM_UD5_BIT");

                entity.Property(e => e.SemUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD5_DATE");

                entity.Property(e => e.SemUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD5_ID_NAME");

                entity.Property(e => e.SemUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD5_NUMERIC");

                entity.Property(e => e.SemUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD5_TEXT");

                entity.Property(e => e.SemUd6Bit).HasColumnName("SEM_UD6_BIT");

                entity.Property(e => e.SemUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD6_DATE");

                entity.Property(e => e.SemUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD6_ID_NAME");

                entity.Property(e => e.SemUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD6_NUMERIC");

                entity.Property(e => e.SemUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD6_TEXT");

                entity.Property(e => e.SemUd7Bit).HasColumnName("SEM_UD7_BIT");

                entity.Property(e => e.SemUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD7_DATE");

                entity.Property(e => e.SemUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD7_ID_NAME");

                entity.Property(e => e.SemUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD7_NUMERIC");

                entity.Property(e => e.SemUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD7_TEXT");

                entity.Property(e => e.SemUd8Bit).HasColumnName("SEM_UD8_BIT");

                entity.Property(e => e.SemUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD8_DATE");

                entity.Property(e => e.SemUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD8_ID_NAME");

                entity.Property(e => e.SemUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD8_NUMERIC");

                entity.Property(e => e.SemUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD8_TEXT");

                entity.Property(e => e.SemUd9Bit).HasColumnName("SEM_UD9_BIT");

                entity.Property(e => e.SemUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD9_DATE");

                entity.Property(e => e.SemUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD9_ID_NAME");

                entity.Property(e => e.SemUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD9_NUMERIC");

                entity.Property(e => e.SemUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD9_TEXT");

                entity.Property(e => e.SemUrl)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_URL");

                entity.Property(e => e.SembAccBusinessAddressCity)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_BusinessAddressCity");

                entity.Property(e => e.SembAccBusinessAddressCountry)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_BusinessAddressCountry");

                entity.Property(e => e.SembAccBusinessAddressPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_BusinessAddressPostalCode");

                entity.Property(e => e.SembAccBusinessAddressState)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_BusinessAddressState");

                entity.Property(e => e.SembAccBusinessAddressStreet)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_BusinessAddressStreet");

                entity.Property(e => e.SembAccBusinessAddressStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_BusinessAddressStreet2");

                entity.Property(e => e.SembAccBusinessAddressStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_BusinessAddressStreet3");

                entity.Property(e => e.SembAccBusinessFaxNumber)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_BusinessFaxNumber");

                entity.Property(e => e.SembAccBusinesstelephonenumber)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_BUSINESSTELEPHONENUMBER");

                entity.Property(e => e.SembAccEmail1address)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_EMAIL1ADDRESS");

                entity.Property(e => e.SembAccId).HasColumnName("SEMB_ACC_ID");

                entity.Property(e => e.SembAccJobtitle)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_JOBTITLE");

                entity.Property(e => e.SembAccMobiletelephonenumber)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_MOBILETELEPHONENUMBER");

                entity.Property(e => e.SembAccName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_NAME");

                entity.Property(e => e.SembConfirmed).HasColumnName("SEMB_CONFIRMED");

                entity.Property(e => e.SembId).HasColumnName("SEMB_ID");

                entity.Property(e => e.SembReference)
                    .HasMaxLength(50)
                    .HasColumnName("SEMB_REFERENCE");

                entity.Property(e => e.SembState).HasColumnName("SEMB_STATE");

                entity.Property(e => e.SembUd10Bit).HasColumnName("SEMB_UD10_BIT");

                entity.Property(e => e.SembUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD10_DATE");

                entity.Property(e => e.SembUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD10_ID_NAME");

                entity.Property(e => e.SembUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD10_NUMERIC");

                entity.Property(e => e.SembUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD10_TEXT");

                entity.Property(e => e.SembUd11Bit).HasColumnName("SEMB_UD11_BIT");

                entity.Property(e => e.SembUd12Bit).HasColumnName("SEMB_UD12_BIT");

                entity.Property(e => e.SembUd13Bit).HasColumnName("SEMB_UD13_BIT");

                entity.Property(e => e.SembUd14Bit).HasColumnName("SEMB_UD14_BIT");

                entity.Property(e => e.SembUd15Bit).HasColumnName("SEMB_UD15_BIT");

                entity.Property(e => e.SembUd16Bit).HasColumnName("SEMB_UD16_BIT");

                entity.Property(e => e.SembUd17Bit).HasColumnName("SEMB_UD17_BIT");

                entity.Property(e => e.SembUd18Bit).HasColumnName("SEMB_UD18_BIT");

                entity.Property(e => e.SembUd19Bit).HasColumnName("SEMB_UD19_BIT");

                entity.Property(e => e.SembUd1Bit).HasColumnName("SEMB_UD1_BIT");

                entity.Property(e => e.SembUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD1_DATE");

                entity.Property(e => e.SembUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD1_ID_NAME");

                entity.Property(e => e.SembUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD1_NUMERIC");

                entity.Property(e => e.SembUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD1_TEXT");

                entity.Property(e => e.SembUd20Bit).HasColumnName("SEMB_UD20_BIT");

                entity.Property(e => e.SembUd21Bit).HasColumnName("SEMB_UD21_BIT");

                entity.Property(e => e.SembUd22Bit).HasColumnName("SEMB_UD22_BIT");

                entity.Property(e => e.SembUd23Bit).HasColumnName("SEMB_UD23_BIT");

                entity.Property(e => e.SembUd24Bit).HasColumnName("SEMB_UD24_BIT");

                entity.Property(e => e.SembUd2Bit).HasColumnName("SEMB_UD2_BIT");

                entity.Property(e => e.SembUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD2_DATE");

                entity.Property(e => e.SembUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD2_ID_NAME");

                entity.Property(e => e.SembUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD2_NUMERIC");

                entity.Property(e => e.SembUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD2_TEXT");

                entity.Property(e => e.SembUd3Bit).HasColumnName("SEMB_UD3_BIT");

                entity.Property(e => e.SembUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD3_DATE");

                entity.Property(e => e.SembUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD3_ID_NAME");

                entity.Property(e => e.SembUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD3_NUMERIC");

                entity.Property(e => e.SembUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD3_TEXT");

                entity.Property(e => e.SembUd4Bit).HasColumnName("SEMB_UD4_BIT");

                entity.Property(e => e.SembUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD4_DATE");

                entity.Property(e => e.SembUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD4_ID_NAME");

                entity.Property(e => e.SembUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD4_NUMERIC");

                entity.Property(e => e.SembUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD4_TEXT");

                entity.Property(e => e.SembUd5Bit).HasColumnName("SEMB_UD5_BIT");

                entity.Property(e => e.SembUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD5_DATE");

                entity.Property(e => e.SembUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD5_ID_NAME");

                entity.Property(e => e.SembUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD5_NUMERIC");

                entity.Property(e => e.SembUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD5_TEXT");

                entity.Property(e => e.SembUd6Bit).HasColumnName("SEMB_UD6_BIT");

                entity.Property(e => e.SembUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD6_DATE");

                entity.Property(e => e.SembUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD6_ID_NAME");

                entity.Property(e => e.SembUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD6_NUMERIC");

                entity.Property(e => e.SembUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD6_TEXT");

                entity.Property(e => e.SembUd7Bit).HasColumnName("SEMB_UD7_BIT");

                entity.Property(e => e.SembUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD7_DATE");

                entity.Property(e => e.SembUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD7_ID_NAME");

                entity.Property(e => e.SembUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD7_NUMERIC");

                entity.Property(e => e.SembUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD7_TEXT");

                entity.Property(e => e.SembUd8Bit).HasColumnName("SEMB_UD8_BIT");

                entity.Property(e => e.SembUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD8_DATE");

                entity.Property(e => e.SembUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD8_ID_NAME");

                entity.Property(e => e.SembUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD8_NUMERIC");

                entity.Property(e => e.SembUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD8_TEXT");

                entity.Property(e => e.SembUd9Bit).HasColumnName("SEMB_UD9_BIT");

                entity.Property(e => e.SembUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD9_DATE");

                entity.Property(e => e.SembUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD9_ID_NAME");

                entity.Property(e => e.SembUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD9_NUMERIC");

                entity.Property(e => e.SembUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD9_TEXT");

                entity.Property(e => e.SembaId).HasColumnName("SEMBA_ID");

                entity.Property(e => e.SembaNumber).HasColumnName("SEMBA_NUMBER");

                entity.Property(e => e.SembaOrder)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_ORDER");

                entity.Property(e => e.SembaUd10Bit).HasColumnName("SEMBA_UD10_BIT");

                entity.Property(e => e.SembaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD10_DATE");

                entity.Property(e => e.SembaUd10Id).HasColumnName("SEMBA_UD10_ID");

                entity.Property(e => e.SembaUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD10_ID_NAME");

                entity.Property(e => e.SembaUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMBA_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.SembaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD10_NUMERIC");

                entity.Property(e => e.SembaUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD10_TEXT");

                entity.Property(e => e.SembaUd11Bit).HasColumnName("SEMBA_UD11_BIT");

                entity.Property(e => e.SembaUd12Bit).HasColumnName("SEMBA_UD12_BIT");

                entity.Property(e => e.SembaUd13Bit).HasColumnName("SEMBA_UD13_BIT");

                entity.Property(e => e.SembaUd14Bit).HasColumnName("SEMBA_UD14_BIT");

                entity.Property(e => e.SembaUd15Bit).HasColumnName("SEMBA_UD15_BIT");

                entity.Property(e => e.SembaUd16Bit).HasColumnName("SEMBA_UD16_BIT");

                entity.Property(e => e.SembaUd17Bit).HasColumnName("SEMBA_UD17_BIT");

                entity.Property(e => e.SembaUd18Bit).HasColumnName("SEMBA_UD18_BIT");

                entity.Property(e => e.SembaUd19Bit).HasColumnName("SEMBA_UD19_BIT");

                entity.Property(e => e.SembaUd1Bit).HasColumnName("SEMBA_UD1_BIT");

                entity.Property(e => e.SembaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD1_DATE");

                entity.Property(e => e.SembaUd1Id).HasColumnName("SEMBA_UD1_ID");

                entity.Property(e => e.SembaUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD1_ID_NAME");

                entity.Property(e => e.SembaUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMBA_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.SembaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD1_NUMERIC");

                entity.Property(e => e.SembaUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD1_TEXT");

                entity.Property(e => e.SembaUd20Bit).HasColumnName("SEMBA_UD20_BIT");

                entity.Property(e => e.SembaUd21Bit).HasColumnName("SEMBA_UD21_BIT");

                entity.Property(e => e.SembaUd22Bit).HasColumnName("SEMBA_UD22_BIT");

                entity.Property(e => e.SembaUd23Bit).HasColumnName("SEMBA_UD23_BIT");

                entity.Property(e => e.SembaUd24Bit).HasColumnName("SEMBA_UD24_BIT");

                entity.Property(e => e.SembaUd2Bit).HasColumnName("SEMBA_UD2_BIT");

                entity.Property(e => e.SembaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD2_DATE");

                entity.Property(e => e.SembaUd2Id).HasColumnName("SEMBA_UD2_ID");

                entity.Property(e => e.SembaUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD2_ID_NAME");

                entity.Property(e => e.SembaUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMBA_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.SembaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD2_NUMERIC");

                entity.Property(e => e.SembaUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD2_TEXT");

                entity.Property(e => e.SembaUd3Bit).HasColumnName("SEMBA_UD3_BIT");

                entity.Property(e => e.SembaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD3_DATE");

                entity.Property(e => e.SembaUd3Id).HasColumnName("SEMBA_UD3_ID");

                entity.Property(e => e.SembaUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD3_ID_NAME");

                entity.Property(e => e.SembaUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMBA_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.SembaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD3_NUMERIC");

                entity.Property(e => e.SembaUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD3_TEXT");

                entity.Property(e => e.SembaUd4Bit).HasColumnName("SEMBA_UD4_BIT");

                entity.Property(e => e.SembaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD4_DATE");

                entity.Property(e => e.SembaUd4Id).HasColumnName("SEMBA_UD4_ID");

                entity.Property(e => e.SembaUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD4_ID_NAME");

                entity.Property(e => e.SembaUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMBA_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.SembaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD4_NUMERIC");

                entity.Property(e => e.SembaUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD4_TEXT");

                entity.Property(e => e.SembaUd5Bit).HasColumnName("SEMBA_UD5_BIT");

                entity.Property(e => e.SembaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD5_DATE");

                entity.Property(e => e.SembaUd5Id).HasColumnName("SEMBA_UD5_ID");

                entity.Property(e => e.SembaUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD5_ID_NAME");

                entity.Property(e => e.SembaUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMBA_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.SembaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD5_NUMERIC");

                entity.Property(e => e.SembaUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD5_TEXT");

                entity.Property(e => e.SembaUd6Bit).HasColumnName("SEMBA_UD6_BIT");

                entity.Property(e => e.SembaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD6_DATE");

                entity.Property(e => e.SembaUd6Id).HasColumnName("SEMBA_UD6_ID");

                entity.Property(e => e.SembaUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD6_ID_NAME");

                entity.Property(e => e.SembaUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMBA_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.SembaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD6_NUMERIC");

                entity.Property(e => e.SembaUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD6_TEXT");

                entity.Property(e => e.SembaUd7Bit).HasColumnName("SEMBA_UD7_BIT");

                entity.Property(e => e.SembaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD7_DATE");

                entity.Property(e => e.SembaUd7Id).HasColumnName("SEMBA_UD7_ID");

                entity.Property(e => e.SembaUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD7_ID_NAME");

                entity.Property(e => e.SembaUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMBA_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.SembaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD7_NUMERIC");

                entity.Property(e => e.SembaUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD7_TEXT");

                entity.Property(e => e.SembaUd8Bit).HasColumnName("SEMBA_UD8_BIT");

                entity.Property(e => e.SembaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD8_DATE");

                entity.Property(e => e.SembaUd8Id).HasColumnName("SEMBA_UD8_ID");

                entity.Property(e => e.SembaUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD8_ID_NAME");

                entity.Property(e => e.SembaUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMBA_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.SembaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD8_NUMERIC");

                entity.Property(e => e.SembaUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD8_TEXT");

                entity.Property(e => e.SembaUd9Bit).HasColumnName("SEMBA_UD9_BIT");

                entity.Property(e => e.SembaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD9_DATE");

                entity.Property(e => e.SembaUd9Id).HasColumnName("SEMBA_UD9_ID");

                entity.Property(e => e.SembaUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD9_ID_NAME");

                entity.Property(e => e.SembaUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMBA_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.SembaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD9_NUMERIC");

                entity.Property(e => e.SembaUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD9_TEXT");

                entity.Property(e => e.SgId).HasColumnName("SG_ID");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Town)
                    .HasMaxLength(255)
                    .HasColumnName("TOWN");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsName)
                    .HasMaxLength(255)
                    .HasColumnName("US_NAME");
            });

            modelBuilder.Entity<VSeminarBookingProduct>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vSeminarBookingProducts");

                entity.Property(e => e.Code)
                    .HasMaxLength(50)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cost)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CurrencySymbol)
                    .HasMaxLength(8)
                    .HasColumnName("CURRENCY_SYMBOL");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.Discount).HasColumnName("DISCOUNT");

                entity.Property(e => e.IsEventbriteTicket).HasColumnName("IS_EVENTBRITE_TICKET");

                entity.Property(e => e.Manufacturer)
                    .HasMaxLength(50)
                    .HasColumnName("MANUFACTURER");

                entity.Property(e => e.NetPrice).HasColumnName("NET_PRICE");

                entity.Property(e => e.PrExternal)
                    .HasMaxLength(255)
                    .HasColumnName("PR_EXTERNAL");

                entity.Property(e => e.PrId).HasColumnName("PR_ID");

                entity.Property(e => e.PrName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_NAME");

                entity.Property(e => e.PrUd1)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD1");

                entity.Property(e => e.PrUd10)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD10");

                entity.Property(e => e.PrUd10Bit).HasColumnName("PR_UD10_BIT");

                entity.Property(e => e.PrUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD10_DATE");

                entity.Property(e => e.PrUd10Id).HasColumnName("PR_UD10_ID");

                entity.Property(e => e.PrUd10IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD10_ID_HLIGHT");

                entity.Property(e => e.PrUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD10_ID_NAME");

                entity.Property(e => e.PrUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.PrUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD10_NUMERIC");

                entity.Property(e => e.PrUd11)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD11");

                entity.Property(e => e.PrUd11Bit).HasColumnName("PR_UD11_BIT");

                entity.Property(e => e.PrUd12)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD12");

                entity.Property(e => e.PrUd12Bit).HasColumnName("PR_UD12_BIT");

                entity.Property(e => e.PrUd13)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD13");

                entity.Property(e => e.PrUd13Bit).HasColumnName("PR_UD13_BIT");

                entity.Property(e => e.PrUd14)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD14");

                entity.Property(e => e.PrUd14Bit).HasColumnName("PR_UD14_BIT");

                entity.Property(e => e.PrUd15)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD15");

                entity.Property(e => e.PrUd15Bit).HasColumnName("PR_UD15_BIT");

                entity.Property(e => e.PrUd16Bit).HasColumnName("PR_UD16_BIT");

                entity.Property(e => e.PrUd17Bit).HasColumnName("PR_UD17_BIT");

                entity.Property(e => e.PrUd18Bit).HasColumnName("PR_UD18_BIT");

                entity.Property(e => e.PrUd19Bit).HasColumnName("PR_UD19_BIT");

                entity.Property(e => e.PrUd1Bit).HasColumnName("PR_UD1_BIT");

                entity.Property(e => e.PrUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD1_DATE");

                entity.Property(e => e.PrUd1Id).HasColumnName("PR_UD1_ID");

                entity.Property(e => e.PrUd1IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD1_ID_HLIGHT");

                entity.Property(e => e.PrUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD1_ID_NAME");

                entity.Property(e => e.PrUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.PrUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD1_NUMERIC");

                entity.Property(e => e.PrUd2)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD2");

                entity.Property(e => e.PrUd20Bit).HasColumnName("PR_UD20_BIT");

                entity.Property(e => e.PrUd21Bit).HasColumnName("PR_UD21_BIT");

                entity.Property(e => e.PrUd22Bit).HasColumnName("PR_UD22_BIT");

                entity.Property(e => e.PrUd23Bit).HasColumnName("PR_UD23_BIT");

                entity.Property(e => e.PrUd24Bit).HasColumnName("PR_UD24_BIT");

                entity.Property(e => e.PrUd2Bit).HasColumnName("PR_UD2_BIT");

                entity.Property(e => e.PrUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD2_DATE");

                entity.Property(e => e.PrUd2Id).HasColumnName("PR_UD2_ID");

                entity.Property(e => e.PrUd2IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD2_ID_HLIGHT");

                entity.Property(e => e.PrUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD2_ID_NAME");

                entity.Property(e => e.PrUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.PrUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD2_NUMERIC");

                entity.Property(e => e.PrUd3)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD3");

                entity.Property(e => e.PrUd3Bit).HasColumnName("PR_UD3_BIT");

                entity.Property(e => e.PrUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD3_DATE");

                entity.Property(e => e.PrUd3Id).HasColumnName("PR_UD3_ID");

                entity.Property(e => e.PrUd3IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD3_ID_HLIGHT");

                entity.Property(e => e.PrUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD3_ID_NAME");

                entity.Property(e => e.PrUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.PrUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD3_NUMERIC");

                entity.Property(e => e.PrUd4)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD4");

                entity.Property(e => e.PrUd4Bit).HasColumnName("PR_UD4_BIT");

                entity.Property(e => e.PrUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD4_DATE");

                entity.Property(e => e.PrUd4Id).HasColumnName("PR_UD4_ID");

                entity.Property(e => e.PrUd4IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD4_ID_HLIGHT");

                entity.Property(e => e.PrUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD4_ID_NAME");

                entity.Property(e => e.PrUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.PrUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD4_NUMERIC");

                entity.Property(e => e.PrUd5)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD5");

                entity.Property(e => e.PrUd5Bit).HasColumnName("PR_UD5_BIT");

                entity.Property(e => e.PrUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD5_DATE");

                entity.Property(e => e.PrUd5Id).HasColumnName("PR_UD5_ID");

                entity.Property(e => e.PrUd5IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD5_ID_HLIGHT");

                entity.Property(e => e.PrUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD5_ID_NAME");

                entity.Property(e => e.PrUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.PrUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD5_NUMERIC");

                entity.Property(e => e.PrUd6)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD6");

                entity.Property(e => e.PrUd6Bit).HasColumnName("PR_UD6_BIT");

                entity.Property(e => e.PrUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD6_DATE");

                entity.Property(e => e.PrUd6Id).HasColumnName("PR_UD6_ID");

                entity.Property(e => e.PrUd6IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD6_ID_HLIGHT");

                entity.Property(e => e.PrUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD6_ID_NAME");

                entity.Property(e => e.PrUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.PrUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD6_NUMERIC");

                entity.Property(e => e.PrUd7)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD7");

                entity.Property(e => e.PrUd7Bit).HasColumnName("PR_UD7_BIT");

                entity.Property(e => e.PrUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD7_DATE");

                entity.Property(e => e.PrUd7Id).HasColumnName("PR_UD7_ID");

                entity.Property(e => e.PrUd7IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD7_ID_HLIGHT");

                entity.Property(e => e.PrUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD7_ID_NAME");

                entity.Property(e => e.PrUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.PrUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD7_NUMERIC");

                entity.Property(e => e.PrUd8)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD8");

                entity.Property(e => e.PrUd8Bit).HasColumnName("PR_UD8_BIT");

                entity.Property(e => e.PrUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD8_DATE");

                entity.Property(e => e.PrUd8Id).HasColumnName("PR_UD8_ID");

                entity.Property(e => e.PrUd8IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD8_ID_HLIGHT");

                entity.Property(e => e.PrUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD8_ID_NAME");

                entity.Property(e => e.PrUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.PrUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD8_NUMERIC");

                entity.Property(e => e.PrUd9)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD9");

                entity.Property(e => e.PrUd9Bit).HasColumnName("PR_UD9_BIT");

                entity.Property(e => e.PrUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PR_UD9_DATE");

                entity.Property(e => e.PrUd9Id).HasColumnName("PR_UD9_ID");

                entity.Property(e => e.PrUd9IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD9_ID_HLIGHT");

                entity.Property(e => e.PrUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("PR_UD9_ID_NAME");

                entity.Property(e => e.PrUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("PR_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.PrUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PR_UD9_NUMERIC");

                entity.Property(e => e.Price)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PRICE");

                entity.Property(e => e.PriceDiscount)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PRICE_DISCOUNT");

                entity.Property(e => e.PriceFinal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PRICE_FINAL");

                entity.Property(e => e.PriceHidden)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PRICE_HIDDEN");

                entity.Property(e => e.ProductGroup)
                    .HasMaxLength(255)
                    .HasColumnName("PRODUCT_GROUP");

                entity.Property(e => e.Quantity)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("QUANTITY");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.SembId).HasColumnName("SEMB_ID");

                entity.Property(e => e.SembName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("SEMB_NAME");

                entity.Property(e => e.SembaName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_NAME");

                entity.Property(e => e.SembprDeleted).HasColumnName("SEMBPR_DELETED");

                entity.Property(e => e.SembprId).HasColumnName("SEMBPR_ID");

                entity.Property(e => e.SemsId).HasColumnName("SEMS_ID");

                entity.Property(e => e.SemsName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_NAME");

                entity.Property(e => e.SemsaId).HasColumnName("SEMSA_ID");

                entity.Property(e => e.SemsprId).HasColumnName("SEMSPR_ID");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TaxPercentage)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("TAX_PERCENTAGE");

                entity.Property(e => e.TxcCode)
                    .HasMaxLength(50)
                    .HasColumnName("TXC_CODE");

                entity.Property(e => e.TxcExternal)
                    .HasMaxLength(255)
                    .HasColumnName("TXC_EXTERNAL");

                entity.Property(e => e.TxcId).HasColumnName("TXC_ID");

                entity.Property(e => e.TxcSummary)
                    .HasMaxLength(255)
                    .HasColumnName("TXC_SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<VSeminarSession>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vSeminarSessions");

                entity.Property(e => e.Code)
                    .HasMaxLength(50)
                    .HasColumnName("CODE");

                entity.Property(e => e.Colour)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("COLOUR");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Day).HasColumnName("DAY");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.Duration)
                    .HasMaxLength(37)
                    .HasColumnName("DURATION");

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("END_DATE");

                entity.Property(e => e.EndDateLocal)
                    .HasColumnType("datetime")
                    .HasColumnName("END_DATE_LOCAL");

                entity.Property(e => e.EndTime)
                    .HasMaxLength(5)
                    .HasColumnName("END_TIME");

                entity.Property(e => e.ExternalEventbriteId)
                    .HasMaxLength(255)
                    .HasColumnName("EXTERNAL_EVENTBRITE_ID");

                entity.Property(e => e.Location)
                    .HasMaxLength(255)
                    .HasColumnName("LOCATION");

                entity.Property(e => e.Places).HasColumnName("PLACES");

                entity.Property(e => e.PlacesAvailable).HasColumnName("PLACES_AVAILABLE");

                entity.Property(e => e.PlacesBooked).HasColumnName("PLACES_BOOKED");

                entity.Property(e => e.Price)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PRICE");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.SemName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_NAME");

                entity.Property(e => e.SemOwner).HasColumnName("SEM_OWNER");

                entity.Property(e => e.SemReference)
                    .HasMaxLength(50)
                    .HasColumnName("SEM_REFERENCE");

                entity.Property(e => e.SemSourceDetails)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_SOURCE_DETAILS");

                entity.Property(e => e.SemState)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("SEM_STATE");

                entity.Property(e => e.SemType)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_TYPE");

                entity.Property(e => e.SemTypeHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_TYPE_HLIGHT");

                entity.Property(e => e.SemUrl)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_URL");

                entity.Property(e => e.SemsDeleted).HasColumnName("SEMS_DELETED");

                entity.Property(e => e.SemsId).HasColumnName("SEMS_ID");

                entity.Property(e => e.SemsUd10Bit).HasColumnName("SEMS_UD10_BIT");

                entity.Property(e => e.SemsUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMS_UD10_DATE");

                entity.Property(e => e.SemsUd10Id).HasColumnName("SEMS_UD10_ID");

                entity.Property(e => e.SemsUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD10_ID_NAME");

                entity.Property(e => e.SemsUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMS_UD10_NUMERIC");

                entity.Property(e => e.SemsUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD10_TEXT");

                entity.Property(e => e.SemsUd11Bit).HasColumnName("SEMS_UD11_BIT");

                entity.Property(e => e.SemsUd12Bit).HasColumnName("SEMS_UD12_BIT");

                entity.Property(e => e.SemsUd13Bit).HasColumnName("SEMS_UD13_BIT");

                entity.Property(e => e.SemsUd14Bit).HasColumnName("SEMS_UD14_BIT");

                entity.Property(e => e.SemsUd15Bit).HasColumnName("SEMS_UD15_BIT");

                entity.Property(e => e.SemsUd16Bit).HasColumnName("SEMS_UD16_BIT");

                entity.Property(e => e.SemsUd17Bit).HasColumnName("SEMS_UD17_BIT");

                entity.Property(e => e.SemsUd18Bit).HasColumnName("SEMS_UD18_BIT");

                entity.Property(e => e.SemsUd19Bit).HasColumnName("SEMS_UD19_BIT");

                entity.Property(e => e.SemsUd1Bit).HasColumnName("SEMS_UD1_BIT");

                entity.Property(e => e.SemsUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMS_UD1_DATE");

                entity.Property(e => e.SemsUd1Id).HasColumnName("SEMS_UD1_ID");

                entity.Property(e => e.SemsUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD1_ID_NAME");

                entity.Property(e => e.SemsUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMS_UD1_NUMERIC");

                entity.Property(e => e.SemsUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD1_TEXT");

                entity.Property(e => e.SemsUd20Bit).HasColumnName("SEMS_UD20_BIT");

                entity.Property(e => e.SemsUd21Bit).HasColumnName("SEMS_UD21_BIT");

                entity.Property(e => e.SemsUd22Bit).HasColumnName("SEMS_UD22_BIT");

                entity.Property(e => e.SemsUd23Bit).HasColumnName("SEMS_UD23_BIT");

                entity.Property(e => e.SemsUd24Bit).HasColumnName("SEMS_UD24_BIT");

                entity.Property(e => e.SemsUd2Bit).HasColumnName("SEMS_UD2_BIT");

                entity.Property(e => e.SemsUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMS_UD2_DATE");

                entity.Property(e => e.SemsUd2Id).HasColumnName("SEMS_UD2_ID");

                entity.Property(e => e.SemsUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD2_ID_NAME");

                entity.Property(e => e.SemsUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMS_UD2_NUMERIC");

                entity.Property(e => e.SemsUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD2_TEXT");

                entity.Property(e => e.SemsUd3Bit).HasColumnName("SEMS_UD3_BIT");

                entity.Property(e => e.SemsUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMS_UD3_DATE");

                entity.Property(e => e.SemsUd3Id).HasColumnName("SEMS_UD3_ID");

                entity.Property(e => e.SemsUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD3_ID_NAME");

                entity.Property(e => e.SemsUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMS_UD3_NUMERIC");

                entity.Property(e => e.SemsUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD3_TEXT");

                entity.Property(e => e.SemsUd4Bit).HasColumnName("SEMS_UD4_BIT");

                entity.Property(e => e.SemsUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMS_UD4_DATE");

                entity.Property(e => e.SemsUd4Id).HasColumnName("SEMS_UD4_ID");

                entity.Property(e => e.SemsUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD4_ID_NAME");

                entity.Property(e => e.SemsUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMS_UD4_NUMERIC");

                entity.Property(e => e.SemsUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD4_TEXT");

                entity.Property(e => e.SemsUd5Bit).HasColumnName("SEMS_UD5_BIT");

                entity.Property(e => e.SemsUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMS_UD5_DATE");

                entity.Property(e => e.SemsUd5Id).HasColumnName("SEMS_UD5_ID");

                entity.Property(e => e.SemsUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD5_ID_NAME");

                entity.Property(e => e.SemsUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMS_UD5_NUMERIC");

                entity.Property(e => e.SemsUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD5_TEXT");

                entity.Property(e => e.SemsUd6Bit).HasColumnName("SEMS_UD6_BIT");

                entity.Property(e => e.SemsUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMS_UD6_DATE");

                entity.Property(e => e.SemsUd6Id).HasColumnName("SEMS_UD6_ID");

                entity.Property(e => e.SemsUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD6_ID_NAME");

                entity.Property(e => e.SemsUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMS_UD6_NUMERIC");

                entity.Property(e => e.SemsUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD6_TEXT");

                entity.Property(e => e.SemsUd7Bit).HasColumnName("SEMS_UD7_BIT");

                entity.Property(e => e.SemsUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMS_UD7_DATE");

                entity.Property(e => e.SemsUd7Id).HasColumnName("SEMS_UD7_ID");

                entity.Property(e => e.SemsUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD7_ID_NAME");

                entity.Property(e => e.SemsUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMS_UD7_NUMERIC");

                entity.Property(e => e.SemsUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD7_TEXT");

                entity.Property(e => e.SemsUd8Bit).HasColumnName("SEMS_UD8_BIT");

                entity.Property(e => e.SemsUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMS_UD8_DATE");

                entity.Property(e => e.SemsUd8Id).HasColumnName("SEMS_UD8_ID");

                entity.Property(e => e.SemsUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD8_ID_NAME");

                entity.Property(e => e.SemsUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMS_UD8_NUMERIC");

                entity.Property(e => e.SemsUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD8_TEXT");

                entity.Property(e => e.SemsUd9Bit).HasColumnName("SEMS_UD9_BIT");

                entity.Property(e => e.SemsUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMS_UD9_DATE");

                entity.Property(e => e.SemsUd9Id).HasColumnName("SEMS_UD9_ID");

                entity.Property(e => e.SemsUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD9_ID_NAME");

                entity.Property(e => e.SemsUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMS_UD9_NUMERIC");

                entity.Property(e => e.SemsUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD9_TEXT");

                entity.Property(e => e.SgId).HasColumnName("SG_ID");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.SitId).HasColumnName("SIT_ID");

                entity.Property(e => e.SiteName)
                    .HasMaxLength(255)
                    .HasColumnName("SITE_NAME");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("START_DATE");

                entity.Property(e => e.StartDateLocal)
                    .HasColumnType("datetime")
                    .HasColumnName("START_DATE_LOCAL");

                entity.Property(e => e.StartTime)
                    .HasMaxLength(5)
                    .HasColumnName("START_TIME");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TimeZone)
                    .HasMaxLength(255)
                    .HasColumnName("TIME_ZONE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<VSeminarSessionAttendee>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vSeminarSessionAttendees");

                entity.Property(e => e.AcExternal)
                    .HasMaxLength(255)
                    .HasColumnName("AC_EXTERNAL");

                entity.Property(e => e.AcFlag)
                    .HasMaxLength(255)
                    .HasColumnName("AC_FLAG");

                entity.Property(e => e.AcFlagHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_FLAG_HLIGHT");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcIndustry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_INDUSTRY");

                entity.Property(e => e.AcIndustryHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_INDUSTRY_HLIGHT");

                entity.Property(e => e.AcLabel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LABEL");

                entity.Property(e => e.AcLabelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LABEL_HLIGHT");

                entity.Property(e => e.AcLevel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LEVEL");

                entity.Property(e => e.AcLevelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LEVEL_HLIGHT");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.AcSource)
                    .HasMaxLength(255)
                    .HasColumnName("AC_SOURCE");

                entity.Property(e => e.AcSourceHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_SOURCE_HLIGHT");

                entity.Property(e => e.AcType1)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_1");

                entity.Property(e => e.AcType1Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_1_HLIGHT");

                entity.Property(e => e.AcType2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_2");

                entity.Property(e => e.AcType2Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_2_HLIGHT");

                entity.Property(e => e.AccBusinessAddressCity)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BusinessAddressCity");

                entity.Property(e => e.AccBusinessAddressCountry)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BusinessAddressCountry");

                entity.Property(e => e.AccBusinessAddressPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BusinessAddressPostalCode");

                entity.Property(e => e.AccBusinessAddressState)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BusinessAddressState");

                entity.Property(e => e.AccBusinessAddressStreet)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BusinessAddressStreet");

                entity.Property(e => e.AccBusinessAddressStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BusinessAddressStreet2");

                entity.Property(e => e.AccBusinessAddressStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BusinessAddressStreet3");

                entity.Property(e => e.AccBusinessFaxNumber)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BusinessFaxNumber");

                entity.Property(e => e.AccBusinesstelephonenumber)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BUSINESSTELEPHONENUMBER");

                entity.Property(e => e.AccEmail1address)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_EMAIL1ADDRESS");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccJobtitle)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_JOBTITLE");

                entity.Property(e => e.AccMobiletelephonenumber)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_MOBILETELEPHONENUMBER");

                entity.Property(e => e.AccName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_NAME");

                entity.Property(e => e.AccUd1)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD1");

                entity.Property(e => e.AccUd10)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD10");

                entity.Property(e => e.AccUd10Bit).HasColumnName("ACC_UD10_BIT");

                entity.Property(e => e.AccUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD10_DATE");

                entity.Property(e => e.AccUd10Id).HasColumnName("ACC_UD10_ID");

                entity.Property(e => e.AccUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD10_ID_NAME");

                entity.Property(e => e.AccUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD10_NUMERIC");

                entity.Property(e => e.AccUd11)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD11");

                entity.Property(e => e.AccUd11Bit).HasColumnName("ACC_UD11_BIT");

                entity.Property(e => e.AccUd12)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD12");

                entity.Property(e => e.AccUd12Bit).HasColumnName("ACC_UD12_BIT");

                entity.Property(e => e.AccUd13)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD13");

                entity.Property(e => e.AccUd13Bit).HasColumnName("ACC_UD13_BIT");

                entity.Property(e => e.AccUd14)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD14");

                entity.Property(e => e.AccUd14Bit).HasColumnName("ACC_UD14_BIT");

                entity.Property(e => e.AccUd15)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD15");

                entity.Property(e => e.AccUd15Bit).HasColumnName("ACC_UD15_BIT");

                entity.Property(e => e.AccUd16Bit).HasColumnName("ACC_UD16_BIT");

                entity.Property(e => e.AccUd17Bit).HasColumnName("ACC_UD17_BIT");

                entity.Property(e => e.AccUd18Bit).HasColumnName("ACC_UD18_BIT");

                entity.Property(e => e.AccUd19Bit).HasColumnName("ACC_UD19_BIT");

                entity.Property(e => e.AccUd1Bit).HasColumnName("ACC_UD1_BIT");

                entity.Property(e => e.AccUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD1_DATE");

                entity.Property(e => e.AccUd1Id).HasColumnName("ACC_UD1_ID");

                entity.Property(e => e.AccUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD1_ID_NAME");

                entity.Property(e => e.AccUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD1_NUMERIC");

                entity.Property(e => e.AccUd2)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD2");

                entity.Property(e => e.AccUd20Bit).HasColumnName("ACC_UD20_BIT");

                entity.Property(e => e.AccUd21Bit).HasColumnName("ACC_UD21_BIT");

                entity.Property(e => e.AccUd22Bit).HasColumnName("ACC_UD22_BIT");

                entity.Property(e => e.AccUd23Bit).HasColumnName("ACC_UD23_BIT");

                entity.Property(e => e.AccUd24Bit).HasColumnName("ACC_UD24_BIT");

                entity.Property(e => e.AccUd2Bit).HasColumnName("ACC_UD2_BIT");

                entity.Property(e => e.AccUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD2_DATE");

                entity.Property(e => e.AccUd2Id).HasColumnName("ACC_UD2_ID");

                entity.Property(e => e.AccUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD2_ID_NAME");

                entity.Property(e => e.AccUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD2_NUMERIC");

                entity.Property(e => e.AccUd3)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD3");

                entity.Property(e => e.AccUd3Bit).HasColumnName("ACC_UD3_BIT");

                entity.Property(e => e.AccUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD3_DATE");

                entity.Property(e => e.AccUd3Id).HasColumnName("ACC_UD3_ID");

                entity.Property(e => e.AccUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD3_ID_NAME");

                entity.Property(e => e.AccUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD3_NUMERIC");

                entity.Property(e => e.AccUd4)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD4");

                entity.Property(e => e.AccUd4Bit).HasColumnName("ACC_UD4_BIT");

                entity.Property(e => e.AccUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD4_DATE");

                entity.Property(e => e.AccUd4Id).HasColumnName("ACC_UD4_ID");

                entity.Property(e => e.AccUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD4_ID_NAME");

                entity.Property(e => e.AccUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD4_NUMERIC");

                entity.Property(e => e.AccUd5)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD5");

                entity.Property(e => e.AccUd5Bit).HasColumnName("ACC_UD5_BIT");

                entity.Property(e => e.AccUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD5_DATE");

                entity.Property(e => e.AccUd5Id).HasColumnName("ACC_UD5_ID");

                entity.Property(e => e.AccUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD5_ID_NAME");

                entity.Property(e => e.AccUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD5_NUMERIC");

                entity.Property(e => e.AccUd6)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD6");

                entity.Property(e => e.AccUd6Bit).HasColumnName("ACC_UD6_BIT");

                entity.Property(e => e.AccUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD6_DATE");

                entity.Property(e => e.AccUd6Id).HasColumnName("ACC_UD6_ID");

                entity.Property(e => e.AccUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD6_ID_NAME");

                entity.Property(e => e.AccUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD6_NUMERIC");

                entity.Property(e => e.AccUd7)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD7");

                entity.Property(e => e.AccUd7Bit).HasColumnName("ACC_UD7_BIT");

                entity.Property(e => e.AccUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD7_DATE");

                entity.Property(e => e.AccUd7Id).HasColumnName("ACC_UD7_ID");

                entity.Property(e => e.AccUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD7_ID_NAME");

                entity.Property(e => e.AccUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD7_NUMERIC");

                entity.Property(e => e.AccUd8)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD8");

                entity.Property(e => e.AccUd8Bit).HasColumnName("ACC_UD8_BIT");

                entity.Property(e => e.AccUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD8_DATE");

                entity.Property(e => e.AccUd8Id).HasColumnName("ACC_UD8_ID");

                entity.Property(e => e.AccUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD8_ID_NAME");

                entity.Property(e => e.AccUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD8_NUMERIC");

                entity.Property(e => e.AccUd9)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD9");

                entity.Property(e => e.AccUd9Bit).HasColumnName("ACC_UD9_BIT");

                entity.Property(e => e.AccUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD9_DATE");

                entity.Property(e => e.AccUd9Id).HasColumnName("ACC_UD9_ID");

                entity.Property(e => e.AccUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD9_ID_NAME");

                entity.Property(e => e.AccUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD9_NUMERIC");

                entity.Property(e => e.Address1)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_1");

                entity.Property(e => e.Address2)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_2");

                entity.Property(e => e.Address3)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_3");

                entity.Property(e => e.BookedSessions).HasColumnName("BOOKED_SESSIONS");

                entity.Property(e => e.BookingDate)
                    .HasColumnType("datetime")
                    .HasColumnName("BOOKING_DATE");

                entity.Property(e => e.BookingId).HasColumnName("BOOKING_ID");

                entity.Property(e => e.Country)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.County)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTY");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CsId).HasColumnName("CS_ID");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.Email1Address).HasMaxLength(255);

                entity.Property(e => e.ExternalEventbriteId)
                    .HasMaxLength(255)
                    .HasColumnName("EXTERNAL_EVENTBRITE_ID");

                entity.Property(e => e.Fax1)
                    .HasMaxLength(50)
                    .HasColumnName("FAX_1");

                entity.Property(e => e.LeadSummary)
                    .HasMaxLength(255)
                    .HasColumnName("LEAD_SUMMARY");

                entity.Property(e => e.OpenBooking)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("OPEN_BOOKING");

                entity.Property(e => e.Phone1)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_1");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(255)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.SemEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_END_DATE");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.SemOwner).HasColumnName("SEM_OWNER");

                entity.Property(e => e.SemReference)
                    .HasMaxLength(50)
                    .HasColumnName("SEM_REFERENCE");

                entity.Property(e => e.SemSourceDetails)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_SOURCE_DETAILS");

                entity.Property(e => e.SemStage)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_STAGE");

                entity.Property(e => e.SemStageHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_STAGE_HLIGHT");

                entity.Property(e => e.SemStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_START_DATE");

                entity.Property(e => e.SemState)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("SEM_STATE");

                entity.Property(e => e.SemSummary)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_SUMMARY");

                entity.Property(e => e.SemType)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_TYPE");

                entity.Property(e => e.SemTypeHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_TYPE_HLIGHT");

                entity.Property(e => e.SemUd10Bit).HasColumnName("SEM_UD10_BIT");

                entity.Property(e => e.SemUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD10_DATE");

                entity.Property(e => e.SemUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD10_ID_NAME");

                entity.Property(e => e.SemUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD10_NUMERIC");

                entity.Property(e => e.SemUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD10_TEXT");

                entity.Property(e => e.SemUd11Bit).HasColumnName("SEM_UD11_BIT");

                entity.Property(e => e.SemUd12Bit).HasColumnName("SEM_UD12_BIT");

                entity.Property(e => e.SemUd13Bit).HasColumnName("SEM_UD13_BIT");

                entity.Property(e => e.SemUd14Bit).HasColumnName("SEM_UD14_BIT");

                entity.Property(e => e.SemUd15Bit).HasColumnName("SEM_UD15_BIT");

                entity.Property(e => e.SemUd16Bit).HasColumnName("SEM_UD16_BIT");

                entity.Property(e => e.SemUd17Bit).HasColumnName("SEM_UD17_BIT");

                entity.Property(e => e.SemUd18Bit).HasColumnName("SEM_UD18_BIT");

                entity.Property(e => e.SemUd19Bit).HasColumnName("SEM_UD19_BIT");

                entity.Property(e => e.SemUd1Bit).HasColumnName("SEM_UD1_BIT");

                entity.Property(e => e.SemUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD1_DATE");

                entity.Property(e => e.SemUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD1_ID_NAME");

                entity.Property(e => e.SemUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD1_NUMERIC");

                entity.Property(e => e.SemUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD1_TEXT");

                entity.Property(e => e.SemUd20Bit).HasColumnName("SEM_UD20_BIT");

                entity.Property(e => e.SemUd21Bit).HasColumnName("SEM_UD21_BIT");

                entity.Property(e => e.SemUd22Bit).HasColumnName("SEM_UD22_BIT");

                entity.Property(e => e.SemUd23Bit).HasColumnName("SEM_UD23_BIT");

                entity.Property(e => e.SemUd24Bit).HasColumnName("SEM_UD24_BIT");

                entity.Property(e => e.SemUd2Bit).HasColumnName("SEM_UD2_BIT");

                entity.Property(e => e.SemUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD2_DATE");

                entity.Property(e => e.SemUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD2_ID_NAME");

                entity.Property(e => e.SemUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD2_NUMERIC");

                entity.Property(e => e.SemUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD2_TEXT");

                entity.Property(e => e.SemUd3Bit).HasColumnName("SEM_UD3_BIT");

                entity.Property(e => e.SemUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD3_DATE");

                entity.Property(e => e.SemUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD3_ID_NAME");

                entity.Property(e => e.SemUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD3_NUMERIC");

                entity.Property(e => e.SemUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD3_TEXT");

                entity.Property(e => e.SemUd4Bit).HasColumnName("SEM_UD4_BIT");

                entity.Property(e => e.SemUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD4_DATE");

                entity.Property(e => e.SemUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD4_ID_NAME");

                entity.Property(e => e.SemUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD4_NUMERIC");

                entity.Property(e => e.SemUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD4_TEXT");

                entity.Property(e => e.SemUd5Bit).HasColumnName("SEM_UD5_BIT");

                entity.Property(e => e.SemUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD5_DATE");

                entity.Property(e => e.SemUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD5_ID_NAME");

                entity.Property(e => e.SemUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD5_NUMERIC");

                entity.Property(e => e.SemUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD5_TEXT");

                entity.Property(e => e.SemUd6Bit).HasColumnName("SEM_UD6_BIT");

                entity.Property(e => e.SemUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD6_DATE");

                entity.Property(e => e.SemUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD6_ID_NAME");

                entity.Property(e => e.SemUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD6_NUMERIC");

                entity.Property(e => e.SemUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD6_TEXT");

                entity.Property(e => e.SemUd7Bit).HasColumnName("SEM_UD7_BIT");

                entity.Property(e => e.SemUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD7_DATE");

                entity.Property(e => e.SemUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD7_ID_NAME");

                entity.Property(e => e.SemUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD7_NUMERIC");

                entity.Property(e => e.SemUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD7_TEXT");

                entity.Property(e => e.SemUd8Bit).HasColumnName("SEM_UD8_BIT");

                entity.Property(e => e.SemUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD8_DATE");

                entity.Property(e => e.SemUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD8_ID_NAME");

                entity.Property(e => e.SemUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD8_NUMERIC");

                entity.Property(e => e.SemUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD8_TEXT");

                entity.Property(e => e.SemUd9Bit).HasColumnName("SEM_UD9_BIT");

                entity.Property(e => e.SemUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD9_DATE");

                entity.Property(e => e.SemUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD9_ID_NAME");

                entity.Property(e => e.SemUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD9_NUMERIC");

                entity.Property(e => e.SemUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD9_TEXT");

                entity.Property(e => e.SemUrl)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_URL");

                entity.Property(e => e.SembAccBusinessAddressCity)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_BusinessAddressCity");

                entity.Property(e => e.SembAccBusinessAddressCountry)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_BusinessAddressCountry");

                entity.Property(e => e.SembAccBusinessAddressPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_BusinessAddressPostalCode");

                entity.Property(e => e.SembAccBusinessAddressState)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_BusinessAddressState");

                entity.Property(e => e.SembAccBusinessAddressStreet)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_BusinessAddressStreet");

                entity.Property(e => e.SembAccBusinessAddressStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_BusinessAddressStreet2");

                entity.Property(e => e.SembAccBusinessAddressStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_BusinessAddressStreet3");

                entity.Property(e => e.SembAccBusinessFaxNumber)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_BusinessFaxNumber");

                entity.Property(e => e.SembAccBusinesstelephonenumber)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_BUSINESSTELEPHONENUMBER");

                entity.Property(e => e.SembAccEmail1address)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_EMAIL1ADDRESS");

                entity.Property(e => e.SembAccId).HasColumnName("SEMB_ACC_ID");

                entity.Property(e => e.SembAccJobtitle)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_JOBTITLE");

                entity.Property(e => e.SembAccMobiletelephonenumber)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_MOBILETELEPHONENUMBER");

                entity.Property(e => e.SembAccName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_NAME");

                entity.Property(e => e.SembConfirmed).HasColumnName("SEMB_CONFIRMED");

                entity.Property(e => e.SembId).HasColumnName("SEMB_ID");

                entity.Property(e => e.SembReference)
                    .HasMaxLength(50)
                    .HasColumnName("SEMB_REFERENCE");

                entity.Property(e => e.SembState).HasColumnName("SEMB_STATE");

                entity.Property(e => e.SembUd10Bit).HasColumnName("SEMB_UD10_BIT");

                entity.Property(e => e.SembUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD10_DATE");

                entity.Property(e => e.SembUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD10_ID_NAME");

                entity.Property(e => e.SembUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD10_NUMERIC");

                entity.Property(e => e.SembUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD10_TEXT");

                entity.Property(e => e.SembUd11Bit).HasColumnName("SEMB_UD11_BIT");

                entity.Property(e => e.SembUd12Bit).HasColumnName("SEMB_UD12_BIT");

                entity.Property(e => e.SembUd13Bit).HasColumnName("SEMB_UD13_BIT");

                entity.Property(e => e.SembUd14Bit).HasColumnName("SEMB_UD14_BIT");

                entity.Property(e => e.SembUd15Bit).HasColumnName("SEMB_UD15_BIT");

                entity.Property(e => e.SembUd16Bit).HasColumnName("SEMB_UD16_BIT");

                entity.Property(e => e.SembUd17Bit).HasColumnName("SEMB_UD17_BIT");

                entity.Property(e => e.SembUd18Bit).HasColumnName("SEMB_UD18_BIT");

                entity.Property(e => e.SembUd19Bit).HasColumnName("SEMB_UD19_BIT");

                entity.Property(e => e.SembUd1Bit).HasColumnName("SEMB_UD1_BIT");

                entity.Property(e => e.SembUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD1_DATE");

                entity.Property(e => e.SembUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD1_ID_NAME");

                entity.Property(e => e.SembUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD1_NUMERIC");

                entity.Property(e => e.SembUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD1_TEXT");

                entity.Property(e => e.SembUd20Bit).HasColumnName("SEMB_UD20_BIT");

                entity.Property(e => e.SembUd21Bit).HasColumnName("SEMB_UD21_BIT");

                entity.Property(e => e.SembUd22Bit).HasColumnName("SEMB_UD22_BIT");

                entity.Property(e => e.SembUd23Bit).HasColumnName("SEMB_UD23_BIT");

                entity.Property(e => e.SembUd24Bit).HasColumnName("SEMB_UD24_BIT");

                entity.Property(e => e.SembUd2Bit).HasColumnName("SEMB_UD2_BIT");

                entity.Property(e => e.SembUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD2_DATE");

                entity.Property(e => e.SembUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD2_ID_NAME");

                entity.Property(e => e.SembUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD2_NUMERIC");

                entity.Property(e => e.SembUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD2_TEXT");

                entity.Property(e => e.SembUd3Bit).HasColumnName("SEMB_UD3_BIT");

                entity.Property(e => e.SembUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD3_DATE");

                entity.Property(e => e.SembUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD3_ID_NAME");

                entity.Property(e => e.SembUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD3_NUMERIC");

                entity.Property(e => e.SembUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD3_TEXT");

                entity.Property(e => e.SembUd4Bit).HasColumnName("SEMB_UD4_BIT");

                entity.Property(e => e.SembUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD4_DATE");

                entity.Property(e => e.SembUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD4_ID_NAME");

                entity.Property(e => e.SembUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD4_NUMERIC");

                entity.Property(e => e.SembUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD4_TEXT");

                entity.Property(e => e.SembUd5Bit).HasColumnName("SEMB_UD5_BIT");

                entity.Property(e => e.SembUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD5_DATE");

                entity.Property(e => e.SembUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD5_ID_NAME");

                entity.Property(e => e.SembUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD5_NUMERIC");

                entity.Property(e => e.SembUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD5_TEXT");

                entity.Property(e => e.SembUd6Bit).HasColumnName("SEMB_UD6_BIT");

                entity.Property(e => e.SembUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD6_DATE");

                entity.Property(e => e.SembUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD6_ID_NAME");

                entity.Property(e => e.SembUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD6_NUMERIC");

                entity.Property(e => e.SembUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD6_TEXT");

                entity.Property(e => e.SembUd7Bit).HasColumnName("SEMB_UD7_BIT");

                entity.Property(e => e.SembUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD7_DATE");

                entity.Property(e => e.SembUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD7_ID_NAME");

                entity.Property(e => e.SembUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD7_NUMERIC");

                entity.Property(e => e.SembUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD7_TEXT");

                entity.Property(e => e.SembUd8Bit).HasColumnName("SEMB_UD8_BIT");

                entity.Property(e => e.SembUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD8_DATE");

                entity.Property(e => e.SembUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD8_ID_NAME");

                entity.Property(e => e.SembUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD8_NUMERIC");

                entity.Property(e => e.SembUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD8_TEXT");

                entity.Property(e => e.SembUd9Bit).HasColumnName("SEMB_UD9_BIT");

                entity.Property(e => e.SembUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD9_DATE");

                entity.Property(e => e.SembUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD9_ID_NAME");

                entity.Property(e => e.SembUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD9_NUMERIC");

                entity.Property(e => e.SembUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD9_TEXT");

                entity.Property(e => e.SembaId).HasColumnName("SEMBA_ID");

                entity.Property(e => e.SembaNumber).HasColumnName("SEMBA_NUMBER");

                entity.Property(e => e.SembaOrder)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_ORDER");

                entity.Property(e => e.SembaUd10Bit).HasColumnName("SEMBA_UD10_BIT");

                entity.Property(e => e.SembaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD10_DATE");

                entity.Property(e => e.SembaUd10Id).HasColumnName("SEMBA_UD10_ID");

                entity.Property(e => e.SembaUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD10_ID_NAME");

                entity.Property(e => e.SembaUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMBA_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.SembaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD10_NUMERIC");

                entity.Property(e => e.SembaUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD10_TEXT");

                entity.Property(e => e.SembaUd11Bit).HasColumnName("SEMBA_UD11_BIT");

                entity.Property(e => e.SembaUd12Bit).HasColumnName("SEMBA_UD12_BIT");

                entity.Property(e => e.SembaUd13Bit).HasColumnName("SEMBA_UD13_BIT");

                entity.Property(e => e.SembaUd14Bit).HasColumnName("SEMBA_UD14_BIT");

                entity.Property(e => e.SembaUd15Bit).HasColumnName("SEMBA_UD15_BIT");

                entity.Property(e => e.SembaUd16Bit).HasColumnName("SEMBA_UD16_BIT");

                entity.Property(e => e.SembaUd17Bit).HasColumnName("SEMBA_UD17_BIT");

                entity.Property(e => e.SembaUd18Bit).HasColumnName("SEMBA_UD18_BIT");

                entity.Property(e => e.SembaUd19Bit).HasColumnName("SEMBA_UD19_BIT");

                entity.Property(e => e.SembaUd1Bit).HasColumnName("SEMBA_UD1_BIT");

                entity.Property(e => e.SembaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD1_DATE");

                entity.Property(e => e.SembaUd1Id).HasColumnName("SEMBA_UD1_ID");

                entity.Property(e => e.SembaUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD1_ID_NAME");

                entity.Property(e => e.SembaUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMBA_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.SembaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD1_NUMERIC");

                entity.Property(e => e.SembaUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD1_TEXT");

                entity.Property(e => e.SembaUd20Bit).HasColumnName("SEMBA_UD20_BIT");

                entity.Property(e => e.SembaUd21Bit).HasColumnName("SEMBA_UD21_BIT");

                entity.Property(e => e.SembaUd22Bit).HasColumnName("SEMBA_UD22_BIT");

                entity.Property(e => e.SembaUd23Bit).HasColumnName("SEMBA_UD23_BIT");

                entity.Property(e => e.SembaUd24Bit).HasColumnName("SEMBA_UD24_BIT");

                entity.Property(e => e.SembaUd2Bit).HasColumnName("SEMBA_UD2_BIT");

                entity.Property(e => e.SembaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD2_DATE");

                entity.Property(e => e.SembaUd2Id).HasColumnName("SEMBA_UD2_ID");

                entity.Property(e => e.SembaUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD2_ID_NAME");

                entity.Property(e => e.SembaUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMBA_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.SembaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD2_NUMERIC");

                entity.Property(e => e.SembaUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD2_TEXT");

                entity.Property(e => e.SembaUd3Bit).HasColumnName("SEMBA_UD3_BIT");

                entity.Property(e => e.SembaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD3_DATE");

                entity.Property(e => e.SembaUd3Id).HasColumnName("SEMBA_UD3_ID");

                entity.Property(e => e.SembaUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD3_ID_NAME");

                entity.Property(e => e.SembaUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMBA_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.SembaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD3_NUMERIC");

                entity.Property(e => e.SembaUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD3_TEXT");

                entity.Property(e => e.SembaUd4Bit).HasColumnName("SEMBA_UD4_BIT");

                entity.Property(e => e.SembaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD4_DATE");

                entity.Property(e => e.SembaUd4Id).HasColumnName("SEMBA_UD4_ID");

                entity.Property(e => e.SembaUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD4_ID_NAME");

                entity.Property(e => e.SembaUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMBA_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.SembaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD4_NUMERIC");

                entity.Property(e => e.SembaUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD4_TEXT");

                entity.Property(e => e.SembaUd5Bit).HasColumnName("SEMBA_UD5_BIT");

                entity.Property(e => e.SembaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD5_DATE");

                entity.Property(e => e.SembaUd5Id).HasColumnName("SEMBA_UD5_ID");

                entity.Property(e => e.SembaUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD5_ID_NAME");

                entity.Property(e => e.SembaUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMBA_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.SembaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD5_NUMERIC");

                entity.Property(e => e.SembaUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD5_TEXT");

                entity.Property(e => e.SembaUd6Bit).HasColumnName("SEMBA_UD6_BIT");

                entity.Property(e => e.SembaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD6_DATE");

                entity.Property(e => e.SembaUd6Id).HasColumnName("SEMBA_UD6_ID");

                entity.Property(e => e.SembaUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD6_ID_NAME");

                entity.Property(e => e.SembaUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMBA_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.SembaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD6_NUMERIC");

                entity.Property(e => e.SembaUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD6_TEXT");

                entity.Property(e => e.SembaUd7Bit).HasColumnName("SEMBA_UD7_BIT");

                entity.Property(e => e.SembaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD7_DATE");

                entity.Property(e => e.SembaUd7Id).HasColumnName("SEMBA_UD7_ID");

                entity.Property(e => e.SembaUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD7_ID_NAME");

                entity.Property(e => e.SembaUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMBA_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.SembaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD7_NUMERIC");

                entity.Property(e => e.SembaUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD7_TEXT");

                entity.Property(e => e.SembaUd8Bit).HasColumnName("SEMBA_UD8_BIT");

                entity.Property(e => e.SembaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD8_DATE");

                entity.Property(e => e.SembaUd8Id).HasColumnName("SEMBA_UD8_ID");

                entity.Property(e => e.SembaUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD8_ID_NAME");

                entity.Property(e => e.SembaUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMBA_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.SembaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD8_NUMERIC");

                entity.Property(e => e.SembaUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD8_TEXT");

                entity.Property(e => e.SembaUd9Bit).HasColumnName("SEMBA_UD9_BIT");

                entity.Property(e => e.SembaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD9_DATE");

                entity.Property(e => e.SembaUd9Id).HasColumnName("SEMBA_UD9_ID");

                entity.Property(e => e.SembaUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD9_ID_NAME");

                entity.Property(e => e.SembaUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMBA_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.SembaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD9_NUMERIC");

                entity.Property(e => e.SembaUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD9_TEXT");

                entity.Property(e => e.SemsCode)
                    .HasMaxLength(50)
                    .HasColumnName("SEMS_CODE");

                entity.Property(e => e.SemsDay).HasColumnName("SEMS_DAY");

                entity.Property(e => e.SemsEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMS_END_DATE");

                entity.Property(e => e.SemsId).HasColumnName("SEMS_ID");

                entity.Property(e => e.SemsLocation)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_LOCATION");

                entity.Property(e => e.SemsName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_NAME");

                entity.Property(e => e.SemsPrice)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SEMS_PRICE");

                entity.Property(e => e.SemsStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMS_START_DATE");

                entity.Property(e => e.SemsaId).HasColumnName("SEMSA_ID");

                entity.Property(e => e.SgId).HasColumnName("SG_ID");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Town)
                    .HasMaxLength(255)
                    .HasColumnName("TOWN");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<VSeminarSessionAttendeesClash>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vSeminarSessionAttendeesClashes");

                entity.Property(e => e.AcExternal)
                    .HasMaxLength(255)
                    .HasColumnName("AC_EXTERNAL");

                entity.Property(e => e.AcFlag)
                    .HasMaxLength(255)
                    .HasColumnName("AC_FLAG");

                entity.Property(e => e.AcFlagHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_FLAG_HLIGHT");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcIndustry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_INDUSTRY");

                entity.Property(e => e.AcIndustryHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_INDUSTRY_HLIGHT");

                entity.Property(e => e.AcLabel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LABEL");

                entity.Property(e => e.AcLabelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LABEL_HLIGHT");

                entity.Property(e => e.AcLevel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LEVEL");

                entity.Property(e => e.AcLevelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LEVEL_HLIGHT");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.AcSource)
                    .HasMaxLength(255)
                    .HasColumnName("AC_SOURCE");

                entity.Property(e => e.AcSourceHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_SOURCE_HLIGHT");

                entity.Property(e => e.AcType1)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_1");

                entity.Property(e => e.AcType1Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_1_HLIGHT");

                entity.Property(e => e.AcType2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_2");

                entity.Property(e => e.AcType2Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_2_HLIGHT");

                entity.Property(e => e.AccBusinessAddressCity)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BusinessAddressCity");

                entity.Property(e => e.AccBusinessAddressCountry)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BusinessAddressCountry");

                entity.Property(e => e.AccBusinessAddressPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BusinessAddressPostalCode");

                entity.Property(e => e.AccBusinessAddressState)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BusinessAddressState");

                entity.Property(e => e.AccBusinessAddressStreet)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BusinessAddressStreet");

                entity.Property(e => e.AccBusinessAddressStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BusinessAddressStreet2");

                entity.Property(e => e.AccBusinessAddressStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BusinessAddressStreet3");

                entity.Property(e => e.AccBusinessFaxNumber)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BusinessFaxNumber");

                entity.Property(e => e.AccBusinesstelephonenumber)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BUSINESSTELEPHONENUMBER");

                entity.Property(e => e.AccEmail1address)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_EMAIL1ADDRESS");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccJobtitle)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_JOBTITLE");

                entity.Property(e => e.AccMobiletelephonenumber)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_MOBILETELEPHONENUMBER");

                entity.Property(e => e.AccName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_NAME");

                entity.Property(e => e.AccUd1)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD1");

                entity.Property(e => e.AccUd10)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD10");

                entity.Property(e => e.AccUd10Bit).HasColumnName("ACC_UD10_BIT");

                entity.Property(e => e.AccUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD10_DATE");

                entity.Property(e => e.AccUd10Id).HasColumnName("ACC_UD10_ID");

                entity.Property(e => e.AccUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD10_ID_NAME");

                entity.Property(e => e.AccUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD10_NUMERIC");

                entity.Property(e => e.AccUd11)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD11");

                entity.Property(e => e.AccUd11Bit).HasColumnName("ACC_UD11_BIT");

                entity.Property(e => e.AccUd12)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD12");

                entity.Property(e => e.AccUd12Bit).HasColumnName("ACC_UD12_BIT");

                entity.Property(e => e.AccUd13)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD13");

                entity.Property(e => e.AccUd13Bit).HasColumnName("ACC_UD13_BIT");

                entity.Property(e => e.AccUd14)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD14");

                entity.Property(e => e.AccUd14Bit).HasColumnName("ACC_UD14_BIT");

                entity.Property(e => e.AccUd15)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD15");

                entity.Property(e => e.AccUd15Bit).HasColumnName("ACC_UD15_BIT");

                entity.Property(e => e.AccUd16Bit).HasColumnName("ACC_UD16_BIT");

                entity.Property(e => e.AccUd17Bit).HasColumnName("ACC_UD17_BIT");

                entity.Property(e => e.AccUd18Bit).HasColumnName("ACC_UD18_BIT");

                entity.Property(e => e.AccUd19Bit).HasColumnName("ACC_UD19_BIT");

                entity.Property(e => e.AccUd1Bit).HasColumnName("ACC_UD1_BIT");

                entity.Property(e => e.AccUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD1_DATE");

                entity.Property(e => e.AccUd1Id).HasColumnName("ACC_UD1_ID");

                entity.Property(e => e.AccUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD1_ID_NAME");

                entity.Property(e => e.AccUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD1_NUMERIC");

                entity.Property(e => e.AccUd2)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD2");

                entity.Property(e => e.AccUd20Bit).HasColumnName("ACC_UD20_BIT");

                entity.Property(e => e.AccUd21Bit).HasColumnName("ACC_UD21_BIT");

                entity.Property(e => e.AccUd22Bit).HasColumnName("ACC_UD22_BIT");

                entity.Property(e => e.AccUd23Bit).HasColumnName("ACC_UD23_BIT");

                entity.Property(e => e.AccUd24Bit).HasColumnName("ACC_UD24_BIT");

                entity.Property(e => e.AccUd2Bit).HasColumnName("ACC_UD2_BIT");

                entity.Property(e => e.AccUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD2_DATE");

                entity.Property(e => e.AccUd2Id).HasColumnName("ACC_UD2_ID");

                entity.Property(e => e.AccUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD2_ID_NAME");

                entity.Property(e => e.AccUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD2_NUMERIC");

                entity.Property(e => e.AccUd3)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD3");

                entity.Property(e => e.AccUd3Bit).HasColumnName("ACC_UD3_BIT");

                entity.Property(e => e.AccUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD3_DATE");

                entity.Property(e => e.AccUd3Id).HasColumnName("ACC_UD3_ID");

                entity.Property(e => e.AccUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD3_ID_NAME");

                entity.Property(e => e.AccUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD3_NUMERIC");

                entity.Property(e => e.AccUd4)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD4");

                entity.Property(e => e.AccUd4Bit).HasColumnName("ACC_UD4_BIT");

                entity.Property(e => e.AccUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD4_DATE");

                entity.Property(e => e.AccUd4Id).HasColumnName("ACC_UD4_ID");

                entity.Property(e => e.AccUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD4_ID_NAME");

                entity.Property(e => e.AccUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD4_NUMERIC");

                entity.Property(e => e.AccUd5)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD5");

                entity.Property(e => e.AccUd5Bit).HasColumnName("ACC_UD5_BIT");

                entity.Property(e => e.AccUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD5_DATE");

                entity.Property(e => e.AccUd5Id).HasColumnName("ACC_UD5_ID");

                entity.Property(e => e.AccUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD5_ID_NAME");

                entity.Property(e => e.AccUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD5_NUMERIC");

                entity.Property(e => e.AccUd6)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD6");

                entity.Property(e => e.AccUd6Bit).HasColumnName("ACC_UD6_BIT");

                entity.Property(e => e.AccUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD6_DATE");

                entity.Property(e => e.AccUd6Id).HasColumnName("ACC_UD6_ID");

                entity.Property(e => e.AccUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD6_ID_NAME");

                entity.Property(e => e.AccUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD6_NUMERIC");

                entity.Property(e => e.AccUd7)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD7");

                entity.Property(e => e.AccUd7Bit).HasColumnName("ACC_UD7_BIT");

                entity.Property(e => e.AccUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD7_DATE");

                entity.Property(e => e.AccUd7Id).HasColumnName("ACC_UD7_ID");

                entity.Property(e => e.AccUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD7_ID_NAME");

                entity.Property(e => e.AccUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD7_NUMERIC");

                entity.Property(e => e.AccUd8)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD8");

                entity.Property(e => e.AccUd8Bit).HasColumnName("ACC_UD8_BIT");

                entity.Property(e => e.AccUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD8_DATE");

                entity.Property(e => e.AccUd8Id).HasColumnName("ACC_UD8_ID");

                entity.Property(e => e.AccUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD8_ID_NAME");

                entity.Property(e => e.AccUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD8_NUMERIC");

                entity.Property(e => e.AccUd9)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD9");

                entity.Property(e => e.AccUd9Bit).HasColumnName("ACC_UD9_BIT");

                entity.Property(e => e.AccUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD9_DATE");

                entity.Property(e => e.AccUd9Id).HasColumnName("ACC_UD9_ID");

                entity.Property(e => e.AccUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD9_ID_NAME");

                entity.Property(e => e.AccUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ACC_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.AccUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD9_NUMERIC");

                entity.Property(e => e.Address1)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_1");

                entity.Property(e => e.Address2)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_2");

                entity.Property(e => e.Address3)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_3");

                entity.Property(e => e.BookedSessions).HasColumnName("BOOKED_SESSIONS");

                entity.Property(e => e.BookingDate)
                    .HasColumnType("datetime")
                    .HasColumnName("BOOKING_DATE");

                entity.Property(e => e.Country)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.County)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTY");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.Email1Address).HasMaxLength(255);

                entity.Property(e => e.ExternalEventbriteId)
                    .HasMaxLength(255)
                    .HasColumnName("EXTERNAL_EVENTBRITE_ID");

                entity.Property(e => e.Fax1)
                    .HasMaxLength(50)
                    .HasColumnName("FAX_1");

                entity.Property(e => e.OpenBooking)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("OPEN_BOOKING");

                entity.Property(e => e.Phone1)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_1");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(255)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.SemEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_END_DATE");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.SemOwner).HasColumnName("SEM_OWNER");

                entity.Property(e => e.SemReference)
                    .HasMaxLength(50)
                    .HasColumnName("SEM_REFERENCE");

                entity.Property(e => e.SemSourceDetails)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_SOURCE_DETAILS");

                entity.Property(e => e.SemStage)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_STAGE");

                entity.Property(e => e.SemStageHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_STAGE_HLIGHT");

                entity.Property(e => e.SemStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_START_DATE");

                entity.Property(e => e.SemState)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("SEM_STATE");

                entity.Property(e => e.SemSummary)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_SUMMARY");

                entity.Property(e => e.SemType)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_TYPE");

                entity.Property(e => e.SemTypeHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_TYPE_HLIGHT");

                entity.Property(e => e.SemUd10Bit).HasColumnName("SEM_UD10_BIT");

                entity.Property(e => e.SemUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD10_DATE");

                entity.Property(e => e.SemUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD10_ID_NAME");

                entity.Property(e => e.SemUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD10_NUMERIC");

                entity.Property(e => e.SemUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD10_TEXT");

                entity.Property(e => e.SemUd11Bit).HasColumnName("SEM_UD11_BIT");

                entity.Property(e => e.SemUd12Bit).HasColumnName("SEM_UD12_BIT");

                entity.Property(e => e.SemUd13Bit).HasColumnName("SEM_UD13_BIT");

                entity.Property(e => e.SemUd14Bit).HasColumnName("SEM_UD14_BIT");

                entity.Property(e => e.SemUd15Bit).HasColumnName("SEM_UD15_BIT");

                entity.Property(e => e.SemUd16Bit).HasColumnName("SEM_UD16_BIT");

                entity.Property(e => e.SemUd17Bit).HasColumnName("SEM_UD17_BIT");

                entity.Property(e => e.SemUd18Bit).HasColumnName("SEM_UD18_BIT");

                entity.Property(e => e.SemUd19Bit).HasColumnName("SEM_UD19_BIT");

                entity.Property(e => e.SemUd1Bit).HasColumnName("SEM_UD1_BIT");

                entity.Property(e => e.SemUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD1_DATE");

                entity.Property(e => e.SemUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD1_ID_NAME");

                entity.Property(e => e.SemUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD1_NUMERIC");

                entity.Property(e => e.SemUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD1_TEXT");

                entity.Property(e => e.SemUd20Bit).HasColumnName("SEM_UD20_BIT");

                entity.Property(e => e.SemUd21Bit).HasColumnName("SEM_UD21_BIT");

                entity.Property(e => e.SemUd22Bit).HasColumnName("SEM_UD22_BIT");

                entity.Property(e => e.SemUd23Bit).HasColumnName("SEM_UD23_BIT");

                entity.Property(e => e.SemUd24Bit).HasColumnName("SEM_UD24_BIT");

                entity.Property(e => e.SemUd2Bit).HasColumnName("SEM_UD2_BIT");

                entity.Property(e => e.SemUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD2_DATE");

                entity.Property(e => e.SemUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD2_ID_NAME");

                entity.Property(e => e.SemUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD2_NUMERIC");

                entity.Property(e => e.SemUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD2_TEXT");

                entity.Property(e => e.SemUd3Bit).HasColumnName("SEM_UD3_BIT");

                entity.Property(e => e.SemUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD3_DATE");

                entity.Property(e => e.SemUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD3_ID_NAME");

                entity.Property(e => e.SemUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD3_NUMERIC");

                entity.Property(e => e.SemUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD3_TEXT");

                entity.Property(e => e.SemUd4Bit).HasColumnName("SEM_UD4_BIT");

                entity.Property(e => e.SemUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD4_DATE");

                entity.Property(e => e.SemUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD4_ID_NAME");

                entity.Property(e => e.SemUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD4_NUMERIC");

                entity.Property(e => e.SemUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD4_TEXT");

                entity.Property(e => e.SemUd5Bit).HasColumnName("SEM_UD5_BIT");

                entity.Property(e => e.SemUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD5_DATE");

                entity.Property(e => e.SemUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD5_ID_NAME");

                entity.Property(e => e.SemUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD5_NUMERIC");

                entity.Property(e => e.SemUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD5_TEXT");

                entity.Property(e => e.SemUd6Bit).HasColumnName("SEM_UD6_BIT");

                entity.Property(e => e.SemUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD6_DATE");

                entity.Property(e => e.SemUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD6_ID_NAME");

                entity.Property(e => e.SemUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD6_NUMERIC");

                entity.Property(e => e.SemUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD6_TEXT");

                entity.Property(e => e.SemUd7Bit).HasColumnName("SEM_UD7_BIT");

                entity.Property(e => e.SemUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD7_DATE");

                entity.Property(e => e.SemUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD7_ID_NAME");

                entity.Property(e => e.SemUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD7_NUMERIC");

                entity.Property(e => e.SemUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD7_TEXT");

                entity.Property(e => e.SemUd8Bit).HasColumnName("SEM_UD8_BIT");

                entity.Property(e => e.SemUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD8_DATE");

                entity.Property(e => e.SemUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD8_ID_NAME");

                entity.Property(e => e.SemUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD8_NUMERIC");

                entity.Property(e => e.SemUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD8_TEXT");

                entity.Property(e => e.SemUd9Bit).HasColumnName("SEM_UD9_BIT");

                entity.Property(e => e.SemUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEM_UD9_DATE");

                entity.Property(e => e.SemUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD9_ID_NAME");

                entity.Property(e => e.SemUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.SemUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEM_UD9_NUMERIC");

                entity.Property(e => e.SemUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_UD9_TEXT");

                entity.Property(e => e.SemUrl)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_URL");

                entity.Property(e => e.SembAccBusinessAddressCity)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_BusinessAddressCity");

                entity.Property(e => e.SembAccBusinessAddressCountry)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_BusinessAddressCountry");

                entity.Property(e => e.SembAccBusinessAddressPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_BusinessAddressPostalCode");

                entity.Property(e => e.SembAccBusinessAddressState)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_BusinessAddressState");

                entity.Property(e => e.SembAccBusinessAddressStreet)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_BusinessAddressStreet");

                entity.Property(e => e.SembAccBusinessAddressStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_BusinessAddressStreet2");

                entity.Property(e => e.SembAccBusinessAddressStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_BusinessAddressStreet3");

                entity.Property(e => e.SembAccBusinessFaxNumber)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_BusinessFaxNumber");

                entity.Property(e => e.SembAccBusinesstelephonenumber)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_BUSINESSTELEPHONENUMBER");

                entity.Property(e => e.SembAccEmail1address)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_EMAIL1ADDRESS");

                entity.Property(e => e.SembAccId).HasColumnName("SEMB_ACC_ID");

                entity.Property(e => e.SembAccJobtitle)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_JOBTITLE");

                entity.Property(e => e.SembAccMobiletelephonenumber)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_MOBILETELEPHONENUMBER");

                entity.Property(e => e.SembAccName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_ACC_NAME");

                entity.Property(e => e.SembConfirmed).HasColumnName("SEMB_CONFIRMED");

                entity.Property(e => e.SembId).HasColumnName("SEMB_ID");

                entity.Property(e => e.SembReference)
                    .HasMaxLength(50)
                    .HasColumnName("SEMB_REFERENCE");

                entity.Property(e => e.SembState).HasColumnName("SEMB_STATE");

                entity.Property(e => e.SembUd10Bit).HasColumnName("SEMB_UD10_BIT");

                entity.Property(e => e.SembUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD10_DATE");

                entity.Property(e => e.SembUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD10_ID_NAME");

                entity.Property(e => e.SembUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD10_NUMERIC");

                entity.Property(e => e.SembUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD10_TEXT");

                entity.Property(e => e.SembUd11Bit).HasColumnName("SEMB_UD11_BIT");

                entity.Property(e => e.SembUd12Bit).HasColumnName("SEMB_UD12_BIT");

                entity.Property(e => e.SembUd13Bit).HasColumnName("SEMB_UD13_BIT");

                entity.Property(e => e.SembUd14Bit).HasColumnName("SEMB_UD14_BIT");

                entity.Property(e => e.SembUd15Bit).HasColumnName("SEMB_UD15_BIT");

                entity.Property(e => e.SembUd16Bit).HasColumnName("SEMB_UD16_BIT");

                entity.Property(e => e.SembUd17Bit).HasColumnName("SEMB_UD17_BIT");

                entity.Property(e => e.SembUd18Bit).HasColumnName("SEMB_UD18_BIT");

                entity.Property(e => e.SembUd19Bit).HasColumnName("SEMB_UD19_BIT");

                entity.Property(e => e.SembUd1Bit).HasColumnName("SEMB_UD1_BIT");

                entity.Property(e => e.SembUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD1_DATE");

                entity.Property(e => e.SembUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD1_ID_NAME");

                entity.Property(e => e.SembUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD1_NUMERIC");

                entity.Property(e => e.SembUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD1_TEXT");

                entity.Property(e => e.SembUd20Bit).HasColumnName("SEMB_UD20_BIT");

                entity.Property(e => e.SembUd21Bit).HasColumnName("SEMB_UD21_BIT");

                entity.Property(e => e.SembUd22Bit).HasColumnName("SEMB_UD22_BIT");

                entity.Property(e => e.SembUd23Bit).HasColumnName("SEMB_UD23_BIT");

                entity.Property(e => e.SembUd24Bit).HasColumnName("SEMB_UD24_BIT");

                entity.Property(e => e.SembUd2Bit).HasColumnName("SEMB_UD2_BIT");

                entity.Property(e => e.SembUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD2_DATE");

                entity.Property(e => e.SembUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD2_ID_NAME");

                entity.Property(e => e.SembUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD2_NUMERIC");

                entity.Property(e => e.SembUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD2_TEXT");

                entity.Property(e => e.SembUd3Bit).HasColumnName("SEMB_UD3_BIT");

                entity.Property(e => e.SembUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD3_DATE");

                entity.Property(e => e.SembUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD3_ID_NAME");

                entity.Property(e => e.SembUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD3_NUMERIC");

                entity.Property(e => e.SembUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD3_TEXT");

                entity.Property(e => e.SembUd4Bit).HasColumnName("SEMB_UD4_BIT");

                entity.Property(e => e.SembUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD4_DATE");

                entity.Property(e => e.SembUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD4_ID_NAME");

                entity.Property(e => e.SembUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD4_NUMERIC");

                entity.Property(e => e.SembUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD4_TEXT");

                entity.Property(e => e.SembUd5Bit).HasColumnName("SEMB_UD5_BIT");

                entity.Property(e => e.SembUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD5_DATE");

                entity.Property(e => e.SembUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD5_ID_NAME");

                entity.Property(e => e.SembUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD5_NUMERIC");

                entity.Property(e => e.SembUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD5_TEXT");

                entity.Property(e => e.SembUd6Bit).HasColumnName("SEMB_UD6_BIT");

                entity.Property(e => e.SembUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD6_DATE");

                entity.Property(e => e.SembUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD6_ID_NAME");

                entity.Property(e => e.SembUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD6_NUMERIC");

                entity.Property(e => e.SembUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD6_TEXT");

                entity.Property(e => e.SembUd7Bit).HasColumnName("SEMB_UD7_BIT");

                entity.Property(e => e.SembUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD7_DATE");

                entity.Property(e => e.SembUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD7_ID_NAME");

                entity.Property(e => e.SembUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD7_NUMERIC");

                entity.Property(e => e.SembUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD7_TEXT");

                entity.Property(e => e.SembUd8Bit).HasColumnName("SEMB_UD8_BIT");

                entity.Property(e => e.SembUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD8_DATE");

                entity.Property(e => e.SembUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD8_ID_NAME");

                entity.Property(e => e.SembUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD8_NUMERIC");

                entity.Property(e => e.SembUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD8_TEXT");

                entity.Property(e => e.SembUd9Bit).HasColumnName("SEMB_UD9_BIT");

                entity.Property(e => e.SembUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMB_UD9_DATE");

                entity.Property(e => e.SembUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD9_ID_NAME");

                entity.Property(e => e.SembUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMB_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.SembUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMB_UD9_NUMERIC");

                entity.Property(e => e.SembUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMB_UD9_TEXT");

                entity.Property(e => e.SembaId).HasColumnName("SEMBA_ID");

                entity.Property(e => e.SembaNumber).HasColumnName("SEMBA_NUMBER");

                entity.Property(e => e.SembaOrder)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_ORDER");

                entity.Property(e => e.SembaUd10Bit).HasColumnName("SEMBA_UD10_BIT");

                entity.Property(e => e.SembaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD10_DATE");

                entity.Property(e => e.SembaUd10Id).HasColumnName("SEMBA_UD10_ID");

                entity.Property(e => e.SembaUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD10_ID_NAME");

                entity.Property(e => e.SembaUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMBA_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.SembaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD10_NUMERIC");

                entity.Property(e => e.SembaUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD10_TEXT");

                entity.Property(e => e.SembaUd11Bit).HasColumnName("SEMBA_UD11_BIT");

                entity.Property(e => e.SembaUd12Bit).HasColumnName("SEMBA_UD12_BIT");

                entity.Property(e => e.SembaUd13Bit).HasColumnName("SEMBA_UD13_BIT");

                entity.Property(e => e.SembaUd14Bit).HasColumnName("SEMBA_UD14_BIT");

                entity.Property(e => e.SembaUd15Bit).HasColumnName("SEMBA_UD15_BIT");

                entity.Property(e => e.SembaUd16Bit).HasColumnName("SEMBA_UD16_BIT");

                entity.Property(e => e.SembaUd17Bit).HasColumnName("SEMBA_UD17_BIT");

                entity.Property(e => e.SembaUd18Bit).HasColumnName("SEMBA_UD18_BIT");

                entity.Property(e => e.SembaUd19Bit).HasColumnName("SEMBA_UD19_BIT");

                entity.Property(e => e.SembaUd1Bit).HasColumnName("SEMBA_UD1_BIT");

                entity.Property(e => e.SembaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD1_DATE");

                entity.Property(e => e.SembaUd1Id).HasColumnName("SEMBA_UD1_ID");

                entity.Property(e => e.SembaUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD1_ID_NAME");

                entity.Property(e => e.SembaUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMBA_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.SembaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD1_NUMERIC");

                entity.Property(e => e.SembaUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD1_TEXT");

                entity.Property(e => e.SembaUd20Bit).HasColumnName("SEMBA_UD20_BIT");

                entity.Property(e => e.SembaUd21Bit).HasColumnName("SEMBA_UD21_BIT");

                entity.Property(e => e.SembaUd22Bit).HasColumnName("SEMBA_UD22_BIT");

                entity.Property(e => e.SembaUd23Bit).HasColumnName("SEMBA_UD23_BIT");

                entity.Property(e => e.SembaUd24Bit).HasColumnName("SEMBA_UD24_BIT");

                entity.Property(e => e.SembaUd2Bit).HasColumnName("SEMBA_UD2_BIT");

                entity.Property(e => e.SembaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD2_DATE");

                entity.Property(e => e.SembaUd2Id).HasColumnName("SEMBA_UD2_ID");

                entity.Property(e => e.SembaUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD2_ID_NAME");

                entity.Property(e => e.SembaUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMBA_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.SembaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD2_NUMERIC");

                entity.Property(e => e.SembaUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD2_TEXT");

                entity.Property(e => e.SembaUd3Bit).HasColumnName("SEMBA_UD3_BIT");

                entity.Property(e => e.SembaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD3_DATE");

                entity.Property(e => e.SembaUd3Id).HasColumnName("SEMBA_UD3_ID");

                entity.Property(e => e.SembaUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD3_ID_NAME");

                entity.Property(e => e.SembaUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMBA_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.SembaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD3_NUMERIC");

                entity.Property(e => e.SembaUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD3_TEXT");

                entity.Property(e => e.SembaUd4Bit).HasColumnName("SEMBA_UD4_BIT");

                entity.Property(e => e.SembaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD4_DATE");

                entity.Property(e => e.SembaUd4Id).HasColumnName("SEMBA_UD4_ID");

                entity.Property(e => e.SembaUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD4_ID_NAME");

                entity.Property(e => e.SembaUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMBA_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.SembaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD4_NUMERIC");

                entity.Property(e => e.SembaUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD4_TEXT");

                entity.Property(e => e.SembaUd5Bit).HasColumnName("SEMBA_UD5_BIT");

                entity.Property(e => e.SembaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD5_DATE");

                entity.Property(e => e.SembaUd5Id).HasColumnName("SEMBA_UD5_ID");

                entity.Property(e => e.SembaUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD5_ID_NAME");

                entity.Property(e => e.SembaUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMBA_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.SembaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD5_NUMERIC");

                entity.Property(e => e.SembaUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD5_TEXT");

                entity.Property(e => e.SembaUd6Bit).HasColumnName("SEMBA_UD6_BIT");

                entity.Property(e => e.SembaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD6_DATE");

                entity.Property(e => e.SembaUd6Id).HasColumnName("SEMBA_UD6_ID");

                entity.Property(e => e.SembaUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD6_ID_NAME");

                entity.Property(e => e.SembaUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMBA_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.SembaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD6_NUMERIC");

                entity.Property(e => e.SembaUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD6_TEXT");

                entity.Property(e => e.SembaUd7Bit).HasColumnName("SEMBA_UD7_BIT");

                entity.Property(e => e.SembaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD7_DATE");

                entity.Property(e => e.SembaUd7Id).HasColumnName("SEMBA_UD7_ID");

                entity.Property(e => e.SembaUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD7_ID_NAME");

                entity.Property(e => e.SembaUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMBA_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.SembaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD7_NUMERIC");

                entity.Property(e => e.SembaUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD7_TEXT");

                entity.Property(e => e.SembaUd8Bit).HasColumnName("SEMBA_UD8_BIT");

                entity.Property(e => e.SembaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD8_DATE");

                entity.Property(e => e.SembaUd8Id).HasColumnName("SEMBA_UD8_ID");

                entity.Property(e => e.SembaUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD8_ID_NAME");

                entity.Property(e => e.SembaUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMBA_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.SembaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD8_NUMERIC");

                entity.Property(e => e.SembaUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD8_TEXT");

                entity.Property(e => e.SembaUd9Bit).HasColumnName("SEMBA_UD9_BIT");

                entity.Property(e => e.SembaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMBA_UD9_DATE");

                entity.Property(e => e.SembaUd9Id).HasColumnName("SEMBA_UD9_ID");

                entity.Property(e => e.SembaUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD9_ID_NAME");

                entity.Property(e => e.SembaUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEMBA_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.SembaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMBA_UD9_NUMERIC");

                entity.Property(e => e.SembaUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMBA_UD9_TEXT");

                entity.Property(e => e.SemsCode)
                    .HasMaxLength(50)
                    .HasColumnName("SEMS_CODE");

                entity.Property(e => e.SemsDay).HasColumnName("SEMS_DAY");

                entity.Property(e => e.SemsEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMS_END_DATE");

                entity.Property(e => e.SemsEndDateClash)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMS_END_DATE_CLASH");

                entity.Property(e => e.SemsId).HasColumnName("SEMS_ID");

                entity.Property(e => e.SemsIdClash).HasColumnName("SEMS_ID_CLASH");

                entity.Property(e => e.SemsLocation)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_LOCATION");

                entity.Property(e => e.SemsName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_NAME");

                entity.Property(e => e.SemsNameClash)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_NAME_CLASH");

                entity.Property(e => e.SemsPrice)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SEMS_PRICE");

                entity.Property(e => e.SemsStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMS_START_DATE");

                entity.Property(e => e.SemsStartDateClash)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMS_START_DATE_CLASH");

                entity.Property(e => e.SemsaId).HasColumnName("SEMSA_ID");

                entity.Property(e => e.SgId).HasColumnName("SG_ID");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Town)
                    .HasMaxLength(255)
                    .HasColumnName("TOWN");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<VSeminarSessionsOpen>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vSeminarSessionsOpen");

                entity.Property(e => e.Code)
                    .HasMaxLength(50)
                    .HasColumnName("CODE");

                entity.Property(e => e.Colour)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("COLOUR");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Day).HasColumnName("DAY");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.Duration)
                    .HasMaxLength(37)
                    .HasColumnName("DURATION");

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("END_DATE");

                entity.Property(e => e.EndDateLocal)
                    .HasColumnType("datetime")
                    .HasColumnName("END_DATE_LOCAL");

                entity.Property(e => e.EndTime)
                    .HasMaxLength(5)
                    .HasColumnName("END_TIME");

                entity.Property(e => e.ExternalEventbriteId)
                    .HasMaxLength(255)
                    .HasColumnName("EXTERNAL_EVENTBRITE_ID");

                entity.Property(e => e.Location)
                    .HasMaxLength(255)
                    .HasColumnName("LOCATION");

                entity.Property(e => e.Places).HasColumnName("PLACES");

                entity.Property(e => e.PlacesAvailable).HasColumnName("PLACES_AVAILABLE");

                entity.Property(e => e.PlacesBooked).HasColumnName("PLACES_BOOKED");

                entity.Property(e => e.Price)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PRICE");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.SemName)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_NAME");

                entity.Property(e => e.SemOwner).HasColumnName("SEM_OWNER");

                entity.Property(e => e.SemReference)
                    .HasMaxLength(50)
                    .HasColumnName("SEM_REFERENCE");

                entity.Property(e => e.SemSourceDetails)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_SOURCE_DETAILS");

                entity.Property(e => e.SemState)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("SEM_STATE");

                entity.Property(e => e.SemType)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_TYPE");

                entity.Property(e => e.SemTypeHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SEM_TYPE_HLIGHT");

                entity.Property(e => e.SemUrl)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_URL");

                entity.Property(e => e.SemsDeleted).HasColumnName("SEMS_DELETED");

                entity.Property(e => e.SemsId).HasColumnName("SEMS_ID");

                entity.Property(e => e.SemsUd10Bit).HasColumnName("SEMS_UD10_BIT");

                entity.Property(e => e.SemsUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMS_UD10_DATE");

                entity.Property(e => e.SemsUd10Id).HasColumnName("SEMS_UD10_ID");

                entity.Property(e => e.SemsUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD10_ID_NAME");

                entity.Property(e => e.SemsUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMS_UD10_NUMERIC");

                entity.Property(e => e.SemsUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD10_TEXT");

                entity.Property(e => e.SemsUd11Bit).HasColumnName("SEMS_UD11_BIT");

                entity.Property(e => e.SemsUd12Bit).HasColumnName("SEMS_UD12_BIT");

                entity.Property(e => e.SemsUd13Bit).HasColumnName("SEMS_UD13_BIT");

                entity.Property(e => e.SemsUd14Bit).HasColumnName("SEMS_UD14_BIT");

                entity.Property(e => e.SemsUd15Bit).HasColumnName("SEMS_UD15_BIT");

                entity.Property(e => e.SemsUd16Bit).HasColumnName("SEMS_UD16_BIT");

                entity.Property(e => e.SemsUd17Bit).HasColumnName("SEMS_UD17_BIT");

                entity.Property(e => e.SemsUd18Bit).HasColumnName("SEMS_UD18_BIT");

                entity.Property(e => e.SemsUd19Bit).HasColumnName("SEMS_UD19_BIT");

                entity.Property(e => e.SemsUd1Bit).HasColumnName("SEMS_UD1_BIT");

                entity.Property(e => e.SemsUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMS_UD1_DATE");

                entity.Property(e => e.SemsUd1Id).HasColumnName("SEMS_UD1_ID");

                entity.Property(e => e.SemsUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD1_ID_NAME");

                entity.Property(e => e.SemsUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMS_UD1_NUMERIC");

                entity.Property(e => e.SemsUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD1_TEXT");

                entity.Property(e => e.SemsUd20Bit).HasColumnName("SEMS_UD20_BIT");

                entity.Property(e => e.SemsUd21Bit).HasColumnName("SEMS_UD21_BIT");

                entity.Property(e => e.SemsUd22Bit).HasColumnName("SEMS_UD22_BIT");

                entity.Property(e => e.SemsUd23Bit).HasColumnName("SEMS_UD23_BIT");

                entity.Property(e => e.SemsUd24Bit).HasColumnName("SEMS_UD24_BIT");

                entity.Property(e => e.SemsUd2Bit).HasColumnName("SEMS_UD2_BIT");

                entity.Property(e => e.SemsUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMS_UD2_DATE");

                entity.Property(e => e.SemsUd2Id).HasColumnName("SEMS_UD2_ID");

                entity.Property(e => e.SemsUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD2_ID_NAME");

                entity.Property(e => e.SemsUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMS_UD2_NUMERIC");

                entity.Property(e => e.SemsUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD2_TEXT");

                entity.Property(e => e.SemsUd3Bit).HasColumnName("SEMS_UD3_BIT");

                entity.Property(e => e.SemsUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMS_UD3_DATE");

                entity.Property(e => e.SemsUd3Id).HasColumnName("SEMS_UD3_ID");

                entity.Property(e => e.SemsUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD3_ID_NAME");

                entity.Property(e => e.SemsUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMS_UD3_NUMERIC");

                entity.Property(e => e.SemsUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD3_TEXT");

                entity.Property(e => e.SemsUd4Bit).HasColumnName("SEMS_UD4_BIT");

                entity.Property(e => e.SemsUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMS_UD4_DATE");

                entity.Property(e => e.SemsUd4Id).HasColumnName("SEMS_UD4_ID");

                entity.Property(e => e.SemsUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD4_ID_NAME");

                entity.Property(e => e.SemsUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMS_UD4_NUMERIC");

                entity.Property(e => e.SemsUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD4_TEXT");

                entity.Property(e => e.SemsUd5Bit).HasColumnName("SEMS_UD5_BIT");

                entity.Property(e => e.SemsUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMS_UD5_DATE");

                entity.Property(e => e.SemsUd5Id).HasColumnName("SEMS_UD5_ID");

                entity.Property(e => e.SemsUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD5_ID_NAME");

                entity.Property(e => e.SemsUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMS_UD5_NUMERIC");

                entity.Property(e => e.SemsUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD5_TEXT");

                entity.Property(e => e.SemsUd6Bit).HasColumnName("SEMS_UD6_BIT");

                entity.Property(e => e.SemsUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMS_UD6_DATE");

                entity.Property(e => e.SemsUd6Id).HasColumnName("SEMS_UD6_ID");

                entity.Property(e => e.SemsUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD6_ID_NAME");

                entity.Property(e => e.SemsUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMS_UD6_NUMERIC");

                entity.Property(e => e.SemsUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD6_TEXT");

                entity.Property(e => e.SemsUd7Bit).HasColumnName("SEMS_UD7_BIT");

                entity.Property(e => e.SemsUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMS_UD7_DATE");

                entity.Property(e => e.SemsUd7Id).HasColumnName("SEMS_UD7_ID");

                entity.Property(e => e.SemsUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD7_ID_NAME");

                entity.Property(e => e.SemsUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMS_UD7_NUMERIC");

                entity.Property(e => e.SemsUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD7_TEXT");

                entity.Property(e => e.SemsUd8Bit).HasColumnName("SEMS_UD8_BIT");

                entity.Property(e => e.SemsUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMS_UD8_DATE");

                entity.Property(e => e.SemsUd8Id).HasColumnName("SEMS_UD8_ID");

                entity.Property(e => e.SemsUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD8_ID_NAME");

                entity.Property(e => e.SemsUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMS_UD8_NUMERIC");

                entity.Property(e => e.SemsUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD8_TEXT");

                entity.Property(e => e.SemsUd9Bit).HasColumnName("SEMS_UD9_BIT");

                entity.Property(e => e.SemsUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SEMS_UD9_DATE");

                entity.Property(e => e.SemsUd9Id).HasColumnName("SEMS_UD9_ID");

                entity.Property(e => e.SemsUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD9_ID_NAME");

                entity.Property(e => e.SemsUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SEMS_UD9_NUMERIC");

                entity.Property(e => e.SemsUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_UD9_TEXT");

                entity.Property(e => e.SgId).HasColumnName("SG_ID");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("START_DATE");

                entity.Property(e => e.StartDateLocal)
                    .HasColumnType("datetime")
                    .HasColumnName("START_DATE_LOCAL");

                entity.Property(e => e.StartTime)
                    .HasMaxLength(5)
                    .HasColumnName("START_TIME");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TimeZone)
                    .HasMaxLength(255)
                    .HasColumnName("TIME_ZONE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<VSeminarsAttendeesAnswer>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vSeminarsAttendeesAnswers");

                entity.Property(e => e.AcAccIdSalesSummary)
                    .HasMaxLength(255)
                    .HasColumnName("AC_ACC_ID_SALES_SUMMARY");

                entity.Property(e => e.AcAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("AC_ADDRESS_1");

                entity.Property(e => e.AcAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_ADDRESS_2");

                entity.Property(e => e.AcAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("AC_ADDRESS_3");

                entity.Property(e => e.AcBillingAddress1)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_ADDRESS_1");

                entity.Property(e => e.AcBillingAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_ADDRESS_2");

                entity.Property(e => e.AcBillingAddress3)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_ADDRESS_3");

                entity.Property(e => e.AcBillingCountry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_COUNTRY");

                entity.Property(e => e.AcBillingCounty)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_COUNTY");

                entity.Property(e => e.AcBillingPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_POSTCODE");

                entity.Property(e => e.AcBillingTown)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_TOWN");

                entity.Property(e => e.AcCountry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_COUNTRY");

                entity.Property(e => e.AcCounty)
                    .HasMaxLength(255)
                    .HasColumnName("AC_COUNTY");

                entity.Property(e => e.AcDiscount)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("AC_DISCOUNT");

                entity.Property(e => e.AcEmailDomains)
                    .HasMaxLength(1024)
                    .HasColumnName("AC_EMAIL_DOMAINS");

                entity.Property(e => e.AcExternal)
                    .HasMaxLength(255)
                    .HasColumnName("AC_EXTERNAL");

                entity.Property(e => e.AcFax1)
                    .HasMaxLength(50)
                    .HasColumnName("AC_FAX_1");

                entity.Property(e => e.AcFax2)
                    .HasMaxLength(50)
                    .HasColumnName("AC_FAX_2");

                entity.Property(e => e.AcFax3)
                    .HasMaxLength(50)
                    .HasColumnName("AC_FAX_3");

                entity.Property(e => e.AcFlag)
                    .HasMaxLength(255)
                    .HasColumnName("AC_FLAG");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcIndustry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_INDUSTRY");

                entity.Property(e => e.AcLabel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LABEL");

                entity.Property(e => e.AcLevel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LEVEL");

                entity.Property(e => e.AcLinkedinName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LINKEDIN_NAME");

                entity.Property(e => e.AcNumberEmployees)
                    .HasMaxLength(10)
                    .HasColumnName("AC_NUMBER_EMPLOYEES");

                entity.Property(e => e.AcPhone1)
                    .HasMaxLength(50)
                    .HasColumnName("AC_PHONE_1");

                entity.Property(e => e.AcPhone2)
                    .HasMaxLength(50)
                    .HasColumnName("AC_PHONE_2");

                entity.Property(e => e.AcPhone3)
                    .HasMaxLength(50)
                    .HasColumnName("AC_PHONE_3");

                entity.Property(e => e.AcPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("AC_POSTCODE");

                entity.Property(e => e.AcPotential)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("AC_POTENTIAL");

                entity.Property(e => e.AcReference)
                    .HasMaxLength(50)
                    .HasColumnName("AC_REFERENCE");

                entity.Property(e => e.AcSite)
                    .HasMaxLength(100)
                    .HasColumnName("AC_SITE");

                entity.Property(e => e.AcSource)
                    .HasMaxLength(255)
                    .HasColumnName("AC_SOURCE");

                entity.Property(e => e.AcSummary)
                    .HasMaxLength(255)
                    .HasColumnName("AC_SUMMARY");

                entity.Property(e => e.AcTown)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TOWN");

                entity.Property(e => e.AcType1)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_1");

                entity.Property(e => e.AcType2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_2");

                entity.Property(e => e.AcUd1)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1");

                entity.Property(e => e.AcUd10)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10");

                entity.Property(e => e.AcUd10Bit).HasColumnName("AC_UD10_BIT");

                entity.Property(e => e.AcUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD10_DATE");

                entity.Property(e => e.AcUd10Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_ID");

                entity.Property(e => e.AcUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD10_NUMERIC");

                entity.Property(e => e.AcUd11)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD11");

                entity.Property(e => e.AcUd11Bit).HasColumnName("AC_UD11_BIT");

                entity.Property(e => e.AcUd12)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD12");

                entity.Property(e => e.AcUd12Bit).HasColumnName("AC_UD12_BIT");

                entity.Property(e => e.AcUd13)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD13");

                entity.Property(e => e.AcUd13Bit).HasColumnName("AC_UD13_BIT");

                entity.Property(e => e.AcUd14)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD14");

                entity.Property(e => e.AcUd14Bit).HasColumnName("AC_UD14_BIT");

                entity.Property(e => e.AcUd15)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD15");

                entity.Property(e => e.AcUd15Bit).HasColumnName("AC_UD15_BIT");

                entity.Property(e => e.AcUd16Bit).HasColumnName("AC_UD16_BIT");

                entity.Property(e => e.AcUd17Bit).HasColumnName("AC_UD17_BIT");

                entity.Property(e => e.AcUd18Bit).HasColumnName("AC_UD18_BIT");

                entity.Property(e => e.AcUd19Bit).HasColumnName("AC_UD19_BIT");

                entity.Property(e => e.AcUd1Bit).HasColumnName("AC_UD1_BIT");

                entity.Property(e => e.AcUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD1_DATE");

                entity.Property(e => e.AcUd1Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_ID");

                entity.Property(e => e.AcUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD1_NUMERIC");

                entity.Property(e => e.AcUd2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2");

                entity.Property(e => e.AcUd20Bit).HasColumnName("AC_UD20_BIT");

                entity.Property(e => e.AcUd21Bit).HasColumnName("AC_UD21_BIT");

                entity.Property(e => e.AcUd22Bit).HasColumnName("AC_UD22_BIT");

                entity.Property(e => e.AcUd23Bit).HasColumnName("AC_UD23_BIT");

                entity.Property(e => e.AcUd24Bit).HasColumnName("AC_UD24_BIT");

                entity.Property(e => e.AcUd2Bit).HasColumnName("AC_UD2_BIT");

                entity.Property(e => e.AcUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD2_DATE");

                entity.Property(e => e.AcUd2Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_ID");

                entity.Property(e => e.AcUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD2_NUMERIC");

                entity.Property(e => e.AcUd3)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3");

                entity.Property(e => e.AcUd3Bit).HasColumnName("AC_UD3_BIT");

                entity.Property(e => e.AcUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD3_DATE");

                entity.Property(e => e.AcUd3Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_ID");

                entity.Property(e => e.AcUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD3_NUMERIC");

                entity.Property(e => e.AcUd4)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4");

                entity.Property(e => e.AcUd4Bit).HasColumnName("AC_UD4_BIT");

                entity.Property(e => e.AcUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD4_DATE");

                entity.Property(e => e.AcUd4Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_ID");

                entity.Property(e => e.AcUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD4_NUMERIC");

                entity.Property(e => e.AcUd5)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5");

                entity.Property(e => e.AcUd5Bit).HasColumnName("AC_UD5_BIT");

                entity.Property(e => e.AcUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD5_DATE");

                entity.Property(e => e.AcUd5Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_ID");

                entity.Property(e => e.AcUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD5_NUMERIC");

                entity.Property(e => e.AcUd6)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6");

                entity.Property(e => e.AcUd6Bit).HasColumnName("AC_UD6_BIT");

                entity.Property(e => e.AcUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD6_DATE");

                entity.Property(e => e.AcUd6Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_ID");

                entity.Property(e => e.AcUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD6_NUMERIC");

                entity.Property(e => e.AcUd7)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7");

                entity.Property(e => e.AcUd7Bit).HasColumnName("AC_UD7_BIT");

                entity.Property(e => e.AcUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD7_DATE");

                entity.Property(e => e.AcUd7Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_ID");

                entity.Property(e => e.AcUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD7_NUMERIC");

                entity.Property(e => e.AcUd8)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8");

                entity.Property(e => e.AcUd8Bit).HasColumnName("AC_UD8_BIT");

                entity.Property(e => e.AcUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD8_DATE");

                entity.Property(e => e.AcUd8Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_ID");

                entity.Property(e => e.AcUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD8_NUMERIC");

                entity.Property(e => e.AcUd9)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9");

                entity.Property(e => e.AcUd9Bit).HasColumnName("AC_UD9_BIT");

                entity.Property(e => e.AcUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD9_DATE");

                entity.Property(e => e.AcUd9Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_ID");

                entity.Property(e => e.AcUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD9_NUMERIC");

                entity.Property(e => e.AcUsIdSales).HasColumnName("AC_US_ID_SALES");

                entity.Property(e => e.AcUsIdSalesSummary)
                    .HasMaxLength(255)
                    .HasColumnName("AC_US_ID_SALES_SUMMARY");

                entity.Property(e => e.AcUsIdSupport).HasColumnName("AC_US_ID_SUPPORT");

                entity.Property(e => e.AcUsIdSupportSummary)
                    .HasMaxLength(255)
                    .HasColumnName("AC_US_ID_SUPPORT_SUMMARY");

                entity.Property(e => e.AcWebSite1)
                    .HasMaxLength(100)
                    .HasColumnName("AC_WEB_SITE_1");

                entity.Property(e => e.AcWebSite2)
                    .HasMaxLength(100)
                    .HasColumnName("AC_WEB_SITE_2");

                entity.Property(e => e.AccAnniversary)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_ANNIVERSARY");

                entity.Property(e => e.AccAssistantname)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_ASSISTANTNAME");

                entity.Property(e => e.AccAssistanttelephonenumber)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_ASSISTANTTELEPHONENUMBER");

                entity.Property(e => e.AccAttendeeSummary)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_ATTENDEE_SUMMARY");

                entity.Property(e => e.AccBirthday)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BIRTHDAY");

                entity.Property(e => e.AccBusinessaddresscity)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BUSINESSADDRESSCITY");

                entity.Property(e => e.AccBusinessaddresscountry)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BUSINESSADDRESSCOUNTRY");

                entity.Property(e => e.AccBusinessaddresspostalcode)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BUSINESSADDRESSPOSTALCODE");

                entity.Property(e => e.AccBusinessaddressstate)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BUSINESSADDRESSSTATE");

                entity.Property(e => e.AccBusinessaddressstreet)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BUSINESSADDRESSSTREET");

                entity.Property(e => e.AccBusinessaddressstreet2)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BUSINESSADDRESSSTREET2");

                entity.Property(e => e.AccBusinessaddressstreet3)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BUSINESSADDRESSSTREET3");

                entity.Property(e => e.AccBusinessfaxnumber)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BUSINESSFAXNUMBER");

                entity.Property(e => e.AccBusinesstelephonenumber)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BUSINESSTELEPHONENUMBER");

                entity.Property(e => e.AccCategories)
                    .HasMaxLength(500)
                    .HasColumnName("ACC_CATEGORIES");

                entity.Property(e => e.AccContactSummary)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_CONTACT_SUMMARY");

                entity.Property(e => e.AccDepartment)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_DEPARTMENT");

                entity.Property(e => e.AccEmail1address)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_EMAIL1ADDRESS");

                entity.Property(e => e.AccEmail2address)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_EMAIL2ADDRESS");

                entity.Property(e => e.AccEmail3address)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_EMAIL3ADDRESS");

                entity.Property(e => e.AccExternal)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_EXTERNAL");

                entity.Property(e => e.AccFirstname)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_FIRSTNAME");

                entity.Property(e => e.AccHobby)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_HOBBY");

                entity.Property(e => e.AccHomeaddresscity)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_HOMEADDRESSCITY");

                entity.Property(e => e.AccHomeaddresscountry)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_HOMEADDRESSCOUNTRY");

                entity.Property(e => e.AccHomeaddresspostalcode)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_HOMEADDRESSPOSTALCODE");

                entity.Property(e => e.AccHomeaddressstate)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_HOMEADDRESSSTATE");

                entity.Property(e => e.AccHomeaddressstreet)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_HOMEADDRESSSTREET");

                entity.Property(e => e.AccHomeaddressstreet2)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_HOMEADDRESSSTREET2");

                entity.Property(e => e.AccHomeaddressstreet3)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_HOMEADDRESSSTREET3");

                entity.Property(e => e.AccHomefaxnumber)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_HOMEFAXNUMBER");

                entity.Property(e => e.AccHometelephonenumber)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_HOMETELEPHONENUMBER");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccIdSales).HasColumnName("ACC_ID_SALES");

                entity.Property(e => e.AccIdSupport).HasColumnName("ACC_ID_SUPPORT");

                entity.Property(e => e.AccIdSupportSummary)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_ID_SUPPORT_SUMMARY");

                entity.Property(e => e.AccJobtitle)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_JOBTITLE");

                entity.Property(e => e.AccLastname)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_LASTNAME");

                entity.Property(e => e.AccManagername)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_MANAGERNAME");

                entity.Property(e => e.AccMiddlename)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_MIDDLENAME");

                entity.Property(e => e.AccMobiletelephonenumber)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_MOBILETELEPHONENUMBER");

                entity.Property(e => e.AccNickname)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_NICKNAME");

                entity.Property(e => e.AccPersonalhomepage)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_PERSONALHOMEPAGE");

                entity.Property(e => e.AccReference)
                    .HasMaxLength(50)
                    .HasColumnName("ACC_REFERENCE");

                entity.Property(e => e.AccReferredby)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_REFERREDBY");

                entity.Property(e => e.AccSalutation)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_SALUTATION");

                entity.Property(e => e.AccSensitivity)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_SENSITIVITY");

                entity.Property(e => e.AccSpouse)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_SPOUSE");

                entity.Property(e => e.AccStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_STATUS");

                entity.Property(e => e.AccSuffix)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_SUFFIX");

                entity.Property(e => e.AccTitle)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_TITLE");

                entity.Property(e => e.AccUd1)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD1");

                entity.Property(e => e.AccUd10)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD10");

                entity.Property(e => e.AccUd10Bit).HasColumnName("ACC_UD10_BIT");

                entity.Property(e => e.AccUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD10_DATE");

                entity.Property(e => e.AccUd10Id)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD10_ID");

                entity.Property(e => e.AccUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD10_NUMERIC");

                entity.Property(e => e.AccUd11)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD11");

                entity.Property(e => e.AccUd11Bit).HasColumnName("ACC_UD11_BIT");

                entity.Property(e => e.AccUd12)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD12");

                entity.Property(e => e.AccUd12Bit).HasColumnName("ACC_UD12_BIT");

                entity.Property(e => e.AccUd13)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD13");

                entity.Property(e => e.AccUd13Bit).HasColumnName("ACC_UD13_BIT");

                entity.Property(e => e.AccUd14)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD14");

                entity.Property(e => e.AccUd14Bit).HasColumnName("ACC_UD14_BIT");

                entity.Property(e => e.AccUd15)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD15");

                entity.Property(e => e.AccUd15Bit).HasColumnName("ACC_UD15_BIT");

                entity.Property(e => e.AccUd16Bit).HasColumnName("ACC_UD16_BIT");

                entity.Property(e => e.AccUd17Bit).HasColumnName("ACC_UD17_BIT");

                entity.Property(e => e.AccUd18Bit).HasColumnName("ACC_UD18_BIT");

                entity.Property(e => e.AccUd19Bit).HasColumnName("ACC_UD19_BIT");

                entity.Property(e => e.AccUd1Bit).HasColumnName("ACC_UD1_BIT");

                entity.Property(e => e.AccUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD1_DATE");

                entity.Property(e => e.AccUd1Id)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD1_ID");

                entity.Property(e => e.AccUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD1_NUMERIC");

                entity.Property(e => e.AccUd2)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD2");

                entity.Property(e => e.AccUd20Bit).HasColumnName("ACC_UD20_BIT");

                entity.Property(e => e.AccUd21Bit).HasColumnName("ACC_UD21_BIT");

                entity.Property(e => e.AccUd22Bit).HasColumnName("ACC_UD22_BIT");

                entity.Property(e => e.AccUd23Bit).HasColumnName("ACC_UD23_BIT");

                entity.Property(e => e.AccUd24Bit).HasColumnName("ACC_UD24_BIT");

                entity.Property(e => e.AccUd2Bit).HasColumnName("ACC_UD2_BIT");

                entity.Property(e => e.AccUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD2_DATE");

                entity.Property(e => e.AccUd2Id)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD2_ID");

                entity.Property(e => e.AccUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD2_NUMERIC");

                entity.Property(e => e.AccUd3)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD3");

                entity.Property(e => e.AccUd3Bit).HasColumnName("ACC_UD3_BIT");

                entity.Property(e => e.AccUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD3_DATE");

                entity.Property(e => e.AccUd3Id)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD3_ID");

                entity.Property(e => e.AccUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD3_NUMERIC");

                entity.Property(e => e.AccUd4)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD4");

                entity.Property(e => e.AccUd4Bit).HasColumnName("ACC_UD4_BIT");

                entity.Property(e => e.AccUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD4_DATE");

                entity.Property(e => e.AccUd4Id)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD4_ID");

                entity.Property(e => e.AccUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD4_NUMERIC");

                entity.Property(e => e.AccUd5)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD5");

                entity.Property(e => e.AccUd5Bit).HasColumnName("ACC_UD5_BIT");

                entity.Property(e => e.AccUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD5_DATE");

                entity.Property(e => e.AccUd5Id)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD5_ID");

                entity.Property(e => e.AccUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD5_NUMERIC");

                entity.Property(e => e.AccUd6)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD6");

                entity.Property(e => e.AccUd6Bit).HasColumnName("ACC_UD6_BIT");

                entity.Property(e => e.AccUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD6_DATE");

                entity.Property(e => e.AccUd6Id)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD6_ID");

                entity.Property(e => e.AccUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD6_NUMERIC");

                entity.Property(e => e.AccUd7)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD7");

                entity.Property(e => e.AccUd7Bit).HasColumnName("ACC_UD7_BIT");

                entity.Property(e => e.AccUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD7_DATE");

                entity.Property(e => e.AccUd7Id)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD7_ID");

                entity.Property(e => e.AccUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD7_NUMERIC");

                entity.Property(e => e.AccUd8)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD8");

                entity.Property(e => e.AccUd8Bit).HasColumnName("ACC_UD8_BIT");

                entity.Property(e => e.AccUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD8_DATE");

                entity.Property(e => e.AccUd8Id)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD8_ID");

                entity.Property(e => e.AccUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD8_NUMERIC");

                entity.Property(e => e.AccUd9)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD9");

                entity.Property(e => e.AccUd9Bit).HasColumnName("ACC_UD9_BIT");

                entity.Property(e => e.AccUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ACC_UD9_DATE");

                entity.Property(e => e.AccUd9Id)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_UD9_ID");

                entity.Property(e => e.AccUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ACC_UD9_NUMERIC");

                entity.Property(e => e.AccWebpage)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_WEBPAGE");

                entity.Property(e => e.Answer)
                    .HasMaxLength(255)
                    .HasColumnName("ANSWER");

                entity.Property(e => e.AnswerExtended).HasColumnName("ANSWER_EXTENDED");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.GvQuestion)
                    .HasMaxLength(255)
                    .HasColumnName("GV_QUESTION");

                entity.Property(e => e.OpenBooking)
                    .HasMaxLength(50)
                    .HasColumnName("OPEN_BOOKING");

                entity.Property(e => e.PrivacyNotified).HasColumnName("PRIVACY_NOTIFIED");

                entity.Property(e => e.PrivacyNotifiedBy)
                    .HasMaxLength(255)
                    .HasColumnName("PRIVACY_NOTIFIED_BY");

                entity.Property(e => e.PrivacyNotifiedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRIVACY_NOTIFIED_DATE");

                entity.Property(e => e.PrivacyNotifiedMethod)
                    .HasMaxLength(255)
                    .HasColumnName("PRIVACY_NOTIFIED_METHOD");

                entity.Property(e => e.Question)
                    .HasMaxLength(255)
                    .HasColumnName("QUESTION");

                entity.Property(e => e.QuestionId)
                    .HasMaxLength(255)
                    .HasColumnName("QUESTION_ID");

                entity.Property(e => e.SbaaId).HasColumnName("SBAA_ID");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.SemOwner).HasColumnName("SEM_OWNER");

                entity.Property(e => e.SemSummary)
                    .HasMaxLength(255)
                    .HasColumnName("SEM_SUMMARY");

                entity.Property(e => e.SembId).HasColumnName("SEMB_ID");

                entity.Property(e => e.SembaId).HasColumnName("SEMBA_ID");

                entity.Property(e => e.SemsId).HasColumnName("SEMS_ID");

                entity.Property(e => e.SemsSummary)
                    .HasMaxLength(255)
                    .HasColumnName("SEMS_SUMMARY");

                entity.Property(e => e.SgId).HasColumnName("SG_ID");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.SqId).HasColumnName("SQ_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<VSeminarsQuestion>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vSeminarsQuestions");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.GvQuestion)
                    .HasMaxLength(255)
                    .HasColumnName("GV_QUESTION");

                entity.Property(e => e.Question)
                    .HasMaxLength(255)
                    .HasColumnName("QUESTION");

                entity.Property(e => e.QuestionId)
                    .HasMaxLength(255)
                    .HasColumnName("QUESTION_ID");

                entity.Property(e => e.SemId).HasColumnName("SEM_ID");

                entity.Property(e => e.SemOwner).HasColumnName("SEM_OWNER");

                entity.Property(e => e.SeminarSummary)
                    .HasMaxLength(255)
                    .HasColumnName("SEMINAR_SUMMARY");

                entity.Property(e => e.SgId).HasColumnName("SG_ID");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.SqId).HasColumnName("SQ_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<VSite>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vSites");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_NAME");

                entity.Property(e => e.AcgId).HasColumnName("ACG_ID");

                entity.Property(e => e.Address1)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_1");

                entity.Property(e => e.Address2)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_2");

                entity.Property(e => e.Address3)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_3");

                entity.Property(e => e.Country)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.County)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTY");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.FacebookImage)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_IMAGE");

                entity.Property(e => e.FacebookName)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_NAME");

                entity.Property(e => e.FacebookPrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_PRIVATE_ID");

                entity.Property(e => e.FacebookProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_PROFILE_URL");

                entity.Property(e => e.FacebookPublicId)
                    .HasMaxLength(100)
                    .HasColumnName("FACEBOOK_PUBLIC_ID");

                entity.Property(e => e.Fax1)
                    .HasMaxLength(50)
                    .HasColumnName("FAX_1");

                entity.Property(e => e.Fax1Formatted)
                    .HasMaxLength(62)
                    .HasColumnName("FAX_1_FORMATTED");

                entity.Property(e => e.GplusImage)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_IMAGE");

                entity.Property(e => e.GplusName)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_NAME");

                entity.Property(e => e.GplusPrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_PRIVATE_ID");

                entity.Property(e => e.GplusProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_PROFILE_URL");

                entity.Property(e => e.GplusPublicId)
                    .HasMaxLength(100)
                    .HasColumnName("GPLUS_PUBLIC_ID");

                entity.Property(e => e.LinkedinImage)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_IMAGE");

                entity.Property(e => e.LinkedinName)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_NAME");

                entity.Property(e => e.LinkedinPrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_PRIVATE_ID");

                entity.Property(e => e.LinkedinProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_PROFILE_URL");

                entity.Property(e => e.LinkedinPublicId)
                    .HasMaxLength(100)
                    .HasColumnName("LINKEDIN_PUBLIC_ID");

                entity.Property(e => e.Phone1)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_1");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(255)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.SitExternal)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_EXTERNAL");

                entity.Property(e => e.SitId).HasColumnName("SIT_ID");

                entity.Property(e => e.SitUd1)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_UD1");

                entity.Property(e => e.SitUd10)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_UD10");

                entity.Property(e => e.SitUd10Bit).HasColumnName("SIT_UD10_BIT");

                entity.Property(e => e.SitUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SIT_UD10_DATE");

                entity.Property(e => e.SitUd10Id).HasColumnName("SIT_UD10_ID");

                entity.Property(e => e.SitUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_UD10_ID_NAME");

                entity.Property(e => e.SitUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SIT_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.SitUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SIT_UD10_NUMERIC");

                entity.Property(e => e.SitUd11)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_UD11");

                entity.Property(e => e.SitUd11Bit).HasColumnName("SIT_UD11_BIT");

                entity.Property(e => e.SitUd12)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_UD12");

                entity.Property(e => e.SitUd12Bit).HasColumnName("SIT_UD12_BIT");

                entity.Property(e => e.SitUd13)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_UD13");

                entity.Property(e => e.SitUd13Bit).HasColumnName("SIT_UD13_BIT");

                entity.Property(e => e.SitUd14)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_UD14");

                entity.Property(e => e.SitUd14Bit).HasColumnName("SIT_UD14_BIT");

                entity.Property(e => e.SitUd15)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_UD15");

                entity.Property(e => e.SitUd15Bit).HasColumnName("SIT_UD15_BIT");

                entity.Property(e => e.SitUd16Bit).HasColumnName("SIT_UD16_BIT");

                entity.Property(e => e.SitUd17Bit).HasColumnName("SIT_UD17_BIT");

                entity.Property(e => e.SitUd18Bit).HasColumnName("SIT_UD18_BIT");

                entity.Property(e => e.SitUd19Bit).HasColumnName("SIT_UD19_BIT");

                entity.Property(e => e.SitUd1Bit).HasColumnName("SIT_UD1_BIT");

                entity.Property(e => e.SitUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SIT_UD1_DATE");

                entity.Property(e => e.SitUd1Id).HasColumnName("SIT_UD1_ID");

                entity.Property(e => e.SitUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_UD1_ID_NAME");

                entity.Property(e => e.SitUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SIT_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.SitUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SIT_UD1_NUMERIC");

                entity.Property(e => e.SitUd2)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_UD2");

                entity.Property(e => e.SitUd20Bit).HasColumnName("SIT_UD20_BIT");

                entity.Property(e => e.SitUd21Bit).HasColumnName("SIT_UD21_BIT");

                entity.Property(e => e.SitUd22Bit).HasColumnName("SIT_UD22_BIT");

                entity.Property(e => e.SitUd23Bit).HasColumnName("SIT_UD23_BIT");

                entity.Property(e => e.SitUd24Bit).HasColumnName("SIT_UD24_BIT");

                entity.Property(e => e.SitUd2Bit).HasColumnName("SIT_UD2_BIT");

                entity.Property(e => e.SitUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SIT_UD2_DATE");

                entity.Property(e => e.SitUd2Id).HasColumnName("SIT_UD2_ID");

                entity.Property(e => e.SitUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_UD2_ID_NAME");

                entity.Property(e => e.SitUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SIT_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.SitUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SIT_UD2_NUMERIC");

                entity.Property(e => e.SitUd3)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_UD3");

                entity.Property(e => e.SitUd3Bit).HasColumnName("SIT_UD3_BIT");

                entity.Property(e => e.SitUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SIT_UD3_DATE");

                entity.Property(e => e.SitUd3Id).HasColumnName("SIT_UD3_ID");

                entity.Property(e => e.SitUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_UD3_ID_NAME");

                entity.Property(e => e.SitUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SIT_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.SitUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SIT_UD3_NUMERIC");

                entity.Property(e => e.SitUd4)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_UD4");

                entity.Property(e => e.SitUd4Bit).HasColumnName("SIT_UD4_BIT");

                entity.Property(e => e.SitUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SIT_UD4_DATE");

                entity.Property(e => e.SitUd4Id).HasColumnName("SIT_UD4_ID");

                entity.Property(e => e.SitUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_UD4_ID_NAME");

                entity.Property(e => e.SitUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SIT_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.SitUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SIT_UD4_NUMERIC");

                entity.Property(e => e.SitUd5)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_UD5");

                entity.Property(e => e.SitUd5Bit).HasColumnName("SIT_UD5_BIT");

                entity.Property(e => e.SitUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SIT_UD5_DATE");

                entity.Property(e => e.SitUd5Id).HasColumnName("SIT_UD5_ID");

                entity.Property(e => e.SitUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_UD5_ID_NAME");

                entity.Property(e => e.SitUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SIT_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.SitUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SIT_UD5_NUMERIC");

                entity.Property(e => e.SitUd6)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_UD6");

                entity.Property(e => e.SitUd6Bit).HasColumnName("SIT_UD6_BIT");

                entity.Property(e => e.SitUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SIT_UD6_DATE");

                entity.Property(e => e.SitUd6Id).HasColumnName("SIT_UD6_ID");

                entity.Property(e => e.SitUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_UD6_ID_NAME");

                entity.Property(e => e.SitUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SIT_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.SitUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SIT_UD6_NUMERIC");

                entity.Property(e => e.SitUd7)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_UD7");

                entity.Property(e => e.SitUd7Bit).HasColumnName("SIT_UD7_BIT");

                entity.Property(e => e.SitUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SIT_UD7_DATE");

                entity.Property(e => e.SitUd7Id).HasColumnName("SIT_UD7_ID");

                entity.Property(e => e.SitUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_UD7_ID_NAME");

                entity.Property(e => e.SitUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SIT_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.SitUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SIT_UD7_NUMERIC");

                entity.Property(e => e.SitUd8)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_UD8");

                entity.Property(e => e.SitUd8Bit).HasColumnName("SIT_UD8_BIT");

                entity.Property(e => e.SitUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SIT_UD8_DATE");

                entity.Property(e => e.SitUd8Id).HasColumnName("SIT_UD8_ID");

                entity.Property(e => e.SitUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_UD8_ID_NAME");

                entity.Property(e => e.SitUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SIT_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.SitUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SIT_UD8_NUMERIC");

                entity.Property(e => e.SitUd9)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_UD9");

                entity.Property(e => e.SitUd9Bit).HasColumnName("SIT_UD9_BIT");

                entity.Property(e => e.SitUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("SIT_UD9_DATE");

                entity.Property(e => e.SitUd9Id).HasColumnName("SIT_UD9_ID");

                entity.Property(e => e.SitUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("SIT_UD9_ID_NAME");

                entity.Property(e => e.SitUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("SIT_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.SitUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("SIT_UD9_NUMERIC");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TimeZone)
                    .HasMaxLength(255)
                    .HasColumnName("TIME_ZONE");

                entity.Property(e => e.Town)
                    .HasMaxLength(255)
                    .HasColumnName("TOWN");

                entity.Property(e => e.Twitter1Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_IMAGE");

                entity.Property(e => e.Twitter1Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_NAME");

                entity.Property(e => e.Twitter1PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_PRIVATE_ID");

                entity.Property(e => e.Twitter1ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_PROFILE_URL");

                entity.Property(e => e.Twitter1PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER1_PUBLIC_ID");

                entity.Property(e => e.Twitter2Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_IMAGE");

                entity.Property(e => e.Twitter2Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_NAME");

                entity.Property(e => e.Twitter2PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_PRIVATE_ID");

                entity.Property(e => e.Twitter2ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_PROFILE_URL");

                entity.Property(e => e.Twitter2PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER2_PUBLIC_ID");

                entity.Property(e => e.Twitter3Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_IMAGE");

                entity.Property(e => e.Twitter3Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_NAME");

                entity.Property(e => e.Twitter3PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_PRIVATE_ID");

                entity.Property(e => e.Twitter3ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_PROFILE_URL");

                entity.Property(e => e.Twitter3PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER3_PUBLIC_ID");

                entity.Property(e => e.Twitter4Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_IMAGE");

                entity.Property(e => e.Twitter4Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_NAME");

                entity.Property(e => e.Twitter4PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_PRIVATE_ID");

                entity.Property(e => e.Twitter4ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_PROFILE_URL");

                entity.Property(e => e.Twitter4PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER4_PUBLIC_ID");

                entity.Property(e => e.Twitter5Image)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_IMAGE");

                entity.Property(e => e.Twitter5Name)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_NAME");

                entity.Property(e => e.Twitter5PrivateId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_PRIVATE_ID");

                entity.Property(e => e.Twitter5ProfileUrl)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_PROFILE_URL");

                entity.Property(e => e.Twitter5PublicId)
                    .HasMaxLength(100)
                    .HasColumnName("TWITTER5_PUBLIC_ID");

                entity.Property(e => e.Type1).HasColumnName("TYPE_1");

                entity.Property(e => e.Type1Name)
                    .HasMaxLength(255)
                    .HasColumnName("TYPE_1_NAME");

                entity.Property(e => e.Type1NameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("TYPE_1_NAME_HLIGHT");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");

                entity.Property(e => e.UsIdSupport).HasColumnName("US_ID_SUPPORT");

                entity.Property(e => e.UsName)
                    .HasMaxLength(255)
                    .HasColumnName("US_NAME");

                entity.Property(e => e.UsgName)
                    .HasMaxLength(255)
                    .HasColumnName("USG_NAME");

                entity.Property(e => e.WebSite1)
                    .HasMaxLength(100)
                    .HasColumnName("WEB_SITE_1");
            });

            modelBuilder.Entity<VSocialAuth>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vSocialAuth");

                entity.Property(e => e.Bounced).HasColumnName("BOUNCED");

                entity.Property(e => e.Certificate).HasColumnName("CERTIFICATE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Data1).HasColumnName("DATA_1");

                entity.Property(e => e.Data2).HasColumnName("DATA_2");

                entity.Property(e => e.Data3).HasColumnName("DATA_3");

                entity.Property(e => e.Data4).HasColumnName("DATA_4");

                entity.Property(e => e.Data5).HasColumnName("DATA_5");

                entity.Property(e => e.ExpiryDate)
                    .HasColumnType("datetime")
                    .HasColumnName("EXPIRY_DATE");

                entity.Property(e => e.LastBounceMessage)
                    .HasMaxLength(1000)
                    .HasColumnName("LAST_BOUNCE_MESSAGE");

                entity.Property(e => e.LastBounced)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_BOUNCED");

                entity.Property(e => e.LastUsed)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_USED");

                entity.Property(e => e.NtAccount)
                    .HasMaxLength(100)
                    .HasColumnName("NT_ACCOUNT");

                entity.Property(e => e.ProfileUrl)
                    .HasMaxLength(255)
                    .HasColumnName("PROFILE_URL");

                entity.Property(e => e.SocId).HasColumnName("SOC_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(100)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.ThirdPartyId)
                    .HasMaxLength(50)
                    .HasColumnName("THIRD_PARTY_ID");

                entity.Property(e => e.ThirdPartyName)
                    .HasMaxLength(100)
                    .HasColumnName("THIRD_PARTY_NAME");

                entity.Property(e => e.ThirdPartyPassword)
                    .HasMaxLength(255)
                    .HasColumnName("THIRD_PARTY_PASSWORD");

                entity.Property(e => e.ThirdPartyUsername)
                    .HasMaxLength(255)
                    .HasColumnName("THIRD_PARTY_USERNAME");

                entity.Property(e => e.TpiId).HasColumnName("TPI_ID");

                entity.Property(e => e.TypeName)
                    .HasMaxLength(50)
                    .HasColumnName("TYPE_NAME");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsName)
                    .HasMaxLength(255)
                    .HasColumnName("US_NAME");
            });

            modelBuilder.Entity<VStageFollowUpRecipientInformationAccountContact>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vStageFollowUpRecipientInformationAccountContacts");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.CEmailBounced).HasColumnName("C_EMAIL_BOUNCED");

                entity.Property(e => e.CEmailClicked).HasColumnName("C_EMAIL_CLICKED");

                entity.Property(e => e.CEmailDelivered).HasColumnName("C_EMAIL_DELIVERED");

                entity.Property(e => e.CEmailForwarded).HasColumnName("C_EMAIL_FORWARDED");

                entity.Property(e => e.CEmailOpen).HasColumnName("C_EMAIL_OPEN");

                entity.Property(e => e.CEmailReplied).HasColumnName("C_EMAIL_REPLIED");

                entity.Property(e => e.CEmailUnsubd).HasColumnName("C_EMAIL_UNSUBD");

                entity.Property(e => e.CsId).HasColumnName("CS_ID");

                entity.Property(e => e.EmailInvalidReason).HasColumnName("EMAIL_INVALID_REASON");

                entity.Property(e => e.FaxInvalidReason).HasColumnName("FAX_INVALID_REASON");

                entity.Property(e => e.IsSent).HasColumnName("IS_SENT");

                entity.Property(e => e.LastSent)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_SENT");

                entity.Property(e => e.LetterInvalidReason).HasColumnName("LETTER_INVALID_REASON");

                entity.Property(e => e.PhoneInvalidReason).HasColumnName("PHONE_INVALID_REASON");

                entity.Property(e => e.SmsInvalidReason).HasColumnName("SMS_INVALID_REASON");

                entity.Property(e => e.SrcId).HasColumnName("SRC_ID");

                entity.Property(e => e.StageType).HasColumnName("STAGE_TYPE");

                entity.Property(e => e.StgId).HasColumnName("STG_ID");

                entity.Property(e => e.ValidEmail).HasColumnName("VALID_EMAIL");

                entity.Property(e => e.ValidFax).HasColumnName("VALID_FAX");

                entity.Property(e => e.ValidLetter).HasColumnName("VALID_LETTER");

                entity.Property(e => e.ValidPhone).HasColumnName("VALID_PHONE");

                entity.Property(e => e.ValidSms).HasColumnName("VALID_SMS");
            });

            modelBuilder.Entity<VStageFollowUpRecipientInformationLead>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vStageFollowUpRecipientInformationLeads");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.CEmailBounced).HasColumnName("C_EMAIL_BOUNCED");

                entity.Property(e => e.CEmailClicked).HasColumnName("C_EMAIL_CLICKED");

                entity.Property(e => e.CEmailDelivered).HasColumnName("C_EMAIL_DELIVERED");

                entity.Property(e => e.CEmailForwarded).HasColumnName("C_EMAIL_FORWARDED");

                entity.Property(e => e.CEmailOpen).HasColumnName("C_EMAIL_OPEN");

                entity.Property(e => e.CEmailReplied).HasColumnName("C_EMAIL_REPLIED");

                entity.Property(e => e.CEmailUnsubd).HasColumnName("C_EMAIL_UNSUBD");

                entity.Property(e => e.CsId).HasColumnName("CS_ID");

                entity.Property(e => e.EmailInvalidReason).HasColumnName("EMAIL_INVALID_REASON");

                entity.Property(e => e.FaxInvalidReason).HasColumnName("FAX_INVALID_REASON");

                entity.Property(e => e.IsSent).HasColumnName("IS_SENT");

                entity.Property(e => e.LastSent)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_SENT");

                entity.Property(e => e.LetterInvalidReason).HasColumnName("LETTER_INVALID_REASON");

                entity.Property(e => e.PhoneInvalidReason).HasColumnName("PHONE_INVALID_REASON");

                entity.Property(e => e.SmsInvalidReason).HasColumnName("SMS_INVALID_REASON");

                entity.Property(e => e.SrcId).HasColumnName("SRC_ID");

                entity.Property(e => e.StageType).HasColumnName("STAGE_TYPE");

                entity.Property(e => e.StgId).HasColumnName("STG_ID");

                entity.Property(e => e.ValidEmail).HasColumnName("VALID_EMAIL");

                entity.Property(e => e.ValidFax).HasColumnName("VALID_FAX");

                entity.Property(e => e.ValidLetter).HasColumnName("VALID_LETTER");

                entity.Property(e => e.ValidPhone).HasColumnName("VALID_PHONE");

                entity.Property(e => e.ValidSms).HasColumnName("VALID_SMS");
            });

            modelBuilder.Entity<VStageHistory>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vStageHistory");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Days).HasColumnName("DAYS");

                entity.Property(e => e.DisplayValue)
                    .HasMaxLength(255)
                    .HasColumnName("DISPLAY_VALUE");

                entity.Property(e => e.DroId).HasColumnName("DRO_ID");

                entity.Property(e => e.DurationText)
                    .HasMaxLength(18)
                    .HasColumnName("DURATION_TEXT");

                entity.Property(e => e.End)
                    .HasColumnType("datetime")
                    .HasColumnName("END");

                entity.Property(e => e.FieldName)
                    .HasMaxLength(255)
                    .HasColumnName("FIELD_NAME");

                entity.Property(e => e.NumericValue)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("NUMERIC_VALUE");

                entity.Property(e => e.ObjectType)
                    .HasMaxLength(32)
                    .HasColumnName("OBJECT_TYPE");

                entity.Property(e => e.OpId).HasColumnName("OP_ID");

                entity.Property(e => e.PjId).HasColumnName("PJ_ID");

                entity.Property(e => e.RefId).HasColumnName("REF_ID");

                entity.Property(e => e.Stage)
                    .HasMaxLength(255)
                    .HasColumnName("STAGE");

                entity.Property(e => e.StageHlight)
                    .HasMaxLength(100)
                    .HasColumnName("STAGE_HLIGHT");

                entity.Property(e => e.Start)
                    .HasColumnType("datetime")
                    .HasColumnName("START");

                entity.Property(e => e.SthId).HasColumnName("STH_ID");

                entity.Property(e => e.ValueType).HasColumnName("VALUE_TYPE");
            });

            modelBuilder.Entity<VSubAccessDropOption>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vSubAccessDropOptions");

                entity.Property(e => e.DroDeleted).HasColumnName("DRO_DELETED");

                entity.Property(e => e.Summary)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Value)
                    .IsRequired()
                    .HasMaxLength(36)
                    .IsUnicode(false)
                    .HasColumnName("VALUE");
            });

            modelBuilder.Entity<VTag>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vTags");

                entity.Property(e => e.Accounts).HasColumnName("ACCOUNTS");

                entity.Property(e => e.Activities).HasColumnName("ACTIVITIES");

                entity.Property(e => e.Appointments).HasColumnName("APPOINTMENTS");

                entity.Property(e => e.Campaigns).HasColumnName("CAMPAIGNS");

                entity.Property(e => e.Colour)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("COLOUR")
                    .IsFixedLength(true);

                entity.Property(e => e.Contacts).HasColumnName("CONTACTS");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Email).HasColumnName("EMAIL");

                entity.Property(e => e.Notes).HasColumnName("NOTES");

                entity.Property(e => e.Opportunities).HasColumnName("OPPORTUNITIES");

                entity.Property(e => e.Products).HasColumnName("PRODUCTS");

                entity.Property(e => e.Profiles).HasColumnName("PROFILES");

                entity.Property(e => e.Projects).HasColumnName("PROJECTS");

                entity.Property(e => e.Propagate).HasColumnName("PROPAGATE");

                entity.Property(e => e.Quotes).HasColumnName("QUOTES");

                entity.Property(e => e.Seminars).HasColumnName("SEMINARS");

                entity.Property(e => e.Tag)
                    .HasMaxLength(25)
                    .HasColumnName("TAG");

                entity.Property(e => e.TagId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("TAG_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.Users).HasColumnName("USERS");
            });

            modelBuilder.Entity<VTagLink>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vTagLinks");

                entity.Property(e => e.Accounts).HasColumnName("ACCOUNTS");

                entity.Property(e => e.Activities).HasColumnName("ACTIVITIES");

                entity.Property(e => e.Appointments).HasColumnName("APPOINTMENTS");

                entity.Property(e => e.Campaigns).HasColumnName("CAMPAIGNS");

                entity.Property(e => e.Colour)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("COLOUR")
                    .IsFixedLength(true);

                entity.Property(e => e.Contacts).HasColumnName("CONTACTS");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Email).HasColumnName("EMAIL");

                entity.Property(e => e.Notes).HasColumnName("NOTES");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.Opportunities).HasColumnName("OPPORTUNITIES");

                entity.Property(e => e.Products).HasColumnName("PRODUCTS");

                entity.Property(e => e.Profiles).HasColumnName("PROFILES");

                entity.Property(e => e.Projects).HasColumnName("PROJECTS");

                entity.Property(e => e.Propagate).HasColumnName("PROPAGATE");

                entity.Property(e => e.Quotes).HasColumnName("QUOTES");

                entity.Property(e => e.Seminars).HasColumnName("SEMINARS");

                entity.Property(e => e.Tag)
                    .HasMaxLength(25)
                    .HasColumnName("TAG");

                entity.Property(e => e.TagId).HasColumnName("TAG_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.Users).HasColumnName("USERS");
            });

            modelBuilder.Entity<VTagsSearch>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vTagsSearch");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.Tags)
                    .HasMaxLength(2000)
                    .HasColumnName("TAGS");
            });

            modelBuilder.Entity<VTagsSearchAccount>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vTagsSearchAccounts");

                entity.Property(e => e.AcIdTags).HasColumnName("AC_ID_TAGS");

                entity.Property(e => e.AcTags)
                    .HasMaxLength(2000)
                    .HasColumnName("AC_TAGS");
            });

            modelBuilder.Entity<VTask>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vTasks");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.BillingInformation)
                    .HasMaxLength(10)
                    .HasColumnName("BILLING_INFORMATION")
                    .IsFixedLength(true);

                entity.Property(e => e.Companies)
                    .HasMaxLength(255)
                    .HasColumnName("COMPANIES");

                entity.Property(e => e.Contacts)
                    .HasMaxLength(255)
                    .HasColumnName("CONTACTS");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DateCompleted)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_COMPLETED");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.DueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DUE_DATE");

                entity.Property(e => e.InUpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("IN_UPDATED_DATE");

                entity.Property(e => e.OutUpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OUT_UPDATED_DATE");

                entity.Property(e => e.Owner)
                    .HasMaxLength(50)
                    .HasColumnName("OWNER");

                entity.Property(e => e.OwnerName)
                    .HasMaxLength(255)
                    .HasColumnName("OWNER_NAME");

                entity.Property(e => e.PercentComplete)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("PERCENT_COMPLETE");

                entity.Property(e => e.Priority)
                    .HasMaxLength(50)
                    .HasColumnName("PRIORITY");

                entity.Property(e => e.Private).HasColumnName("PRIVATE");

                entity.Property(e => e.RefId).HasColumnName("REF_ID");

                entity.Property(e => e.RefTable)
                    .IsRequired()
                    .HasMaxLength(5)
                    .HasColumnName("REF_TABLE")
                    .IsFixedLength(true);

                entity.Property(e => e.Sensitivity)
                    .HasMaxLength(50)
                    .HasColumnName("SENSITIVITY");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("START_DATE");

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .HasColumnName("STATUS");

                entity.Property(e => e.Subject)
                    .HasMaxLength(255)
                    .HasColumnName("SUBJECT");

                entity.Property(e => e.Synchronised).HasColumnName("SYNCHRONISED");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UstDeleted).HasColumnName("UST_DELETED");

                entity.Property(e => e.UstId).HasColumnName("UST_ID");

                entity.Property(e => e.UstMapiId)
                    .HasMaxLength(350)
                    .HasColumnName("UST_MAPI_ID");

                entity.Property(e => e.UstStoreId)
                    .HasMaxLength(800)
                    .HasColumnName("UST_STORE_ID");
            });

            modelBuilder.Entity<VTaskSyncList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vTaskSyncList");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_NAME");

                entity.Property(e => e.ActId).HasColumnName("ACT_ID");

                entity.Property(e => e.Activity)
                    .HasMaxLength(255)
                    .HasColumnName("ACTIVITY");

                entity.Property(e => e.Status)
                    .HasMaxLength(23)
                    .IsUnicode(false)
                    .HasColumnName("STATUS");

                entity.Property(e => e.SyncUpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYNC_UPDATED_DATE");

                entity.Property(e => e.Username)
                    .HasMaxLength(255)
                    .HasColumnName("USERNAME");

                entity.Property(e => e.UstId).HasColumnName("UST_ID");
            });

            modelBuilder.Entity<VTaxCode>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vTaxCodes");

                entity.Property(e => e.Code)
                    .HasMaxLength(50)
                    .HasColumnName("CODE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TaxPercentage)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("TAX_PERCENTAGE");

                entity.Property(e => e.TxcDeleted).HasColumnName("TXC_DELETED");

                entity.Property(e => e.TxcExternal)
                    .HasMaxLength(255)
                    .HasColumnName("TXC_EXTERNAL");

                entity.Property(e => e.TxcId).HasColumnName("TXC_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<VTimePeriod>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vTimePeriods");

                entity.Property(e => e.DateFrom)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_FROM");

                entity.Property(e => e.DateTo)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_TO");

                entity.Property(e => e.IsPublic).HasColumnName("IS_PUBLIC");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TimId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("TIM_ID");

                entity.Property(e => e.UsrId).HasColumnName("USR_ID");
            });

            modelBuilder.Entity<VTimeUnitsRecord>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vTimeUnitsRecord");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcaId).HasColumnName("ACA_ID");

                entity.Property(e => e.AccaId).HasColumnName("ACCA_ID");

                entity.Property(e => e.AccountSummary)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_SUMMARY");

                entity.Property(e => e.AcoId).HasColumnName("ACO_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DateRecorded)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_RECORDED");

                entity.Property(e => e.Description)
                    .HasMaxLength(4000)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.OpId).HasColumnName("OP_ID");

                entity.Property(e => e.OpaId).HasColumnName("OPA_ID");

                entity.Property(e => e.OpqdId).HasColumnName("OPQD_ID");

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.ParentItem)
                    .IsRequired()
                    .HasMaxLength(19)
                    .IsUnicode(false)
                    .HasColumnName("PARENT_ITEM");

                entity.Property(e => e.ParentSummary)
                    .HasMaxLength(255)
                    .HasColumnName("PARENT_SUMMARY");

                entity.Property(e => e.PjId).HasColumnName("PJ_ID");

                entity.Property(e => e.PjaId).HasColumnName("PJA_ID");

                entity.Property(e => e.QuoteDetailSummary)
                    .HasMaxLength(255)
                    .HasColumnName("QUOTE_DETAIL_SUMMARY");

                entity.Property(e => e.RecordUserSummary)
                    .HasMaxLength(255)
                    .HasColumnName("RECORD_USER_SUMMARY");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TimeUnitIsTime).HasColumnName("TIME_UNIT_IS_TIME");

                entity.Property(e => e.TimeUnitValue).HasColumnName("TIME_UNIT_VALUE");

                entity.Property(e => e.TurId).HasColumnName("TUR_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UserTeamName)
                    .HasMaxLength(255)
                    .HasColumnName("USER_TEAM_NAME");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");
            });

            modelBuilder.Entity<VTouchPoint>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vTouchPoints");

                entity.Property(e => e.AcGroup)
                    .HasMaxLength(255)
                    .HasColumnName("AC_GROUP");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcSummary)
                    .HasMaxLength(255)
                    .HasColumnName("AC_SUMMARY");

                entity.Property(e => e.AcType)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE");

                entity.Property(e => e.AcTypeHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_HLIGHT");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccSummary)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_SUMMARY");

                entity.Property(e => e.Action)
                    .HasMaxLength(255)
                    .HasColumnName("ACTION");

                entity.Property(e => e.Address1)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS1");

                entity.Property(e => e.Address2)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS2");

                entity.Property(e => e.Address3)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS3");

                entity.Property(e => e.CompanyFounded)
                    .HasMaxLength(255)
                    .HasColumnName("COMPANY_FOUNDED");

                entity.Property(e => e.CompanyIndustrySic)
                    .HasMaxLength(255)
                    .HasColumnName("COMPANY_INDUSTRY_SIC");

                entity.Property(e => e.CompanyName)
                    .HasMaxLength(255)
                    .HasColumnName("COMPANY_NAME");

                entity.Property(e => e.CompanyNoEmployees)
                    .HasMaxLength(255)
                    .HasColumnName("COMPANY_NO_EMPLOYEES");

                entity.Property(e => e.CompanyReg)
                    .HasMaxLength(255)
                    .HasColumnName("COMPANY_REG");

                entity.Property(e => e.CompanyTurnover)
                    .HasMaxLength(255)
                    .HasColumnName("COMPANY_TURNOVER");

                entity.Property(e => e.ContactEmail)
                    .HasMaxLength(255)
                    .HasColumnName("CONTACT_EMAIL");

                entity.Property(e => e.ContactJobtitle)
                    .HasMaxLength(255)
                    .HasColumnName("CONTACT_JOBTITLE");

                entity.Property(e => e.ContactName)
                    .HasMaxLength(255)
                    .HasColumnName("CONTACT_NAME");

                entity.Property(e => e.Country)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.County)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTY");

                entity.Property(e => e.Created)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CsId).HasColumnName("CS_ID");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(100)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Description)
                    .HasMaxLength(1000)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.Domain)
                    .HasMaxLength(255)
                    .HasColumnName("DOMAIN");

                entity.Property(e => e.DurationSeconds).HasColumnName("DURATION_SECONDS");

                entity.Property(e => e.ExternalId)
                    .HasMaxLength(255)
                    .HasColumnName("EXTERNAL_ID");

                entity.Property(e => e.GeoLat).HasColumnName("GEO_LAT");

                entity.Property(e => e.GeoLong).HasColumnName("GEO_LONG");

                entity.Property(e => e.HasChildren).HasColumnName("HAS_CHILDREN");

                entity.Property(e => e.Icon)
                    .HasMaxLength(255)
                    .HasColumnName("ICON");

                entity.Property(e => e.ImageUrl)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("IMAGE_URL");

                entity.Property(e => e.Industry)
                    .HasMaxLength(255)
                    .HasColumnName("INDUSTRY");

                entity.Property(e => e.InitialScore).HasColumnName("INITIAL_SCORE");

                entity.Property(e => e.IntegrationName)
                    .HasMaxLength(255)
                    .HasColumnName("INTEGRATION_NAME");

                entity.Property(e => e.ItemId)
                    .HasMaxLength(50)
                    .HasColumnName("ITEM_ID");

                entity.Property(e => e.ItemUrl)
                    .HasMaxLength(255)
                    .HasColumnName("ITEM_URL");

                entity.Property(e => e.Keywords)
                    .HasMaxLength(255)
                    .HasColumnName("KEYWORDS");

                entity.Property(e => e.LeadAllocationMode).HasColumnName("LEAD_ALLOCATION_MODE");

                entity.Property(e => e.ListName)
                    .HasMaxLength(255)
                    .HasColumnName("LIST_NAME");

                entity.Property(e => e.ListOpen).HasColumnName("LIST_OPEN");

                entity.Property(e => e.McaId).HasColumnName("MCA_ID");

                entity.Property(e => e.McsrId).HasColumnName("MCSR_ID");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.ObjType)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("OBJ_TYPE");

                entity.Property(e => e.Owner)
                    .HasMaxLength(255)
                    .HasColumnName("OWNER");

                entity.Property(e => e.Phone1)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE1");

                entity.Property(e => e.Phone2)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE2");

                entity.Property(e => e.Phone3)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE3");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(255)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.PrivateId)
                    .HasMaxLength(50)
                    .HasColumnName("PRIVATE_ID");

                entity.Property(e => e.ProfileId)
                    .HasMaxLength(50)
                    .HasColumnName("PROFILE_ID");

                entity.Property(e => e.ProfileUrl)
                    .HasMaxLength(255)
                    .HasColumnName("PROFILE_URL");

                entity.Property(e => e.RootTp).HasColumnName("ROOT_TP");

                entity.Property(e => e.Score).HasColumnName("SCORE");

                entity.Property(e => e.ScoreThis).HasColumnName("SCORE_THIS");

                entity.Property(e => e.SessionId).HasColumnName("SESSION_ID");

                entity.Property(e => e.SessionScore).HasColumnName("SESSION_SCORE");

                entity.Property(e => e.SocAccount)
                    .HasMaxLength(100)
                    .HasColumnName("SOC_ACCOUNT");

                entity.Property(e => e.SocId).HasColumnName("SOC_ID");

                entity.Property(e => e.SocProfileUrl)
                    .HasMaxLength(255)
                    .HasColumnName("SOC_PROFILE_URL");

                entity.Property(e => e.SocialMsgId)
                    .HasMaxLength(50)
                    .HasColumnName("SOCIAL_MSG_ID");

                entity.Property(e => e.Source)
                    .HasMaxLength(255)
                    .HasColumnName("SOURCE");

                entity.Property(e => e.StgId).HasColumnName("STG_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TimeAgo)
                    .HasMaxLength(50)
                    .HasColumnName("TIME_AGO");

                entity.Property(e => e.Town)
                    .HasMaxLength(255)
                    .HasColumnName("TOWN");

                entity.Property(e => e.TpCategory)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("TP_CATEGORY");

                entity.Property(e => e.TpCategoryHlight)
                    .IsRequired()
                    .HasMaxLength(7)
                    .HasColumnName("TP_CATEGORY_HLIGHT");

                entity.Property(e => e.TpDeleted).HasColumnName("TP_DELETED");

                entity.Property(e => e.TpGeneric1)
                    .HasMaxLength(255)
                    .HasColumnName("TP_GENERIC1");

                entity.Property(e => e.TpGeneric10)
                    .HasMaxLength(255)
                    .HasColumnName("TP_GENERIC10");

                entity.Property(e => e.TpGeneric2)
                    .HasMaxLength(255)
                    .HasColumnName("TP_GENERIC2");

                entity.Property(e => e.TpGeneric3)
                    .HasMaxLength(255)
                    .HasColumnName("TP_GENERIC3");

                entity.Property(e => e.TpGeneric4)
                    .HasMaxLength(255)
                    .HasColumnName("TP_GENERIC4");

                entity.Property(e => e.TpGeneric5)
                    .HasMaxLength(255)
                    .HasColumnName("TP_GENERIC5");

                entity.Property(e => e.TpGeneric6)
                    .HasMaxLength(255)
                    .HasColumnName("TP_GENERIC6");

                entity.Property(e => e.TpGeneric7)
                    .HasMaxLength(255)
                    .HasColumnName("TP_GENERIC7");

                entity.Property(e => e.TpGeneric8)
                    .HasMaxLength(255)
                    .HasColumnName("TP_GENERIC8");

                entity.Property(e => e.TpGeneric9)
                    .HasMaxLength(255)
                    .HasColumnName("TP_GENERIC9");

                entity.Property(e => e.TpId).HasColumnName("TP_ID");

                entity.Property(e => e.TpType)
                    .HasMaxLength(50)
                    .HasColumnName("TP_TYPE");

                entity.Property(e => e.TpTypeHlight)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TP_TYPE_HLIGHT");

                entity.Property(e => e.TpUd1)
                    .HasMaxLength(255)
                    .HasColumnName("TP_UD1");

                entity.Property(e => e.TpUd10)
                    .HasMaxLength(255)
                    .HasColumnName("TP_UD10");

                entity.Property(e => e.TpUd10Bit).HasColumnName("TP_UD10_BIT");

                entity.Property(e => e.TpUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_UD10_DATE");

                entity.Property(e => e.TpUd10Id).HasColumnName("TP_UD10_ID");

                entity.Property(e => e.TpUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("TP_UD10_NUMERIC");

                entity.Property(e => e.TpUd1Bit).HasColumnName("TP_UD1_BIT");

                entity.Property(e => e.TpUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_UD1_DATE");

                entity.Property(e => e.TpUd1Id).HasColumnName("TP_UD1_ID");

                entity.Property(e => e.TpUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("TP_UD1_NUMERIC");

                entity.Property(e => e.TpUd2)
                    .HasMaxLength(255)
                    .HasColumnName("TP_UD2");

                entity.Property(e => e.TpUd2Bit).HasColumnName("TP_UD2_BIT");

                entity.Property(e => e.TpUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_UD2_DATE");

                entity.Property(e => e.TpUd2Id).HasColumnName("TP_UD2_ID");

                entity.Property(e => e.TpUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("TP_UD2_NUMERIC");

                entity.Property(e => e.TpUd3)
                    .HasMaxLength(255)
                    .HasColumnName("TP_UD3");

                entity.Property(e => e.TpUd3Bit).HasColumnName("TP_UD3_BIT");

                entity.Property(e => e.TpUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_UD3_DATE");

                entity.Property(e => e.TpUd3Id).HasColumnName("TP_UD3_ID");

                entity.Property(e => e.TpUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("TP_UD3_NUMERIC");

                entity.Property(e => e.TpUd4)
                    .HasMaxLength(255)
                    .HasColumnName("TP_UD4");

                entity.Property(e => e.TpUd4Bit).HasColumnName("TP_UD4_BIT");

                entity.Property(e => e.TpUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_UD4_DATE");

                entity.Property(e => e.TpUd4Id).HasColumnName("TP_UD4_ID");

                entity.Property(e => e.TpUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("TP_UD4_NUMERIC");

                entity.Property(e => e.TpUd5)
                    .HasMaxLength(255)
                    .HasColumnName("TP_UD5");

                entity.Property(e => e.TpUd5Bit).HasColumnName("TP_UD5_BIT");

                entity.Property(e => e.TpUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_UD5_DATE");

                entity.Property(e => e.TpUd5Id).HasColumnName("TP_UD5_ID");

                entity.Property(e => e.TpUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("TP_UD5_NUMERIC");

                entity.Property(e => e.TpUd6)
                    .HasMaxLength(255)
                    .HasColumnName("TP_UD6");

                entity.Property(e => e.TpUd6Bit).HasColumnName("TP_UD6_BIT");

                entity.Property(e => e.TpUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_UD6_DATE");

                entity.Property(e => e.TpUd6Id).HasColumnName("TP_UD6_ID");

                entity.Property(e => e.TpUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("TP_UD6_NUMERIC");

                entity.Property(e => e.TpUd7)
                    .HasMaxLength(255)
                    .HasColumnName("TP_UD7");

                entity.Property(e => e.TpUd7Bit).HasColumnName("TP_UD7_BIT");

                entity.Property(e => e.TpUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_UD7_DATE");

                entity.Property(e => e.TpUd7Id).HasColumnName("TP_UD7_ID");

                entity.Property(e => e.TpUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("TP_UD7_NUMERIC");

                entity.Property(e => e.TpUd8)
                    .HasMaxLength(255)
                    .HasColumnName("TP_UD8");

                entity.Property(e => e.TpUd8Bit).HasColumnName("TP_UD8_BIT");

                entity.Property(e => e.TpUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_UD8_DATE");

                entity.Property(e => e.TpUd8Id).HasColumnName("TP_UD8_ID");

                entity.Property(e => e.TpUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("TP_UD8_NUMERIC");

                entity.Property(e => e.TpUd9)
                    .HasMaxLength(255)
                    .HasColumnName("TP_UD9");

                entity.Property(e => e.TpUd9Bit).HasColumnName("TP_UD9_BIT");

                entity.Property(e => e.TpUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_UD9_DATE");

                entity.Property(e => e.TpUd9Id).HasColumnName("TP_UD9_ID");

                entity.Property(e => e.TpUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("TP_UD9_NUMERIC");

                entity.Property(e => e.TpcId).HasColumnName("TPC_ID");

                entity.Property(e => e.TpiId).HasColumnName("TPI_ID");

                entity.Property(e => e.TplId).HasColumnName("TPL_ID");

                entity.Property(e => e.TptId).HasColumnName("TPT_ID");

                entity.Property(e => e.TrackingId).HasColumnName("TRACKING_ID");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsIdControl).HasColumnName("US_ID_CONTROL");

                entity.Property(e => e.UsIdOwner).HasColumnName("US_ID_OWNER");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");

                entity.Property(e => e.UsIdSupport).HasColumnName("US_ID_SUPPORT");

                entity.Property(e => e.UsgIdOwner).HasColumnName("USG_ID_OWNER");

                entity.Property(e => e.Website)
                    .HasMaxLength(255)
                    .HasColumnName("WEBSITE");
            });

            modelBuilder.Entity<VTouchPointChild>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vTouchPointChildren");

                entity.Property(e => e.Action)
                    .HasMaxLength(255)
                    .HasColumnName("ACTION");

                entity.Property(e => e.Address1)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS1");

                entity.Property(e => e.Address2)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS2");

                entity.Property(e => e.Address3)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS3");

                entity.Property(e => e.CompanyFounded)
                    .HasMaxLength(255)
                    .HasColumnName("COMPANY_FOUNDED");

                entity.Property(e => e.CompanyIndustrySic)
                    .HasMaxLength(255)
                    .HasColumnName("COMPANY_INDUSTRY_SIC");

                entity.Property(e => e.CompanyName)
                    .HasMaxLength(255)
                    .HasColumnName("COMPANY_NAME");

                entity.Property(e => e.CompanyNoEmployees)
                    .HasMaxLength(255)
                    .HasColumnName("COMPANY_NO_EMPLOYEES");

                entity.Property(e => e.CompanyReg)
                    .HasMaxLength(255)
                    .HasColumnName("COMPANY_REG");

                entity.Property(e => e.CompanyTurnover)
                    .HasMaxLength(255)
                    .HasColumnName("COMPANY_TURNOVER");

                entity.Property(e => e.ContactEmail)
                    .HasMaxLength(255)
                    .HasColumnName("CONTACT_EMAIL");

                entity.Property(e => e.ContactJobtitle)
                    .HasMaxLength(255)
                    .HasColumnName("CONTACT_JOBTITLE");

                entity.Property(e => e.ContactName)
                    .HasMaxLength(255)
                    .HasColumnName("CONTACT_NAME");

                entity.Property(e => e.Country)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.County)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTY");

                entity.Property(e => e.Created)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(100)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Description)
                    .HasMaxLength(1000)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.Domain)
                    .HasMaxLength(255)
                    .HasColumnName("DOMAIN");

                entity.Property(e => e.DurationSeconds).HasColumnName("DURATION_SECONDS");

                entity.Property(e => e.ExternalId)
                    .HasMaxLength(255)
                    .HasColumnName("EXTERNAL_ID");

                entity.Property(e => e.GeoLat).HasColumnName("GEO_LAT");

                entity.Property(e => e.GeoLong).HasColumnName("GEO_LONG");

                entity.Property(e => e.HasChildren).HasColumnName("HAS_CHILDREN");

                entity.Property(e => e.Icon)
                    .HasMaxLength(255)
                    .HasColumnName("ICON");

                entity.Property(e => e.ImageUrl)
                    .HasMaxLength(255)
                    .HasColumnName("IMAGE_URL");

                entity.Property(e => e.Industry)
                    .HasMaxLength(255)
                    .HasColumnName("INDUSTRY");

                entity.Property(e => e.IntegrationName)
                    .HasMaxLength(255)
                    .HasColumnName("INTEGRATION_NAME");

                entity.Property(e => e.ItemUrl)
                    .HasMaxLength(255)
                    .HasColumnName("ITEM_URL");

                entity.Property(e => e.Keywords)
                    .HasMaxLength(255)
                    .HasColumnName("KEYWORDS");

                entity.Property(e => e.McaId).HasColumnName("MCA_ID");

                entity.Property(e => e.McsrId).HasColumnName("MCSR_ID");

                entity.Property(e => e.Phone1)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE1");

                entity.Property(e => e.Phone2)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE2");

                entity.Property(e => e.Phone3)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE3");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(255)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.PrivateId)
                    .HasMaxLength(50)
                    .HasColumnName("PRIVATE_ID");

                entity.Property(e => e.ProfileId)
                    .HasMaxLength(50)
                    .HasColumnName("PROFILE_ID");

                entity.Property(e => e.ProfileUrl)
                    .HasMaxLength(255)
                    .HasColumnName("PROFILE_URL");

                entity.Property(e => e.RootTp).HasColumnName("ROOT_TP");

                entity.Property(e => e.Score).HasColumnName("SCORE");

                entity.Property(e => e.ScoreThis).HasColumnName("SCORE_THIS");

                entity.Property(e => e.SessionId).HasColumnName("SESSION_ID");

                entity.Property(e => e.SessionScore).HasColumnName("SESSION_SCORE");

                entity.Property(e => e.SocId).HasColumnName("SOC_ID");

                entity.Property(e => e.SocialMsgId)
                    .HasMaxLength(50)
                    .HasColumnName("SOCIAL_MSG_ID");

                entity.Property(e => e.Source)
                    .HasMaxLength(255)
                    .HasColumnName("SOURCE");

                entity.Property(e => e.StgId).HasColumnName("STG_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TimeAgo)
                    .HasMaxLength(50)
                    .HasColumnName("TIME_AGO");

                entity.Property(e => e.Town)
                    .HasMaxLength(255)
                    .HasColumnName("TOWN");

                entity.Property(e => e.TpCategory)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("TP_CATEGORY");

                entity.Property(e => e.TpCategoryHlight)
                    .IsRequired()
                    .HasMaxLength(7)
                    .HasColumnName("TP_CATEGORY_HLIGHT");

                entity.Property(e => e.TpDeleted).HasColumnName("TP_DELETED");

                entity.Property(e => e.TpGeneric1)
                    .HasMaxLength(255)
                    .HasColumnName("TP_GENERIC1");

                entity.Property(e => e.TpGeneric10)
                    .HasMaxLength(255)
                    .HasColumnName("TP_GENERIC10");

                entity.Property(e => e.TpGeneric2)
                    .HasMaxLength(255)
                    .HasColumnName("TP_GENERIC2");

                entity.Property(e => e.TpGeneric3)
                    .HasMaxLength(255)
                    .HasColumnName("TP_GENERIC3");

                entity.Property(e => e.TpGeneric4)
                    .HasMaxLength(255)
                    .HasColumnName("TP_GENERIC4");

                entity.Property(e => e.TpGeneric5)
                    .HasMaxLength(255)
                    .HasColumnName("TP_GENERIC5");

                entity.Property(e => e.TpGeneric6)
                    .HasMaxLength(255)
                    .HasColumnName("TP_GENERIC6");

                entity.Property(e => e.TpGeneric7)
                    .HasMaxLength(255)
                    .HasColumnName("TP_GENERIC7");

                entity.Property(e => e.TpGeneric8)
                    .HasMaxLength(255)
                    .HasColumnName("TP_GENERIC8");

                entity.Property(e => e.TpGeneric9)
                    .HasMaxLength(255)
                    .HasColumnName("TP_GENERIC9");

                entity.Property(e => e.TpId).HasColumnName("TP_ID");

                entity.Property(e => e.TpUd1)
                    .HasMaxLength(255)
                    .HasColumnName("TP_UD1");

                entity.Property(e => e.TpUd10)
                    .HasMaxLength(255)
                    .HasColumnName("TP_UD10");

                entity.Property(e => e.TpUd10Bit).HasColumnName("TP_UD10_BIT");

                entity.Property(e => e.TpUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_UD10_DATE");

                entity.Property(e => e.TpUd10Id).HasColumnName("TP_UD10_ID");

                entity.Property(e => e.TpUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("TP_UD10_NUMERIC");

                entity.Property(e => e.TpUd1Bit).HasColumnName("TP_UD1_BIT");

                entity.Property(e => e.TpUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_UD1_DATE");

                entity.Property(e => e.TpUd1Id).HasColumnName("TP_UD1_ID");

                entity.Property(e => e.TpUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("TP_UD1_NUMERIC");

                entity.Property(e => e.TpUd2)
                    .HasMaxLength(255)
                    .HasColumnName("TP_UD2");

                entity.Property(e => e.TpUd2Bit).HasColumnName("TP_UD2_BIT");

                entity.Property(e => e.TpUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_UD2_DATE");

                entity.Property(e => e.TpUd2Id).HasColumnName("TP_UD2_ID");

                entity.Property(e => e.TpUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("TP_UD2_NUMERIC");

                entity.Property(e => e.TpUd3)
                    .HasMaxLength(255)
                    .HasColumnName("TP_UD3");

                entity.Property(e => e.TpUd3Bit).HasColumnName("TP_UD3_BIT");

                entity.Property(e => e.TpUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_UD3_DATE");

                entity.Property(e => e.TpUd3Id).HasColumnName("TP_UD3_ID");

                entity.Property(e => e.TpUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("TP_UD3_NUMERIC");

                entity.Property(e => e.TpUd4)
                    .HasMaxLength(255)
                    .HasColumnName("TP_UD4");

                entity.Property(e => e.TpUd4Bit).HasColumnName("TP_UD4_BIT");

                entity.Property(e => e.TpUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_UD4_DATE");

                entity.Property(e => e.TpUd4Id).HasColumnName("TP_UD4_ID");

                entity.Property(e => e.TpUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("TP_UD4_NUMERIC");

                entity.Property(e => e.TpUd5)
                    .HasMaxLength(255)
                    .HasColumnName("TP_UD5");

                entity.Property(e => e.TpUd5Bit).HasColumnName("TP_UD5_BIT");

                entity.Property(e => e.TpUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_UD5_DATE");

                entity.Property(e => e.TpUd5Id).HasColumnName("TP_UD5_ID");

                entity.Property(e => e.TpUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("TP_UD5_NUMERIC");

                entity.Property(e => e.TpUd6)
                    .HasMaxLength(255)
                    .HasColumnName("TP_UD6");

                entity.Property(e => e.TpUd6Bit).HasColumnName("TP_UD6_BIT");

                entity.Property(e => e.TpUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_UD6_DATE");

                entity.Property(e => e.TpUd6Id).HasColumnName("TP_UD6_ID");

                entity.Property(e => e.TpUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("TP_UD6_NUMERIC");

                entity.Property(e => e.TpUd7)
                    .HasMaxLength(255)
                    .HasColumnName("TP_UD7");

                entity.Property(e => e.TpUd7Bit).HasColumnName("TP_UD7_BIT");

                entity.Property(e => e.TpUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_UD7_DATE");

                entity.Property(e => e.TpUd7Id).HasColumnName("TP_UD7_ID");

                entity.Property(e => e.TpUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("TP_UD7_NUMERIC");

                entity.Property(e => e.TpUd8)
                    .HasMaxLength(255)
                    .HasColumnName("TP_UD8");

                entity.Property(e => e.TpUd8Bit).HasColumnName("TP_UD8_BIT");

                entity.Property(e => e.TpUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_UD8_DATE");

                entity.Property(e => e.TpUd8Id).HasColumnName("TP_UD8_ID");

                entity.Property(e => e.TpUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("TP_UD8_NUMERIC");

                entity.Property(e => e.TpUd9)
                    .HasMaxLength(255)
                    .HasColumnName("TP_UD9");

                entity.Property(e => e.TpUd9Bit).HasColumnName("TP_UD9_BIT");

                entity.Property(e => e.TpUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_UD9_DATE");

                entity.Property(e => e.TpUd9Id).HasColumnName("TP_UD9_ID");

                entity.Property(e => e.TpUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("TP_UD9_NUMERIC");

                entity.Property(e => e.TpcId).HasColumnName("TPC_ID");

                entity.Property(e => e.TpiId).HasColumnName("TPI_ID");

                entity.Property(e => e.TrackingId).HasColumnName("TRACKING_ID");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.Website)
                    .HasMaxLength(255)
                    .HasColumnName("WEBSITE");
            });

            modelBuilder.Entity<VTouchPointHistory>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vTouchPointHistory");

                entity.Property(e => e.CsId).HasColumnName("CS_ID");

                entity.Property(e => e.HisId).HasColumnName("HIS_ID");

                entity.Property(e => e.LastTp)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_TP");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.Ref).HasColumnName("REF");

                entity.Property(e => e.Score).HasColumnName("SCORE");

                entity.Property(e => e.ScoreDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SCORE_DATE");

                entity.Property(e => e.Stage)
                    .HasMaxLength(255)
                    .HasColumnName("STAGE");
            });

            modelBuilder.Entity<VTouchPointHistoryLead>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vTouchPointHistoryLeads");

                entity.Property(e => e.CsId).HasColumnName("CS_ID");

                entity.Property(e => e.HisId).HasColumnName("HIS_ID");

                entity.Property(e => e.LastTp)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_TP");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.Ref).HasColumnName("REF");

                entity.Property(e => e.Score).HasColumnName("SCORE");

                entity.Property(e => e.ScoreDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SCORE_DATE");

                entity.Property(e => e.Stage).HasColumnName("STAGE");
            });

            modelBuilder.Entity<VTouchPointScore>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vTouchPointScores");

                entity.Property(e => e.TpCsId).HasColumnName("TP_CS_ID");

                entity.Property(e => e.TpDate)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_DATE");

                entity.Property(e => e.TpMaxScore).HasColumnName("TP_MAX_SCORE");

                entity.Property(e => e.TpObjId).HasColumnName("TP_OBJ_ID");

                entity.Property(e => e.TpScore).HasColumnName("TP_SCORE");
            });

            modelBuilder.Entity<VTouchPointScoresAccount>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vTouchPointScoresAccount");

                entity.Property(e => e.TpAcDate)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_AC_DATE");

                entity.Property(e => e.TpAcId).HasColumnName("TP_AC_ID");

                entity.Property(e => e.TpAcMaxScore).HasColumnName("TP_AC_MAX_SCORE");

                entity.Property(e => e.TpAcScore).HasColumnName("TP_AC_SCORE");
            });

            modelBuilder.Entity<VTouchPointScoresLead>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vTouchPointScoresLeads");

                entity.Property(e => e.TpCsDate)
                    .HasColumnType("datetime")
                    .HasColumnName("TP_CS_DATE");

                entity.Property(e => e.TpCsId).HasColumnName("TP_CS_ID");

                entity.Property(e => e.TpCsMaxScore).HasColumnName("TP_CS_MAX_SCORE");

                entity.Property(e => e.TpCsScore).HasColumnName("TP_CS_SCORE");
            });

            modelBuilder.Entity<VTouchPointsCategory>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vTouchPointsCategories");

                entity.Property(e => e.CategoryColour)
                    .HasMaxLength(7)
                    .HasColumnName("CATEGORY_COLOUR");

                entity.Property(e => e.CategoryName)
                    .HasMaxLength(50)
                    .HasColumnName("CATEGORY_NAME");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.TptId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("TPT_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<VUnsubscribe>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUnsubscribes");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.Accountname)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNTNAME");

                entity.Property(e => e.CampaignType)
                    .HasMaxLength(255)
                    .HasColumnName("CAMPAIGN_TYPE");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CtuId).HasColumnName("CTU_ID");

                entity.Property(e => e.Email1Address).HasMaxLength(255);

                entity.Property(e => e.OptionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OPTION_DATE");

                entity.Property(e => e.Subscribed).HasColumnName("SUBSCRIBED");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");
            });

            modelBuilder.Entity<VUser>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUsers");

                entity.Property(e => e.AName)
                    .HasMaxLength(255)
                    .HasColumnName("A_NAME");

                entity.Property(e => e.ARef)
                    .HasMaxLength(255)
                    .HasColumnName("A_REF");

                entity.Property(e => e.AccessAdmin).HasColumnName("ACCESS_ADMIN");

                entity.Property(e => e.AccessEnabled).HasColumnName("ACCESS_ENABLED");

                entity.Property(e => e.AcoTeamId).HasColumnName("ACO_TEAM_ID");

                entity.Property(e => e.AddressLookupDetails)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_LOOKUP_DETAILS");

                entity.Property(e => e.Admin).HasColumnName("ADMIN");

                entity.Property(e => e.BName)
                    .HasMaxLength(255)
                    .HasColumnName("B_NAME");

                entity.Property(e => e.BRef)
                    .HasMaxLength(255)
                    .HasColumnName("B_REF");

                entity.Property(e => e.CName)
                    .HasMaxLength(255)
                    .HasColumnName("C_NAME");

                entity.Property(e => e.CRef)
                    .HasMaxLength(255)
                    .HasColumnName("C_REF");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CsIdLatest).HasColumnName("CS_ID_LATEST");

                entity.Property(e => e.CsLatestDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CS_LATEST_DATE");

                entity.Property(e => e.CtId).HasColumnName("CT_ID");

                entity.Property(e => e.CultureCode)
                    .HasMaxLength(10)
                    .HasColumnName("CULTURE_CODE");

                entity.Property(e => e.CurId).HasColumnName("CUR_ID");

                entity.Property(e => e.DateFormat)
                    .HasMaxLength(1)
                    .HasColumnName("DATE_FORMAT");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.Email).HasColumnName("EMAIL");

                entity.Property(e => e.EmailAddress)
                    .HasMaxLength(255)
                    .HasColumnName("EMAIL_ADDRESS");

                entity.Property(e => e.EmailScanAppointments).HasColumnName("EMAIL_SCAN_APPOINTMENTS");

                entity.Property(e => e.EmailScanContacts).HasColumnName("EMAIL_SCAN_CONTACTS");

                entity.Property(e => e.EmailScanDetails)
                    .HasMaxLength(512)
                    .HasColumnName("EMAIL_SCAN_DETAILS");

                entity.Property(e => e.EmailScanEmails).HasColumnName("EMAIL_SCAN_EMAILS");

                entity.Property(e => e.EmailScanExclusions)
                    .HasMaxLength(1024)
                    .HasColumnName("EMAIL_SCAN_EXCLUSIONS");

                entity.Property(e => e.EmailScanFolders)
                    .HasMaxLength(1024)
                    .HasColumnName("EMAIL_SCAN_FOLDERS");

                entity.Property(e => e.EmailScanMaxSensitivity).HasColumnName("EMAIL_SCAN_MAX_SENSITIVITY");

                entity.Property(e => e.EmailScanTasks).HasColumnName("EMAIL_SCAN_TASKS");

                entity.Property(e => e.EnableServerDocProd).HasColumnName("ENABLE_SERVER_DOC_PROD");

                entity.Property(e => e.EsteiroidentSid).HasColumnName("ESTEIROIDENT_SID");

                entity.Property(e => e.ExchangeServer)
                    .HasMaxLength(255)
                    .HasColumnName("EXCHANGE_SERVER");

                entity.Property(e => e.Exchangeid)
                    .HasMaxLength(255)
                    .HasColumnName("EXCHANGEID");

                entity.Property(e => e.Fname)
                    .HasMaxLength(50)
                    .HasColumnName("FNAME");

                entity.Property(e => e.HashedPwd)
                    .HasMaxLength(255)
                    .HasColumnName("HASHED_PWD");

                entity.Property(e => e.Home).HasColumnName("HOME");

                entity.Property(e => e.HomeName)
                    .HasMaxLength(255)
                    .HasColumnName("HOME_NAME");

                entity.Property(e => e.HomeRef)
                    .HasMaxLength(255)
                    .HasColumnName("HOME_REF");

                entity.Property(e => e.HybridDefaultMode).HasColumnName("HYBRID_DEFAULT_MODE");

                entity.Property(e => e.HybridEnabled).HasColumnName("HYBRID_ENABLED");

                entity.Property(e => e.IsActionCentrePinned).HasColumnName("IS_ACTION_CENTRE_PINNED");

                entity.Property(e => e.IsMenuExpanded).HasColumnName("IS_MENU_EXPANDED");

                entity.Property(e => e.Lang)
                    .HasMaxLength(32)
                    .HasColumnName("LANG");

                entity.Property(e => e.LangId).HasColumnName("LANG_ID");

                entity.Property(e => e.LastScanned)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_SCANNED");

                entity.Property(e => e.LicenceType).HasColumnName("LICENCE_TYPE");

                entity.Property(e => e.LicenceTypeName)
                    .HasMaxLength(255)
                    .HasColumnName("LICENCE_TYPE_NAME");

                entity.Property(e => e.LicenceTypeNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("LICENCE_TYPE_NAME_HLIGHT");

                entity.Property(e => e.LivechatEmail)
                    .HasMaxLength(255)
                    .HasColumnName("LIVECHAT_EMAIL");

                entity.Property(e => e.Lname)
                    .HasMaxLength(50)
                    .HasColumnName("LNAME");

                entity.Property(e => e.Manager).HasColumnName("MANAGER");

                entity.Property(e => e.MapsAccess).HasColumnName("MAPS_ACCESS");

                entity.Property(e => e.Mname)
                    .HasMaxLength(50)
                    .HasColumnName("MNAME");

                entity.Property(e => e.MonthlySalesTarget)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("MONTHLY_SALES_TARGET");

                entity.Property(e => e.NoAccess).HasColumnName("NO_ACCESS");

                entity.Property(e => e.NtAccount)
                    .HasMaxLength(100)
                    .HasColumnName("NT_ACCOUNT");

                entity.Property(e => e.NumberFormat)
                    .HasMaxLength(25)
                    .HasColumnName("NUMBER_FORMAT");

                entity.Property(e => e.PhoneCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_COUNTRY_CODE");

                entity.Property(e => e.PhoneIddCode)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_IDD_CODE");

                entity.Property(e => e.PhoneNddCode)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_NDD_CODE");

                entity.Property(e => e.PhoneOutsideLineCode)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_OUTSIDE_LINE_CODE");

                entity.Property(e => e.PhoneSettings)
                    .HasMaxLength(500)
                    .HasColumnName("PHONE_SETTINGS");

                entity.Property(e => e.PrivateEmail).HasColumnName("PRIVATE_EMAIL");

                entity.Property(e => e.RootUser).HasColumnName("ROOT_USER");

                entity.Property(e => e.Sales).HasColumnName("SALES");

                entity.Property(e => e.SetIdPhone).HasColumnName("SET_ID_PHONE");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShowOnAcManager).HasColumnName("SHOW_ON_AC_MANAGER");

                entity.Property(e => e.ShowOnCalendar).HasColumnName("SHOW_ON_CALENDAR");

                entity.Property(e => e.ShowOnSupport).HasColumnName("SHOW_ON_SUPPORT");

                entity.Property(e => e.ShowOnUsers).HasColumnName("SHOW_ON_USERS");

                entity.Property(e => e.SimpleViewMenu).HasColumnName("SIMPLE_VIEW_MENU");

                entity.Property(e => e.SingleWindow).HasColumnName("SINGLE_WINDOW");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TemplateFolder)
                    .HasMaxLength(255)
                    .HasColumnName("TEMPLATE_FOLDER");

                entity.Property(e => e.TimeDiff).HasColumnName("TIME_DIFF");

                entity.Property(e => e.TimeZone)
                    .HasMaxLength(255)
                    .HasColumnName("TIME_ZONE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsCulture).HasColumnName("US_CULTURE");

                entity.Property(e => e.UsDeleted).HasColumnName("US_DELETED");

                entity.Property(e => e.UsExternal)
                    .HasMaxLength(255)
                    .HasColumnName("US_EXTERNAL");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsIdDeleted).HasColumnName("US_ID_DELETED");

                entity.Property(e => e.UsUd1)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD1");

                entity.Property(e => e.UsUd10)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD10");

                entity.Property(e => e.UsUd10Bit).HasColumnName("US_UD10_BIT");

                entity.Property(e => e.UsUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD10_DATE");

                entity.Property(e => e.UsUd10Id).HasColumnName("US_UD10_ID");

                entity.Property(e => e.UsUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD10_ID_NAME");

                entity.Property(e => e.UsUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd10Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD10_NUMERIC");

                entity.Property(e => e.UsUd11)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD11");

                entity.Property(e => e.UsUd11Bit).HasColumnName("US_UD11_BIT");

                entity.Property(e => e.UsUd12)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD12");

                entity.Property(e => e.UsUd12Bit).HasColumnName("US_UD12_BIT");

                entity.Property(e => e.UsUd13)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD13");

                entity.Property(e => e.UsUd13Bit).HasColumnName("US_UD13_BIT");

                entity.Property(e => e.UsUd14)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD14");

                entity.Property(e => e.UsUd14Bit).HasColumnName("US_UD14_BIT");

                entity.Property(e => e.UsUd15)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD15");

                entity.Property(e => e.UsUd15Bit).HasColumnName("US_UD15_BIT");

                entity.Property(e => e.UsUd16Bit).HasColumnName("US_UD16_BIT");

                entity.Property(e => e.UsUd17Bit).HasColumnName("US_UD17_BIT");

                entity.Property(e => e.UsUd18Bit).HasColumnName("US_UD18_BIT");

                entity.Property(e => e.UsUd19Bit).HasColumnName("US_UD19_BIT");

                entity.Property(e => e.UsUd1Bit).HasColumnName("US_UD1_BIT");

                entity.Property(e => e.UsUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD1_DATE");

                entity.Property(e => e.UsUd1Id).HasColumnName("US_UD1_ID");

                entity.Property(e => e.UsUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD1_ID_NAME");

                entity.Property(e => e.UsUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd1Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD1_NUMERIC");

                entity.Property(e => e.UsUd2)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD2");

                entity.Property(e => e.UsUd20Bit).HasColumnName("US_UD20_BIT");

                entity.Property(e => e.UsUd21Bit).HasColumnName("US_UD21_BIT");

                entity.Property(e => e.UsUd22Bit).HasColumnName("US_UD22_BIT");

                entity.Property(e => e.UsUd23Bit).HasColumnName("US_UD23_BIT");

                entity.Property(e => e.UsUd24Bit).HasColumnName("US_UD24_BIT");

                entity.Property(e => e.UsUd2Bit).HasColumnName("US_UD2_BIT");

                entity.Property(e => e.UsUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD2_DATE");

                entity.Property(e => e.UsUd2Id).HasColumnName("US_UD2_ID");

                entity.Property(e => e.UsUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD2_ID_NAME");

                entity.Property(e => e.UsUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd2Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD2_NUMERIC");

                entity.Property(e => e.UsUd3)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD3");

                entity.Property(e => e.UsUd3Bit).HasColumnName("US_UD3_BIT");

                entity.Property(e => e.UsUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD3_DATE");

                entity.Property(e => e.UsUd3Id).HasColumnName("US_UD3_ID");

                entity.Property(e => e.UsUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD3_ID_NAME");

                entity.Property(e => e.UsUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd3Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD3_NUMERIC");

                entity.Property(e => e.UsUd4)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD4");

                entity.Property(e => e.UsUd4Bit).HasColumnName("US_UD4_BIT");

                entity.Property(e => e.UsUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD4_DATE");

                entity.Property(e => e.UsUd4Id).HasColumnName("US_UD4_ID");

                entity.Property(e => e.UsUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD4_ID_NAME");

                entity.Property(e => e.UsUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd4Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD4_NUMERIC");

                entity.Property(e => e.UsUd5)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD5");

                entity.Property(e => e.UsUd5Bit).HasColumnName("US_UD5_BIT");

                entity.Property(e => e.UsUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD5_DATE");

                entity.Property(e => e.UsUd5Id).HasColumnName("US_UD5_ID");

                entity.Property(e => e.UsUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD5_ID_NAME");

                entity.Property(e => e.UsUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd5Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD5_NUMERIC");

                entity.Property(e => e.UsUd6)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD6");

                entity.Property(e => e.UsUd6Bit).HasColumnName("US_UD6_BIT");

                entity.Property(e => e.UsUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD6_DATE");

                entity.Property(e => e.UsUd6Id).HasColumnName("US_UD6_ID");

                entity.Property(e => e.UsUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD6_ID_NAME");

                entity.Property(e => e.UsUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd6Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD6_NUMERIC");

                entity.Property(e => e.UsUd7)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD7");

                entity.Property(e => e.UsUd7Bit).HasColumnName("US_UD7_BIT");

                entity.Property(e => e.UsUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD7_DATE");

                entity.Property(e => e.UsUd7Id).HasColumnName("US_UD7_ID");

                entity.Property(e => e.UsUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD7_ID_NAME");

                entity.Property(e => e.UsUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd7Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD7_NUMERIC");

                entity.Property(e => e.UsUd8)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD8");

                entity.Property(e => e.UsUd8Bit).HasColumnName("US_UD8_BIT");

                entity.Property(e => e.UsUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD8_DATE");

                entity.Property(e => e.UsUd8Id).HasColumnName("US_UD8_ID");

                entity.Property(e => e.UsUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD8_ID_NAME");

                entity.Property(e => e.UsUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd8Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD8_NUMERIC");

                entity.Property(e => e.UsUd9)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD9");

                entity.Property(e => e.UsUd9Bit).HasColumnName("US_UD9_BIT");

                entity.Property(e => e.UsUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD9_DATE");

                entity.Property(e => e.UsUd9Id).HasColumnName("US_UD9_ID");

                entity.Property(e => e.UsUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD9_ID_NAME");

                entity.Property(e => e.UsUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd9Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD9_NUMERIC");

                entity.Property(e => e.UseWordMailMerge).HasColumnName("USE_WORD_MAIL_MERGE");

                entity.Property(e => e.UserDepartment).HasMaxLength(128);

                entity.Property(e => e.UserDirectPhone).HasMaxLength(32);

                entity.Property(e => e.UserGroupId).HasColumnName("USER_GROUP_ID");

                entity.Property(e => e.UserGroupName)
                    .HasMaxLength(255)
                    .HasColumnName("USER_GROUP_NAME");

                entity.Property(e => e.UserJobTitle).HasMaxLength(128);

                entity.Property(e => e.UserMobileTelephone).HasMaxLength(32);

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");
            });

            modelBuilder.Entity<VUserGroupType>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUserGroupTypes");

                entity.Property(e => e.GroupType)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("GROUP_TYPE");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");
            });

            modelBuilder.Entity<VUserLicenceCount>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUserLicenceCounts");
            });

            modelBuilder.Entity<VUserTarget>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUserTargets");

                entity.Property(e => e.Created)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CurId).HasColumnName("CUR_ID");

                entity.Property(e => e.CurSymbol)
                    .HasMaxLength(3)
                    .HasColumnName("CUR_SYMBOL");

                entity.Property(e => e.Deleted)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.OwnerId).HasColumnName("OWNER_ID");

                entity.Property(e => e.OwnerName)
                    .HasMaxLength(255)
                    .HasColumnName("OWNER_NAME");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("START_DATE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TarId).HasColumnName("TAR_ID");

                entity.Property(e => e.TarName)
                    .HasMaxLength(527)
                    .HasColumnName("TAR_NAME");

                entity.Property(e => e.TardId).HasColumnName("TARD_ID");

                entity.Property(e => e.TardName)
                    .HasMaxLength(255)
                    .HasColumnName("TARD_NAME");

                entity.Property(e => e.TargetValue)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("TARGET_VALUE");
            });

            modelBuilder.Entity<VUserTargetDef>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUserTargetDefs");

                entity.Property(e => e.Created)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.DefaultValue)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("DEFAULT_VALUE");

                entity.Property(e => e.Deleted)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.OwnerType)
                    .HasMaxLength(50)
                    .HasColumnName("OWNER_TYPE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TardId).HasColumnName("TARD_ID");

                entity.Property(e => e.TargetType)
                    .HasMaxLength(255)
                    .HasColumnName("TARGET_TYPE");
            });

            modelBuilder.Entity<VUsersAdmin>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUsersAdmin");

                entity.Property(e => e.AName)
                    .HasMaxLength(255)
                    .HasColumnName("A_NAME");

                entity.Property(e => e.ARef)
                    .HasMaxLength(255)
                    .HasColumnName("A_REF");

                entity.Property(e => e.AccessAdmin).HasColumnName("ACCESS_ADMIN");

                entity.Property(e => e.AccessEnabled).HasColumnName("ACCESS_ENABLED");

                entity.Property(e => e.AcoTeamId).HasColumnName("ACO_TEAM_ID");

                entity.Property(e => e.AddressLookupDetails)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_LOOKUP_DETAILS");

                entity.Property(e => e.Admin).HasColumnName("ADMIN");

                entity.Property(e => e.BName)
                    .HasMaxLength(255)
                    .HasColumnName("B_NAME");

                entity.Property(e => e.BRef)
                    .HasMaxLength(255)
                    .HasColumnName("B_REF");

                entity.Property(e => e.CName)
                    .HasMaxLength(255)
                    .HasColumnName("C_NAME");

                entity.Property(e => e.CRef)
                    .HasMaxLength(255)
                    .HasColumnName("C_REF");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CsIdLatest).HasColumnName("CS_ID_LATEST");

                entity.Property(e => e.CsLatestDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CS_LATEST_DATE");

                entity.Property(e => e.CtId).HasColumnName("CT_ID");

                entity.Property(e => e.CultureCode)
                    .HasMaxLength(10)
                    .HasColumnName("CULTURE_CODE");

                entity.Property(e => e.CurId).HasColumnName("CUR_ID");

                entity.Property(e => e.DateFormat)
                    .HasMaxLength(1)
                    .HasColumnName("DATE_FORMAT");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.Email).HasColumnName("EMAIL");

                entity.Property(e => e.EmailAddress)
                    .HasMaxLength(255)
                    .HasColumnName("EMAIL_ADDRESS");

                entity.Property(e => e.EmailScanAppointments).HasColumnName("EMAIL_SCAN_APPOINTMENTS");

                entity.Property(e => e.EmailScanContacts).HasColumnName("EMAIL_SCAN_CONTACTS");

                entity.Property(e => e.EmailScanDetails)
                    .HasMaxLength(512)
                    .HasColumnName("EMAIL_SCAN_DETAILS");

                entity.Property(e => e.EmailScanEmails).HasColumnName("EMAIL_SCAN_EMAILS");

                entity.Property(e => e.EmailScanExclusions)
                    .HasMaxLength(1024)
                    .HasColumnName("EMAIL_SCAN_EXCLUSIONS");

                entity.Property(e => e.EmailScanFolders)
                    .HasMaxLength(1024)
                    .HasColumnName("EMAIL_SCAN_FOLDERS");

                entity.Property(e => e.EmailScanMaxSensitivity).HasColumnName("EMAIL_SCAN_MAX_SENSITIVITY");

                entity.Property(e => e.EmailScanTasks).HasColumnName("EMAIL_SCAN_TASKS");

                entity.Property(e => e.EnableServerDocProd).HasColumnName("ENABLE_SERVER_DOC_PROD");

                entity.Property(e => e.EsteiroidentSid).HasColumnName("ESTEIROIDENT_SID");

                entity.Property(e => e.ExchangeServer)
                    .HasMaxLength(255)
                    .HasColumnName("EXCHANGE_SERVER");

                entity.Property(e => e.Exchangeid)
                    .HasMaxLength(255)
                    .HasColumnName("EXCHANGEID");

                entity.Property(e => e.Fname)
                    .HasMaxLength(50)
                    .HasColumnName("FNAME");

                entity.Property(e => e.HashedPwd)
                    .HasMaxLength(255)
                    .HasColumnName("HASHED_PWD");

                entity.Property(e => e.Home).HasColumnName("HOME");

                entity.Property(e => e.HomeName)
                    .HasMaxLength(255)
                    .HasColumnName("HOME_NAME");

                entity.Property(e => e.HomeRef)
                    .HasMaxLength(255)
                    .HasColumnName("HOME_REF");

                entity.Property(e => e.HybridDefaultMode).HasColumnName("HYBRID_DEFAULT_MODE");

                entity.Property(e => e.HybridEnabled).HasColumnName("HYBRID_ENABLED");

                entity.Property(e => e.IsActionCentrePinned).HasColumnName("IS_ACTION_CENTRE_PINNED");

                entity.Property(e => e.IsMenuExpanded).HasColumnName("IS_MENU_EXPANDED");

                entity.Property(e => e.Lang)
                    .HasMaxLength(32)
                    .HasColumnName("LANG");

                entity.Property(e => e.LangId).HasColumnName("LANG_ID");

                entity.Property(e => e.LastScanned)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_SCANNED");

                entity.Property(e => e.LicenceType).HasColumnName("LICENCE_TYPE");

                entity.Property(e => e.LicenceTypeName)
                    .HasMaxLength(255)
                    .HasColumnName("LICENCE_TYPE_NAME");

                entity.Property(e => e.LicenceTypeNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("LICENCE_TYPE_NAME_HLIGHT");

                entity.Property(e => e.LivechatEmail)
                    .HasMaxLength(255)
                    .HasColumnName("LIVECHAT_EMAIL");

                entity.Property(e => e.Lname)
                    .HasMaxLength(50)
                    .HasColumnName("LNAME");

                entity.Property(e => e.Manager).HasColumnName("MANAGER");

                entity.Property(e => e.MapsAccess).HasColumnName("MAPS_ACCESS");

                entity.Property(e => e.Mname)
                    .HasMaxLength(50)
                    .HasColumnName("MNAME");

                entity.Property(e => e.MonthlySalesTarget)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("MONTHLY_SALES_TARGET");

                entity.Property(e => e.NoAccess).HasColumnName("NO_ACCESS");

                entity.Property(e => e.NtAccount)
                    .HasMaxLength(100)
                    .HasColumnName("NT_ACCOUNT");

                entity.Property(e => e.NumberFormat)
                    .HasMaxLength(25)
                    .HasColumnName("NUMBER_FORMAT");

                entity.Property(e => e.PhoneCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_COUNTRY_CODE");

                entity.Property(e => e.PhoneIddCode)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_IDD_CODE");

                entity.Property(e => e.PhoneNddCode)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_NDD_CODE");

                entity.Property(e => e.PhoneOutsideLineCode)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_OUTSIDE_LINE_CODE");

                entity.Property(e => e.PhoneSettings)
                    .HasMaxLength(500)
                    .HasColumnName("PHONE_SETTINGS");

                entity.Property(e => e.PrivateEmail).HasColumnName("PRIVATE_EMAIL");

                entity.Property(e => e.RootUser).HasColumnName("ROOT_USER");

                entity.Property(e => e.Sales).HasColumnName("SALES");

                entity.Property(e => e.SetIdPhone).HasColumnName("SET_ID_PHONE");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShowOnAcManager).HasColumnName("SHOW_ON_AC_MANAGER");

                entity.Property(e => e.ShowOnCalendar).HasColumnName("SHOW_ON_CALENDAR");

                entity.Property(e => e.ShowOnSupport).HasColumnName("SHOW_ON_SUPPORT");

                entity.Property(e => e.ShowOnUsers).HasColumnName("SHOW_ON_USERS");

                entity.Property(e => e.SimpleViewMenu).HasColumnName("SIMPLE_VIEW_MENU");

                entity.Property(e => e.SingleWindow).HasColumnName("SINGLE_WINDOW");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TemplateFolder)
                    .HasMaxLength(255)
                    .HasColumnName("TEMPLATE_FOLDER");

                entity.Property(e => e.TimeDiff).HasColumnName("TIME_DIFF");

                entity.Property(e => e.TimeZone)
                    .HasMaxLength(255)
                    .HasColumnName("TIME_ZONE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsCulture).HasColumnName("US_CULTURE");

                entity.Property(e => e.UsDeleted).HasColumnName("US_DELETED");

                entity.Property(e => e.UsExternal)
                    .HasMaxLength(255)
                    .HasColumnName("US_EXTERNAL");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsIdDeleted).HasColumnName("US_ID_DELETED");

                entity.Property(e => e.UsUd1)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD1");

                entity.Property(e => e.UsUd10)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD10");

                entity.Property(e => e.UsUd10Bit).HasColumnName("US_UD10_BIT");

                entity.Property(e => e.UsUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD10_DATE");

                entity.Property(e => e.UsUd10Id).HasColumnName("US_UD10_ID");

                entity.Property(e => e.UsUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD10_ID_NAME");

                entity.Property(e => e.UsUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd10Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD10_NUMERIC");

                entity.Property(e => e.UsUd11)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD11");

                entity.Property(e => e.UsUd11Bit).HasColumnName("US_UD11_BIT");

                entity.Property(e => e.UsUd12)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD12");

                entity.Property(e => e.UsUd12Bit).HasColumnName("US_UD12_BIT");

                entity.Property(e => e.UsUd13)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD13");

                entity.Property(e => e.UsUd13Bit).HasColumnName("US_UD13_BIT");

                entity.Property(e => e.UsUd14)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD14");

                entity.Property(e => e.UsUd14Bit).HasColumnName("US_UD14_BIT");

                entity.Property(e => e.UsUd15)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD15");

                entity.Property(e => e.UsUd15Bit).HasColumnName("US_UD15_BIT");

                entity.Property(e => e.UsUd16Bit).HasColumnName("US_UD16_BIT");

                entity.Property(e => e.UsUd17Bit).HasColumnName("US_UD17_BIT");

                entity.Property(e => e.UsUd18Bit).HasColumnName("US_UD18_BIT");

                entity.Property(e => e.UsUd19Bit).HasColumnName("US_UD19_BIT");

                entity.Property(e => e.UsUd1Bit).HasColumnName("US_UD1_BIT");

                entity.Property(e => e.UsUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD1_DATE");

                entity.Property(e => e.UsUd1Id).HasColumnName("US_UD1_ID");

                entity.Property(e => e.UsUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD1_ID_NAME");

                entity.Property(e => e.UsUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd1Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD1_NUMERIC");

                entity.Property(e => e.UsUd2)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD2");

                entity.Property(e => e.UsUd20Bit).HasColumnName("US_UD20_BIT");

                entity.Property(e => e.UsUd21Bit).HasColumnName("US_UD21_BIT");

                entity.Property(e => e.UsUd22Bit).HasColumnName("US_UD22_BIT");

                entity.Property(e => e.UsUd23Bit).HasColumnName("US_UD23_BIT");

                entity.Property(e => e.UsUd24Bit).HasColumnName("US_UD24_BIT");

                entity.Property(e => e.UsUd2Bit).HasColumnName("US_UD2_BIT");

                entity.Property(e => e.UsUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD2_DATE");

                entity.Property(e => e.UsUd2Id).HasColumnName("US_UD2_ID");

                entity.Property(e => e.UsUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD2_ID_NAME");

                entity.Property(e => e.UsUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd2Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD2_NUMERIC");

                entity.Property(e => e.UsUd3)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD3");

                entity.Property(e => e.UsUd3Bit).HasColumnName("US_UD3_BIT");

                entity.Property(e => e.UsUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD3_DATE");

                entity.Property(e => e.UsUd3Id).HasColumnName("US_UD3_ID");

                entity.Property(e => e.UsUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD3_ID_NAME");

                entity.Property(e => e.UsUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd3Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD3_NUMERIC");

                entity.Property(e => e.UsUd4)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD4");

                entity.Property(e => e.UsUd4Bit).HasColumnName("US_UD4_BIT");

                entity.Property(e => e.UsUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD4_DATE");

                entity.Property(e => e.UsUd4Id).HasColumnName("US_UD4_ID");

                entity.Property(e => e.UsUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD4_ID_NAME");

                entity.Property(e => e.UsUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd4Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD4_NUMERIC");

                entity.Property(e => e.UsUd5)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD5");

                entity.Property(e => e.UsUd5Bit).HasColumnName("US_UD5_BIT");

                entity.Property(e => e.UsUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD5_DATE");

                entity.Property(e => e.UsUd5Id).HasColumnName("US_UD5_ID");

                entity.Property(e => e.UsUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD5_ID_NAME");

                entity.Property(e => e.UsUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd5Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD5_NUMERIC");

                entity.Property(e => e.UsUd6)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD6");

                entity.Property(e => e.UsUd6Bit).HasColumnName("US_UD6_BIT");

                entity.Property(e => e.UsUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD6_DATE");

                entity.Property(e => e.UsUd6Id).HasColumnName("US_UD6_ID");

                entity.Property(e => e.UsUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD6_ID_NAME");

                entity.Property(e => e.UsUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd6Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD6_NUMERIC");

                entity.Property(e => e.UsUd7)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD7");

                entity.Property(e => e.UsUd7Bit).HasColumnName("US_UD7_BIT");

                entity.Property(e => e.UsUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD7_DATE");

                entity.Property(e => e.UsUd7Id).HasColumnName("US_UD7_ID");

                entity.Property(e => e.UsUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD7_ID_NAME");

                entity.Property(e => e.UsUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd7Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD7_NUMERIC");

                entity.Property(e => e.UsUd8)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD8");

                entity.Property(e => e.UsUd8Bit).HasColumnName("US_UD8_BIT");

                entity.Property(e => e.UsUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD8_DATE");

                entity.Property(e => e.UsUd8Id).HasColumnName("US_UD8_ID");

                entity.Property(e => e.UsUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD8_ID_NAME");

                entity.Property(e => e.UsUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd8Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD8_NUMERIC");

                entity.Property(e => e.UsUd9)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD9");

                entity.Property(e => e.UsUd9Bit).HasColumnName("US_UD9_BIT");

                entity.Property(e => e.UsUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD9_DATE");

                entity.Property(e => e.UsUd9Id).HasColumnName("US_UD9_ID");

                entity.Property(e => e.UsUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD9_ID_NAME");

                entity.Property(e => e.UsUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd9Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD9_NUMERIC");

                entity.Property(e => e.UseWordMailMerge).HasColumnName("USE_WORD_MAIL_MERGE");

                entity.Property(e => e.UserDepartment).HasMaxLength(128);

                entity.Property(e => e.UserDirectPhone).HasMaxLength(32);

                entity.Property(e => e.UserGroupId).HasColumnName("USER_GROUP_ID");

                entity.Property(e => e.UserGroupName)
                    .HasMaxLength(255)
                    .HasColumnName("USER_GROUP_NAME");

                entity.Property(e => e.UserJobTitle).HasMaxLength(128);

                entity.Property(e => e.UserMobileTelephone).HasMaxLength(32);

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");
            });

            modelBuilder.Entity<VUsersAdmin1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUsersAdmins");

                entity.Property(e => e.AName)
                    .HasMaxLength(255)
                    .HasColumnName("A_NAME");

                entity.Property(e => e.ARef)
                    .HasMaxLength(255)
                    .HasColumnName("A_REF");

                entity.Property(e => e.AccessAdmin).HasColumnName("ACCESS_ADMIN");

                entity.Property(e => e.AccessEnabled).HasColumnName("ACCESS_ENABLED");

                entity.Property(e => e.AcoTeamId).HasColumnName("ACO_TEAM_ID");

                entity.Property(e => e.AddressLookupDetails)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_LOOKUP_DETAILS");

                entity.Property(e => e.Admin).HasColumnName("ADMIN");

                entity.Property(e => e.BName)
                    .HasMaxLength(255)
                    .HasColumnName("B_NAME");

                entity.Property(e => e.BRef)
                    .HasMaxLength(255)
                    .HasColumnName("B_REF");

                entity.Property(e => e.CName)
                    .HasMaxLength(255)
                    .HasColumnName("C_NAME");

                entity.Property(e => e.CRef)
                    .HasMaxLength(255)
                    .HasColumnName("C_REF");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CsIdLatest).HasColumnName("CS_ID_LATEST");

                entity.Property(e => e.CsLatestDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CS_LATEST_DATE");

                entity.Property(e => e.CtId).HasColumnName("CT_ID");

                entity.Property(e => e.CultureCode)
                    .HasMaxLength(10)
                    .HasColumnName("CULTURE_CODE");

                entity.Property(e => e.CurId).HasColumnName("CUR_ID");

                entity.Property(e => e.DateFormat)
                    .HasMaxLength(1)
                    .HasColumnName("DATE_FORMAT");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.Email).HasColumnName("EMAIL");

                entity.Property(e => e.EmailAddress)
                    .HasMaxLength(255)
                    .HasColumnName("EMAIL_ADDRESS");

                entity.Property(e => e.EmailScanAppointments).HasColumnName("EMAIL_SCAN_APPOINTMENTS");

                entity.Property(e => e.EmailScanContacts).HasColumnName("EMAIL_SCAN_CONTACTS");

                entity.Property(e => e.EmailScanDetails)
                    .HasMaxLength(512)
                    .HasColumnName("EMAIL_SCAN_DETAILS");

                entity.Property(e => e.EmailScanEmails).HasColumnName("EMAIL_SCAN_EMAILS");

                entity.Property(e => e.EmailScanExclusions)
                    .HasMaxLength(1024)
                    .HasColumnName("EMAIL_SCAN_EXCLUSIONS");

                entity.Property(e => e.EmailScanFolders)
                    .HasMaxLength(1024)
                    .HasColumnName("EMAIL_SCAN_FOLDERS");

                entity.Property(e => e.EmailScanMaxSensitivity).HasColumnName("EMAIL_SCAN_MAX_SENSITIVITY");

                entity.Property(e => e.EmailScanTasks).HasColumnName("EMAIL_SCAN_TASKS");

                entity.Property(e => e.EnableServerDocProd).HasColumnName("ENABLE_SERVER_DOC_PROD");

                entity.Property(e => e.EsteiroidentSid).HasColumnName("ESTEIROIDENT_SID");

                entity.Property(e => e.ExchangeServer)
                    .HasMaxLength(255)
                    .HasColumnName("EXCHANGE_SERVER");

                entity.Property(e => e.Exchangeid)
                    .HasMaxLength(255)
                    .HasColumnName("EXCHANGEID");

                entity.Property(e => e.Fname)
                    .HasMaxLength(50)
                    .HasColumnName("FNAME");

                entity.Property(e => e.HashedPwd)
                    .HasMaxLength(255)
                    .HasColumnName("HASHED_PWD");

                entity.Property(e => e.Home).HasColumnName("HOME");

                entity.Property(e => e.HomeName)
                    .HasMaxLength(255)
                    .HasColumnName("HOME_NAME");

                entity.Property(e => e.HomeRef)
                    .HasMaxLength(255)
                    .HasColumnName("HOME_REF");

                entity.Property(e => e.HybridDefaultMode).HasColumnName("HYBRID_DEFAULT_MODE");

                entity.Property(e => e.HybridEnabled).HasColumnName("HYBRID_ENABLED");

                entity.Property(e => e.IsActionCentrePinned).HasColumnName("IS_ACTION_CENTRE_PINNED");

                entity.Property(e => e.IsMenuExpanded).HasColumnName("IS_MENU_EXPANDED");

                entity.Property(e => e.Lang)
                    .HasMaxLength(32)
                    .HasColumnName("LANG");

                entity.Property(e => e.LangId).HasColumnName("LANG_ID");

                entity.Property(e => e.LastScanned)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_SCANNED");

                entity.Property(e => e.LicenceType).HasColumnName("LICENCE_TYPE");

                entity.Property(e => e.LivechatEmail)
                    .HasMaxLength(255)
                    .HasColumnName("LIVECHAT_EMAIL");

                entity.Property(e => e.Lname)
                    .HasMaxLength(50)
                    .HasColumnName("LNAME");

                entity.Property(e => e.Manager).HasColumnName("MANAGER");

                entity.Property(e => e.MapsAccess).HasColumnName("MAPS_ACCESS");

                entity.Property(e => e.Mname)
                    .HasMaxLength(50)
                    .HasColumnName("MNAME");

                entity.Property(e => e.MonthlySalesTarget)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("MONTHLY_SALES_TARGET");

                entity.Property(e => e.NtAccount)
                    .HasMaxLength(100)
                    .HasColumnName("NT_ACCOUNT");

                entity.Property(e => e.NumberFormat)
                    .HasMaxLength(25)
                    .HasColumnName("NUMBER_FORMAT");

                entity.Property(e => e.PhoneCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_COUNTRY_CODE");

                entity.Property(e => e.PhoneIddCode)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_IDD_CODE");

                entity.Property(e => e.PhoneNddCode)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_NDD_CODE");

                entity.Property(e => e.PhoneOutsideLineCode)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_OUTSIDE_LINE_CODE");

                entity.Property(e => e.PrivateEmail).HasColumnName("PRIVATE_EMAIL");

                entity.Property(e => e.RootUser).HasColumnName("ROOT_USER");

                entity.Property(e => e.Sales).HasColumnName("SALES");

                entity.Property(e => e.SetIdPhone).HasColumnName("SET_ID_PHONE");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShowOnAcManager).HasColumnName("SHOW_ON_AC_MANAGER");

                entity.Property(e => e.ShowOnCalendar).HasColumnName("SHOW_ON_CALENDAR");

                entity.Property(e => e.ShowOnSupport).HasColumnName("SHOW_ON_SUPPORT");

                entity.Property(e => e.ShowOnUsers).HasColumnName("SHOW_ON_USERS");

                entity.Property(e => e.SimpleViewMenu).HasColumnName("SIMPLE_VIEW_MENU");

                entity.Property(e => e.SingleWindow).HasColumnName("SINGLE_WINDOW");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TemplateFolder)
                    .HasMaxLength(255)
                    .HasColumnName("TEMPLATE_FOLDER");

                entity.Property(e => e.TimeDiff).HasColumnName("TIME_DIFF");

                entity.Property(e => e.TimeZone)
                    .HasMaxLength(255)
                    .HasColumnName("TIME_ZONE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsCulture).HasColumnName("US_CULTURE");

                entity.Property(e => e.UsDeleted).HasColumnName("US_DELETED");

                entity.Property(e => e.UsExternal)
                    .HasMaxLength(255)
                    .HasColumnName("US_EXTERNAL");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsUd1)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD1");

                entity.Property(e => e.UsUd10)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD10");

                entity.Property(e => e.UsUd10Bit).HasColumnName("US_UD10_BIT");

                entity.Property(e => e.UsUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD10_DATE");

                entity.Property(e => e.UsUd10Id).HasColumnName("US_UD10_ID");

                entity.Property(e => e.UsUd10Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD10_NUMERIC");

                entity.Property(e => e.UsUd11)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD11");

                entity.Property(e => e.UsUd11Bit).HasColumnName("US_UD11_BIT");

                entity.Property(e => e.UsUd12)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD12");

                entity.Property(e => e.UsUd12Bit).HasColumnName("US_UD12_BIT");

                entity.Property(e => e.UsUd13)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD13");

                entity.Property(e => e.UsUd13Bit).HasColumnName("US_UD13_BIT");

                entity.Property(e => e.UsUd14)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD14");

                entity.Property(e => e.UsUd14Bit).HasColumnName("US_UD14_BIT");

                entity.Property(e => e.UsUd15)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD15");

                entity.Property(e => e.UsUd15Bit).HasColumnName("US_UD15_BIT");

                entity.Property(e => e.UsUd16Bit).HasColumnName("US_UD16_BIT");

                entity.Property(e => e.UsUd17Bit).HasColumnName("US_UD17_BIT");

                entity.Property(e => e.UsUd18Bit).HasColumnName("US_UD18_BIT");

                entity.Property(e => e.UsUd19Bit).HasColumnName("US_UD19_BIT");

                entity.Property(e => e.UsUd1Bit).HasColumnName("US_UD1_BIT");

                entity.Property(e => e.UsUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD1_DATE");

                entity.Property(e => e.UsUd1Id).HasColumnName("US_UD1_ID");

                entity.Property(e => e.UsUd1Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD1_NUMERIC");

                entity.Property(e => e.UsUd2)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD2");

                entity.Property(e => e.UsUd20Bit).HasColumnName("US_UD20_BIT");

                entity.Property(e => e.UsUd21Bit).HasColumnName("US_UD21_BIT");

                entity.Property(e => e.UsUd22Bit).HasColumnName("US_UD22_BIT");

                entity.Property(e => e.UsUd23Bit).HasColumnName("US_UD23_BIT");

                entity.Property(e => e.UsUd24Bit).HasColumnName("US_UD24_BIT");

                entity.Property(e => e.UsUd2Bit).HasColumnName("US_UD2_BIT");

                entity.Property(e => e.UsUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD2_DATE");

                entity.Property(e => e.UsUd2Id).HasColumnName("US_UD2_ID");

                entity.Property(e => e.UsUd2Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD2_NUMERIC");

                entity.Property(e => e.UsUd3)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD3");

                entity.Property(e => e.UsUd3Bit).HasColumnName("US_UD3_BIT");

                entity.Property(e => e.UsUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD3_DATE");

                entity.Property(e => e.UsUd3Id).HasColumnName("US_UD3_ID");

                entity.Property(e => e.UsUd3Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD3_NUMERIC");

                entity.Property(e => e.UsUd4)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD4");

                entity.Property(e => e.UsUd4Bit).HasColumnName("US_UD4_BIT");

                entity.Property(e => e.UsUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD4_DATE");

                entity.Property(e => e.UsUd4Id).HasColumnName("US_UD4_ID");

                entity.Property(e => e.UsUd4Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD4_NUMERIC");

                entity.Property(e => e.UsUd5)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD5");

                entity.Property(e => e.UsUd5Bit).HasColumnName("US_UD5_BIT");

                entity.Property(e => e.UsUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD5_DATE");

                entity.Property(e => e.UsUd5Id).HasColumnName("US_UD5_ID");

                entity.Property(e => e.UsUd5Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD5_NUMERIC");

                entity.Property(e => e.UsUd6)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD6");

                entity.Property(e => e.UsUd6Bit).HasColumnName("US_UD6_BIT");

                entity.Property(e => e.UsUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD6_DATE");

                entity.Property(e => e.UsUd6Id).HasColumnName("US_UD6_ID");

                entity.Property(e => e.UsUd6Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD6_NUMERIC");

                entity.Property(e => e.UsUd7)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD7");

                entity.Property(e => e.UsUd7Bit).HasColumnName("US_UD7_BIT");

                entity.Property(e => e.UsUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD7_DATE");

                entity.Property(e => e.UsUd7Id).HasColumnName("US_UD7_ID");

                entity.Property(e => e.UsUd7Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD7_NUMERIC");

                entity.Property(e => e.UsUd8)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD8");

                entity.Property(e => e.UsUd8Bit).HasColumnName("US_UD8_BIT");

                entity.Property(e => e.UsUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD8_DATE");

                entity.Property(e => e.UsUd8Id).HasColumnName("US_UD8_ID");

                entity.Property(e => e.UsUd8Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD8_NUMERIC");

                entity.Property(e => e.UsUd9)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD9");

                entity.Property(e => e.UsUd9Bit).HasColumnName("US_UD9_BIT");

                entity.Property(e => e.UsUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD9_DATE");

                entity.Property(e => e.UsUd9Id).HasColumnName("US_UD9_ID");

                entity.Property(e => e.UsUd9Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD9_NUMERIC");

                entity.Property(e => e.UseWordMailMerge).HasColumnName("USE_WORD_MAIL_MERGE");

                entity.Property(e => e.UserDepartment).HasMaxLength(128);

                entity.Property(e => e.UserDirectPhone).HasMaxLength(32);

                entity.Property(e => e.UserGroupName)
                    .HasMaxLength(255)
                    .HasColumnName("USER_GROUP_NAME");

                entity.Property(e => e.UserJobTitle).HasMaxLength(128);

                entity.Property(e => e.UserMobileTelephone).HasMaxLength(32);

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");
            });

            modelBuilder.Entity<VUsersAppointment>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUsersAppointments");

                entity.Property(e => e.AcBillingCounty)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_COUNTY");

                entity.Property(e => e.AcBillingPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_POSTCODE");

                entity.Property(e => e.AcBillingTown)
                    .HasMaxLength(255)
                    .HasColumnName("AC_BILLING_TOWN");

                entity.Property(e => e.AcCounty)
                    .HasMaxLength(255)
                    .HasColumnName("AC_COUNTY");

                entity.Property(e => e.AcFlag)
                    .HasMaxLength(255)
                    .HasColumnName("AC_FLAG");

                entity.Property(e => e.AcFlagHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_FLAG_HLIGHT");

                entity.Property(e => e.AcGroup)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("AC_GROUP");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcIndustry)
                    .HasMaxLength(255)
                    .HasColumnName("AC_INDUSTRY");

                entity.Property(e => e.AcIndustryHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_INDUSTRY_HLIGHT");

                entity.Property(e => e.AcLabel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LABEL");

                entity.Property(e => e.AcLabelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LABEL_HLIGHT");

                entity.Property(e => e.AcLevel)
                    .HasMaxLength(255)
                    .HasColumnName("AC_LEVEL");

                entity.Property(e => e.AcLevelHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_LEVEL_HLIGHT");

                entity.Property(e => e.AcManager)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER");

                entity.Property(e => e.AcManagerEmail)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_EMAIL");

                entity.Property(e => e.AcManagerSupport)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_SUPPORT");

                entity.Property(e => e.AcManagerSupportEmail)
                    .HasMaxLength(255)
                    .HasColumnName("AC_MANAGER_SUPPORT_EMAIL");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.AcPhone1)
                    .HasMaxLength(50)
                    .HasColumnName("AC_PHONE_1");

                entity.Property(e => e.AcPostcode)
                    .HasMaxLength(255)
                    .HasColumnName("AC_POSTCODE");

                entity.Property(e => e.AcReference)
                    .HasMaxLength(50)
                    .HasColumnName("AC_REFERENCE");

                entity.Property(e => e.AcSource)
                    .HasMaxLength(255)
                    .HasColumnName("AC_SOURCE");

                entity.Property(e => e.AcSourceHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_SOURCE_HLIGHT");

                entity.Property(e => e.AcTown)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TOWN");

                entity.Property(e => e.AcType)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE");

                entity.Property(e => e.AcType2)
                    .HasMaxLength(255)
                    .HasColumnName("AC_TYPE_2");

                entity.Property(e => e.AcType2Hlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_2_HLIGHT");

                entity.Property(e => e.AcTypeHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_TYPE_HLIGHT");

                entity.Property(e => e.AcUd10Bit).HasColumnName("AC_UD10_BIT");

                entity.Property(e => e.AcUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD10_DATE");

                entity.Property(e => e.AcUd10Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_ID");

                entity.Property(e => e.AcUd10IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD10_ID_HLIGHT");

                entity.Property(e => e.AcUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD10_NUMERIC");

                entity.Property(e => e.AcUd10Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD10_TEXT");

                entity.Property(e => e.AcUd11Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD11_TEXT");

                entity.Property(e => e.AcUd12Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD12_TEXT");

                entity.Property(e => e.AcUd13Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD13_TEXT");

                entity.Property(e => e.AcUd14Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD14_TEXT");

                entity.Property(e => e.AcUd15Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD15_TEXT");

                entity.Property(e => e.AcUd1Bit).HasColumnName("AC_UD1_BIT");

                entity.Property(e => e.AcUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD1_DATE");

                entity.Property(e => e.AcUd1Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_ID");

                entity.Property(e => e.AcUd1IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD1_ID_HLIGHT");

                entity.Property(e => e.AcUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD1_NUMERIC");

                entity.Property(e => e.AcUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD1_TEXT");

                entity.Property(e => e.AcUd2Bit).HasColumnName("AC_UD2_BIT");

                entity.Property(e => e.AcUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD2_DATE");

                entity.Property(e => e.AcUd2Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_ID");

                entity.Property(e => e.AcUd2IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD2_ID_HLIGHT");

                entity.Property(e => e.AcUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD2_NUMERIC");

                entity.Property(e => e.AcUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD2_TEXT");

                entity.Property(e => e.AcUd3Bit).HasColumnName("AC_UD3_BIT");

                entity.Property(e => e.AcUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD3_DATE");

                entity.Property(e => e.AcUd3Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_ID");

                entity.Property(e => e.AcUd3IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD3_ID_HLIGHT");

                entity.Property(e => e.AcUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD3_NUMERIC");

                entity.Property(e => e.AcUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD3_TEXT");

                entity.Property(e => e.AcUd4Bit).HasColumnName("AC_UD4_BIT");

                entity.Property(e => e.AcUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD4_DATE");

                entity.Property(e => e.AcUd4Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_ID");

                entity.Property(e => e.AcUd4IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD4_ID_HLIGHT");

                entity.Property(e => e.AcUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD4_NUMERIC");

                entity.Property(e => e.AcUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD4_TEXT");

                entity.Property(e => e.AcUd5Bit).HasColumnName("AC_UD5_BIT");

                entity.Property(e => e.AcUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD5_DATE");

                entity.Property(e => e.AcUd5Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_ID");

                entity.Property(e => e.AcUd5IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD5_ID_HLIGHT");

                entity.Property(e => e.AcUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD5_NUMERIC");

                entity.Property(e => e.AcUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD5_TEXT");

                entity.Property(e => e.AcUd6Bit).HasColumnName("AC_UD6_BIT");

                entity.Property(e => e.AcUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD6_DATE");

                entity.Property(e => e.AcUd6Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_ID");

                entity.Property(e => e.AcUd6IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD6_ID_HLIGHT");

                entity.Property(e => e.AcUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD6_NUMERIC");

                entity.Property(e => e.AcUd6Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD6_TEXT");

                entity.Property(e => e.AcUd7Bit).HasColumnName("AC_UD7_BIT");

                entity.Property(e => e.AcUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD7_DATE");

                entity.Property(e => e.AcUd7Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_ID");

                entity.Property(e => e.AcUd7IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD7_ID_HLIGHT");

                entity.Property(e => e.AcUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD7_NUMERIC");

                entity.Property(e => e.AcUd7Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD7_TEXT");

                entity.Property(e => e.AcUd8Bit).HasColumnName("AC_UD8_BIT");

                entity.Property(e => e.AcUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD8_DATE");

                entity.Property(e => e.AcUd8Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_ID");

                entity.Property(e => e.AcUd8IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD8_ID_HLIGHT");

                entity.Property(e => e.AcUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD8_NUMERIC");

                entity.Property(e => e.AcUd8Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD8_TEXT");

                entity.Property(e => e.AcUd9Bit).HasColumnName("AC_UD9_BIT");

                entity.Property(e => e.AcUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("AC_UD9_DATE");

                entity.Property(e => e.AcUd9Id)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_ID");

                entity.Property(e => e.AcUd9IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("AC_UD9_ID_HLIGHT");

                entity.Property(e => e.AcUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("AC_UD9_NUMERIC");

                entity.Property(e => e.AcUd9Text)
                    .HasMaxLength(255)
                    .HasColumnName("AC_UD9_TEXT");

                entity.Property(e => e.AccBusinessTelephoneNumber)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_BusinessTelephoneNumber");

                entity.Property(e => e.AccEmail1Address)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_Email1Address");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.AccName)
                    .HasMaxLength(255)
                    .HasColumnName("ACC_NAME");

                entity.Property(e => e.AcgId).HasColumnName("ACG_ID");

                entity.Property(e => e.ActId).HasColumnName("ACT_ID");

                entity.Property(e => e.ActName)
                    .HasMaxLength(255)
                    .HasColumnName("ACT_NAME");

                entity.Property(e => e.AllDay).HasColumnName("ALL_DAY");

                entity.Property(e => e.AppointmentOwnerDept)
                    .HasMaxLength(128)
                    .HasColumnName("APPOINTMENT_OWNER_DEPT");

                entity.Property(e => e.AppointmentOwnerGroup)
                    .HasMaxLength(255)
                    .HasColumnName("APPOINTMENT_OWNER_GROUP");

                entity.Property(e => e.AppointmentOwnerName)
                    .HasMaxLength(255)
                    .HasColumnName("APPOINTMENT_OWNER_NAME");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.DueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DUE_DATE");

                entity.Property(e => e.End)
                    .HasColumnType("datetime")
                    .HasColumnName("END");

                entity.Property(e => e.Exchangeid)
                    .HasMaxLength(255)
                    .HasColumnName("EXCHANGEID");

                entity.Property(e => e.GoneFromOutlook).HasColumnName("GONE_FROM_OUTLOOK");

                entity.Property(e => e.Location)
                    .HasMaxLength(255)
                    .HasColumnName("LOCATION");

                entity.Property(e => e.Mailbox).HasMaxLength(255);

                entity.Property(e => e.NtAccount)
                    .HasMaxLength(100)
                    .HasColumnName("NT_ACCOUNT");

                entity.Property(e => e.NtIdOutlook).HasColumnName("NT_ID_OUTLOOK");

                entity.Property(e => e.OpId).HasColumnName("OP_ID");

                entity.Property(e => e.OpName)
                    .HasMaxLength(255)
                    .HasColumnName("OP_NAME");

                entity.Property(e => e.Owner)
                    .HasMaxLength(255)
                    .HasColumnName("OWNER");

                entity.Property(e => e.OwnerDept)
                    .HasMaxLength(128)
                    .HasColumnName("OWNER_DEPT");

                entity.Property(e => e.OwnerGroup)
                    .HasMaxLength(255)
                    .HasColumnName("OWNER_GROUP");

                entity.Property(e => e.OwnerId).HasColumnName("OWNER_ID");

                entity.Property(e => e.OwnerName)
                    .HasMaxLength(255)
                    .HasColumnName("OWNER_NAME");

                entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");

                entity.Property(e => e.ParentSummary)
                    .HasMaxLength(255)
                    .HasColumnName("PARENT_SUMMARY");

                entity.Property(e => e.ParentType)
                    .HasMaxLength(255)
                    .HasColumnName("PARENT_TYPE");

                entity.Property(e => e.ParentTypeName)
                    .HasMaxLength(255)
                    .HasColumnName("PARENT_TYPE_NAME");

                entity.Property(e => e.PjId).HasColumnName("PJ_ID");

                entity.Property(e => e.PjName)
                    .HasMaxLength(255)
                    .HasColumnName("PJ_NAME");

                entity.Property(e => e.RecurrenceInfo)
                    .HasMaxLength(255)
                    .HasColumnName("RECURRENCE_INFO");

                entity.Property(e => e.RecurrenceType).HasColumnName("RECURRENCE_TYPE");

                entity.Property(e => e.Recurring).HasColumnName("RECURRING");

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.ReminderMinutes).HasColumnName("REMINDER_MINUTES");

                entity.Property(e => e.SecurityGroup)
                    .HasMaxLength(255)
                    .HasColumnName("SECURITY_GROUP");

                entity.Property(e => e.SecurityId).HasColumnName("SECURITY_ID");

                entity.Property(e => e.SecurityObject)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SECURITY_OBJECT");

                entity.Property(e => e.SecurityOwner).HasColumnName("SECURITY_OWNER");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.SitId).HasColumnName("SIT_ID");

                entity.Property(e => e.SiteName)
                    .HasMaxLength(255)
                    .HasColumnName("SITE_NAME");

                entity.Property(e => e.Start)
                    .HasColumnType("datetime")
                    .HasColumnName("START");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("START_DATE");

                entity.Property(e => e.StgId).HasColumnName("STG_ID");

                entity.Property(e => e.StgName)
                    .HasMaxLength(255)
                    .HasColumnName("STG_NAME");

                entity.Property(e => e.Subject)
                    .HasMaxLength(255)
                    .HasColumnName("SUBJECT");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Ud1)
                    .HasMaxLength(255)
                    .HasColumnName("UD1");

                entity.Property(e => e.Ud10)
                    .HasMaxLength(255)
                    .HasColumnName("UD10");

                entity.Property(e => e.Ud11)
                    .HasMaxLength(255)
                    .HasColumnName("UD11");

                entity.Property(e => e.Ud12)
                    .HasMaxLength(255)
                    .HasColumnName("UD12");

                entity.Property(e => e.Ud13)
                    .HasMaxLength(255)
                    .HasColumnName("UD13");

                entity.Property(e => e.Ud14)
                    .HasMaxLength(255)
                    .HasColumnName("UD14");

                entity.Property(e => e.Ud15)
                    .HasMaxLength(255)
                    .HasColumnName("UD15");

                entity.Property(e => e.Ud2)
                    .HasMaxLength(255)
                    .HasColumnName("UD2");

                entity.Property(e => e.Ud3)
                    .HasMaxLength(255)
                    .HasColumnName("UD3");

                entity.Property(e => e.Ud4)
                    .HasMaxLength(255)
                    .HasColumnName("UD4");

                entity.Property(e => e.Ud5)
                    .HasMaxLength(255)
                    .HasColumnName("UD5");

                entity.Property(e => e.Ud6)
                    .HasMaxLength(255)
                    .HasColumnName("UD6");

                entity.Property(e => e.Ud7)
                    .HasMaxLength(255)
                    .HasColumnName("UD7");

                entity.Property(e => e.Ud8)
                    .HasMaxLength(255)
                    .HasColumnName("UD8");

                entity.Property(e => e.Ud9)
                    .HasMaxLength(255)
                    .HasColumnName("UD9");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");

                entity.Property(e => e.UsIdSupport).HasColumnName("US_ID_SUPPORT");

                entity.Property(e => e.UsaAccessLevel).HasColumnName("USA_ACCESS_LEVEL");

                entity.Property(e => e.UsaDeleted).HasColumnName("USA_DELETED");

                entity.Property(e => e.UsaId).HasColumnName("USA_ID");

                entity.Property(e => e.UsaMapiId)
                    .HasMaxLength(350)
                    .HasColumnName("USA_MAPI_ID");

                entity.Property(e => e.UsaStoreId)
                    .HasMaxLength(800)
                    .HasColumnName("USA_STORE_ID");

                entity.Property(e => e.UsaType)
                    .HasMaxLength(255)
                    .HasColumnName("USA_TYPE");

                entity.Property(e => e.UsaTypeHlight)
                    .HasMaxLength(100)
                    .HasColumnName("USA_TYPE_HLIGHT");

                entity.Property(e => e.UsaUd10Bit).HasColumnName("USA_UD10_BIT");

                entity.Property(e => e.UsaUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("USA_UD10_DATE");

                entity.Property(e => e.UsaUd10Id)
                    .HasMaxLength(255)
                    .HasColumnName("USA_UD10_ID");

                entity.Property(e => e.UsaUd10IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("USA_UD10_ID_HLIGHT");

                entity.Property(e => e.UsaUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("USA_UD10_NUMERIC");

                entity.Property(e => e.UsaUd11Bit).HasColumnName("USA_UD11_BIT");

                entity.Property(e => e.UsaUd12Bit).HasColumnName("USA_UD12_BIT");

                entity.Property(e => e.UsaUd13Bit).HasColumnName("USA_UD13_BIT");

                entity.Property(e => e.UsaUd14Bit).HasColumnName("USA_UD14_BIT");

                entity.Property(e => e.UsaUd15Bit).HasColumnName("USA_UD15_BIT");

                entity.Property(e => e.UsaUd16Bit).HasColumnName("USA_UD16_BIT");

                entity.Property(e => e.UsaUd17Bit).HasColumnName("USA_UD17_BIT");

                entity.Property(e => e.UsaUd18Bit).HasColumnName("USA_UD18_BIT");

                entity.Property(e => e.UsaUd19Bit).HasColumnName("USA_UD19_BIT");

                entity.Property(e => e.UsaUd1Bit).HasColumnName("USA_UD1_BIT");

                entity.Property(e => e.UsaUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("USA_UD1_DATE");

                entity.Property(e => e.UsaUd1Id)
                    .HasMaxLength(255)
                    .HasColumnName("USA_UD1_ID");

                entity.Property(e => e.UsaUd1IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("USA_UD1_ID_HLIGHT");

                entity.Property(e => e.UsaUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("USA_UD1_NUMERIC");

                entity.Property(e => e.UsaUd20Bit).HasColumnName("USA_UD20_BIT");

                entity.Property(e => e.UsaUd21Bit).HasColumnName("USA_UD21_BIT");

                entity.Property(e => e.UsaUd22Bit).HasColumnName("USA_UD22_BIT");

                entity.Property(e => e.UsaUd23Bit).HasColumnName("USA_UD23_BIT");

                entity.Property(e => e.UsaUd24Bit).HasColumnName("USA_UD24_BIT");

                entity.Property(e => e.UsaUd2Bit).HasColumnName("USA_UD2_BIT");

                entity.Property(e => e.UsaUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("USA_UD2_DATE");

                entity.Property(e => e.UsaUd2Id)
                    .HasMaxLength(255)
                    .HasColumnName("USA_UD2_ID");

                entity.Property(e => e.UsaUd2IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("USA_UD2_ID_HLIGHT");

                entity.Property(e => e.UsaUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("USA_UD2_NUMERIC");

                entity.Property(e => e.UsaUd3Bit).HasColumnName("USA_UD3_BIT");

                entity.Property(e => e.UsaUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("USA_UD3_DATE");

                entity.Property(e => e.UsaUd3Id)
                    .HasMaxLength(255)
                    .HasColumnName("USA_UD3_ID");

                entity.Property(e => e.UsaUd3IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("USA_UD3_ID_HLIGHT");

                entity.Property(e => e.UsaUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("USA_UD3_NUMERIC");

                entity.Property(e => e.UsaUd4Bit).HasColumnName("USA_UD4_BIT");

                entity.Property(e => e.UsaUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("USA_UD4_DATE");

                entity.Property(e => e.UsaUd4Id)
                    .HasMaxLength(255)
                    .HasColumnName("USA_UD4_ID");

                entity.Property(e => e.UsaUd4IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("USA_UD4_ID_HLIGHT");

                entity.Property(e => e.UsaUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("USA_UD4_NUMERIC");

                entity.Property(e => e.UsaUd5Bit).HasColumnName("USA_UD5_BIT");

                entity.Property(e => e.UsaUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("USA_UD5_DATE");

                entity.Property(e => e.UsaUd5Id)
                    .HasMaxLength(255)
                    .HasColumnName("USA_UD5_ID");

                entity.Property(e => e.UsaUd5IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("USA_UD5_ID_HLIGHT");

                entity.Property(e => e.UsaUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("USA_UD5_NUMERIC");

                entity.Property(e => e.UsaUd6Bit).HasColumnName("USA_UD6_BIT");

                entity.Property(e => e.UsaUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("USA_UD6_DATE");

                entity.Property(e => e.UsaUd6Id)
                    .HasMaxLength(255)
                    .HasColumnName("USA_UD6_ID");

                entity.Property(e => e.UsaUd6IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("USA_UD6_ID_HLIGHT");

                entity.Property(e => e.UsaUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("USA_UD6_NUMERIC");

                entity.Property(e => e.UsaUd7Bit).HasColumnName("USA_UD7_BIT");

                entity.Property(e => e.UsaUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("USA_UD7_DATE");

                entity.Property(e => e.UsaUd7Id)
                    .HasMaxLength(255)
                    .HasColumnName("USA_UD7_ID");

                entity.Property(e => e.UsaUd7IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("USA_UD7_ID_HLIGHT");

                entity.Property(e => e.UsaUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("USA_UD7_NUMERIC");

                entity.Property(e => e.UsaUd8Bit).HasColumnName("USA_UD8_BIT");

                entity.Property(e => e.UsaUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("USA_UD8_DATE");

                entity.Property(e => e.UsaUd8Id)
                    .HasMaxLength(255)
                    .HasColumnName("USA_UD8_ID");

                entity.Property(e => e.UsaUd8IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("USA_UD8_ID_HLIGHT");

                entity.Property(e => e.UsaUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("USA_UD8_NUMERIC");

                entity.Property(e => e.UsaUd9Bit).HasColumnName("USA_UD9_BIT");

                entity.Property(e => e.UsaUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("USA_UD9_DATE");

                entity.Property(e => e.UsaUd9Id)
                    .HasMaxLength(255)
                    .HasColumnName("USA_UD9_ID");

                entity.Property(e => e.UsaUd9IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("USA_UD9_ID_HLIGHT");

                entity.Property(e => e.UsaUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("USA_UD9_NUMERIC");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");

                entity.Property(e => e.UtcConverted).HasColumnName("UTC_CONVERTED");
            });

            modelBuilder.Entity<VUsersAppointmentsAccountOverview>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUsersAppointmentsAccountOverview");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.SecurityGroup)
                    .HasMaxLength(255)
                    .HasColumnName("SECURITY_GROUP");

                entity.Property(e => e.SecurityId).HasColumnName("SECURITY_ID");

                entity.Property(e => e.SecurityObject)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SECURITY_OBJECT");

                entity.Property(e => e.SecurityOwner).HasColumnName("SECURITY_OWNER");

                entity.Property(e => e.Start)
                    .HasColumnType("datetime")
                    .HasColumnName("START");

                entity.Property(e => e.Subject)
                    .HasMaxLength(255)
                    .HasColumnName("SUBJECT");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");

                entity.Property(e => e.UsIdSupport).HasColumnName("US_ID_SUPPORT");

                entity.Property(e => e.UsaAccessLevel).HasColumnName("USA_ACCESS_LEVEL");

                entity.Property(e => e.UsaId).HasColumnName("USA_ID");
            });

            modelBuilder.Entity<VUsersDeleted>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUsersDeleted");

                entity.Property(e => e.AName)
                    .HasMaxLength(255)
                    .HasColumnName("A_NAME");

                entity.Property(e => e.ARef)
                    .HasMaxLength(255)
                    .HasColumnName("A_REF");

                entity.Property(e => e.AccessAdmin).HasColumnName("ACCESS_ADMIN");

                entity.Property(e => e.AccessEnabled).HasColumnName("ACCESS_ENABLED");

                entity.Property(e => e.AcoTeamId).HasColumnName("ACO_TEAM_ID");

                entity.Property(e => e.AddressLookupDetails)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_LOOKUP_DETAILS");

                entity.Property(e => e.Admin).HasColumnName("ADMIN");

                entity.Property(e => e.BName)
                    .HasMaxLength(255)
                    .HasColumnName("B_NAME");

                entity.Property(e => e.BRef)
                    .HasMaxLength(255)
                    .HasColumnName("B_REF");

                entity.Property(e => e.CName)
                    .HasMaxLength(255)
                    .HasColumnName("C_NAME");

                entity.Property(e => e.CRef)
                    .HasMaxLength(255)
                    .HasColumnName("C_REF");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CsIdLatest).HasColumnName("CS_ID_LATEST");

                entity.Property(e => e.CsLatestDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CS_LATEST_DATE");

                entity.Property(e => e.CtId).HasColumnName("CT_ID");

                entity.Property(e => e.CultureCode)
                    .HasMaxLength(10)
                    .HasColumnName("CULTURE_CODE");

                entity.Property(e => e.CurId).HasColumnName("CUR_ID");

                entity.Property(e => e.DateFormat)
                    .HasMaxLength(1)
                    .HasColumnName("DATE_FORMAT");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.Email).HasColumnName("EMAIL");

                entity.Property(e => e.EmailAddress)
                    .HasMaxLength(255)
                    .HasColumnName("EMAIL_ADDRESS");

                entity.Property(e => e.EmailScanAppointments).HasColumnName("EMAIL_SCAN_APPOINTMENTS");

                entity.Property(e => e.EmailScanContacts).HasColumnName("EMAIL_SCAN_CONTACTS");

                entity.Property(e => e.EmailScanDetails)
                    .HasMaxLength(512)
                    .HasColumnName("EMAIL_SCAN_DETAILS");

                entity.Property(e => e.EmailScanEmails).HasColumnName("EMAIL_SCAN_EMAILS");

                entity.Property(e => e.EmailScanExclusions)
                    .HasMaxLength(1024)
                    .HasColumnName("EMAIL_SCAN_EXCLUSIONS");

                entity.Property(e => e.EmailScanFolders)
                    .HasMaxLength(1024)
                    .HasColumnName("EMAIL_SCAN_FOLDERS");

                entity.Property(e => e.EmailScanMaxSensitivity).HasColumnName("EMAIL_SCAN_MAX_SENSITIVITY");

                entity.Property(e => e.EmailScanTasks).HasColumnName("EMAIL_SCAN_TASKS");

                entity.Property(e => e.EnableServerDocProd).HasColumnName("ENABLE_SERVER_DOC_PROD");

                entity.Property(e => e.EsteiroidentSid).HasColumnName("ESTEIROIDENT_SID");

                entity.Property(e => e.ExchangeServer)
                    .HasMaxLength(255)
                    .HasColumnName("EXCHANGE_SERVER");

                entity.Property(e => e.Exchangeid)
                    .HasMaxLength(255)
                    .HasColumnName("EXCHANGEID");

                entity.Property(e => e.Fname)
                    .HasMaxLength(50)
                    .HasColumnName("FNAME");

                entity.Property(e => e.HashedPwd)
                    .HasMaxLength(255)
                    .HasColumnName("HASHED_PWD");

                entity.Property(e => e.Home).HasColumnName("HOME");

                entity.Property(e => e.HomeName)
                    .HasMaxLength(255)
                    .HasColumnName("HOME_NAME");

                entity.Property(e => e.HomeRef)
                    .HasMaxLength(255)
                    .HasColumnName("HOME_REF");

                entity.Property(e => e.HybridDefaultMode).HasColumnName("HYBRID_DEFAULT_MODE");

                entity.Property(e => e.HybridEnabled).HasColumnName("HYBRID_ENABLED");

                entity.Property(e => e.IconImage)
                    .IsRequired()
                    .HasMaxLength(19)
                    .IsUnicode(false)
                    .HasColumnName("ICON_IMAGE");

                entity.Property(e => e.IsActionCentrePinned).HasColumnName("IS_ACTION_CENTRE_PINNED");

                entity.Property(e => e.IsMenuExpanded).HasColumnName("IS_MENU_EXPANDED");

                entity.Property(e => e.Lang)
                    .HasMaxLength(32)
                    .HasColumnName("LANG");

                entity.Property(e => e.LangId).HasColumnName("LANG_ID");

                entity.Property(e => e.LastScanned)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_SCANNED");

                entity.Property(e => e.LicenceType).HasColumnName("LICENCE_TYPE");

                entity.Property(e => e.LivechatEmail)
                    .HasMaxLength(255)
                    .HasColumnName("LIVECHAT_EMAIL");

                entity.Property(e => e.Lname)
                    .HasMaxLength(50)
                    .HasColumnName("LNAME");

                entity.Property(e => e.Manager).HasColumnName("MANAGER");

                entity.Property(e => e.MapsAccess).HasColumnName("MAPS_ACCESS");

                entity.Property(e => e.Mname)
                    .HasMaxLength(50)
                    .HasColumnName("MNAME");

                entity.Property(e => e.MonthlySalesTarget)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("MONTHLY_SALES_TARGET");

                entity.Property(e => e.NoAccess).HasColumnName("NO_ACCESS");

                entity.Property(e => e.NtAccount)
                    .HasMaxLength(100)
                    .HasColumnName("NT_ACCOUNT");

                entity.Property(e => e.NumberFormat)
                    .HasMaxLength(25)
                    .HasColumnName("NUMBER_FORMAT");

                entity.Property(e => e.PhoneCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_COUNTRY_CODE");

                entity.Property(e => e.PhoneIddCode)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_IDD_CODE");

                entity.Property(e => e.PhoneNddCode)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_NDD_CODE");

                entity.Property(e => e.PhoneOutsideLineCode)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_OUTSIDE_LINE_CODE");

                entity.Property(e => e.PhoneSettings)
                    .HasMaxLength(500)
                    .HasColumnName("PHONE_SETTINGS");

                entity.Property(e => e.PrivateEmail).HasColumnName("PRIVATE_EMAIL");

                entity.Property(e => e.RootUser).HasColumnName("ROOT_USER");

                entity.Property(e => e.Sales).HasColumnName("SALES");

                entity.Property(e => e.SetIdPhone).HasColumnName("SET_ID_PHONE");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShowOnAcManager).HasColumnName("SHOW_ON_AC_MANAGER");

                entity.Property(e => e.ShowOnCalendar).HasColumnName("SHOW_ON_CALENDAR");

                entity.Property(e => e.ShowOnSupport).HasColumnName("SHOW_ON_SUPPORT");

                entity.Property(e => e.ShowOnUsers).HasColumnName("SHOW_ON_USERS");

                entity.Property(e => e.SimpleViewMenu).HasColumnName("SIMPLE_VIEW_MENU");

                entity.Property(e => e.SingleWindow).HasColumnName("SINGLE_WINDOW");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TemplateFolder)
                    .HasMaxLength(255)
                    .HasColumnName("TEMPLATE_FOLDER");

                entity.Property(e => e.TimeDiff).HasColumnName("TIME_DIFF");

                entity.Property(e => e.TimeZone)
                    .HasMaxLength(255)
                    .HasColumnName("TIME_ZONE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsCulture).HasColumnName("US_CULTURE");

                entity.Property(e => e.UsDeleted).HasColumnName("US_DELETED");

                entity.Property(e => e.UsExternal)
                    .HasMaxLength(255)
                    .HasColumnName("US_EXTERNAL");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsIdDeleted).HasColumnName("US_ID_DELETED");

                entity.Property(e => e.UsUd1)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD1");

                entity.Property(e => e.UsUd10)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD10");

                entity.Property(e => e.UsUd10Bit).HasColumnName("US_UD10_BIT");

                entity.Property(e => e.UsUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD10_DATE");

                entity.Property(e => e.UsUd10Id).HasColumnName("US_UD10_ID");

                entity.Property(e => e.UsUd10Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD10_NUMERIC");

                entity.Property(e => e.UsUd11)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD11");

                entity.Property(e => e.UsUd11Bit).HasColumnName("US_UD11_BIT");

                entity.Property(e => e.UsUd12)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD12");

                entity.Property(e => e.UsUd12Bit).HasColumnName("US_UD12_BIT");

                entity.Property(e => e.UsUd13)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD13");

                entity.Property(e => e.UsUd13Bit).HasColumnName("US_UD13_BIT");

                entity.Property(e => e.UsUd14)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD14");

                entity.Property(e => e.UsUd14Bit).HasColumnName("US_UD14_BIT");

                entity.Property(e => e.UsUd15)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD15");

                entity.Property(e => e.UsUd15Bit).HasColumnName("US_UD15_BIT");

                entity.Property(e => e.UsUd16Bit).HasColumnName("US_UD16_BIT");

                entity.Property(e => e.UsUd17Bit).HasColumnName("US_UD17_BIT");

                entity.Property(e => e.UsUd18Bit).HasColumnName("US_UD18_BIT");

                entity.Property(e => e.UsUd19Bit).HasColumnName("US_UD19_BIT");

                entity.Property(e => e.UsUd1Bit).HasColumnName("US_UD1_BIT");

                entity.Property(e => e.UsUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD1_DATE");

                entity.Property(e => e.UsUd1Id).HasColumnName("US_UD1_ID");

                entity.Property(e => e.UsUd1Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD1_NUMERIC");

                entity.Property(e => e.UsUd2)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD2");

                entity.Property(e => e.UsUd20Bit).HasColumnName("US_UD20_BIT");

                entity.Property(e => e.UsUd21Bit).HasColumnName("US_UD21_BIT");

                entity.Property(e => e.UsUd22Bit).HasColumnName("US_UD22_BIT");

                entity.Property(e => e.UsUd23Bit).HasColumnName("US_UD23_BIT");

                entity.Property(e => e.UsUd24Bit).HasColumnName("US_UD24_BIT");

                entity.Property(e => e.UsUd2Bit).HasColumnName("US_UD2_BIT");

                entity.Property(e => e.UsUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD2_DATE");

                entity.Property(e => e.UsUd2Id).HasColumnName("US_UD2_ID");

                entity.Property(e => e.UsUd2Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD2_NUMERIC");

                entity.Property(e => e.UsUd3)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD3");

                entity.Property(e => e.UsUd3Bit).HasColumnName("US_UD3_BIT");

                entity.Property(e => e.UsUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD3_DATE");

                entity.Property(e => e.UsUd3Id).HasColumnName("US_UD3_ID");

                entity.Property(e => e.UsUd3Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD3_NUMERIC");

                entity.Property(e => e.UsUd4)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD4");

                entity.Property(e => e.UsUd4Bit).HasColumnName("US_UD4_BIT");

                entity.Property(e => e.UsUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD4_DATE");

                entity.Property(e => e.UsUd4Id).HasColumnName("US_UD4_ID");

                entity.Property(e => e.UsUd4Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD4_NUMERIC");

                entity.Property(e => e.UsUd5)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD5");

                entity.Property(e => e.UsUd5Bit).HasColumnName("US_UD5_BIT");

                entity.Property(e => e.UsUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD5_DATE");

                entity.Property(e => e.UsUd5Id).HasColumnName("US_UD5_ID");

                entity.Property(e => e.UsUd5Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD5_NUMERIC");

                entity.Property(e => e.UsUd6)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD6");

                entity.Property(e => e.UsUd6Bit).HasColumnName("US_UD6_BIT");

                entity.Property(e => e.UsUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD6_DATE");

                entity.Property(e => e.UsUd6Id).HasColumnName("US_UD6_ID");

                entity.Property(e => e.UsUd6Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD6_NUMERIC");

                entity.Property(e => e.UsUd7)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD7");

                entity.Property(e => e.UsUd7Bit).HasColumnName("US_UD7_BIT");

                entity.Property(e => e.UsUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD7_DATE");

                entity.Property(e => e.UsUd7Id).HasColumnName("US_UD7_ID");

                entity.Property(e => e.UsUd7Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD7_NUMERIC");

                entity.Property(e => e.UsUd8)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD8");

                entity.Property(e => e.UsUd8Bit).HasColumnName("US_UD8_BIT");

                entity.Property(e => e.UsUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD8_DATE");

                entity.Property(e => e.UsUd8Id).HasColumnName("US_UD8_ID");

                entity.Property(e => e.UsUd8Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD8_NUMERIC");

                entity.Property(e => e.UsUd9)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD9");

                entity.Property(e => e.UsUd9Bit).HasColumnName("US_UD9_BIT");

                entity.Property(e => e.UsUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD9_DATE");

                entity.Property(e => e.UsUd9Id).HasColumnName("US_UD9_ID");

                entity.Property(e => e.UsUd9Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD9_NUMERIC");

                entity.Property(e => e.UseWordMailMerge).HasColumnName("USE_WORD_MAIL_MERGE");

                entity.Property(e => e.UserDepartment).HasMaxLength(128);

                entity.Property(e => e.UserDirectPhone).HasMaxLength(32);

                entity.Property(e => e.UserGroupName)
                    .HasMaxLength(255)
                    .HasColumnName("USER_GROUP_NAME");

                entity.Property(e => e.UserJobTitle).HasMaxLength(128);

                entity.Property(e => e.UserMobileTelephone).HasMaxLength(32);

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");
            });

            modelBuilder.Entity<VUsersGroup>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUsersGroups");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.DstId).HasColumnName("DST_ID");

                entity.Property(e => e.Hidden).HasColumnName("HIDDEN");

                entity.Property(e => e.MonthlySalesTarget)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("MONTHLY_SALES_TARGET");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Subdirectory)
                    .HasMaxLength(255)
                    .HasColumnName("SUBDIRECTORY");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Ud1)
                    .HasMaxLength(255)
                    .HasColumnName("UD1");

                entity.Property(e => e.Ud10)
                    .HasMaxLength(255)
                    .HasColumnName("UD10");

                entity.Property(e => e.Ud11)
                    .HasMaxLength(255)
                    .HasColumnName("UD11");

                entity.Property(e => e.Ud12)
                    .HasMaxLength(255)
                    .HasColumnName("UD12");

                entity.Property(e => e.Ud13)
                    .HasMaxLength(255)
                    .HasColumnName("UD13");

                entity.Property(e => e.Ud14)
                    .HasMaxLength(255)
                    .HasColumnName("UD14");

                entity.Property(e => e.Ud15)
                    .HasMaxLength(255)
                    .HasColumnName("UD15");

                entity.Property(e => e.Ud2)
                    .HasMaxLength(255)
                    .HasColumnName("UD2");

                entity.Property(e => e.Ud3)
                    .HasMaxLength(255)
                    .HasColumnName("UD3");

                entity.Property(e => e.Ud4)
                    .HasMaxLength(255)
                    .HasColumnName("UD4");

                entity.Property(e => e.Ud5)
                    .HasMaxLength(255)
                    .HasColumnName("UD5");

                entity.Property(e => e.Ud6)
                    .HasMaxLength(255)
                    .HasColumnName("UD6");

                entity.Property(e => e.Ud7)
                    .HasMaxLength(255)
                    .HasColumnName("UD7");

                entity.Property(e => e.Ud8)
                    .HasMaxLength(255)
                    .HasColumnName("UD8");

                entity.Property(e => e.Ud9)
                    .HasMaxLength(255)
                    .HasColumnName("UD9");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsgAccess).HasColumnName("USG_ACCESS");

                entity.Property(e => e.UsgDeleted).HasColumnName("USG_DELETED");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");

                entity.Property(e => e.UsgId1).HasColumnName("USG_ID_1");

                entity.Property(e => e.UsgId2).HasColumnName("USG_ID_2");

                entity.Property(e => e.ViewAllProjects).HasColumnName("VIEW_ALL_PROJECTS");
            });

            modelBuilder.Entity<VUsersGroupsAdmin>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUsersGroupsAdmin");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.DstId).HasColumnName("DST_ID");

                entity.Property(e => e.GroupType)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("GROUP_TYPE");

                entity.Property(e => e.Hidden).HasColumnName("HIDDEN");

                entity.Property(e => e.IconImage)
                    .IsRequired()
                    .HasMaxLength(22)
                    .IsUnicode(false)
                    .HasColumnName("ICON_IMAGE");

                entity.Property(e => e.MonthlySalesTarget)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("MONTHLY_SALES_TARGET");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Subdirectory)
                    .HasMaxLength(255)
                    .HasColumnName("SUBDIRECTORY");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Ud1)
                    .HasMaxLength(255)
                    .HasColumnName("UD1");

                entity.Property(e => e.Ud10)
                    .HasMaxLength(255)
                    .HasColumnName("UD10");

                entity.Property(e => e.Ud11)
                    .HasMaxLength(255)
                    .HasColumnName("UD11");

                entity.Property(e => e.Ud12)
                    .HasMaxLength(255)
                    .HasColumnName("UD12");

                entity.Property(e => e.Ud13)
                    .HasMaxLength(255)
                    .HasColumnName("UD13");

                entity.Property(e => e.Ud14)
                    .HasMaxLength(255)
                    .HasColumnName("UD14");

                entity.Property(e => e.Ud15)
                    .HasMaxLength(255)
                    .HasColumnName("UD15");

                entity.Property(e => e.Ud2)
                    .HasMaxLength(255)
                    .HasColumnName("UD2");

                entity.Property(e => e.Ud3)
                    .HasMaxLength(255)
                    .HasColumnName("UD3");

                entity.Property(e => e.Ud4)
                    .HasMaxLength(255)
                    .HasColumnName("UD4");

                entity.Property(e => e.Ud5)
                    .HasMaxLength(255)
                    .HasColumnName("UD5");

                entity.Property(e => e.Ud6)
                    .HasMaxLength(255)
                    .HasColumnName("UD6");

                entity.Property(e => e.Ud7)
                    .HasMaxLength(255)
                    .HasColumnName("UD7");

                entity.Property(e => e.Ud8)
                    .HasMaxLength(255)
                    .HasColumnName("UD8");

                entity.Property(e => e.Ud9)
                    .HasMaxLength(255)
                    .HasColumnName("UD9");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsgAccess).HasColumnName("USG_ACCESS");

                entity.Property(e => e.UsgDeleted).HasColumnName("USG_DELETED");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");

                entity.Property(e => e.UsgId1).HasColumnName("USG_ID_1");

                entity.Property(e => e.UsgId2).HasColumnName("USG_ID_2");

                entity.Property(e => e.ViewAllProjects).HasColumnName("VIEW_ALL_PROJECTS");
            });

            modelBuilder.Entity<VUsersGroupsMember>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUsersGroupsMembers");

                entity.Property(e => e.AcoOverridden).HasColumnName("ACO_OVERRIDDEN");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeleteText)
                    .IsRequired()
                    .HasMaxLength(22)
                    .IsUnicode(false)
                    .HasColumnName("DELETE_TEXT");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.EmailAddress)
                    .HasMaxLength(255)
                    .HasColumnName("EMAIL_ADDRESS");

                entity.Property(e => e.Exchangeid)
                    .HasMaxLength(255)
                    .HasColumnName("EXCHANGEID");

                entity.Property(e => e.GroupName)
                    .HasMaxLength(255)
                    .HasColumnName("GROUP_NAME");

                entity.Property(e => e.ManageText)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("MANAGE_TEXT");

                entity.Property(e => e.Manager).HasColumnName("MANAGER");

                entity.Property(e => e.NtAccount)
                    .HasMaxLength(100)
                    .HasColumnName("NT_ACCOUNT");

                entity.Property(e => e.PrimaryGroup).HasColumnName("PRIMARY_GROUP");

                entity.Property(e => e.ShareEmail).HasColumnName("SHARE_EMAIL");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Summary)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UserText)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("USER_TEXT");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");

                entity.Property(e => e.UsmId).HasColumnName("USM_ID");

                entity.Property(e => e.UsmIdSafe).HasColumnName("USM_ID_SAFE");
            });

            modelBuilder.Entity<VUsersGroupsOption>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUsersGroupsOptions");

                entity.Property(e => e.AccessArea)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("ACCESS_AREA");

                entity.Property(e => e.AcoId).HasColumnName("ACO_ID");

                entity.Property(e => e.AcoLabel)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("ACO_LABEL");

                entity.Property(e => e.AcoType)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("ACO_TYPE");

                entity.Property(e => e.AllowDelete).HasColumnName("ALLOW_DELETE");

                entity.Property(e => e.AllowEdit).HasColumnName("ALLOW_EDIT");

                entity.Property(e => e.GroId).HasColumnName("GRO_ID");

                entity.Property(e => e.GroupName)
                    .HasMaxLength(263)
                    .HasColumnName("GROUP_NAME");

                entity.Property(e => e.Order).HasColumnName("ORDER");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");
            });

            modelBuilder.Entity<VUsersGroupsOptionsGdpr>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUsersGroupsOptions_GDPR");

                entity.Property(e => e.AccessArea)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("ACCESS_AREA");

                entity.Property(e => e.AcoId).HasColumnName("ACO_ID");

                entity.Property(e => e.AcoLabel)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("ACO_LABEL");

                entity.Property(e => e.AcoType)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("ACO_TYPE");

                entity.Property(e => e.AllowDelete).HasColumnName("ALLOW_DELETE");

                entity.Property(e => e.AllowEdit).HasColumnName("ALLOW_EDIT");

                entity.Property(e => e.GroId).HasColumnName("GRO_ID");

                entity.Property(e => e.GroupName)
                    .HasMaxLength(263)
                    .HasColumnName("GROUP_NAME");

                entity.Property(e => e.Order).HasColumnName("ORDER");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");
            });

            modelBuilder.Entity<VUsersGroupsWithLeadsAccess>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUsersGroupsWithLeadsAccess");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.DstId).HasColumnName("DST_ID");

                entity.Property(e => e.GroupType)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("GROUP_TYPE");

                entity.Property(e => e.Hidden).HasColumnName("HIDDEN");

                entity.Property(e => e.IconImage)
                    .IsRequired()
                    .HasMaxLength(22)
                    .IsUnicode(false)
                    .HasColumnName("ICON_IMAGE");

                entity.Property(e => e.MonthlySalesTarget)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("MONTHLY_SALES_TARGET");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Subdirectory)
                    .HasMaxLength(255)
                    .HasColumnName("SUBDIRECTORY");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Ud1)
                    .HasMaxLength(255)
                    .HasColumnName("UD1");

                entity.Property(e => e.Ud10)
                    .HasMaxLength(255)
                    .HasColumnName("UD10");

                entity.Property(e => e.Ud11)
                    .HasMaxLength(255)
                    .HasColumnName("UD11");

                entity.Property(e => e.Ud12)
                    .HasMaxLength(255)
                    .HasColumnName("UD12");

                entity.Property(e => e.Ud13)
                    .HasMaxLength(255)
                    .HasColumnName("UD13");

                entity.Property(e => e.Ud14)
                    .HasMaxLength(255)
                    .HasColumnName("UD14");

                entity.Property(e => e.Ud15)
                    .HasMaxLength(255)
                    .HasColumnName("UD15");

                entity.Property(e => e.Ud2)
                    .HasMaxLength(255)
                    .HasColumnName("UD2");

                entity.Property(e => e.Ud3)
                    .HasMaxLength(255)
                    .HasColumnName("UD3");

                entity.Property(e => e.Ud4)
                    .HasMaxLength(255)
                    .HasColumnName("UD4");

                entity.Property(e => e.Ud5)
                    .HasMaxLength(255)
                    .HasColumnName("UD5");

                entity.Property(e => e.Ud6)
                    .HasMaxLength(255)
                    .HasColumnName("UD6");

                entity.Property(e => e.Ud7)
                    .HasMaxLength(255)
                    .HasColumnName("UD7");

                entity.Property(e => e.Ud8)
                    .HasMaxLength(255)
                    .HasColumnName("UD8");

                entity.Property(e => e.Ud9)
                    .HasMaxLength(255)
                    .HasColumnName("UD9");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsgAccess).HasColumnName("USG_ACCESS");

                entity.Property(e => e.UsgDeleted).HasColumnName("USG_DELETED");

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");

                entity.Property(e => e.UsgId1).HasColumnName("USG_ID_1");

                entity.Property(e => e.UsgId2).HasColumnName("USG_ID_2");

                entity.Property(e => e.ViewAllProjects).HasColumnName("VIEW_ALL_PROJECTS");
            });

            modelBuilder.Entity<VUsersHome>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUsersHome");

                entity.Property(e => e.AName)
                    .HasMaxLength(255)
                    .HasColumnName("A_NAME");

                entity.Property(e => e.ARef)
                    .HasMaxLength(255)
                    .HasColumnName("A_REF");

                entity.Property(e => e.AccessAdmin).HasColumnName("ACCESS_ADMIN");

                entity.Property(e => e.AccessEnabled).HasColumnName("ACCESS_ENABLED");

                entity.Property(e => e.AcoTeamId).HasColumnName("ACO_TEAM_ID");

                entity.Property(e => e.AddressLookupDetails)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_LOOKUP_DETAILS");

                entity.Property(e => e.Admin).HasColumnName("ADMIN");

                entity.Property(e => e.BName)
                    .HasMaxLength(255)
                    .HasColumnName("B_NAME");

                entity.Property(e => e.BRef)
                    .HasMaxLength(255)
                    .HasColumnName("B_REF");

                entity.Property(e => e.CName)
                    .HasMaxLength(255)
                    .HasColumnName("C_NAME");

                entity.Property(e => e.CRef)
                    .HasMaxLength(255)
                    .HasColumnName("C_REF");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CsIdLatest).HasColumnName("CS_ID_LATEST");

                entity.Property(e => e.CsLatestDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CS_LATEST_DATE");

                entity.Property(e => e.CtId).HasColumnName("CT_ID");

                entity.Property(e => e.CultureCode)
                    .HasMaxLength(10)
                    .HasColumnName("CULTURE_CODE");

                entity.Property(e => e.CurId).HasColumnName("CUR_ID");

                entity.Property(e => e.DateFormat)
                    .HasMaxLength(1)
                    .HasColumnName("DATE_FORMAT");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.Email).HasColumnName("EMAIL");

                entity.Property(e => e.EmailAddress)
                    .HasMaxLength(255)
                    .HasColumnName("EMAIL_ADDRESS");

                entity.Property(e => e.EmailScanAppointments).HasColumnName("EMAIL_SCAN_APPOINTMENTS");

                entity.Property(e => e.EmailScanContacts).HasColumnName("EMAIL_SCAN_CONTACTS");

                entity.Property(e => e.EmailScanDetails)
                    .HasMaxLength(512)
                    .HasColumnName("EMAIL_SCAN_DETAILS");

                entity.Property(e => e.EmailScanEmails).HasColumnName("EMAIL_SCAN_EMAILS");

                entity.Property(e => e.EmailScanExclusions)
                    .HasMaxLength(1024)
                    .HasColumnName("EMAIL_SCAN_EXCLUSIONS");

                entity.Property(e => e.EmailScanFolders)
                    .HasMaxLength(1024)
                    .HasColumnName("EMAIL_SCAN_FOLDERS");

                entity.Property(e => e.EmailScanMaxSensitivity).HasColumnName("EMAIL_SCAN_MAX_SENSITIVITY");

                entity.Property(e => e.EmailScanTasks).HasColumnName("EMAIL_SCAN_TASKS");

                entity.Property(e => e.EnableServerDocProd).HasColumnName("ENABLE_SERVER_DOC_PROD");

                entity.Property(e => e.EsteiroidentSid).HasColumnName("ESTEIROIDENT_SID");

                entity.Property(e => e.ExchangeServer)
                    .HasMaxLength(255)
                    .HasColumnName("EXCHANGE_SERVER");

                entity.Property(e => e.Exchangeid)
                    .HasMaxLength(255)
                    .HasColumnName("EXCHANGEID");

                entity.Property(e => e.Fname)
                    .HasMaxLength(50)
                    .HasColumnName("FNAME");

                entity.Property(e => e.HashedPwd)
                    .HasMaxLength(255)
                    .HasColumnName("HASHED_PWD");

                entity.Property(e => e.Home).HasColumnName("HOME");

                entity.Property(e => e.HomeName)
                    .HasMaxLength(255)
                    .HasColumnName("HOME_NAME");

                entity.Property(e => e.HomeRef)
                    .HasMaxLength(255)
                    .HasColumnName("HOME_REF");

                entity.Property(e => e.HybridDefaultMode).HasColumnName("HYBRID_DEFAULT_MODE");

                entity.Property(e => e.HybridEnabled).HasColumnName("HYBRID_ENABLED");

                entity.Property(e => e.IsActionCentrePinned).HasColumnName("IS_ACTION_CENTRE_PINNED");

                entity.Property(e => e.IsMenuExpanded).HasColumnName("IS_MENU_EXPANDED");

                entity.Property(e => e.Lang)
                    .HasMaxLength(32)
                    .HasColumnName("LANG");

                entity.Property(e => e.LangId).HasColumnName("LANG_ID");

                entity.Property(e => e.LastScanned)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_SCANNED");

                entity.Property(e => e.LicenceTypeName)
                    .HasMaxLength(255)
                    .HasColumnName("LICENCE_TYPE_NAME");

                entity.Property(e => e.LivechatEmail)
                    .HasMaxLength(255)
                    .HasColumnName("LIVECHAT_EMAIL");

                entity.Property(e => e.Lname)
                    .HasMaxLength(50)
                    .HasColumnName("LNAME");

                entity.Property(e => e.Manager).HasColumnName("MANAGER");

                entity.Property(e => e.MapsAccess).HasColumnName("MAPS_ACCESS");

                entity.Property(e => e.Mname)
                    .HasMaxLength(50)
                    .HasColumnName("MNAME");

                entity.Property(e => e.MonthlySalesTarget)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("MONTHLY_SALES_TARGET");

                entity.Property(e => e.NoAccess).HasColumnName("NO_ACCESS");

                entity.Property(e => e.NtAccount)
                    .HasMaxLength(100)
                    .HasColumnName("NT_ACCOUNT");

                entity.Property(e => e.NumberFormat)
                    .HasMaxLength(25)
                    .HasColumnName("NUMBER_FORMAT");

                entity.Property(e => e.PhoneCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_COUNTRY_CODE");

                entity.Property(e => e.PhoneIddCode)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_IDD_CODE");

                entity.Property(e => e.PhoneNddCode)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_NDD_CODE");

                entity.Property(e => e.PhoneOutsideLineCode)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_OUTSIDE_LINE_CODE");

                entity.Property(e => e.PhoneSettings)
                    .HasMaxLength(500)
                    .HasColumnName("PHONE_SETTINGS");

                entity.Property(e => e.PrivateEmail).HasColumnName("PRIVATE_EMAIL");

                entity.Property(e => e.RootUser).HasColumnName("ROOT_USER");

                entity.Property(e => e.Sales).HasColumnName("SALES");

                entity.Property(e => e.SetIdPhone).HasColumnName("SET_ID_PHONE");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShowOnAcManager).HasColumnName("SHOW_ON_AC_MANAGER");

                entity.Property(e => e.ShowOnCalendar).HasColumnName("SHOW_ON_CALENDAR");

                entity.Property(e => e.ShowOnSupport).HasColumnName("SHOW_ON_SUPPORT");

                entity.Property(e => e.ShowOnUsers).HasColumnName("SHOW_ON_USERS");

                entity.Property(e => e.SimpleViewMenu).HasColumnName("SIMPLE_VIEW_MENU");

                entity.Property(e => e.SingleWindow).HasColumnName("SINGLE_WINDOW");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TemplateFolder)
                    .HasMaxLength(255)
                    .HasColumnName("TEMPLATE_FOLDER");

                entity.Property(e => e.TimeDiff).HasColumnName("TIME_DIFF");

                entity.Property(e => e.TimeZone)
                    .HasMaxLength(255)
                    .HasColumnName("TIME_ZONE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsCulture).HasColumnName("US_CULTURE");

                entity.Property(e => e.UsDeleted).HasColumnName("US_DELETED");

                entity.Property(e => e.UsExternal)
                    .HasMaxLength(255)
                    .HasColumnName("US_EXTERNAL");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsIdDeleted).HasColumnName("US_ID_DELETED");

                entity.Property(e => e.UsUd1)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD1");

                entity.Property(e => e.UsUd10)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD10");

                entity.Property(e => e.UsUd10Bit).HasColumnName("US_UD10_BIT");

                entity.Property(e => e.UsUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD10_DATE");

                entity.Property(e => e.UsUd10Id).HasColumnName("US_UD10_ID");

                entity.Property(e => e.UsUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD10_ID_NAME");

                entity.Property(e => e.UsUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd10Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD10_NUMERIC");

                entity.Property(e => e.UsUd11)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD11");

                entity.Property(e => e.UsUd11Bit).HasColumnName("US_UD11_BIT");

                entity.Property(e => e.UsUd12)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD12");

                entity.Property(e => e.UsUd12Bit).HasColumnName("US_UD12_BIT");

                entity.Property(e => e.UsUd13)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD13");

                entity.Property(e => e.UsUd13Bit).HasColumnName("US_UD13_BIT");

                entity.Property(e => e.UsUd14)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD14");

                entity.Property(e => e.UsUd14Bit).HasColumnName("US_UD14_BIT");

                entity.Property(e => e.UsUd15)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD15");

                entity.Property(e => e.UsUd15Bit).HasColumnName("US_UD15_BIT");

                entity.Property(e => e.UsUd16Bit).HasColumnName("US_UD16_BIT");

                entity.Property(e => e.UsUd17Bit).HasColumnName("US_UD17_BIT");

                entity.Property(e => e.UsUd18Bit).HasColumnName("US_UD18_BIT");

                entity.Property(e => e.UsUd19Bit).HasColumnName("US_UD19_BIT");

                entity.Property(e => e.UsUd1Bit).HasColumnName("US_UD1_BIT");

                entity.Property(e => e.UsUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD1_DATE");

                entity.Property(e => e.UsUd1Id).HasColumnName("US_UD1_ID");

                entity.Property(e => e.UsUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD1_ID_NAME");

                entity.Property(e => e.UsUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd1Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD1_NUMERIC");

                entity.Property(e => e.UsUd2)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD2");

                entity.Property(e => e.UsUd20Bit).HasColumnName("US_UD20_BIT");

                entity.Property(e => e.UsUd21Bit).HasColumnName("US_UD21_BIT");

                entity.Property(e => e.UsUd22Bit).HasColumnName("US_UD22_BIT");

                entity.Property(e => e.UsUd23Bit).HasColumnName("US_UD23_BIT");

                entity.Property(e => e.UsUd24Bit).HasColumnName("US_UD24_BIT");

                entity.Property(e => e.UsUd2Bit).HasColumnName("US_UD2_BIT");

                entity.Property(e => e.UsUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD2_DATE");

                entity.Property(e => e.UsUd2Id).HasColumnName("US_UD2_ID");

                entity.Property(e => e.UsUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD2_ID_NAME");

                entity.Property(e => e.UsUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd2Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD2_NUMERIC");

                entity.Property(e => e.UsUd3)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD3");

                entity.Property(e => e.UsUd3Bit).HasColumnName("US_UD3_BIT");

                entity.Property(e => e.UsUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD3_DATE");

                entity.Property(e => e.UsUd3Id).HasColumnName("US_UD3_ID");

                entity.Property(e => e.UsUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD3_ID_NAME");

                entity.Property(e => e.UsUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd3Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD3_NUMERIC");

                entity.Property(e => e.UsUd4)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD4");

                entity.Property(e => e.UsUd4Bit).HasColumnName("US_UD4_BIT");

                entity.Property(e => e.UsUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD4_DATE");

                entity.Property(e => e.UsUd4Id).HasColumnName("US_UD4_ID");

                entity.Property(e => e.UsUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD4_ID_NAME");

                entity.Property(e => e.UsUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd4Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD4_NUMERIC");

                entity.Property(e => e.UsUd5)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD5");

                entity.Property(e => e.UsUd5Bit).HasColumnName("US_UD5_BIT");

                entity.Property(e => e.UsUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD5_DATE");

                entity.Property(e => e.UsUd5Id).HasColumnName("US_UD5_ID");

                entity.Property(e => e.UsUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD5_ID_NAME");

                entity.Property(e => e.UsUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd5Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD5_NUMERIC");

                entity.Property(e => e.UsUd6)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD6");

                entity.Property(e => e.UsUd6Bit).HasColumnName("US_UD6_BIT");

                entity.Property(e => e.UsUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD6_DATE");

                entity.Property(e => e.UsUd6Id).HasColumnName("US_UD6_ID");

                entity.Property(e => e.UsUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD6_ID_NAME");

                entity.Property(e => e.UsUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd6Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD6_NUMERIC");

                entity.Property(e => e.UsUd7)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD7");

                entity.Property(e => e.UsUd7Bit).HasColumnName("US_UD7_BIT");

                entity.Property(e => e.UsUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD7_DATE");

                entity.Property(e => e.UsUd7Id).HasColumnName("US_UD7_ID");

                entity.Property(e => e.UsUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD7_ID_NAME");

                entity.Property(e => e.UsUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd7Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD7_NUMERIC");

                entity.Property(e => e.UsUd8)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD8");

                entity.Property(e => e.UsUd8Bit).HasColumnName("US_UD8_BIT");

                entity.Property(e => e.UsUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD8_DATE");

                entity.Property(e => e.UsUd8Id).HasColumnName("US_UD8_ID");

                entity.Property(e => e.UsUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD8_ID_NAME");

                entity.Property(e => e.UsUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd8Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD8_NUMERIC");

                entity.Property(e => e.UsUd9)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD9");

                entity.Property(e => e.UsUd9Bit).HasColumnName("US_UD9_BIT");

                entity.Property(e => e.UsUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD9_DATE");

                entity.Property(e => e.UsUd9Id).HasColumnName("US_UD9_ID");

                entity.Property(e => e.UsUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD9_ID_NAME");

                entity.Property(e => e.UsUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd9Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD9_NUMERIC");

                entity.Property(e => e.UseWordMailMerge).HasColumnName("USE_WORD_MAIL_MERGE");

                entity.Property(e => e.UserDepartment).HasMaxLength(128);

                entity.Property(e => e.UserDirectPhone).HasMaxLength(32);

                entity.Property(e => e.UserGroupId).HasColumnName("USER_GROUP_ID");

                entity.Property(e => e.UserGroupName)
                    .HasMaxLength(255)
                    .HasColumnName("USER_GROUP_NAME");

                entity.Property(e => e.UserJobTitle).HasMaxLength(128);

                entity.Property(e => e.UserMobileTelephone).HasMaxLength(32);

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");
            });

            modelBuilder.Entity<VUsersInvite>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUsersInvite");

                entity.Property(e => e.AName)
                    .HasMaxLength(255)
                    .HasColumnName("A_NAME");

                entity.Property(e => e.ARef)
                    .HasMaxLength(255)
                    .HasColumnName("A_REF");

                entity.Property(e => e.AccessAdmin).HasColumnName("ACCESS_ADMIN");

                entity.Property(e => e.AccessEnabled).HasColumnName("ACCESS_ENABLED");

                entity.Property(e => e.AcoTeamId).HasColumnName("ACO_TEAM_ID");

                entity.Property(e => e.AddressLookupDetails)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_LOOKUP_DETAILS");

                entity.Property(e => e.Admin).HasColumnName("ADMIN");

                entity.Property(e => e.BName)
                    .HasMaxLength(255)
                    .HasColumnName("B_NAME");

                entity.Property(e => e.BRef)
                    .HasMaxLength(255)
                    .HasColumnName("B_REF");

                entity.Property(e => e.CName)
                    .HasMaxLength(255)
                    .HasColumnName("C_NAME");

                entity.Property(e => e.CRef)
                    .HasMaxLength(255)
                    .HasColumnName("C_REF");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CsIdLatest).HasColumnName("CS_ID_LATEST");

                entity.Property(e => e.CsLatestDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CS_LATEST_DATE");

                entity.Property(e => e.CtId).HasColumnName("CT_ID");

                entity.Property(e => e.CultureCode)
                    .HasMaxLength(10)
                    .HasColumnName("CULTURE_CODE");

                entity.Property(e => e.CurId).HasColumnName("CUR_ID");

                entity.Property(e => e.DateFormat)
                    .HasMaxLength(1)
                    .HasColumnName("DATE_FORMAT");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.Email).HasColumnName("EMAIL");

                entity.Property(e => e.EmailAddress)
                    .HasMaxLength(255)
                    .HasColumnName("EMAIL_ADDRESS");

                entity.Property(e => e.EmailScanAppointments).HasColumnName("EMAIL_SCAN_APPOINTMENTS");

                entity.Property(e => e.EmailScanContacts).HasColumnName("EMAIL_SCAN_CONTACTS");

                entity.Property(e => e.EmailScanDetails)
                    .HasMaxLength(512)
                    .HasColumnName("EMAIL_SCAN_DETAILS");

                entity.Property(e => e.EmailScanEmails).HasColumnName("EMAIL_SCAN_EMAILS");

                entity.Property(e => e.EmailScanExclusions)
                    .HasMaxLength(1024)
                    .HasColumnName("EMAIL_SCAN_EXCLUSIONS");

                entity.Property(e => e.EmailScanFolders)
                    .HasMaxLength(1024)
                    .HasColumnName("EMAIL_SCAN_FOLDERS");

                entity.Property(e => e.EmailScanMaxSensitivity).HasColumnName("EMAIL_SCAN_MAX_SENSITIVITY");

                entity.Property(e => e.EmailScanTasks).HasColumnName("EMAIL_SCAN_TASKS");

                entity.Property(e => e.EnableServerDocProd).HasColumnName("ENABLE_SERVER_DOC_PROD");

                entity.Property(e => e.EsteiroidentSid).HasColumnName("ESTEIROIDENT_SID");

                entity.Property(e => e.ExchangeServer)
                    .HasMaxLength(255)
                    .HasColumnName("EXCHANGE_SERVER");

                entity.Property(e => e.Exchangeid)
                    .HasMaxLength(255)
                    .HasColumnName("EXCHANGEID");

                entity.Property(e => e.Fname)
                    .HasMaxLength(50)
                    .HasColumnName("FNAME");

                entity.Property(e => e.HashedPwd)
                    .HasMaxLength(255)
                    .HasColumnName("HASHED_PWD");

                entity.Property(e => e.Home).HasColumnName("HOME");

                entity.Property(e => e.HomeName)
                    .HasMaxLength(255)
                    .HasColumnName("HOME_NAME");

                entity.Property(e => e.HomeRef)
                    .HasMaxLength(255)
                    .HasColumnName("HOME_REF");

                entity.Property(e => e.HybridDefaultMode).HasColumnName("HYBRID_DEFAULT_MODE");

                entity.Property(e => e.HybridEnabled).HasColumnName("HYBRID_ENABLED");

                entity.Property(e => e.IsActionCentrePinned).HasColumnName("IS_ACTION_CENTRE_PINNED");

                entity.Property(e => e.IsMenuExpanded).HasColumnName("IS_MENU_EXPANDED");

                entity.Property(e => e.Lang)
                    .HasMaxLength(32)
                    .HasColumnName("LANG");

                entity.Property(e => e.LangId).HasColumnName("LANG_ID");

                entity.Property(e => e.LastScanned)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_SCANNED");

                entity.Property(e => e.LicenceType).HasColumnName("LICENCE_TYPE");

                entity.Property(e => e.LicenceTypeName)
                    .HasMaxLength(255)
                    .HasColumnName("LICENCE_TYPE_NAME");

                entity.Property(e => e.LicenceTypeNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("LICENCE_TYPE_NAME_HLIGHT");

                entity.Property(e => e.LivechatEmail)
                    .HasMaxLength(255)
                    .HasColumnName("LIVECHAT_EMAIL");

                entity.Property(e => e.Lname)
                    .HasMaxLength(50)
                    .HasColumnName("LNAME");

                entity.Property(e => e.Manager).HasColumnName("MANAGER");

                entity.Property(e => e.MapsAccess).HasColumnName("MAPS_ACCESS");

                entity.Property(e => e.Mname)
                    .HasMaxLength(50)
                    .HasColumnName("MNAME");

                entity.Property(e => e.MonthlySalesTarget)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("MONTHLY_SALES_TARGET");

                entity.Property(e => e.NoAccess).HasColumnName("NO_ACCESS");

                entity.Property(e => e.NtAccount)
                    .HasMaxLength(100)
                    .HasColumnName("NT_ACCOUNT");

                entity.Property(e => e.NumberFormat)
                    .HasMaxLength(25)
                    .HasColumnName("NUMBER_FORMAT");

                entity.Property(e => e.PhoneCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_COUNTRY_CODE");

                entity.Property(e => e.PhoneIddCode)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_IDD_CODE");

                entity.Property(e => e.PhoneNddCode)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_NDD_CODE");

                entity.Property(e => e.PhoneOutsideLineCode)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_OUTSIDE_LINE_CODE");

                entity.Property(e => e.PhoneSettings)
                    .HasMaxLength(500)
                    .HasColumnName("PHONE_SETTINGS");

                entity.Property(e => e.PrivateEmail).HasColumnName("PRIVATE_EMAIL");

                entity.Property(e => e.RootUser).HasColumnName("ROOT_USER");

                entity.Property(e => e.Sales).HasColumnName("SALES");

                entity.Property(e => e.SetIdPhone).HasColumnName("SET_ID_PHONE");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShowOnAcManager).HasColumnName("SHOW_ON_AC_MANAGER");

                entity.Property(e => e.ShowOnCalendar).HasColumnName("SHOW_ON_CALENDAR");

                entity.Property(e => e.ShowOnSupport).HasColumnName("SHOW_ON_SUPPORT");

                entity.Property(e => e.ShowOnUsers).HasColumnName("SHOW_ON_USERS");

                entity.Property(e => e.SimpleViewMenu).HasColumnName("SIMPLE_VIEW_MENU");

                entity.Property(e => e.SingleWindow).HasColumnName("SINGLE_WINDOW");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TemplateFolder)
                    .HasMaxLength(255)
                    .HasColumnName("TEMPLATE_FOLDER");

                entity.Property(e => e.TimeDiff).HasColumnName("TIME_DIFF");

                entity.Property(e => e.TimeZone)
                    .HasMaxLength(255)
                    .HasColumnName("TIME_ZONE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsCulture).HasColumnName("US_CULTURE");

                entity.Property(e => e.UsDeleted).HasColumnName("US_DELETED");

                entity.Property(e => e.UsExternal)
                    .HasMaxLength(255)
                    .HasColumnName("US_EXTERNAL");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsIdDeleted).HasColumnName("US_ID_DELETED");

                entity.Property(e => e.UsUd1)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD1");

                entity.Property(e => e.UsUd10)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD10");

                entity.Property(e => e.UsUd10Bit).HasColumnName("US_UD10_BIT");

                entity.Property(e => e.UsUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD10_DATE");

                entity.Property(e => e.UsUd10Id).HasColumnName("US_UD10_ID");

                entity.Property(e => e.UsUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD10_ID_NAME");

                entity.Property(e => e.UsUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd10Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD10_NUMERIC");

                entity.Property(e => e.UsUd11)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD11");

                entity.Property(e => e.UsUd11Bit).HasColumnName("US_UD11_BIT");

                entity.Property(e => e.UsUd12)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD12");

                entity.Property(e => e.UsUd12Bit).HasColumnName("US_UD12_BIT");

                entity.Property(e => e.UsUd13)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD13");

                entity.Property(e => e.UsUd13Bit).HasColumnName("US_UD13_BIT");

                entity.Property(e => e.UsUd14)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD14");

                entity.Property(e => e.UsUd14Bit).HasColumnName("US_UD14_BIT");

                entity.Property(e => e.UsUd15)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD15");

                entity.Property(e => e.UsUd15Bit).HasColumnName("US_UD15_BIT");

                entity.Property(e => e.UsUd16Bit).HasColumnName("US_UD16_BIT");

                entity.Property(e => e.UsUd17Bit).HasColumnName("US_UD17_BIT");

                entity.Property(e => e.UsUd18Bit).HasColumnName("US_UD18_BIT");

                entity.Property(e => e.UsUd19Bit).HasColumnName("US_UD19_BIT");

                entity.Property(e => e.UsUd1Bit).HasColumnName("US_UD1_BIT");

                entity.Property(e => e.UsUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD1_DATE");

                entity.Property(e => e.UsUd1Id).HasColumnName("US_UD1_ID");

                entity.Property(e => e.UsUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD1_ID_NAME");

                entity.Property(e => e.UsUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd1Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD1_NUMERIC");

                entity.Property(e => e.UsUd2)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD2");

                entity.Property(e => e.UsUd20Bit).HasColumnName("US_UD20_BIT");

                entity.Property(e => e.UsUd21Bit).HasColumnName("US_UD21_BIT");

                entity.Property(e => e.UsUd22Bit).HasColumnName("US_UD22_BIT");

                entity.Property(e => e.UsUd23Bit).HasColumnName("US_UD23_BIT");

                entity.Property(e => e.UsUd24Bit).HasColumnName("US_UD24_BIT");

                entity.Property(e => e.UsUd2Bit).HasColumnName("US_UD2_BIT");

                entity.Property(e => e.UsUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD2_DATE");

                entity.Property(e => e.UsUd2Id).HasColumnName("US_UD2_ID");

                entity.Property(e => e.UsUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD2_ID_NAME");

                entity.Property(e => e.UsUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd2Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD2_NUMERIC");

                entity.Property(e => e.UsUd3)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD3");

                entity.Property(e => e.UsUd3Bit).HasColumnName("US_UD3_BIT");

                entity.Property(e => e.UsUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD3_DATE");

                entity.Property(e => e.UsUd3Id).HasColumnName("US_UD3_ID");

                entity.Property(e => e.UsUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD3_ID_NAME");

                entity.Property(e => e.UsUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd3Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD3_NUMERIC");

                entity.Property(e => e.UsUd4)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD4");

                entity.Property(e => e.UsUd4Bit).HasColumnName("US_UD4_BIT");

                entity.Property(e => e.UsUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD4_DATE");

                entity.Property(e => e.UsUd4Id).HasColumnName("US_UD4_ID");

                entity.Property(e => e.UsUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD4_ID_NAME");

                entity.Property(e => e.UsUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd4Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD4_NUMERIC");

                entity.Property(e => e.UsUd5)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD5");

                entity.Property(e => e.UsUd5Bit).HasColumnName("US_UD5_BIT");

                entity.Property(e => e.UsUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD5_DATE");

                entity.Property(e => e.UsUd5Id).HasColumnName("US_UD5_ID");

                entity.Property(e => e.UsUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD5_ID_NAME");

                entity.Property(e => e.UsUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd5Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD5_NUMERIC");

                entity.Property(e => e.UsUd6)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD6");

                entity.Property(e => e.UsUd6Bit).HasColumnName("US_UD6_BIT");

                entity.Property(e => e.UsUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD6_DATE");

                entity.Property(e => e.UsUd6Id).HasColumnName("US_UD6_ID");

                entity.Property(e => e.UsUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD6_ID_NAME");

                entity.Property(e => e.UsUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd6Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD6_NUMERIC");

                entity.Property(e => e.UsUd7)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD7");

                entity.Property(e => e.UsUd7Bit).HasColumnName("US_UD7_BIT");

                entity.Property(e => e.UsUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD7_DATE");

                entity.Property(e => e.UsUd7Id).HasColumnName("US_UD7_ID");

                entity.Property(e => e.UsUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD7_ID_NAME");

                entity.Property(e => e.UsUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd7Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD7_NUMERIC");

                entity.Property(e => e.UsUd8)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD8");

                entity.Property(e => e.UsUd8Bit).HasColumnName("US_UD8_BIT");

                entity.Property(e => e.UsUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD8_DATE");

                entity.Property(e => e.UsUd8Id).HasColumnName("US_UD8_ID");

                entity.Property(e => e.UsUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD8_ID_NAME");

                entity.Property(e => e.UsUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd8Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD8_NUMERIC");

                entity.Property(e => e.UsUd9)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD9");

                entity.Property(e => e.UsUd9Bit).HasColumnName("US_UD9_BIT");

                entity.Property(e => e.UsUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD9_DATE");

                entity.Property(e => e.UsUd9Id).HasColumnName("US_UD9_ID");

                entity.Property(e => e.UsUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD9_ID_NAME");

                entity.Property(e => e.UsUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd9Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD9_NUMERIC");

                entity.Property(e => e.UseWordMailMerge).HasColumnName("USE_WORD_MAIL_MERGE");

                entity.Property(e => e.UserDepartment).HasMaxLength(128);

                entity.Property(e => e.UserDirectPhone).HasMaxLength(32);

                entity.Property(e => e.UserGroupId).HasColumnName("USER_GROUP_ID");

                entity.Property(e => e.UserGroupName)
                    .HasMaxLength(255)
                    .HasColumnName("USER_GROUP_NAME");

                entity.Property(e => e.UserJobTitle).HasMaxLength(128);

                entity.Property(e => e.UserMobileTelephone).HasMaxLength(32);

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");
            });

            modelBuilder.Entity<VUsersSupport>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUsersSupport");

                entity.Property(e => e.AName)
                    .HasMaxLength(255)
                    .HasColumnName("A_NAME");

                entity.Property(e => e.ARef)
                    .HasMaxLength(255)
                    .HasColumnName("A_REF");

                entity.Property(e => e.AccessAdmin).HasColumnName("ACCESS_ADMIN");

                entity.Property(e => e.AccessEnabled).HasColumnName("ACCESS_ENABLED");

                entity.Property(e => e.AcoTeamId).HasColumnName("ACO_TEAM_ID");

                entity.Property(e => e.AddressLookupDetails)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_LOOKUP_DETAILS");

                entity.Property(e => e.Admin).HasColumnName("ADMIN");

                entity.Property(e => e.BName)
                    .HasMaxLength(255)
                    .HasColumnName("B_NAME");

                entity.Property(e => e.BRef)
                    .HasMaxLength(255)
                    .HasColumnName("B_REF");

                entity.Property(e => e.CName)
                    .HasMaxLength(255)
                    .HasColumnName("C_NAME");

                entity.Property(e => e.CRef)
                    .HasMaxLength(255)
                    .HasColumnName("C_REF");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CsIdLatest).HasColumnName("CS_ID_LATEST");

                entity.Property(e => e.CsLatestDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CS_LATEST_DATE");

                entity.Property(e => e.CtId).HasColumnName("CT_ID");

                entity.Property(e => e.CultureCode)
                    .HasMaxLength(10)
                    .HasColumnName("CULTURE_CODE");

                entity.Property(e => e.CurId).HasColumnName("CUR_ID");

                entity.Property(e => e.DateFormat)
                    .HasMaxLength(1)
                    .HasColumnName("DATE_FORMAT");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.Email).HasColumnName("EMAIL");

                entity.Property(e => e.EmailAddress)
                    .HasMaxLength(255)
                    .HasColumnName("EMAIL_ADDRESS");

                entity.Property(e => e.EmailScanAppointments).HasColumnName("EMAIL_SCAN_APPOINTMENTS");

                entity.Property(e => e.EmailScanContacts).HasColumnName("EMAIL_SCAN_CONTACTS");

                entity.Property(e => e.EmailScanDetails)
                    .HasMaxLength(512)
                    .HasColumnName("EMAIL_SCAN_DETAILS");

                entity.Property(e => e.EmailScanEmails).HasColumnName("EMAIL_SCAN_EMAILS");

                entity.Property(e => e.EmailScanExclusions)
                    .HasMaxLength(1024)
                    .HasColumnName("EMAIL_SCAN_EXCLUSIONS");

                entity.Property(e => e.EmailScanFolders)
                    .HasMaxLength(1024)
                    .HasColumnName("EMAIL_SCAN_FOLDERS");

                entity.Property(e => e.EmailScanMaxSensitivity).HasColumnName("EMAIL_SCAN_MAX_SENSITIVITY");

                entity.Property(e => e.EmailScanTasks).HasColumnName("EMAIL_SCAN_TASKS");

                entity.Property(e => e.EnableServerDocProd).HasColumnName("ENABLE_SERVER_DOC_PROD");

                entity.Property(e => e.EsteiroidentSid).HasColumnName("ESTEIROIDENT_SID");

                entity.Property(e => e.ExchangeServer)
                    .HasMaxLength(255)
                    .HasColumnName("EXCHANGE_SERVER");

                entity.Property(e => e.Exchangeid)
                    .HasMaxLength(255)
                    .HasColumnName("EXCHANGEID");

                entity.Property(e => e.Fname)
                    .HasMaxLength(50)
                    .HasColumnName("FNAME");

                entity.Property(e => e.HashedPwd)
                    .HasMaxLength(255)
                    .HasColumnName("HASHED_PWD");

                entity.Property(e => e.Home).HasColumnName("HOME");

                entity.Property(e => e.HomeName)
                    .HasMaxLength(255)
                    .HasColumnName("HOME_NAME");

                entity.Property(e => e.HomeRef)
                    .HasMaxLength(255)
                    .HasColumnName("HOME_REF");

                entity.Property(e => e.HybridDefaultMode).HasColumnName("HYBRID_DEFAULT_MODE");

                entity.Property(e => e.HybridEnabled).HasColumnName("HYBRID_ENABLED");

                entity.Property(e => e.IsActionCentrePinned).HasColumnName("IS_ACTION_CENTRE_PINNED");

                entity.Property(e => e.IsMenuExpanded).HasColumnName("IS_MENU_EXPANDED");

                entity.Property(e => e.Lang)
                    .HasMaxLength(32)
                    .HasColumnName("LANG");

                entity.Property(e => e.LangId).HasColumnName("LANG_ID");

                entity.Property(e => e.LastScanned)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_SCANNED");

                entity.Property(e => e.LicenceType).HasColumnName("LICENCE_TYPE");

                entity.Property(e => e.LicenceTypeName)
                    .HasMaxLength(255)
                    .HasColumnName("LICENCE_TYPE_NAME");

                entity.Property(e => e.LicenceTypeNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("LICENCE_TYPE_NAME_HLIGHT");

                entity.Property(e => e.LivechatEmail)
                    .HasMaxLength(255)
                    .HasColumnName("LIVECHAT_EMAIL");

                entity.Property(e => e.Lname)
                    .HasMaxLength(50)
                    .HasColumnName("LNAME");

                entity.Property(e => e.Manager).HasColumnName("MANAGER");

                entity.Property(e => e.MapsAccess).HasColumnName("MAPS_ACCESS");

                entity.Property(e => e.Mname)
                    .HasMaxLength(50)
                    .HasColumnName("MNAME");

                entity.Property(e => e.MonthlySalesTarget)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("MONTHLY_SALES_TARGET");

                entity.Property(e => e.NoAccess).HasColumnName("NO_ACCESS");

                entity.Property(e => e.NtAccount)
                    .HasMaxLength(100)
                    .HasColumnName("NT_ACCOUNT");

                entity.Property(e => e.NumberFormat)
                    .HasMaxLength(25)
                    .HasColumnName("NUMBER_FORMAT");

                entity.Property(e => e.PhoneCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_COUNTRY_CODE");

                entity.Property(e => e.PhoneIddCode)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_IDD_CODE");

                entity.Property(e => e.PhoneNddCode)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_NDD_CODE");

                entity.Property(e => e.PhoneOutsideLineCode)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_OUTSIDE_LINE_CODE");

                entity.Property(e => e.PhoneSettings)
                    .HasMaxLength(500)
                    .HasColumnName("PHONE_SETTINGS");

                entity.Property(e => e.PrivateEmail).HasColumnName("PRIVATE_EMAIL");

                entity.Property(e => e.RootUser).HasColumnName("ROOT_USER");

                entity.Property(e => e.Sales).HasColumnName("SALES");

                entity.Property(e => e.SetIdPhone).HasColumnName("SET_ID_PHONE");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShowOnAcManager).HasColumnName("SHOW_ON_AC_MANAGER");

                entity.Property(e => e.ShowOnCalendar).HasColumnName("SHOW_ON_CALENDAR");

                entity.Property(e => e.ShowOnSupport).HasColumnName("SHOW_ON_SUPPORT");

                entity.Property(e => e.ShowOnUsers).HasColumnName("SHOW_ON_USERS");

                entity.Property(e => e.SimpleViewMenu).HasColumnName("SIMPLE_VIEW_MENU");

                entity.Property(e => e.SingleWindow).HasColumnName("SINGLE_WINDOW");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TemplateFolder)
                    .HasMaxLength(255)
                    .HasColumnName("TEMPLATE_FOLDER");

                entity.Property(e => e.TimeDiff).HasColumnName("TIME_DIFF");

                entity.Property(e => e.TimeZone)
                    .HasMaxLength(255)
                    .HasColumnName("TIME_ZONE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsCulture).HasColumnName("US_CULTURE");

                entity.Property(e => e.UsDeleted).HasColumnName("US_DELETED");

                entity.Property(e => e.UsExternal)
                    .HasMaxLength(255)
                    .HasColumnName("US_EXTERNAL");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsIdDeleted).HasColumnName("US_ID_DELETED");

                entity.Property(e => e.UsUd1)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD1");

                entity.Property(e => e.UsUd10)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD10");

                entity.Property(e => e.UsUd10Bit).HasColumnName("US_UD10_BIT");

                entity.Property(e => e.UsUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD10_DATE");

                entity.Property(e => e.UsUd10Id).HasColumnName("US_UD10_ID");

                entity.Property(e => e.UsUd10IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD10_ID_NAME");

                entity.Property(e => e.UsUd10IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD10_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd10Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD10_NUMERIC");

                entity.Property(e => e.UsUd11)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD11");

                entity.Property(e => e.UsUd11Bit).HasColumnName("US_UD11_BIT");

                entity.Property(e => e.UsUd12)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD12");

                entity.Property(e => e.UsUd12Bit).HasColumnName("US_UD12_BIT");

                entity.Property(e => e.UsUd13)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD13");

                entity.Property(e => e.UsUd13Bit).HasColumnName("US_UD13_BIT");

                entity.Property(e => e.UsUd14)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD14");

                entity.Property(e => e.UsUd14Bit).HasColumnName("US_UD14_BIT");

                entity.Property(e => e.UsUd15)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD15");

                entity.Property(e => e.UsUd15Bit).HasColumnName("US_UD15_BIT");

                entity.Property(e => e.UsUd16Bit).HasColumnName("US_UD16_BIT");

                entity.Property(e => e.UsUd17Bit).HasColumnName("US_UD17_BIT");

                entity.Property(e => e.UsUd18Bit).HasColumnName("US_UD18_BIT");

                entity.Property(e => e.UsUd19Bit).HasColumnName("US_UD19_BIT");

                entity.Property(e => e.UsUd1Bit).HasColumnName("US_UD1_BIT");

                entity.Property(e => e.UsUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD1_DATE");

                entity.Property(e => e.UsUd1Id).HasColumnName("US_UD1_ID");

                entity.Property(e => e.UsUd1IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD1_ID_NAME");

                entity.Property(e => e.UsUd1IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD1_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd1Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD1_NUMERIC");

                entity.Property(e => e.UsUd2)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD2");

                entity.Property(e => e.UsUd20Bit).HasColumnName("US_UD20_BIT");

                entity.Property(e => e.UsUd21Bit).HasColumnName("US_UD21_BIT");

                entity.Property(e => e.UsUd22Bit).HasColumnName("US_UD22_BIT");

                entity.Property(e => e.UsUd23Bit).HasColumnName("US_UD23_BIT");

                entity.Property(e => e.UsUd24Bit).HasColumnName("US_UD24_BIT");

                entity.Property(e => e.UsUd2Bit).HasColumnName("US_UD2_BIT");

                entity.Property(e => e.UsUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD2_DATE");

                entity.Property(e => e.UsUd2Id).HasColumnName("US_UD2_ID");

                entity.Property(e => e.UsUd2IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD2_ID_NAME");

                entity.Property(e => e.UsUd2IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD2_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd2Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD2_NUMERIC");

                entity.Property(e => e.UsUd3)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD3");

                entity.Property(e => e.UsUd3Bit).HasColumnName("US_UD3_BIT");

                entity.Property(e => e.UsUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD3_DATE");

                entity.Property(e => e.UsUd3Id).HasColumnName("US_UD3_ID");

                entity.Property(e => e.UsUd3IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD3_ID_NAME");

                entity.Property(e => e.UsUd3IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD3_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd3Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD3_NUMERIC");

                entity.Property(e => e.UsUd4)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD4");

                entity.Property(e => e.UsUd4Bit).HasColumnName("US_UD4_BIT");

                entity.Property(e => e.UsUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD4_DATE");

                entity.Property(e => e.UsUd4Id).HasColumnName("US_UD4_ID");

                entity.Property(e => e.UsUd4IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD4_ID_NAME");

                entity.Property(e => e.UsUd4IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD4_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd4Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD4_NUMERIC");

                entity.Property(e => e.UsUd5)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD5");

                entity.Property(e => e.UsUd5Bit).HasColumnName("US_UD5_BIT");

                entity.Property(e => e.UsUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD5_DATE");

                entity.Property(e => e.UsUd5Id).HasColumnName("US_UD5_ID");

                entity.Property(e => e.UsUd5IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD5_ID_NAME");

                entity.Property(e => e.UsUd5IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD5_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd5Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD5_NUMERIC");

                entity.Property(e => e.UsUd6)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD6");

                entity.Property(e => e.UsUd6Bit).HasColumnName("US_UD6_BIT");

                entity.Property(e => e.UsUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD6_DATE");

                entity.Property(e => e.UsUd6Id).HasColumnName("US_UD6_ID");

                entity.Property(e => e.UsUd6IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD6_ID_NAME");

                entity.Property(e => e.UsUd6IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD6_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd6Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD6_NUMERIC");

                entity.Property(e => e.UsUd7)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD7");

                entity.Property(e => e.UsUd7Bit).HasColumnName("US_UD7_BIT");

                entity.Property(e => e.UsUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD7_DATE");

                entity.Property(e => e.UsUd7Id).HasColumnName("US_UD7_ID");

                entity.Property(e => e.UsUd7IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD7_ID_NAME");

                entity.Property(e => e.UsUd7IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD7_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd7Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD7_NUMERIC");

                entity.Property(e => e.UsUd8)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD8");

                entity.Property(e => e.UsUd8Bit).HasColumnName("US_UD8_BIT");

                entity.Property(e => e.UsUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD8_DATE");

                entity.Property(e => e.UsUd8Id).HasColumnName("US_UD8_ID");

                entity.Property(e => e.UsUd8IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD8_ID_NAME");

                entity.Property(e => e.UsUd8IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD8_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd8Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD8_NUMERIC");

                entity.Property(e => e.UsUd9)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD9");

                entity.Property(e => e.UsUd9Bit).HasColumnName("US_UD9_BIT");

                entity.Property(e => e.UsUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD9_DATE");

                entity.Property(e => e.UsUd9Id).HasColumnName("US_UD9_ID");

                entity.Property(e => e.UsUd9IdName)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD9_ID_NAME");

                entity.Property(e => e.UsUd9IdNameHlight)
                    .HasMaxLength(100)
                    .HasColumnName("US_UD9_ID_NAME_HLIGHT");

                entity.Property(e => e.UsUd9Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD9_NUMERIC");

                entity.Property(e => e.UseWordMailMerge).HasColumnName("USE_WORD_MAIL_MERGE");

                entity.Property(e => e.UserDepartment).HasMaxLength(128);

                entity.Property(e => e.UserDirectPhone).HasMaxLength(32);

                entity.Property(e => e.UserGroupId).HasColumnName("USER_GROUP_ID");

                entity.Property(e => e.UserGroupName)
                    .HasMaxLength(255)
                    .HasColumnName("USER_GROUP_NAME");

                entity.Property(e => e.UserJobTitle).HasMaxLength(128);

                entity.Property(e => e.UserMobileTelephone).HasMaxLength(32);

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");
            });

            modelBuilder.Entity<VUsersTask>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUsersTasks");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccId).HasColumnName("ACC_ID");

                entity.Property(e => e.BillingInformation)
                    .HasMaxLength(10)
                    .HasColumnName("BILLING_INFORMATION")
                    .IsFixedLength(true);

                entity.Property(e => e.Companies)
                    .HasMaxLength(255)
                    .HasColumnName("COMPANIES");

                entity.Property(e => e.Contacts)
                    .HasMaxLength(255)
                    .HasColumnName("CONTACTS");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DateCompleted)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_COMPLETED");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.DueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DUE_DATE");

                entity.Property(e => e.InUpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("IN_UPDATED_DATE");

                entity.Property(e => e.OutUpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("OUT_UPDATED_DATE");

                entity.Property(e => e.Owner)
                    .HasMaxLength(50)
                    .HasColumnName("OWNER");

                entity.Property(e => e.PercentComplete)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("PERCENT_COMPLETE");

                entity.Property(e => e.Priority)
                    .HasMaxLength(50)
                    .HasColumnName("PRIORITY");

                entity.Property(e => e.Private).HasColumnName("PRIVATE");

                entity.Property(e => e.RefId).HasColumnName("REF_ID");

                entity.Property(e => e.RefTable)
                    .IsRequired()
                    .HasMaxLength(5)
                    .HasColumnName("REF_TABLE")
                    .IsFixedLength(true);

                entity.Property(e => e.Sensitivity)
                    .HasMaxLength(50)
                    .HasColumnName("SENSITIVITY");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("START_DATE");

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .HasColumnName("STATUS");

                entity.Property(e => e.Subject)
                    .HasMaxLength(255)
                    .HasColumnName("SUBJECT");

                entity.Property(e => e.Synchronised).HasColumnName("SYNCHRONISED");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UstDeleted).HasColumnName("UST_DELETED");

                entity.Property(e => e.UstId).HasColumnName("UST_ID");

                entity.Property(e => e.UstMapiId)
                    .HasMaxLength(350)
                    .HasColumnName("UST_MAPI_ID");

                entity.Property(e => e.UstStoreId)
                    .HasMaxLength(800)
                    .HasColumnName("UST_STORE_ID");
            });

            modelBuilder.Entity<VUsersWithDeleted>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUsersWithDeleted");

                entity.Property(e => e.AName)
                    .HasMaxLength(255)
                    .HasColumnName("A_NAME");

                entity.Property(e => e.ARef)
                    .HasMaxLength(255)
                    .HasColumnName("A_REF");

                entity.Property(e => e.AccessAdmin).HasColumnName("ACCESS_ADMIN");

                entity.Property(e => e.AccessEnabled).HasColumnName("ACCESS_ENABLED");

                entity.Property(e => e.AcoTeamId).HasColumnName("ACO_TEAM_ID");

                entity.Property(e => e.AddressLookupDetails)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_LOOKUP_DETAILS");

                entity.Property(e => e.Admin).HasColumnName("ADMIN");

                entity.Property(e => e.BName)
                    .HasMaxLength(255)
                    .HasColumnName("B_NAME");

                entity.Property(e => e.BRef)
                    .HasMaxLength(255)
                    .HasColumnName("B_REF");

                entity.Property(e => e.CName)
                    .HasMaxLength(255)
                    .HasColumnName("C_NAME");

                entity.Property(e => e.CRef)
                    .HasMaxLength(255)
                    .HasColumnName("C_REF");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CsIdLatest).HasColumnName("CS_ID_LATEST");

                entity.Property(e => e.CsLatestDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CS_LATEST_DATE");

                entity.Property(e => e.CtId).HasColumnName("CT_ID");

                entity.Property(e => e.CultureCode)
                    .HasMaxLength(10)
                    .HasColumnName("CULTURE_CODE");

                entity.Property(e => e.CurId).HasColumnName("CUR_ID");

                entity.Property(e => e.DateFormat)
                    .HasMaxLength(1)
                    .HasColumnName("DATE_FORMAT");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Details).HasColumnName("DETAILS");

                entity.Property(e => e.Email).HasColumnName("EMAIL");

                entity.Property(e => e.EmailAddress)
                    .HasMaxLength(255)
                    .HasColumnName("EMAIL_ADDRESS");

                entity.Property(e => e.EmailScanAppointments).HasColumnName("EMAIL_SCAN_APPOINTMENTS");

                entity.Property(e => e.EmailScanContacts).HasColumnName("EMAIL_SCAN_CONTACTS");

                entity.Property(e => e.EmailScanDetails)
                    .HasMaxLength(512)
                    .HasColumnName("EMAIL_SCAN_DETAILS");

                entity.Property(e => e.EmailScanEmails).HasColumnName("EMAIL_SCAN_EMAILS");

                entity.Property(e => e.EmailScanExclusions)
                    .HasMaxLength(1024)
                    .HasColumnName("EMAIL_SCAN_EXCLUSIONS");

                entity.Property(e => e.EmailScanFolders)
                    .HasMaxLength(1024)
                    .HasColumnName("EMAIL_SCAN_FOLDERS");

                entity.Property(e => e.EmailScanMaxSensitivity).HasColumnName("EMAIL_SCAN_MAX_SENSITIVITY");

                entity.Property(e => e.EmailScanTasks).HasColumnName("EMAIL_SCAN_TASKS");

                entity.Property(e => e.EnableServerDocProd).HasColumnName("ENABLE_SERVER_DOC_PROD");

                entity.Property(e => e.EsteiroidentSid).HasColumnName("ESTEIROIDENT_SID");

                entity.Property(e => e.ExchangeServer)
                    .HasMaxLength(255)
                    .HasColumnName("EXCHANGE_SERVER");

                entity.Property(e => e.Exchangeid)
                    .HasMaxLength(255)
                    .HasColumnName("EXCHANGEID");

                entity.Property(e => e.Fname)
                    .HasMaxLength(50)
                    .HasColumnName("FNAME");

                entity.Property(e => e.HashedPwd)
                    .HasMaxLength(255)
                    .HasColumnName("HASHED_PWD");

                entity.Property(e => e.Home).HasColumnName("HOME");

                entity.Property(e => e.HomeName)
                    .HasMaxLength(255)
                    .HasColumnName("HOME_NAME");

                entity.Property(e => e.HomeRef)
                    .HasMaxLength(255)
                    .HasColumnName("HOME_REF");

                entity.Property(e => e.HybridDefaultMode).HasColumnName("HYBRID_DEFAULT_MODE");

                entity.Property(e => e.HybridEnabled).HasColumnName("HYBRID_ENABLED");

                entity.Property(e => e.IsActionCentrePinned).HasColumnName("IS_ACTION_CENTRE_PINNED");

                entity.Property(e => e.IsMenuExpanded).HasColumnName("IS_MENU_EXPANDED");

                entity.Property(e => e.Lang)
                    .HasMaxLength(32)
                    .HasColumnName("LANG");

                entity.Property(e => e.LangId).HasColumnName("LANG_ID");

                entity.Property(e => e.LastScanned)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_SCANNED");

                entity.Property(e => e.LicenceType).HasColumnName("LICENCE_TYPE");

                entity.Property(e => e.LivechatEmail)
                    .HasMaxLength(255)
                    .HasColumnName("LIVECHAT_EMAIL");

                entity.Property(e => e.Lname)
                    .HasMaxLength(50)
                    .HasColumnName("LNAME");

                entity.Property(e => e.Manager).HasColumnName("MANAGER");

                entity.Property(e => e.MapsAccess).HasColumnName("MAPS_ACCESS");

                entity.Property(e => e.Mname)
                    .HasMaxLength(50)
                    .HasColumnName("MNAME");

                entity.Property(e => e.MonthlySalesTarget)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("MONTHLY_SALES_TARGET");

                entity.Property(e => e.NtAccount)
                    .HasMaxLength(100)
                    .HasColumnName("NT_ACCOUNT");

                entity.Property(e => e.NumberFormat)
                    .HasMaxLength(25)
                    .HasColumnName("NUMBER_FORMAT");

                entity.Property(e => e.PhoneCountry)
                    .HasMaxLength(255)
                    .HasColumnName("PHONE_COUNTRY");

                entity.Property(e => e.PhoneCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_COUNTRY_CODE");

                entity.Property(e => e.PhoneIddCode)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_IDD_CODE");

                entity.Property(e => e.PhoneNddCode)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_NDD_CODE");

                entity.Property(e => e.PhoneOutsideLineCode)
                    .HasMaxLength(50)
                    .HasColumnName("PHONE_OUTSIDE_LINE_CODE");

                entity.Property(e => e.PrivateEmail).HasColumnName("PRIVATE_EMAIL");

                entity.Property(e => e.RootUser).HasColumnName("ROOT_USER");

                entity.Property(e => e.Sales).HasColumnName("SALES");

                entity.Property(e => e.SetIdPhone).HasColumnName("SET_ID_PHONE");

                entity.Property(e => e.ShowOnAcManager).HasColumnName("SHOW_ON_AC_MANAGER");

                entity.Property(e => e.ShowOnCalendar).HasColumnName("SHOW_ON_CALENDAR");

                entity.Property(e => e.ShowOnSupport).HasColumnName("SHOW_ON_SUPPORT");

                entity.Property(e => e.ShowOnUsers).HasColumnName("SHOW_ON_USERS");

                entity.Property(e => e.SimpleViewMenu).HasColumnName("SIMPLE_VIEW_MENU");

                entity.Property(e => e.SingleWindow).HasColumnName("SINGLE_WINDOW");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TemplateFolder)
                    .HasMaxLength(255)
                    .HasColumnName("TEMPLATE_FOLDER");

                entity.Property(e => e.TimeDiff).HasColumnName("TIME_DIFF");

                entity.Property(e => e.TimeZone)
                    .HasMaxLength(255)
                    .HasColumnName("TIME_ZONE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsCulture).HasColumnName("US_CULTURE");

                entity.Property(e => e.UsDeleted).HasColumnName("US_DELETED");

                entity.Property(e => e.UsDeletedSafe).HasColumnName("US_DELETED_SAFE");

                entity.Property(e => e.UsExternal)
                    .HasMaxLength(255)
                    .HasColumnName("US_EXTERNAL");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsSummaryDel)
                    .HasMaxLength(265)
                    .HasColumnName("US_SUMMARY_DEL");

                entity.Property(e => e.UsUd1)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD1");

                entity.Property(e => e.UsUd10)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD10");

                entity.Property(e => e.UsUd10Bit).HasColumnName("US_UD10_BIT");

                entity.Property(e => e.UsUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD10_DATE");

                entity.Property(e => e.UsUd10Id).HasColumnName("US_UD10_ID");

                entity.Property(e => e.UsUd10Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD10_NUMERIC");

                entity.Property(e => e.UsUd11)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD11");

                entity.Property(e => e.UsUd11Bit).HasColumnName("US_UD11_BIT");

                entity.Property(e => e.UsUd12)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD12");

                entity.Property(e => e.UsUd12Bit).HasColumnName("US_UD12_BIT");

                entity.Property(e => e.UsUd13)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD13");

                entity.Property(e => e.UsUd13Bit).HasColumnName("US_UD13_BIT");

                entity.Property(e => e.UsUd14)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD14");

                entity.Property(e => e.UsUd14Bit).HasColumnName("US_UD14_BIT");

                entity.Property(e => e.UsUd15)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD15");

                entity.Property(e => e.UsUd15Bit).HasColumnName("US_UD15_BIT");

                entity.Property(e => e.UsUd16Bit).HasColumnName("US_UD16_BIT");

                entity.Property(e => e.UsUd17Bit).HasColumnName("US_UD17_BIT");

                entity.Property(e => e.UsUd18Bit).HasColumnName("US_UD18_BIT");

                entity.Property(e => e.UsUd19Bit).HasColumnName("US_UD19_BIT");

                entity.Property(e => e.UsUd1Bit).HasColumnName("US_UD1_BIT");

                entity.Property(e => e.UsUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD1_DATE");

                entity.Property(e => e.UsUd1Id).HasColumnName("US_UD1_ID");

                entity.Property(e => e.UsUd1Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD1_NUMERIC");

                entity.Property(e => e.UsUd2)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD2");

                entity.Property(e => e.UsUd20Bit).HasColumnName("US_UD20_BIT");

                entity.Property(e => e.UsUd21Bit).HasColumnName("US_UD21_BIT");

                entity.Property(e => e.UsUd22Bit).HasColumnName("US_UD22_BIT");

                entity.Property(e => e.UsUd23Bit).HasColumnName("US_UD23_BIT");

                entity.Property(e => e.UsUd24Bit).HasColumnName("US_UD24_BIT");

                entity.Property(e => e.UsUd2Bit).HasColumnName("US_UD2_BIT");

                entity.Property(e => e.UsUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD2_DATE");

                entity.Property(e => e.UsUd2Id).HasColumnName("US_UD2_ID");

                entity.Property(e => e.UsUd2Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD2_NUMERIC");

                entity.Property(e => e.UsUd3)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD3");

                entity.Property(e => e.UsUd3Bit).HasColumnName("US_UD3_BIT");

                entity.Property(e => e.UsUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD3_DATE");

                entity.Property(e => e.UsUd3Id).HasColumnName("US_UD3_ID");

                entity.Property(e => e.UsUd3Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD3_NUMERIC");

                entity.Property(e => e.UsUd4)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD4");

                entity.Property(e => e.UsUd4Bit).HasColumnName("US_UD4_BIT");

                entity.Property(e => e.UsUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD4_DATE");

                entity.Property(e => e.UsUd4Id).HasColumnName("US_UD4_ID");

                entity.Property(e => e.UsUd4Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD4_NUMERIC");

                entity.Property(e => e.UsUd5)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD5");

                entity.Property(e => e.UsUd5Bit).HasColumnName("US_UD5_BIT");

                entity.Property(e => e.UsUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD5_DATE");

                entity.Property(e => e.UsUd5Id).HasColumnName("US_UD5_ID");

                entity.Property(e => e.UsUd5Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD5_NUMERIC");

                entity.Property(e => e.UsUd6)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD6");

                entity.Property(e => e.UsUd6Bit).HasColumnName("US_UD6_BIT");

                entity.Property(e => e.UsUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD6_DATE");

                entity.Property(e => e.UsUd6Id).HasColumnName("US_UD6_ID");

                entity.Property(e => e.UsUd6Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD6_NUMERIC");

                entity.Property(e => e.UsUd7)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD7");

                entity.Property(e => e.UsUd7Bit).HasColumnName("US_UD7_BIT");

                entity.Property(e => e.UsUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD7_DATE");

                entity.Property(e => e.UsUd7Id).HasColumnName("US_UD7_ID");

                entity.Property(e => e.UsUd7Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD7_NUMERIC");

                entity.Property(e => e.UsUd8)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD8");

                entity.Property(e => e.UsUd8Bit).HasColumnName("US_UD8_BIT");

                entity.Property(e => e.UsUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD8_DATE");

                entity.Property(e => e.UsUd8Id).HasColumnName("US_UD8_ID");

                entity.Property(e => e.UsUd8Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD8_NUMERIC");

                entity.Property(e => e.UsUd9)
                    .HasMaxLength(255)
                    .HasColumnName("US_UD9");

                entity.Property(e => e.UsUd9Bit).HasColumnName("US_UD9_BIT");

                entity.Property(e => e.UsUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("US_UD9_DATE");

                entity.Property(e => e.UsUd9Id).HasColumnName("US_UD9_ID");

                entity.Property(e => e.UsUd9Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("US_UD9_NUMERIC");

                entity.Property(e => e.UseWordMailMerge).HasColumnName("USE_WORD_MAIL_MERGE");

                entity.Property(e => e.UserDepartment).HasMaxLength(128);

                entity.Property(e => e.UserDirectPhone).HasMaxLength(32);

                entity.Property(e => e.UserGroupName)
                    .HasMaxLength(255)
                    .HasColumnName("USER_GROUP_NAME");

                entity.Property(e => e.UserJobTitle).HasMaxLength(128);

                entity.Property(e => e.UserMobileTelephone).HasMaxLength(32);

                entity.Property(e => e.UsgId).HasColumnName("USG_ID");
            });

            modelBuilder.Entity<Vpurposelist>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vpurposelist");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Duration)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("DURATION");

                entity.Property(e => e.LawfulBasis)
                    .HasMaxLength(255)
                    .HasColumnName("LAWFUL_BASIS");

                entity.Property(e => e.PuDeleted).HasColumnName("PU_DELETED");

                entity.Property(e => e.PuId).HasColumnName("PU_ID");

                entity.Property(e => e.PuUd1)
                    .HasMaxLength(255)
                    .HasColumnName("PU_UD1");

                entity.Property(e => e.PuUd10)
                    .HasMaxLength(255)
                    .HasColumnName("PU_UD10");

                entity.Property(e => e.PuUd10Bit).HasColumnName("PU_UD10_BIT");

                entity.Property(e => e.PuUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PU_UD10_DATE");

                entity.Property(e => e.PuUd10Id).HasColumnName("PU_UD10_ID");

                entity.Property(e => e.PuUd10Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PU_UD10_NUMERIC");

                entity.Property(e => e.PuUd1Bit).HasColumnName("PU_UD1_BIT");

                entity.Property(e => e.PuUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PU_UD1_DATE");

                entity.Property(e => e.PuUd1Id).HasColumnName("PU_UD1_ID");

                entity.Property(e => e.PuUd1Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PU_UD1_NUMERIC");

                entity.Property(e => e.PuUd2)
                    .HasMaxLength(255)
                    .HasColumnName("PU_UD2");

                entity.Property(e => e.PuUd2Bit).HasColumnName("PU_UD2_BIT");

                entity.Property(e => e.PuUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PU_UD2_DATE");

                entity.Property(e => e.PuUd2Id).HasColumnName("PU_UD2_ID");

                entity.Property(e => e.PuUd2Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PU_UD2_NUMERIC");

                entity.Property(e => e.PuUd3)
                    .HasMaxLength(255)
                    .HasColumnName("PU_UD3");

                entity.Property(e => e.PuUd3Bit).HasColumnName("PU_UD3_BIT");

                entity.Property(e => e.PuUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PU_UD3_DATE");

                entity.Property(e => e.PuUd3Id).HasColumnName("PU_UD3_ID");

                entity.Property(e => e.PuUd3Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PU_UD3_NUMERIC");

                entity.Property(e => e.PuUd4)
                    .HasMaxLength(255)
                    .HasColumnName("PU_UD4");

                entity.Property(e => e.PuUd4Bit).HasColumnName("PU_UD4_BIT");

                entity.Property(e => e.PuUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PU_UD4_DATE");

                entity.Property(e => e.PuUd4Id).HasColumnName("PU_UD4_ID");

                entity.Property(e => e.PuUd4Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PU_UD4_NUMERIC");

                entity.Property(e => e.PuUd5)
                    .HasMaxLength(255)
                    .HasColumnName("PU_UD5");

                entity.Property(e => e.PuUd5Bit).HasColumnName("PU_UD5_BIT");

                entity.Property(e => e.PuUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PU_UD5_DATE");

                entity.Property(e => e.PuUd5Id).HasColumnName("PU_UD5_ID");

                entity.Property(e => e.PuUd5Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PU_UD5_NUMERIC");

                entity.Property(e => e.PuUd6)
                    .HasMaxLength(255)
                    .HasColumnName("PU_UD6");

                entity.Property(e => e.PuUd6Bit).HasColumnName("PU_UD6_BIT");

                entity.Property(e => e.PuUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PU_UD6_DATE");

                entity.Property(e => e.PuUd6Id).HasColumnName("PU_UD6_ID");

                entity.Property(e => e.PuUd6Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PU_UD6_NUMERIC");

                entity.Property(e => e.PuUd7)
                    .HasMaxLength(255)
                    .HasColumnName("PU_UD7");

                entity.Property(e => e.PuUd7Bit).HasColumnName("PU_UD7_BIT");

                entity.Property(e => e.PuUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PU_UD7_DATE");

                entity.Property(e => e.PuUd7Id).HasColumnName("PU_UD7_ID");

                entity.Property(e => e.PuUd7Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PU_UD7_NUMERIC");

                entity.Property(e => e.PuUd8)
                    .HasMaxLength(255)
                    .HasColumnName("PU_UD8");

                entity.Property(e => e.PuUd8Bit).HasColumnName("PU_UD8_BIT");

                entity.Property(e => e.PuUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PU_UD8_DATE");

                entity.Property(e => e.PuUd8Id).HasColumnName("PU_UD8_ID");

                entity.Property(e => e.PuUd8Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PU_UD8_NUMERIC");

                entity.Property(e => e.PuUd9)
                    .HasMaxLength(255)
                    .HasColumnName("PU_UD9");

                entity.Property(e => e.PuUd9Bit).HasColumnName("PU_UD9_BIT");

                entity.Property(e => e.PuUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("PU_UD9_DATE");

                entity.Property(e => e.PuUd9Id).HasColumnName("PU_UD9_ID");

                entity.Property(e => e.PuUd9Numeric)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("PU_UD9_NUMERIC");

                entity.Property(e => e.RemovalDateMode)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("REMOVAL_DATE_MODE");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<VwActivitiesNotesList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vwActivitiesNotesList");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.Account)
                    .HasMaxLength(255)
                    .HasColumnName("account");

                entity.Property(e => e.Contact)
                    .HasMaxLength(255)
                    .HasColumnName("contact");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DateCompleted)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_COMPLETED");

                entity.Property(e => e.DueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DUE_DATE");

                entity.Property(e => e.Owner).HasMaxLength(255);

                entity.Property(e => e.PercentComplete).HasColumnName("PERCENT_COMPLETE");

                entity.Property(e => e.Priority).HasColumnName("PRIORITY");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("START_DATE");

                entity.Property(e => e.Status)
                    .HasMaxLength(23)
                    .IsUnicode(false)
                    .HasColumnName("STATUS");

                entity.Property(e => e.StatusId).HasColumnName("status_id");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Type)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("type");

                entity.Property(e => e.TypeHlight)
                    .HasMaxLength(100)
                    .HasColumnName("TYPE_HLIGHT");

                entity.Property(e => e.TypeId).HasColumnName("type_id");
            });

            modelBuilder.Entity<VwDataErasureObject>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vwDataErasureObjects");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Deleted).HasColumnName("DELETED");

                entity.Property(e => e.Dormant).HasColumnName("DORMANT");

                entity.Property(e => e.Id)
                    .HasMaxLength(36)
                    .HasColumnName("ID");

                entity.Property(e => e.RemovalDate)
                    .HasColumnType("datetime")
                    .HasColumnName("REMOVAL_DATE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");
            });

            modelBuilder.Entity<VwIntAccountingTransactionHistory>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vwIntAccountingTransactionHistory");

                entity.Property(e => e.AcContactName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_CONTACT_NAME");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccIdSales).HasColumnName("ACC_ID_SALES");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_NAME");

                entity.Property(e => e.AcgId).HasColumnName("ACG_ID");

                entity.Property(e => e.BillingAddress)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_ADDRESS");

                entity.Property(e => e.BillingCity)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_CITY");

                entity.Property(e => e.BillingCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_COUNTRY_CODE");

                entity.Property(e => e.BillingEmailAddress)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_EMAIL_ADDRESS");

                entity.Property(e => e.BillingName)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_NAME");

                entity.Property(e => e.BillingPhoneNumber)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_PHONE_NUMBER");

                entity.Property(e => e.BillingPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_POSTAL_CODE");

                entity.Property(e => e.BillingRegion)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_REGION");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Currency)
                    .HasMaxLength(255)
                    .HasColumnName("CURRENCY");

                entity.Property(e => e.CustomerId)
                    .HasMaxLength(255)
                    .HasColumnName("CUSTOMER_ID");

                entity.Property(e => e.CustomerOrderNumber)
                    .HasMaxLength(255)
                    .HasColumnName("CUSTOMER_ORDER_NUMBER");

                entity.Property(e => e.Deleted).HasColumnName("DELETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.FneId).HasColumnName("FNE_ID");

                entity.Property(e => e.FneName)
                    .HasMaxLength(255)
                    .HasColumnName("FNE_NAME");

                entity.Property(e => e.FreightMethodId)
                    .HasMaxLength(255)
                    .HasColumnName("FREIGHT_METHOD_ID");

                entity.Property(e => e.GvAccountType)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("GV_ACCOUNT_TYPE");

                entity.Property(e => e.GvContactType)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("GV_CONTACT_TYPE");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.OpqId).HasColumnName("OPQ_ID");

                entity.Property(e => e.OutstandingBalance)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OUTSTANDING_BALANCE");

                entity.Property(e => e.PaymentType)
                    .HasMaxLength(255)
                    .HasColumnName("PAYMENT_TYPE");

                entity.Property(e => e.ShippingAddress)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_ADDRESS");

                entity.Property(e => e.ShippingCity)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_CITY");

                entity.Property(e => e.ShippingCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_COUNTRY_CODE");

                entity.Property(e => e.ShippingEmailAddress)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_EMAIL_ADDRESS");

                entity.Property(e => e.ShippingFirstName)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_FIRST_NAME");

                entity.Property(e => e.ShippingLastName)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_LAST_NAME");

                entity.Property(e => e.ShippingName)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_NAME");

                entity.Property(e => e.ShippingPhoneNumber)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_PHONE_NUMBER");

                entity.Property(e => e.ShippingPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_POSTAL_CODE");

                entity.Property(e => e.ShippingRegion)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_REGION");

                entity.Property(e => e.ShippingTaxValue)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SHIPPING_TAX_VALUE");

                entity.Property(e => e.ShippingTitle)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_TITLE");

                entity.Property(e => e.ShippingValue)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SHIPPING_VALUE");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Source)
                    .IsRequired()
                    .HasMaxLength(60)
                    .HasColumnName("SOURCE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.ThId).HasColumnName("TH_ID");

                entity.Property(e => e.ThUd1Bit).HasColumnName("TH_UD1_BIT");

                entity.Property(e => e.ThUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TH_UD1_DATE");

                entity.Property(e => e.ThUd1Id).HasColumnName("TH_UD1_ID");

                entity.Property(e => e.ThUd1Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("TH_UD1_NUMERIC");

                entity.Property(e => e.ThUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("TH_UD1_TEXT");

                entity.Property(e => e.ThUd2Bit).HasColumnName("TH_UD2_BIT");

                entity.Property(e => e.ThUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TH_UD2_DATE");

                entity.Property(e => e.ThUd2Id).HasColumnName("TH_UD2_ID");

                entity.Property(e => e.ThUd2Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("TH_UD2_NUMERIC");

                entity.Property(e => e.ThUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("TH_UD2_TEXT");

                entity.Property(e => e.ThUd3Bit).HasColumnName("TH_UD3_BIT");

                entity.Property(e => e.ThUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TH_UD3_DATE");

                entity.Property(e => e.ThUd3Id).HasColumnName("TH_UD3_ID");

                entity.Property(e => e.ThUd3Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("TH_UD3_NUMERIC");

                entity.Property(e => e.ThUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("TH_UD3_TEXT");

                entity.Property(e => e.ThUd4Bit).HasColumnName("TH_UD4_BIT");

                entity.Property(e => e.ThUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TH_UD4_DATE");

                entity.Property(e => e.ThUd4Id).HasColumnName("TH_UD4_ID");

                entity.Property(e => e.ThUd4Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("TH_UD4_NUMERIC");

                entity.Property(e => e.ThUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("TH_UD4_TEXT");

                entity.Property(e => e.ThUd5Bit).HasColumnName("TH_UD5_BIT");

                entity.Property(e => e.ThUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("TH_UD5_DATE");

                entity.Property(e => e.ThUd5Id).HasColumnName("TH_UD5_ID");

                entity.Property(e => e.ThUd5Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("TH_UD5_NUMERIC");

                entity.Property(e => e.ThUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("TH_UD5_TEXT");

                entity.Property(e => e.TotalTaxValue)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("TOTAL_TAX_VALUE");

                entity.Property(e => e.TrackingNumber)
                    .HasMaxLength(255)
                    .HasColumnName("TRACKING_NUMBER");

                entity.Property(e => e.TrackingUrl)
                    .HasMaxLength(255)
                    .HasColumnName("TRACKING_URL");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("TRANSACTION_DATE");

                entity.Property(e => e.TransactionDueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("TRANSACTION_DUE_DATE");

                entity.Property(e => e.TransactionId)
                    .HasMaxLength(255)
                    .HasColumnName("TRANSACTION_ID");

                entity.Property(e => e.TransactionReference)
                    .HasMaxLength(255)
                    .HasColumnName("TRANSACTION_REFERENCE");

                entity.Property(e => e.TransactionStatus)
                    .HasMaxLength(255)
                    .HasColumnName("TRANSACTION_STATUS");

                entity.Property(e => e.TransactionTotal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("TRANSACTION_TOTAL");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(255)
                    .HasColumnName("TRANSACTION_TYPE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");
            });

            modelBuilder.Entity<VwIntAccountingTransactionHistoryLine>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vwIntAccountingTransactionHistoryLines");

                entity.Property(e => e.AcContactName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_CONTACT_NAME");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccIdSales).HasColumnName("ACC_ID_SALES");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_NAME");

                entity.Property(e => e.AcgId).HasColumnName("ACG_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Deleted).HasColumnName("DELETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Description)
                    .HasMaxLength(255)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.DiscountAmount)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("DISCOUNT_AMOUNT");

                entity.Property(e => e.FneId).HasColumnName("FNE_ID");

                entity.Property(e => e.FneName)
                    .HasMaxLength(255)
                    .HasColumnName("FNE_NAME");

                entity.Property(e => e.FreeTextItem)
                    .HasMaxLength(255)
                    .HasColumnName("FREE_TEXT_ITEM");

                entity.Property(e => e.FreightMethodId)
                    .HasMaxLength(255)
                    .HasColumnName("FREIGHT_METHOD_ID");

                entity.Property(e => e.GvAccountType)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("GV_ACCOUNT_TYPE");

                entity.Property(e => e.GvContactType)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("GV_CONTACT_TYPE");

                entity.Property(e => e.LineTaxValue)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("LINE_TAX_VALUE");

                entity.Property(e => e.LineValue)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("LINE_VALUE");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.ParentSummary)
                    .HasMaxLength(255)
                    .HasColumnName("PARENT_SUMMARY");

                entity.Property(e => e.Quantity)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("QUANTITY");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortDescription)
                    .HasMaxLength(255)
                    .HasColumnName("SHORT_DESCRIPTION");

                entity.Property(e => e.Sku)
                    .HasMaxLength(255)
                    .HasColumnName("SKU");

                entity.Property(e => e.Source)
                    .IsRequired()
                    .HasMaxLength(60)
                    .HasColumnName("SOURCE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.SundryId)
                    .HasMaxLength(255)
                    .HasColumnName("SUNDRY_ID");

                entity.Property(e => e.ThId).HasColumnName("TH_ID");

                entity.Property(e => e.ThlId).HasColumnName("THL_ID");

                entity.Property(e => e.ThlUd1Bit).HasColumnName("THL_UD1_BIT");

                entity.Property(e => e.ThlUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("THL_UD1_DATE");

                entity.Property(e => e.ThlUd1Id).HasColumnName("THL_UD1_ID");

                entity.Property(e => e.ThlUd1Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("THL_UD1_NUMERIC");

                entity.Property(e => e.ThlUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("THL_UD1_TEXT");

                entity.Property(e => e.ThlUd2Bit).HasColumnName("THL_UD2_BIT");

                entity.Property(e => e.ThlUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("THL_UD2_DATE");

                entity.Property(e => e.ThlUd2Id).HasColumnName("THL_UD2_ID");

                entity.Property(e => e.ThlUd2Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("THL_UD2_NUMERIC");

                entity.Property(e => e.ThlUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("THL_UD2_TEXT");

                entity.Property(e => e.ThlUd3Bit).HasColumnName("THL_UD3_BIT");

                entity.Property(e => e.ThlUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("THL_UD3_DATE");

                entity.Property(e => e.ThlUd3Id).HasColumnName("THL_UD3_ID");

                entity.Property(e => e.ThlUd3Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("THL_UD3_NUMERIC");

                entity.Property(e => e.ThlUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("THL_UD3_TEXT");

                entity.Property(e => e.ThlUd4Bit).HasColumnName("THL_UD4_BIT");

                entity.Property(e => e.ThlUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("THL_UD4_DATE");

                entity.Property(e => e.ThlUd4Id).HasColumnName("THL_UD4_ID");

                entity.Property(e => e.ThlUd4Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("THL_UD4_NUMERIC");

                entity.Property(e => e.ThlUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("THL_UD4_TEXT");

                entity.Property(e => e.ThlUd5Bit).HasColumnName("THL_UD5_BIT");

                entity.Property(e => e.ThlUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("THL_UD5_DATE");

                entity.Property(e => e.ThlUd5Id).HasColumnName("THL_UD5_ID");

                entity.Property(e => e.ThlUd5Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("THL_UD5_NUMERIC");

                entity.Property(e => e.ThlUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("THL_UD5_TEXT");

                entity.Property(e => e.UnitPrice)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("UNIT_PRICE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");
            });

            modelBuilder.Entity<VwIntAnagramDespatch>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vwIntAnagramDespatches");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccIdSales).HasColumnName("ACC_ID_SALES");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_NAME");

                entity.Property(e => e.AcgId).HasColumnName("ACG_ID");

                entity.Property(e => e.AngDpDeleted).HasColumnName("ANG_DP_DELETED");

                entity.Property(e => e.AngDpId).HasColumnName("ANG_DP_ID");

                entity.Property(e => e.AngDpUd1)
                    .HasMaxLength(255)
                    .HasColumnName("ANG_DP_UD1");

                entity.Property(e => e.AngDpUd10)
                    .HasMaxLength(255)
                    .HasColumnName("ANG_DP_UD10");

                entity.Property(e => e.AngDpUd10Bit).HasColumnName("ANG_DP_UD10_Bit");

                entity.Property(e => e.AngDpUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ANG_DP_UD10_DATE");

                entity.Property(e => e.AngDpUd10Id).HasColumnName("ANG_DP_UD10_ID");

                entity.Property(e => e.AngDpUd10IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ANG_DP_UD10_ID_HLIGHT");

                entity.Property(e => e.AngDpUd10Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ANG_DP_UD10_NUMERIC");

                entity.Property(e => e.AngDpUd1Bit).HasColumnName("ANG_DP_UD1_Bit");

                entity.Property(e => e.AngDpUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ANG_DP_UD1_DATE");

                entity.Property(e => e.AngDpUd1Id).HasColumnName("ANG_DP_UD1_ID");

                entity.Property(e => e.AngDpUd1IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ANG_DP_UD1_ID_HLIGHT");

                entity.Property(e => e.AngDpUd1Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ANG_DP_UD1_NUMERIC");

                entity.Property(e => e.AngDpUd2)
                    .HasMaxLength(255)
                    .HasColumnName("ANG_DP_UD2");

                entity.Property(e => e.AngDpUd2Bit).HasColumnName("ANG_DP_UD2_Bit");

                entity.Property(e => e.AngDpUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ANG_DP_UD2_DATE");

                entity.Property(e => e.AngDpUd2Id).HasColumnName("ANG_DP_UD2_ID");

                entity.Property(e => e.AngDpUd2IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ANG_DP_UD2_ID_HLIGHT");

                entity.Property(e => e.AngDpUd2Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ANG_DP_UD2_NUMERIC");

                entity.Property(e => e.AngDpUd3)
                    .HasMaxLength(255)
                    .HasColumnName("ANG_DP_UD3");

                entity.Property(e => e.AngDpUd3Bit).HasColumnName("ANG_DP_UD3_Bit");

                entity.Property(e => e.AngDpUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ANG_DP_UD3_DATE");

                entity.Property(e => e.AngDpUd3Id).HasColumnName("ANG_DP_UD3_ID");

                entity.Property(e => e.AngDpUd3IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ANG_DP_UD3_ID_HLIGHT");

                entity.Property(e => e.AngDpUd3Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ANG_DP_UD3_NUMERIC");

                entity.Property(e => e.AngDpUd4)
                    .HasMaxLength(255)
                    .HasColumnName("ANG_DP_UD4");

                entity.Property(e => e.AngDpUd4Bit).HasColumnName("ANG_DP_UD4_Bit");

                entity.Property(e => e.AngDpUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ANG_DP_UD4_DATE");

                entity.Property(e => e.AngDpUd4Id).HasColumnName("ANG_DP_UD4_ID");

                entity.Property(e => e.AngDpUd4IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ANG_DP_UD4_ID_HLIGHT");

                entity.Property(e => e.AngDpUd4Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ANG_DP_UD4_NUMERIC");

                entity.Property(e => e.AngDpUd5)
                    .HasMaxLength(255)
                    .HasColumnName("ANG_DP_UD5");

                entity.Property(e => e.AngDpUd5Bit).HasColumnName("ANG_DP_UD5_Bit");

                entity.Property(e => e.AngDpUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ANG_DP_UD5_DATE");

                entity.Property(e => e.AngDpUd5Id).HasColumnName("ANG_DP_UD5_ID");

                entity.Property(e => e.AngDpUd5IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ANG_DP_UD5_ID_HLIGHT");

                entity.Property(e => e.AngDpUd5Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ANG_DP_UD5_NUMERIC");

                entity.Property(e => e.AngDpUd6)
                    .HasMaxLength(255)
                    .HasColumnName("ANG_DP_UD6");

                entity.Property(e => e.AngDpUd6Bit).HasColumnName("ANG_DP_UD6_Bit");

                entity.Property(e => e.AngDpUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ANG_DP_UD6_DATE");

                entity.Property(e => e.AngDpUd6Id).HasColumnName("ANG_DP_UD6_ID");

                entity.Property(e => e.AngDpUd6IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ANG_DP_UD6_ID_HLIGHT");

                entity.Property(e => e.AngDpUd6Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ANG_DP_UD6_NUMERIC");

                entity.Property(e => e.AngDpUd7)
                    .HasMaxLength(255)
                    .HasColumnName("ANG_DP_UD7");

                entity.Property(e => e.AngDpUd7Bit).HasColumnName("ANG_DP_UD7_Bit");

                entity.Property(e => e.AngDpUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ANG_DP_UD7_DATE");

                entity.Property(e => e.AngDpUd7Id).HasColumnName("ANG_DP_UD7_ID");

                entity.Property(e => e.AngDpUd7IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ANG_DP_UD7_ID_HLIGHT");

                entity.Property(e => e.AngDpUd7Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ANG_DP_UD7_NUMERIC");

                entity.Property(e => e.AngDpUd8)
                    .HasMaxLength(255)
                    .HasColumnName("ANG_DP_UD8");

                entity.Property(e => e.AngDpUd8Bit).HasColumnName("ANG_DP_UD8_Bit");

                entity.Property(e => e.AngDpUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ANG_DP_UD8_DATE");

                entity.Property(e => e.AngDpUd8Id).HasColumnName("ANG_DP_UD8_ID");

                entity.Property(e => e.AngDpUd8IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ANG_DP_UD8_ID_HLIGHT");

                entity.Property(e => e.AngDpUd8Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ANG_DP_UD8_NUMERIC");

                entity.Property(e => e.AngDpUd9)
                    .HasMaxLength(255)
                    .HasColumnName("ANG_DP_UD9");

                entity.Property(e => e.AngDpUd9Bit).HasColumnName("ANG_DP_UD9_Bit");

                entity.Property(e => e.AngDpUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ANG_DP_UD9_DATE");

                entity.Property(e => e.AngDpUd9Id).HasColumnName("ANG_DP_UD9_ID");

                entity.Property(e => e.AngDpUd9IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ANG_DP_UD9_ID_HLIGHT");

                entity.Property(e => e.AngDpUd9Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ANG_DP_UD9_NUMERIC");

                entity.Property(e => e.AngTrId).HasColumnName("ANG_TR_ID");

                entity.Property(e => e.AngTrName)
                    .HasMaxLength(255)
                    .HasColumnName("ANG_TR_NAME");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.ExternalReference)
                    .HasMaxLength(255)
                    .HasColumnName("EXTERNAL_REFERENCE");

                entity.Property(e => e.GvAccountType)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("GV_ACCOUNT_TYPE");

                entity.Property(e => e.GvContactType)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("GV_CONTACT_TYPE");

                entity.Property(e => e.OpqId).HasColumnName("OPQ_ID");

                entity.Property(e => e.QuoteName)
                    .HasMaxLength(255)
                    .HasColumnName("QUOTE_NAME");

                entity.Property(e => e.Reference)
                    .HasMaxLength(255)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");
            });

            modelBuilder.Entity<VwIntAnagramTransaction>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vwIntAnagramTransactions");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccIdSales).HasColumnName("ACC_ID_SALES");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_NAME");

                entity.Property(e => e.AcgId).HasColumnName("ACG_ID");

                entity.Property(e => e.AngTrDeleted).HasColumnName("ANG_TR_DELETED");

                entity.Property(e => e.AngTrId).HasColumnName("ANG_TR_ID");

                entity.Property(e => e.AngTrUd1)
                    .HasMaxLength(255)
                    .HasColumnName("ANG_TR_UD1");

                entity.Property(e => e.AngTrUd10)
                    .HasMaxLength(255)
                    .HasColumnName("ANG_TR_UD10");

                entity.Property(e => e.AngTrUd10Bit).HasColumnName("ANG_TR_UD10_Bit");

                entity.Property(e => e.AngTrUd10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ANG_TR_UD10_DATE");

                entity.Property(e => e.AngTrUd10Id).HasColumnName("ANG_TR_UD10_ID");

                entity.Property(e => e.AngTrUd10IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ANG_TR_UD10_ID_HLIGHT");

                entity.Property(e => e.AngTrUd10Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ANG_TR_UD10_NUMERIC");

                entity.Property(e => e.AngTrUd1Bit).HasColumnName("ANG_TR_UD1_Bit");

                entity.Property(e => e.AngTrUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ANG_TR_UD1_DATE");

                entity.Property(e => e.AngTrUd1Id).HasColumnName("ANG_TR_UD1_ID");

                entity.Property(e => e.AngTrUd1IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ANG_TR_UD1_ID_HLIGHT");

                entity.Property(e => e.AngTrUd1Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ANG_TR_UD1_NUMERIC");

                entity.Property(e => e.AngTrUd2)
                    .HasMaxLength(255)
                    .HasColumnName("ANG_TR_UD2");

                entity.Property(e => e.AngTrUd2Bit).HasColumnName("ANG_TR_UD2_Bit");

                entity.Property(e => e.AngTrUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ANG_TR_UD2_DATE");

                entity.Property(e => e.AngTrUd2Id).HasColumnName("ANG_TR_UD2_ID");

                entity.Property(e => e.AngTrUd2IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ANG_TR_UD2_ID_HLIGHT");

                entity.Property(e => e.AngTrUd2Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ANG_TR_UD2_NUMERIC");

                entity.Property(e => e.AngTrUd3)
                    .HasMaxLength(255)
                    .HasColumnName("ANG_TR_UD3");

                entity.Property(e => e.AngTrUd3Bit).HasColumnName("ANG_TR_UD3_Bit");

                entity.Property(e => e.AngTrUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ANG_TR_UD3_DATE");

                entity.Property(e => e.AngTrUd3Id).HasColumnName("ANG_TR_UD3_ID");

                entity.Property(e => e.AngTrUd3IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ANG_TR_UD3_ID_HLIGHT");

                entity.Property(e => e.AngTrUd3Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ANG_TR_UD3_NUMERIC");

                entity.Property(e => e.AngTrUd4)
                    .HasMaxLength(255)
                    .HasColumnName("ANG_TR_UD4");

                entity.Property(e => e.AngTrUd4Bit).HasColumnName("ANG_TR_UD4_Bit");

                entity.Property(e => e.AngTrUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ANG_TR_UD4_DATE");

                entity.Property(e => e.AngTrUd4Id).HasColumnName("ANG_TR_UD4_ID");

                entity.Property(e => e.AngTrUd4IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ANG_TR_UD4_ID_HLIGHT");

                entity.Property(e => e.AngTrUd4Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ANG_TR_UD4_NUMERIC");

                entity.Property(e => e.AngTrUd5)
                    .HasMaxLength(255)
                    .HasColumnName("ANG_TR_UD5");

                entity.Property(e => e.AngTrUd5Bit).HasColumnName("ANG_TR_UD5_Bit");

                entity.Property(e => e.AngTrUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ANG_TR_UD5_DATE");

                entity.Property(e => e.AngTrUd5Id).HasColumnName("ANG_TR_UD5_ID");

                entity.Property(e => e.AngTrUd5IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ANG_TR_UD5_ID_HLIGHT");

                entity.Property(e => e.AngTrUd5Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ANG_TR_UD5_NUMERIC");

                entity.Property(e => e.AngTrUd6)
                    .HasMaxLength(255)
                    .HasColumnName("ANG_TR_UD6");

                entity.Property(e => e.AngTrUd6Bit).HasColumnName("ANG_TR_UD6_Bit");

                entity.Property(e => e.AngTrUd6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ANG_TR_UD6_DATE");

                entity.Property(e => e.AngTrUd6Id).HasColumnName("ANG_TR_UD6_ID");

                entity.Property(e => e.AngTrUd6IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ANG_TR_UD6_ID_HLIGHT");

                entity.Property(e => e.AngTrUd6Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ANG_TR_UD6_NUMERIC");

                entity.Property(e => e.AngTrUd7)
                    .HasMaxLength(255)
                    .HasColumnName("ANG_TR_UD7");

                entity.Property(e => e.AngTrUd7Bit).HasColumnName("ANG_TR_UD7_Bit");

                entity.Property(e => e.AngTrUd7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ANG_TR_UD7_DATE");

                entity.Property(e => e.AngTrUd7Id).HasColumnName("ANG_TR_UD7_ID");

                entity.Property(e => e.AngTrUd7IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ANG_TR_UD7_ID_HLIGHT");

                entity.Property(e => e.AngTrUd7Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ANG_TR_UD7_NUMERIC");

                entity.Property(e => e.AngTrUd8)
                    .HasMaxLength(255)
                    .HasColumnName("ANG_TR_UD8");

                entity.Property(e => e.AngTrUd8Bit).HasColumnName("ANG_TR_UD8_Bit");

                entity.Property(e => e.AngTrUd8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ANG_TR_UD8_DATE");

                entity.Property(e => e.AngTrUd8Id).HasColumnName("ANG_TR_UD8_ID");

                entity.Property(e => e.AngTrUd8IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ANG_TR_UD8_ID_HLIGHT");

                entity.Property(e => e.AngTrUd8Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ANG_TR_UD8_NUMERIC");

                entity.Property(e => e.AngTrUd9)
                    .HasMaxLength(255)
                    .HasColumnName("ANG_TR_UD9");

                entity.Property(e => e.AngTrUd9Bit).HasColumnName("ANG_TR_UD9_Bit");

                entity.Property(e => e.AngTrUd9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("ANG_TR_UD9_DATE");

                entity.Property(e => e.AngTrUd9Id).HasColumnName("ANG_TR_UD9_ID");

                entity.Property(e => e.AngTrUd9IdHlight)
                    .HasMaxLength(100)
                    .HasColumnName("ANG_TR_UD9_ID_HLIGHT");

                entity.Property(e => e.AngTrUd9Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("ANG_TR_UD9_NUMERIC");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.ExternalReference)
                    .HasMaxLength(255)
                    .HasColumnName("EXTERNAL_REFERENCE");

                entity.Property(e => e.GvAccountType)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("GV_ACCOUNT_TYPE");

                entity.Property(e => e.GvContactType)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("GV_CONTACT_TYPE");

                entity.Property(e => e.Reference)
                    .HasMaxLength(255)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");
            });

            modelBuilder.Entity<VwIntNavisionTransactionHistory>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vwIntNavisionTransactionHistory");

                entity.Property(e => e.AcContactName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_CONTACT_NAME");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccIdSales).HasColumnName("ACC_ID_SALES");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_NAME");

                entity.Property(e => e.AcgId).HasColumnName("ACG_ID");

                entity.Property(e => e.AppliesToDocNo)
                    .HasMaxLength(255)
                    .HasColumnName("APPLIES_TO_DOC_NO");

                entity.Property(e => e.AppliesToDocType)
                    .HasMaxLength(255)
                    .HasColumnName("APPLIES_TO_DOC_TYPE");

                entity.Property(e => e.BillToAddress)
                    .HasMaxLength(255)
                    .HasColumnName("BILL_TO_ADDRESS");

                entity.Property(e => e.BillToAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("BILL_TO_ADDRESS_2");

                entity.Property(e => e.BillToCity)
                    .HasMaxLength(255)
                    .HasColumnName("BILL_TO_CITY");

                entity.Property(e => e.BillToContact)
                    .HasMaxLength(255)
                    .HasColumnName("BILL_TO_CONTACT");

                entity.Property(e => e.BillToContactNo)
                    .HasMaxLength(255)
                    .HasColumnName("BILL_TO_CONTACT_NO");

                entity.Property(e => e.BillToCounty)
                    .HasMaxLength(255)
                    .HasColumnName("BILL_TO_COUNTY");

                entity.Property(e => e.BillToCustomerNo)
                    .HasMaxLength(255)
                    .HasColumnName("BILL_TO_CUSTOMER_NO");

                entity.Property(e => e.BillToName)
                    .HasMaxLength(255)
                    .HasColumnName("BILL_TO_NAME");

                entity.Property(e => e.BillToPostCode)
                    .HasMaxLength(255)
                    .HasColumnName("BILL_TO_POST_CODE");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CreditCardNo)
                    .HasMaxLength(255)
                    .HasColumnName("CREDIT_CARD_NO");

                entity.Property(e => e.CurrencyCode)
                    .HasMaxLength(255)
                    .HasColumnName("CURRENCY_CODE");

                entity.Property(e => e.Deleted).HasColumnName("DELETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.DirectDebitMandateId)
                    .HasMaxLength(255)
                    .HasColumnName("DIRECT_DEBIT_MANDATE_ID");

                entity.Property(e => e.DocumentDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DOCUMENT_DATE");

                entity.Property(e => e.DocumentExchangeStatus)
                    .HasMaxLength(255)
                    .HasColumnName("DOCUMENT_EXCHANGE_STATUS");

                entity.Property(e => e.DueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DUE_DATE");

                entity.Property(e => e.Eu3PartyTrade).HasColumnName("EU_3_PARTY_TRADE");

                entity.Property(e => e.ExternalDocumentNo)
                    .HasMaxLength(255)
                    .HasColumnName("EXTERNAL_DOCUMENT_NO");

                entity.Property(e => e.FneId).HasColumnName("FNE_ID");

                entity.Property(e => e.FneName)
                    .HasMaxLength(255)
                    .HasColumnName("FNE_NAME");

                entity.Property(e => e.GvAccountType)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("GV_ACCOUNT_TYPE");

                entity.Property(e => e.GvContactType)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("GV_CONTACT_TYPE");

                entity.Property(e => e.LocationCode)
                    .HasMaxLength(255)
                    .HasColumnName("LOCATION_CODE");

                entity.Property(e => e.NavKey)
                    .HasMaxLength(255)
                    .HasColumnName("NAV_KEY");

                entity.Property(e => e.NavNo)
                    .HasMaxLength(255)
                    .HasColumnName("NAV_NO");

                entity.Property(e => e.NavThId).HasColumnName("NAV_TH_ID");

                entity.Property(e => e.NavThUd1Bit).HasColumnName("NAV_TH_UD1_BIT");

                entity.Property(e => e.NavThUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("NAV_TH_UD1_DATE");

                entity.Property(e => e.NavThUd1Id).HasColumnName("NAV_TH_UD1_ID");

                entity.Property(e => e.NavThUd1Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("NAV_TH_UD1_NUMERIC");

                entity.Property(e => e.NavThUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("NAV_TH_UD1_TEXT");

                entity.Property(e => e.NavThUd2Bit).HasColumnName("NAV_TH_UD2_BIT");

                entity.Property(e => e.NavThUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("NAV_TH_UD2_DATE");

                entity.Property(e => e.NavThUd2Id).HasColumnName("NAV_TH_UD2_ID");

                entity.Property(e => e.NavThUd2Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("NAV_TH_UD2_NUMERIC");

                entity.Property(e => e.NavThUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("NAV_TH_UD2_TEXT");

                entity.Property(e => e.NavThUd3Bit).HasColumnName("NAV_TH_UD3_BIT");

                entity.Property(e => e.NavThUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("NAV_TH_UD3_DATE");

                entity.Property(e => e.NavThUd3Id).HasColumnName("NAV_TH_UD3_ID");

                entity.Property(e => e.NavThUd3Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("NAV_TH_UD3_NUMERIC");

                entity.Property(e => e.NavThUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("NAV_TH_UD3_TEXT");

                entity.Property(e => e.NavThUd4Bit).HasColumnName("NAV_TH_UD4_BIT");

                entity.Property(e => e.NavThUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("NAV_TH_UD4_DATE");

                entity.Property(e => e.NavThUd4Id).HasColumnName("NAV_TH_UD4_ID");

                entity.Property(e => e.NavThUd4Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("NAV_TH_UD4_NUMERIC");

                entity.Property(e => e.NavThUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("NAV_TH_UD4_TEXT");

                entity.Property(e => e.NavThUd5Bit).HasColumnName("NAV_TH_UD5_BIT");

                entity.Property(e => e.NavThUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("NAV_TH_UD5_DATE");

                entity.Property(e => e.NavThUd5Id).HasColumnName("NAV_TH_UD5_ID");

                entity.Property(e => e.NavThUd5Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("NAV_TH_UD5_NUMERIC");

                entity.Property(e => e.NavThUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("NAV_TH_UD5_TEXT");

                entity.Property(e => e.NoPrinted).HasColumnName("NO_PRINTED");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.OpqId).HasColumnName("OPQ_ID");

                entity.Property(e => e.OrderNo)
                    .HasMaxLength(255)
                    .HasColumnName("ORDER_NO");

                entity.Property(e => e.PaymentDiscountPercent)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PAYMENT_DISCOUNT_PERCENT");

                entity.Property(e => e.PaymentMethodCode)
                    .HasMaxLength(255)
                    .HasColumnName("PAYMENT_METHOD_CODE");

                entity.Property(e => e.PaymentTermsCode)
                    .HasMaxLength(255)
                    .HasColumnName("PAYMENT_TERMS_CODE");

                entity.Property(e => e.PmtDiscountDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PMT_DISCOUNT_DATE");

                entity.Property(e => e.PostingDate)
                    .HasColumnType("datetime")
                    .HasColumnName("POSTING_DATE");

                entity.Property(e => e.PreAssignedNo)
                    .HasMaxLength(255)
                    .HasColumnName("PRE_ASSIGNED_NO");

                entity.Property(e => e.QuoteNo)
                    .HasMaxLength(255)
                    .HasColumnName("QUOTE_NO");

                entity.Property(e => e.ResponsibilityCenter)
                    .HasMaxLength(255)
                    .HasColumnName("RESPONSIBILITY_CENTER");

                entity.Property(e => e.SalespersonCode)
                    .HasMaxLength(255)
                    .HasColumnName("SALESPERSON_CODE");

                entity.Property(e => e.SellToAddress)
                    .HasMaxLength(255)
                    .HasColumnName("SELL_TO_ADDRESS");

                entity.Property(e => e.SellToAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("SELL_TO_ADDRESS_2");

                entity.Property(e => e.SellToCity)
                    .HasMaxLength(255)
                    .HasColumnName("SELL_TO_CITY");

                entity.Property(e => e.SellToContact)
                    .HasMaxLength(255)
                    .HasColumnName("SELL_TO_CONTACT");

                entity.Property(e => e.SellToContactNo)
                    .HasMaxLength(255)
                    .HasColumnName("SELL_TO_CONTACT_NO");

                entity.Property(e => e.SellToCounty)
                    .HasMaxLength(255)
                    .HasColumnName("SELL_TO_COUNTY");

                entity.Property(e => e.SellToCustomerName)
                    .HasMaxLength(255)
                    .HasColumnName("SELL_TO_CUSTOMER_NAME");

                entity.Property(e => e.SellToCustomerNo)
                    .HasMaxLength(255)
                    .HasColumnName("SELL_TO_CUSTOMER_NO");

                entity.Property(e => e.SellToPostCode)
                    .HasMaxLength(255)
                    .HasColumnName("SELL_TO_POST_CODE");

                entity.Property(e => e.ShipToAddress)
                    .HasMaxLength(255)
                    .HasColumnName("SHIP_TO_ADDRESS");

                entity.Property(e => e.ShipToAddress2)
                    .HasMaxLength(255)
                    .HasColumnName("SHIP_TO_ADDRESS_2");

                entity.Property(e => e.ShipToCity)
                    .HasMaxLength(255)
                    .HasColumnName("SHIP_TO_CITY");

                entity.Property(e => e.ShipToCode)
                    .HasMaxLength(255)
                    .HasColumnName("SHIP_TO_CODE");

                entity.Property(e => e.ShipToContact)
                    .HasMaxLength(255)
                    .HasColumnName("SHIP_TO_CONTACT");

                entity.Property(e => e.ShipToCounty)
                    .HasMaxLength(255)
                    .HasColumnName("SHIP_TO_COUNTY");

                entity.Property(e => e.ShipToName)
                    .HasMaxLength(255)
                    .HasColumnName("SHIP_TO_NAME");

                entity.Property(e => e.ShipToPostCode)
                    .HasMaxLength(255)
                    .HasColumnName("SHIP_TO_POST_CODE");

                entity.Property(e => e.ShipmentDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SHIPMENT_DATE");

                entity.Property(e => e.ShipmentMethodCode)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPMENT_METHOD_CODE");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortcutDimension1Code)
                    .HasMaxLength(255)
                    .HasColumnName("SHORTCUT_DIMENSION_1_CODE");

                entity.Property(e => e.ShortcutDimension2Code)
                    .HasMaxLength(255)
                    .HasColumnName("SHORTCUT_DIMENSION_2_CODE");

                entity.Property(e => e.Source)
                    .IsRequired()
                    .HasMaxLength(60)
                    .HasColumnName("SOURCE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");
            });

            modelBuilder.Entity<VwIntNavisionTransactionHistoryLine>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vwIntNavisionTransactionHistoryLines");

                entity.Property(e => e.AcContactName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_CONTACT_NAME");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccIdSales).HasColumnName("ACC_ID_SALES");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_NAME");

                entity.Property(e => e.AcgId).HasColumnName("ACG_ID");

                entity.Property(e => e.AllowInvoiceDisc).HasColumnName("ALLOW_INVOICE_DISC");

                entity.Property(e => e.ApplFromItemEntry).HasColumnName("APPL_FROM_ITEM_ENTRY");

                entity.Property(e => e.ApplToItemEntry).HasColumnName("APPL_TO_ITEM_ENTRY");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CrossReferenceNo)
                    .HasMaxLength(255)
                    .HasColumnName("CROSS_REFERENCE_NO");

                entity.Property(e => e.DeferralCode)
                    .HasMaxLength(255)
                    .HasColumnName("DEFERRAL_CODE");

                entity.Property(e => e.Deleted).HasColumnName("DELETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Description)
                    .HasMaxLength(255)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.FneId).HasColumnName("FNE_ID");

                entity.Property(e => e.FneName)
                    .HasMaxLength(255)
                    .HasColumnName("FNE_NAME");

                entity.Property(e => e.GvAccountType)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("GV_ACCOUNT_TYPE");

                entity.Property(e => e.GvContactType)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("GV_CONTACT_TYPE");

                entity.Property(e => e.IcPartnerCode)
                    .HasMaxLength(255)
                    .HasColumnName("IC_PARTNER_CODE");

                entity.Property(e => e.JobNo)
                    .HasMaxLength(255)
                    .HasColumnName("JOB_NO");

                entity.Property(e => e.LineAmount)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("LINE_AMOUNT");

                entity.Property(e => e.LineDiscountAmount)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("LINE_DISCOUNT_AMOUNT");

                entity.Property(e => e.LineDiscountPercent)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("LINE_DISCOUNT_PERCENT");

                entity.Property(e => e.NavKey)
                    .HasMaxLength(255)
                    .HasColumnName("NAV_KEY");

                entity.Property(e => e.NavNo)
                    .HasMaxLength(255)
                    .HasColumnName("NAV_NO");

                entity.Property(e => e.NavThId).HasColumnName("NAV_TH_ID");

                entity.Property(e => e.NavThlId).HasColumnName("NAV_THL_ID");

                entity.Property(e => e.NavThlUd1Bit).HasColumnName("NAV_THL_UD1_BIT");

                entity.Property(e => e.NavThlUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("NAV_THL_UD1_DATE");

                entity.Property(e => e.NavThlUd1Id).HasColumnName("NAV_THL_UD1_ID");

                entity.Property(e => e.NavThlUd1Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("NAV_THL_UD1_NUMERIC");

                entity.Property(e => e.NavThlUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("NAV_THL_UD1_TEXT");

                entity.Property(e => e.NavThlUd2Bit).HasColumnName("NAV_THL_UD2_BIT");

                entity.Property(e => e.NavThlUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("NAV_THL_UD2_DATE");

                entity.Property(e => e.NavThlUd2Id).HasColumnName("NAV_THL_UD2_ID");

                entity.Property(e => e.NavThlUd2Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("NAV_THL_UD2_NUMERIC");

                entity.Property(e => e.NavThlUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("NAV_THL_UD2_TEXT");

                entity.Property(e => e.NavThlUd3Bit).HasColumnName("NAV_THL_UD3_BIT");

                entity.Property(e => e.NavThlUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("NAV_THL_UD3_DATE");

                entity.Property(e => e.NavThlUd3Id).HasColumnName("NAV_THL_UD3_ID");

                entity.Property(e => e.NavThlUd3Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("NAV_THL_UD3_NUMERIC");

                entity.Property(e => e.NavThlUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("NAV_THL_UD3_TEXT");

                entity.Property(e => e.NavThlUd4Bit).HasColumnName("NAV_THL_UD4_BIT");

                entity.Property(e => e.NavThlUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("NAV_THL_UD4_DATE");

                entity.Property(e => e.NavThlUd4Id).HasColumnName("NAV_THL_UD4_ID");

                entity.Property(e => e.NavThlUd4Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("NAV_THL_UD4_NUMERIC");

                entity.Property(e => e.NavThlUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("NAV_THL_UD4_TEXT");

                entity.Property(e => e.NavThlUd5Bit).HasColumnName("NAV_THL_UD5_BIT");

                entity.Property(e => e.NavThlUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("NAV_THL_UD5_DATE");

                entity.Property(e => e.NavThlUd5Id).HasColumnName("NAV_THL_UD5_ID");

                entity.Property(e => e.NavThlUd5Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("NAV_THL_UD5_NUMERIC");

                entity.Property(e => e.NavThlUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("NAV_THL_UD5_TEXT");

                entity.Property(e => e.NavType)
                    .HasMaxLength(255)
                    .HasColumnName("NAV_TYPE");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.ParentNavNo)
                    .HasMaxLength(255)
                    .HasColumnName("PARENT_NAV_NO");

                entity.Property(e => e.Quantity)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("QUANTITY");

                entity.Property(e => e.ReturnReasonCode)
                    .HasMaxLength(255)
                    .HasColumnName("RETURN_REASON_CODE");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortcutDimension1Code)
                    .HasMaxLength(255)
                    .HasColumnName("SHORTCUT_DIMENSION_1_CODE");

                entity.Property(e => e.ShortcutDimension2Code)
                    .HasMaxLength(255)
                    .HasColumnName("SHORTCUT_DIMENSION_2_CODE");

                entity.Property(e => e.Source)
                    .IsRequired()
                    .HasMaxLength(60)
                    .HasColumnName("SOURCE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UnitCostLcy)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("UNIT_COST_LCY");

                entity.Property(e => e.UnitOfMeasure)
                    .HasMaxLength(255)
                    .HasColumnName("UNIT_OF_MEASURE");

                entity.Property(e => e.UnitOfMeasureCode)
                    .HasMaxLength(255)
                    .HasColumnName("UNIT_OF_MEASURE_CODE");

                entity.Property(e => e.UnitPrice)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("UNIT_PRICE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");

                entity.Property(e => e.VariantCode)
                    .HasMaxLength(255)
                    .HasColumnName("VARIANT_CODE");
            });

            modelBuilder.Entity<VwIntWinmanTransactionHistory>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vwIntWinmanTransactionHistory");

                entity.Property(e => e.AcContactName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_CONTACT_NAME");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccIdSales).HasColumnName("ACC_ID_SALES");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_NAME");

                entity.Property(e => e.AcgId).HasColumnName("ACG_ID");

                entity.Property(e => e.BillingAddress)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_ADDRESS");

                entity.Property(e => e.BillingCity)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_CITY");

                entity.Property(e => e.BillingCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_COUNTRY_CODE");

                entity.Property(e => e.BillingEmailAddress)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_EMAIL_ADDRESS");

                entity.Property(e => e.BillingName)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_NAME");

                entity.Property(e => e.BillingPhoneNumber)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_PHONE_NUMBER");

                entity.Property(e => e.BillingPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_POSTAL_CODE");

                entity.Property(e => e.BillingRegion)
                    .HasMaxLength(255)
                    .HasColumnName("BILLING_REGION");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Currency)
                    .HasMaxLength(255)
                    .HasColumnName("CURRENCY");

                entity.Property(e => e.CustomerContact)
                    .HasMaxLength(255)
                    .HasColumnName("CUSTOMER_CONTACT");

                entity.Property(e => e.CustomerGuid)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("CUSTOMER_GUID");

                entity.Property(e => e.CustomerOrderNumber)
                    .HasMaxLength(255)
                    .HasColumnName("CUSTOMER_ORDER_NUMBER");

                entity.Property(e => e.Deleted).HasColumnName("DELETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.FneId).HasColumnName("FNE_ID");

                entity.Property(e => e.FneName)
                    .HasMaxLength(255)
                    .HasColumnName("FNE_NAME");

                entity.Property(e => e.FreightMethodId)
                    .HasMaxLength(255)
                    .HasColumnName("FREIGHT_METHOD_ID");

                entity.Property(e => e.GvAccountType)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("GV_ACCOUNT_TYPE");

                entity.Property(e => e.GvContactType)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("GV_CONTACT_TYPE");

                entity.Property(e => e.InvoiceDate)
                    .HasColumnType("datetime")
                    .HasColumnName("INVOICE_DATE");

                entity.Property(e => e.InvoiceDueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("INVOICE_DUE_DATE");

                entity.Property(e => e.InvoiceId)
                    .HasMaxLength(255)
                    .HasColumnName("INVOICE_ID");

                entity.Property(e => e.InvoiceStatus)
                    .HasMaxLength(255)
                    .HasColumnName("INVOICE_STATUS");

                entity.Property(e => e.InvoiceTotal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("INVOICE_TOTAL");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.OpqId).HasColumnName("OPQ_ID");

                entity.Property(e => e.OrderDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ORDER_DATE");

                entity.Property(e => e.OrderStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ORDER_STATUS");

                entity.Property(e => e.OutstandingBalance)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("OUTSTANDING_BALANCE");

                entity.Property(e => e.PaymentType)
                    .HasMaxLength(255)
                    .HasColumnName("PAYMENT_TYPE");

                entity.Property(e => e.QuoteDate)
                    .HasColumnType("datetime")
                    .HasColumnName("QUOTE_DATE");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(255)
                    .HasColumnName("QUOTE_ID");

                entity.Property(e => e.QuoteStatus)
                    .HasMaxLength(255)
                    .HasColumnName("QUOTE_STATUS");

                entity.Property(e => e.SalesOrderId)
                    .HasMaxLength(255)
                    .HasColumnName("SALES_ORDER_ID");

                entity.Property(e => e.ShippingAddress)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_ADDRESS");

                entity.Property(e => e.ShippingCity)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_CITY");

                entity.Property(e => e.ShippingCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_COUNTRY_CODE");

                entity.Property(e => e.ShippingEmailAddress)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_EMAIL_ADDRESS");

                entity.Property(e => e.ShippingFirstName)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_FIRST_NAME");

                entity.Property(e => e.ShippingLastName)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_LAST_NAME");

                entity.Property(e => e.ShippingName)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_NAME");

                entity.Property(e => e.ShippingPhoneNumber)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_PHONE_NUMBER");

                entity.Property(e => e.ShippingPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_POSTAL_CODE");

                entity.Property(e => e.ShippingRegion)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_REGION");

                entity.Property(e => e.ShippingTaxValue)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SHIPPING_TAX_VALUE");

                entity.Property(e => e.ShippingTitle)
                    .HasMaxLength(255)
                    .HasColumnName("SHIPPING_TITLE");

                entity.Property(e => e.ShippingValue)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SHIPPING_VALUE");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Source)
                    .IsRequired()
                    .HasMaxLength(60)
                    .HasColumnName("SOURCE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TotalOrderValue)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("TOTAL_ORDER_VALUE");

                entity.Property(e => e.TotalQuoteValue)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("TOTAL_QUOTE_VALUE");

                entity.Property(e => e.TotalTaxValue)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("TOTAL_TAX_VALUE");

                entity.Property(e => e.TrackingNumber)
                    .HasMaxLength(255)
                    .HasColumnName("TRACKING_NUMBER");

                entity.Property(e => e.TrackingUrl)
                    .HasMaxLength(255)
                    .HasColumnName("TRACKING_URL");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");

                entity.Property(e => e.WinThId).HasColumnName("WIN_TH_ID");

                entity.Property(e => e.WinThUd1Bit).HasColumnName("WIN_TH_UD1_BIT");

                entity.Property(e => e.WinThUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("WIN_TH_UD1_DATE");

                entity.Property(e => e.WinThUd1Id).HasColumnName("WIN_TH_UD1_ID");

                entity.Property(e => e.WinThUd1Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("WIN_TH_UD1_NUMERIC");

                entity.Property(e => e.WinThUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("WIN_TH_UD1_TEXT");

                entity.Property(e => e.WinThUd2Bit).HasColumnName("WIN_TH_UD2_BIT");

                entity.Property(e => e.WinThUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("WIN_TH_UD2_DATE");

                entity.Property(e => e.WinThUd2Id).HasColumnName("WIN_TH_UD2_ID");

                entity.Property(e => e.WinThUd2Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("WIN_TH_UD2_NUMERIC");

                entity.Property(e => e.WinThUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("WIN_TH_UD2_TEXT");

                entity.Property(e => e.WinThUd3Bit).HasColumnName("WIN_TH_UD3_BIT");

                entity.Property(e => e.WinThUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("WIN_TH_UD3_DATE");

                entity.Property(e => e.WinThUd3Id).HasColumnName("WIN_TH_UD3_ID");

                entity.Property(e => e.WinThUd3Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("WIN_TH_UD3_NUMERIC");

                entity.Property(e => e.WinThUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("WIN_TH_UD3_TEXT");

                entity.Property(e => e.WinThUd4Bit).HasColumnName("WIN_TH_UD4_BIT");

                entity.Property(e => e.WinThUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("WIN_TH_UD4_DATE");

                entity.Property(e => e.WinThUd4Id).HasColumnName("WIN_TH_UD4_ID");

                entity.Property(e => e.WinThUd4Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("WIN_TH_UD4_NUMERIC");

                entity.Property(e => e.WinThUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("WIN_TH_UD4_TEXT");

                entity.Property(e => e.WinThUd5Bit).HasColumnName("WIN_TH_UD5_BIT");

                entity.Property(e => e.WinThUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("WIN_TH_UD5_DATE");

                entity.Property(e => e.WinThUd5Id).HasColumnName("WIN_TH_UD5_ID");

                entity.Property(e => e.WinThUd5Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("WIN_TH_UD5_NUMERIC");

                entity.Property(e => e.WinThUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("WIN_TH_UD5_TEXT");
            });

            modelBuilder.Entity<VwIntWinmanTransactionHistoryLine>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vwIntWinmanTransactionHistoryLines");

                entity.Property(e => e.AcContactName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_CONTACT_NAME");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccIdSales).HasColumnName("ACC_ID_SALES");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_NAME");

                entity.Property(e => e.AcgId).HasColumnName("ACG_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Deleted).HasColumnName("DELETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Description)
                    .HasMaxLength(255)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.DiscountAmount)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("DISCOUNT_AMOUNT");

                entity.Property(e => e.FneId).HasColumnName("FNE_ID");

                entity.Property(e => e.FneName)
                    .HasMaxLength(255)
                    .HasColumnName("FNE_NAME");

                entity.Property(e => e.FreeTextItem)
                    .HasMaxLength(255)
                    .HasColumnName("FREE_TEXT_ITEM");

                entity.Property(e => e.FreightMethodId)
                    .HasMaxLength(255)
                    .HasColumnName("FREIGHT_METHOD_ID");

                entity.Property(e => e.GvAccountType)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("GV_ACCOUNT_TYPE");

                entity.Property(e => e.GvContactType)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("GV_CONTACT_TYPE");

                entity.Property(e => e.LineTaxValue)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("LINE_TAX_VALUE");

                entity.Property(e => e.LineValue)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("LINE_VALUE");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.ParentSummary)
                    .HasMaxLength(255)
                    .HasColumnName("PARENT_SUMMARY");

                entity.Property(e => e.Quantity)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("QUANTITY");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.ShortDescription)
                    .HasMaxLength(255)
                    .HasColumnName("SHORT_DESCRIPTION");

                entity.Property(e => e.Sku)
                    .HasMaxLength(255)
                    .HasColumnName("SKU");

                entity.Property(e => e.Source)
                    .IsRequired()
                    .HasMaxLength(60)
                    .HasColumnName("SOURCE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.SundryId)
                    .HasMaxLength(255)
                    .HasColumnName("SUNDRY_ID");

                entity.Property(e => e.UnitPrice)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("UNIT_PRICE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");

                entity.Property(e => e.WinThId).HasColumnName("WIN_TH_ID");

                entity.Property(e => e.WinThlId).HasColumnName("WIN_THL_ID");

                entity.Property(e => e.WinThlUd1Bit).HasColumnName("WIN_THL_UD1_BIT");

                entity.Property(e => e.WinThlUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("WIN_THL_UD1_DATE");

                entity.Property(e => e.WinThlUd1Id).HasColumnName("WIN_THL_UD1_ID");

                entity.Property(e => e.WinThlUd1Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("WIN_THL_UD1_NUMERIC");

                entity.Property(e => e.WinThlUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("WIN_THL_UD1_TEXT");

                entity.Property(e => e.WinThlUd2Bit).HasColumnName("WIN_THL_UD2_BIT");

                entity.Property(e => e.WinThlUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("WIN_THL_UD2_DATE");

                entity.Property(e => e.WinThlUd2Id).HasColumnName("WIN_THL_UD2_ID");

                entity.Property(e => e.WinThlUd2Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("WIN_THL_UD2_NUMERIC");

                entity.Property(e => e.WinThlUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("WIN_THL_UD2_TEXT");

                entity.Property(e => e.WinThlUd3Bit).HasColumnName("WIN_THL_UD3_BIT");

                entity.Property(e => e.WinThlUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("WIN_THL_UD3_DATE");

                entity.Property(e => e.WinThlUd3Id).HasColumnName("WIN_THL_UD3_ID");

                entity.Property(e => e.WinThlUd3Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("WIN_THL_UD3_NUMERIC");

                entity.Property(e => e.WinThlUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("WIN_THL_UD3_TEXT");

                entity.Property(e => e.WinThlUd4Bit).HasColumnName("WIN_THL_UD4_BIT");

                entity.Property(e => e.WinThlUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("WIN_THL_UD4_DATE");

                entity.Property(e => e.WinThlUd4Id).HasColumnName("WIN_THL_UD4_ID");

                entity.Property(e => e.WinThlUd4Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("WIN_THL_UD4_NUMERIC");

                entity.Property(e => e.WinThlUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("WIN_THL_UD4_TEXT");

                entity.Property(e => e.WinThlUd5Bit).HasColumnName("WIN_THL_UD5_BIT");

                entity.Property(e => e.WinThlUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("WIN_THL_UD5_DATE");

                entity.Property(e => e.WinThlUd5Id).HasColumnName("WIN_THL_UD5_ID");

                entity.Property(e => e.WinThlUd5Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("WIN_THL_UD5_NUMERIC");

                entity.Property(e => e.WinThlUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("WIN_THL_UD5_TEXT");
            });

            modelBuilder.Entity<VwIntXeroTransactionHistory>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vwIntXeroTransactionHistory");

                entity.Property(e => e.AcContactName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_CONTACT_NAME");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccIdSales).HasColumnName("ACC_ID_SALES");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_NAME");

                entity.Property(e => e.AcgId).HasColumnName("ACG_ID");

                entity.Property(e => e.AmountCredited)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("AMOUNT_CREDITED");

                entity.Property(e => e.AmountDue)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("AMOUNT_DUE");

                entity.Property(e => e.AmountPaid)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("AMOUNT_PAID");

                entity.Property(e => e.BrandingThemeId)
                    .HasMaxLength(255)
                    .HasColumnName("BRANDING_THEME_ID");

                entity.Property(e => e.CisDeduction)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("CIS_DEDUCTION");

                entity.Property(e => e.ContactId)
                    .HasMaxLength(255)
                    .HasColumnName("CONTACT_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CurrencyCode)
                    .HasMaxLength(255)
                    .HasColumnName("CURRENCY_CODE");

                entity.Property(e => e.CurrencyRate)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("CURRENCY_RATE");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE");

                entity.Property(e => e.Deleted).HasColumnName("DELETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.DueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DUE_DATE");

                entity.Property(e => e.ExpectedPaymentDate)
                    .HasColumnType("datetime")
                    .HasColumnName("EXPECTED_PAYMENT_DATE");

                entity.Property(e => e.FneId).HasColumnName("FNE_ID");

                entity.Property(e => e.FneName)
                    .HasMaxLength(255)
                    .HasColumnName("FNE_NAME");

                entity.Property(e => e.FullyPaidOnDate)
                    .HasColumnType("datetime")
                    .HasColumnName("FULLY_PAID_ON_DATE");

                entity.Property(e => e.GvAccountType)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("GV_ACCOUNT_TYPE");

                entity.Property(e => e.GvContactType)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("GV_CONTACT_TYPE");

                entity.Property(e => e.HasAttachments).HasColumnName("HAS_ATTACHMENTS");

                entity.Property(e => e.InvoiceId)
                    .HasMaxLength(255)
                    .HasColumnName("INVOICE_ID");

                entity.Property(e => e.InvoiceNumber)
                    .HasMaxLength(255)
                    .HasColumnName("INVOICE_NUMBER");

                entity.Property(e => e.LineAmountTypes)
                    .HasMaxLength(255)
                    .HasColumnName("LINE_AMOUNT_TYPES");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.OpqId).HasColumnName("OPQ_ID");

                entity.Property(e => e.PlannedPaymentDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PLANNED_PAYMENT_DATE");

                entity.Property(e => e.Reference)
                    .HasMaxLength(255)
                    .HasColumnName("REFERENCE");

                entity.Property(e => e.SentToContact).HasColumnName("SENT_TO_CONTACT");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Status)
                    .HasMaxLength(255)
                    .HasColumnName("STATUS");

                entity.Property(e => e.Subtotal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("SUBTOTAL");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Total)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("TOTAL");

                entity.Property(e => e.TotalDiscount)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("TOTAL_DISCOUNT");

                entity.Property(e => e.TotalTax)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("TOTAL_TAX");

                entity.Property(e => e.Type)
                    .HasMaxLength(255)
                    .HasColumnName("TYPE");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UpdatedDateUtc)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE_UTC");

                entity.Property(e => e.Url)
                    .HasMaxLength(255)
                    .HasColumnName("URL");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");

                entity.Property(e => e.XeroThId).HasColumnName("XERO_TH_ID");

                entity.Property(e => e.XeroThNumber)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("XERO_TH_NUMBER");

                entity.Property(e => e.XeroThUd1Bit).HasColumnName("XERO_TH_UD1_BIT");

                entity.Property(e => e.XeroThUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("XERO_TH_UD1_DATE");

                entity.Property(e => e.XeroThUd1Id).HasColumnName("XERO_TH_UD1_ID");

                entity.Property(e => e.XeroThUd1Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("XERO_TH_UD1_NUMERIC");

                entity.Property(e => e.XeroThUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("XERO_TH_UD1_TEXT");

                entity.Property(e => e.XeroThUd2Bit).HasColumnName("XERO_TH_UD2_BIT");

                entity.Property(e => e.XeroThUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("XERO_TH_UD2_DATE");

                entity.Property(e => e.XeroThUd2Id).HasColumnName("XERO_TH_UD2_ID");

                entity.Property(e => e.XeroThUd2Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("XERO_TH_UD2_NUMERIC");

                entity.Property(e => e.XeroThUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("XERO_TH_UD2_TEXT");

                entity.Property(e => e.XeroThUd3Bit).HasColumnName("XERO_TH_UD3_BIT");

                entity.Property(e => e.XeroThUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("XERO_TH_UD3_DATE");

                entity.Property(e => e.XeroThUd3Id).HasColumnName("XERO_TH_UD3_ID");

                entity.Property(e => e.XeroThUd3Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("XERO_TH_UD3_NUMERIC");

                entity.Property(e => e.XeroThUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("XERO_TH_UD3_TEXT");

                entity.Property(e => e.XeroThUd4Bit).HasColumnName("XERO_TH_UD4_BIT");

                entity.Property(e => e.XeroThUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("XERO_TH_UD4_DATE");

                entity.Property(e => e.XeroThUd4Id).HasColumnName("XERO_TH_UD4_ID");

                entity.Property(e => e.XeroThUd4Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("XERO_TH_UD4_NUMERIC");

                entity.Property(e => e.XeroThUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("XERO_TH_UD4_TEXT");

                entity.Property(e => e.XeroThUd5Bit).HasColumnName("XERO_TH_UD5_BIT");

                entity.Property(e => e.XeroThUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("XERO_TH_UD5_DATE");

                entity.Property(e => e.XeroThUd5Id).HasColumnName("XERO_TH_UD5_ID");

                entity.Property(e => e.XeroThUd5Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("XERO_TH_UD5_NUMERIC");

                entity.Property(e => e.XeroThUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("XERO_TH_UD5_TEXT");
            });

            modelBuilder.Entity<VwIntXeroTransactionHistoryLine>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vwIntXeroTransactionHistoryLines");

                entity.Property(e => e.AcContactName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_CONTACT_NAME");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AccIdSales).HasColumnName("ACC_ID_SALES");

                entity.Property(e => e.AccountCode)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_CODE");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(255)
                    .HasColumnName("ACCOUNT_NAME");

                entity.Property(e => e.AcgId).HasColumnName("ACG_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Deleted).HasColumnName("DELETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Description)
                    .HasMaxLength(255)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.DiscountAmount)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("DISCOUNT_AMOUNT");

                entity.Property(e => e.DiscountRate)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("DISCOUNT_RATE");

                entity.Property(e => e.FneId).HasColumnName("FNE_ID");

                entity.Property(e => e.FneName)
                    .HasMaxLength(255)
                    .HasColumnName("FNE_NAME");

                entity.Property(e => e.GvAccountType)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("GV_ACCOUNT_TYPE");

                entity.Property(e => e.GvContactType)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("GV_CONTACT_TYPE");

                entity.Property(e => e.ItemCode)
                    .HasMaxLength(255)
                    .HasColumnName("ITEM_CODE");

                entity.Property(e => e.LineAmount)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("LINE_AMOUNT");

                entity.Property(e => e.LineItemId)
                    .HasMaxLength(255)
                    .HasColumnName("LINE_ITEM_ID");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.ParentXeroId).HasColumnName("PARENT_XERO_ID");

                entity.Property(e => e.Quantity)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("QUANTITY");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.TaxAmount)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("TAX_AMOUNT");

                entity.Property(e => e.TaxType)
                    .HasMaxLength(255)
                    .HasColumnName("TAX_TYPE");

                entity.Property(e => e.UnitAmount)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("UNIT_AMOUNT");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsIdSales).HasColumnName("US_ID_SALES");

                entity.Property(e => e.XeroThId).HasColumnName("XERO_TH_ID");

                entity.Property(e => e.XeroThlId).HasColumnName("XERO_THL_ID");

                entity.Property(e => e.XeroThlUd1Bit).HasColumnName("XERO_THL_UD1_BIT");

                entity.Property(e => e.XeroThlUd1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("XERO_THL_UD1_DATE");

                entity.Property(e => e.XeroThlUd1Id).HasColumnName("XERO_THL_UD1_ID");

                entity.Property(e => e.XeroThlUd1Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("XERO_THL_UD1_NUMERIC");

                entity.Property(e => e.XeroThlUd1Text)
                    .HasMaxLength(255)
                    .HasColumnName("XERO_THL_UD1_TEXT");

                entity.Property(e => e.XeroThlUd2Bit).HasColumnName("XERO_THL_UD2_BIT");

                entity.Property(e => e.XeroThlUd2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("XERO_THL_UD2_DATE");

                entity.Property(e => e.XeroThlUd2Id).HasColumnName("XERO_THL_UD2_ID");

                entity.Property(e => e.XeroThlUd2Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("XERO_THL_UD2_NUMERIC");

                entity.Property(e => e.XeroThlUd2Text)
                    .HasMaxLength(255)
                    .HasColumnName("XERO_THL_UD2_TEXT");

                entity.Property(e => e.XeroThlUd3Bit).HasColumnName("XERO_THL_UD3_BIT");

                entity.Property(e => e.XeroThlUd3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("XERO_THL_UD3_DATE");

                entity.Property(e => e.XeroThlUd3Id).HasColumnName("XERO_THL_UD3_ID");

                entity.Property(e => e.XeroThlUd3Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("XERO_THL_UD3_NUMERIC");

                entity.Property(e => e.XeroThlUd3Text)
                    .HasMaxLength(255)
                    .HasColumnName("XERO_THL_UD3_TEXT");

                entity.Property(e => e.XeroThlUd4Bit).HasColumnName("XERO_THL_UD4_BIT");

                entity.Property(e => e.XeroThlUd4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("XERO_THL_UD4_DATE");

                entity.Property(e => e.XeroThlUd4Id).HasColumnName("XERO_THL_UD4_ID");

                entity.Property(e => e.XeroThlUd4Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("XERO_THL_UD4_NUMERIC");

                entity.Property(e => e.XeroThlUd4Text)
                    .HasMaxLength(255)
                    .HasColumnName("XERO_THL_UD4_TEXT");

                entity.Property(e => e.XeroThlUd5Bit).HasColumnName("XERO_THL_UD5_BIT");

                entity.Property(e => e.XeroThlUd5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("XERO_THL_UD5_DATE");

                entity.Property(e => e.XeroThlUd5Id).HasColumnName("XERO_THL_UD5_ID");

                entity.Property(e => e.XeroThlUd5Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("XERO_THL_UD5_NUMERIC");

                entity.Property(e => e.XeroThlUd5Text)
                    .HasMaxLength(255)
                    .HasColumnName("XERO_THL_UD5_TEXT");
            });

            modelBuilder.Entity<VwOpportunityNotesList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vwOpportunityNotesList");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.Account)
                    .HasMaxLength(255)
                    .HasColumnName("account");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Duration)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("DURATION");

                entity.Property(e => e.EstimatedClose)
                    .HasColumnType("datetime")
                    .HasColumnName("ESTIMATED_CLOSE");

                entity.Property(e => e.ForecastValue)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("FORECAST_VALUE");

                entity.Property(e => e.OpContact)
                    .HasMaxLength(255)
                    .HasColumnName("OP_CONTACT");

                entity.Property(e => e.OpOwner)
                    .HasMaxLength(255)
                    .HasColumnName("OP_OWNER");

                entity.Property(e => e.PotentialValue)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("POTENTIAL_VALUE");

                entity.Property(e => e.Probability)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("PROBABILITY");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.UsId).HasColumnName("US_ID");
            });

            modelBuilder.Entity<VwexTimeSheet>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vwexTimeSheets");

                entity.Property(e => e.AcId).HasColumnName("AC_ID");

                entity.Property(e => e.AcName)
                    .HasMaxLength(255)
                    .HasColumnName("AC_NAME");

                entity.Property(e => e.ActId).HasColumnName("ACT_ID");

                entity.Property(e => e.ActName)
                    .HasMaxLength(255)
                    .HasColumnName("ACT_NAME");

                entity.Property(e => e.ActivityType)
                    .HasMaxLength(255)
                    .HasColumnName("ACTIVITY_TYPE");

                entity.Property(e => e.Cost)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("COST");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DateOfWork)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_OF_WORK");

                entity.Property(e => e.Days)
                    .HasColumnType("numeric(38, 20)")
                    .HasColumnName("DAYS");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.DeletedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED_DATE");

                entity.Property(e => e.Mileage)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("MILEAGE");

                entity.Property(e => e.ObjId).HasColumnName("OBJ_ID");

                entity.Property(e => e.OpId).HasColumnName("OP_ID");

                entity.Property(e => e.OpName)
                    .HasMaxLength(255)
                    .HasColumnName("OP_NAME");

                entity.Property(e => e.ParentType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PARENT_TYPE");

                entity.Property(e => e.PjId).HasColumnName("PJ_ID");

                entity.Property(e => e.PjName)
                    .HasMaxLength(255)
                    .HasColumnName("PJ_NAME");

                entity.Property(e => e.ShortCode)
                    .IsRequired()
                    .HasMaxLength(18)
                    .HasColumnName("SHORT_CODE");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.SupportPriority)
                    .HasMaxLength(255)
                    .HasColumnName("SUPPORT_PRIORITY");

                entity.Property(e => e.SupportType)
                    .HasMaxLength(255)
                    .HasColumnName("SUPPORT_TYPE");

                entity.Property(e => e.Team)
                    .HasMaxLength(255)
                    .HasColumnName("TEAM");

                entity.Property(e => e.Timespent)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("TIMESPENT");

                entity.Property(e => e.TsDeleted).HasColumnName("TS_DELETED");

                entity.Property(e => e.TsId).HasColumnName("TS_ID");

                entity.Property(e => e.TsUd10Id)
                    .HasMaxLength(255)
                    .HasColumnName("TS_UD10_ID");

                entity.Property(e => e.TsUd1Id)
                    .HasMaxLength(255)
                    .HasColumnName("TS_UD1_ID");

                entity.Property(e => e.TsUd2Id)
                    .HasMaxLength(255)
                    .HasColumnName("TS_UD2_ID");

                entity.Property(e => e.TsUd3Id)
                    .HasMaxLength(255)
                    .HasColumnName("TS_UD3_ID");

                entity.Property(e => e.TsUd4Id)
                    .HasMaxLength(255)
                    .HasColumnName("TS_UD4_ID");

                entity.Property(e => e.TsUd5Id)
                    .HasMaxLength(255)
                    .HasColumnName("TS_UD5_ID");

                entity.Property(e => e.TsUd6Id)
                    .HasMaxLength(255)
                    .HasColumnName("TS_UD6_ID");

                entity.Property(e => e.TsUd7Id)
                    .HasMaxLength(255)
                    .HasColumnName("TS_UD7_ID");

                entity.Property(e => e.TsUd8Id)
                    .HasMaxLength(255)
                    .HasColumnName("TS_UD8_ID");

                entity.Property(e => e.TsUd9Id)
                    .HasMaxLength(255)
                    .HasColumnName("TS_UD9_ID");

                entity.Property(e => e.Ud10Bit).HasColumnName("UD10_BIT");

                entity.Property(e => e.Ud10Date)
                    .HasColumnType("datetime")
                    .HasColumnName("UD10_DATE");

                entity.Property(e => e.Ud10Id).HasColumnName("UD10_ID");

                entity.Property(e => e.Ud10Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("UD10_NUMERIC");

                entity.Property(e => e.Ud10Text)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("UD10_TEXT");

                entity.Property(e => e.Ud1Bit).HasColumnName("UD1_BIT");

                entity.Property(e => e.Ud1Date)
                    .HasColumnType("datetime")
                    .HasColumnName("UD1_DATE");

                entity.Property(e => e.Ud1Id).HasColumnName("UD1_ID");

                entity.Property(e => e.Ud1Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("UD1_NUMERIC");

                entity.Property(e => e.Ud1Text)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("UD1_TEXT");

                entity.Property(e => e.Ud2Bit).HasColumnName("UD2_BIT");

                entity.Property(e => e.Ud2Date)
                    .HasColumnType("datetime")
                    .HasColumnName("UD2_DATE");

                entity.Property(e => e.Ud2Id).HasColumnName("UD2_ID");

                entity.Property(e => e.Ud2Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("UD2_NUMERIC");

                entity.Property(e => e.Ud2Text)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("UD2_TEXT");

                entity.Property(e => e.Ud3Bit).HasColumnName("UD3_BIT");

                entity.Property(e => e.Ud3Date)
                    .HasColumnType("datetime")
                    .HasColumnName("UD3_DATE");

                entity.Property(e => e.Ud3Id).HasColumnName("UD3_ID");

                entity.Property(e => e.Ud3Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("UD3_NUMERIC");

                entity.Property(e => e.Ud3Text)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("UD3_TEXT");

                entity.Property(e => e.Ud4Bit).HasColumnName("UD4_BIT");

                entity.Property(e => e.Ud4Date)
                    .HasColumnType("datetime")
                    .HasColumnName("UD4_DATE");

                entity.Property(e => e.Ud4Id).HasColumnName("UD4_ID");

                entity.Property(e => e.Ud4Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("UD4_NUMERIC");

                entity.Property(e => e.Ud4Text)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("UD4_TEXT");

                entity.Property(e => e.Ud5Bit).HasColumnName("UD5_BIT");

                entity.Property(e => e.Ud5Date)
                    .HasColumnType("datetime")
                    .HasColumnName("UD5_DATE");

                entity.Property(e => e.Ud5Id).HasColumnName("UD5_ID");

                entity.Property(e => e.Ud5Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("UD5_NUMERIC");

                entity.Property(e => e.Ud5Text)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("UD5_TEXT");

                entity.Property(e => e.Ud6Bit).HasColumnName("UD6_BIT");

                entity.Property(e => e.Ud6Date)
                    .HasColumnType("datetime")
                    .HasColumnName("UD6_DATE");

                entity.Property(e => e.Ud6Id).HasColumnName("UD6_ID");

                entity.Property(e => e.Ud6Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("UD6_NUMERIC");

                entity.Property(e => e.Ud6Text)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("UD6_TEXT");

                entity.Property(e => e.Ud7Bit).HasColumnName("UD7_BIT");

                entity.Property(e => e.Ud7Date)
                    .HasColumnType("datetime")
                    .HasColumnName("UD7_DATE");

                entity.Property(e => e.Ud7Id).HasColumnName("UD7_ID");

                entity.Property(e => e.Ud7Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("UD7_NUMERIC");

                entity.Property(e => e.Ud7Text)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("UD7_TEXT");

                entity.Property(e => e.Ud8Bit).HasColumnName("UD8_BIT");

                entity.Property(e => e.Ud8Date)
                    .HasColumnType("datetime")
                    .HasColumnName("UD8_DATE");

                entity.Property(e => e.Ud8Id).HasColumnName("UD8_ID");

                entity.Property(e => e.Ud8Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("UD8_NUMERIC");

                entity.Property(e => e.Ud8Text)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("UD8_TEXT");

                entity.Property(e => e.Ud9Bit).HasColumnName("UD9_BIT");

                entity.Property(e => e.Ud9Date)
                    .HasColumnType("datetime")
                    .HasColumnName("UD9_DATE");

                entity.Property(e => e.Ud9Id).HasColumnName("UD9_ID");

                entity.Property(e => e.Ud9Numeric)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("UD9_NUMERIC");

                entity.Property(e => e.Ud9Text)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("UD9_TEXT");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");

                entity.Property(e => e.UsId).HasColumnName("US_ID");

                entity.Property(e => e.UsName)
                    .HasMaxLength(255)
                    .HasColumnName("US_NAME");

                entity.Property(e => e.WorkType)
                    .HasMaxLength(255)
                    .HasColumnName("WORK_TYPE");
            });

            modelBuilder.Entity<Widget>(entity =>
            {
                entity.HasKey(e => e.WidId)
                    .HasName("PK_DASHBOARD_WIDGETS");

                entity.ToTable("WIDGETS");

                entity.Property(e => e.WidId)
                    .HasColumnName("WID_ID")
                    .HasDefaultValueSql("(newsequentialid())");

                entity.Property(e => e.ChartType).HasColumnName("CHART_TYPE");

                entity.Property(e => e.Created)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.Deleted)
                    .HasColumnType("datetime")
                    .HasColumnName("DELETED");

                entity.Property(e => e.DeletedBy)
                    .HasMaxLength(255)
                    .HasColumnName("DELETED_BY");

                entity.Property(e => e.SeriesFieldId).HasColumnName("SERIES_FIELD_ID");

                entity.Property(e => e.Summary)
                    .HasMaxLength(255)
                    .HasColumnName("SUMMARY");

                entity.Property(e => e.Updated)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.WidgetType).HasColumnName("WIDGET_TYPE");

                entity.Property(e => e.XAxisFieldId).HasColumnName("X_AXIS_FIELD_ID");

                entity.Property(e => e.YAxisFieldId).HasColumnName("Y_AXIS_FIELD_ID");
            });

            modelBuilder.Entity<WidgetsOnDashboard>(entity =>
            {
                entity.HasKey(e => new { e.DshId, e.WidId })
                    .HasName("PK_DASHBOARD_WIDGET_DASHBOARD");

                entity.ToTable("WIDGETS_ON_DASHBOARDS");

                entity.Property(e => e.DshId).HasColumnName("DSH_ID");

                entity.Property(e => e.WidId).HasColumnName("WID_ID");

                entity.Property(e => e.DisplayHeight).HasColumnName("DISPLAY_HEIGHT");

                entity.Property(e => e.DisplayOrder).HasColumnName("DISPLAY_ORDER");

                entity.Property(e => e.DisplayWidth).HasColumnName("DISPLAY_WIDTH");

                entity.Property(e => e.ReqId).HasColumnName("REQ_ID");

                entity.HasOne(d => d.Dsh)
                    .WithMany(p => p.WidgetsOnDashboards)
                    .HasForeignKey(d => d.DshId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DASHBOARD_WIDGET_DASHBOARD_DASHBOARDS");

                entity.HasOne(d => d.Req)
                    .WithMany(p => p.WidgetsOnDashboards)
                    .HasForeignKey(d => d.ReqId)
                    .HasConstraintName("FK_DASHBOARD_WIDGET_DASHBOARD_REQUESTS");

                entity.HasOne(d => d.Wid)
                    .WithMany(p => p.WidgetsOnDashboards)
                    .HasForeignKey(d => d.WidId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DASHBOARD_WIDGET_DASHBOARD_DASHBOARD_WIDGETS");
            });

            modelBuilder.Entity<XmlPoke>(entity =>
            {
                entity.HasKey(e => e.PokeId)
                    .HasName("PK__XML_POKES");

                entity.ToTable("XML_POKES", "install");

                entity.Property(e => e.PokeId)
                    .ValueGeneratedNever()
                    .HasColumnName("POKE_ID");

                entity.Property(e => e.ActivityReference)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("ACTIVITY_REFERENCE")
                    .UseCollation("Latin1_General_CI_AS");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Poke)
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasColumnName("POKE")
                    .UseCollation("Latin1_General_CI_AS");
            });

            modelBuilder.Entity<Xmlfile>(entity =>
            {
                entity.HasKey(e => e.Xmlfile1);

                entity.ToTable("XMLFILES");

                entity.Property(e => e.Xmlfile1)
                    .HasMaxLength(200)
                    .HasColumnName("XMLFile");

                entity.Property(e => e.Xmldetail)
                    .HasColumnType("xml")
                    .HasColumnName("XMLDetail");
            });

            modelBuilder.Entity<ZlmConferenceusingaccount131012121113143713>(entity =>
            {
                entity.HasKey(e => e.LsId)
                    .HasName("PK_LM_ZLM_CONFERENCEUSINGACCOUNT131012_121113143713");

                entity.ToTable("ZLM_CONFERENCEUSINGACCOUNT131012_121113143713");

                entity.Property(e => e.LsId).HasColumnName("LS_ID");

                entity.Property(e => e.Address1)
                    .HasMaxLength(100)
                    .HasColumnName("ADDRESS1");

                entity.Property(e => e.Address2)
                    .HasMaxLength(100)
                    .HasColumnName("ADDRESS2");

                entity.Property(e => e.Address3)
                    .HasMaxLength(100)
                    .HasColumnName("ADDRESS3");

                entity.Property(e => e.Company)
                    .HasMaxLength(100)
                    .HasColumnName("COMPANY");

                entity.Property(e => e.Country)
                    .HasMaxLength(100)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.County)
                    .HasMaxLength(100)
                    .HasColumnName("COUNTY");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Emailaddr)
                    .HasMaxLength(100)
                    .HasColumnName("EMAILADDR");

                entity.Property(e => e.Forename)
                    .HasMaxLength(100)
                    .HasColumnName("FORENAME");

                entity.Property(e => e.Jobtitle)
                    .HasMaxLength(100)
                    .HasColumnName("JOBTITLE");

                entity.Property(e => e.PiId).HasColumnName("PI_ID");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(100)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.Surname)
                    .HasMaxLength(100)
                    .HasColumnName("SURNAME");

                entity.Property(e => e.Title)
                    .HasMaxLength(100)
                    .HasColumnName("TITLE");

                entity.Property(e => e.Town)
                    .HasMaxLength(100)
                    .HasColumnName("TOWN");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            modelBuilder.Entity<ZlmTestconferenceleads131012121113141704>(entity =>
            {
                entity.HasKey(e => e.LsId)
                    .HasName("PK_LM_ZLM_TESTCONFERENCELEADS131012_121113141704");

                entity.ToTable("ZLM_TESTCONFERENCELEADS131012_121113141704");

                entity.Property(e => e.LsId).HasColumnName("LS_ID");

                entity.Property(e => e.Address1)
                    .HasMaxLength(100)
                    .HasColumnName("ADDRESS1");

                entity.Property(e => e.Address2)
                    .HasMaxLength(100)
                    .HasColumnName("ADDRESS2");

                entity.Property(e => e.Address3)
                    .HasMaxLength(100)
                    .HasColumnName("ADDRESS3");

                entity.Property(e => e.Company)
                    .HasMaxLength(100)
                    .HasColumnName("COMPANY");

                entity.Property(e => e.Country)
                    .HasMaxLength(100)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.County)
                    .HasMaxLength(100)
                    .HasColumnName("COUNTY");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Emailaddr)
                    .HasMaxLength(100)
                    .HasColumnName("EMAILADDR");

                entity.Property(e => e.Forename)
                    .HasMaxLength(100)
                    .HasColumnName("FORENAME");

                entity.Property(e => e.Jobtitle)
                    .HasMaxLength(100)
                    .HasColumnName("JOBTITLE");

                entity.Property(e => e.PiId).HasColumnName("PI_ID");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(100)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.Surname)
                    .HasMaxLength(100)
                    .HasColumnName("SURNAME");

                entity.Property(e => e.Title)
                    .HasMaxLength(100)
                    .HasColumnName("TITLE");

                entity.Property(e => e.Town)
                    .HasMaxLength(100)
                    .HasColumnName("TOWN");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("UPDATED_BY");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATED_DATE");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
